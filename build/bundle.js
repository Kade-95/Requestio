!function(){var e=class{constructor(){this.capitals="ABCDEFGHIJKLMNOPQRSTUVWXYZ",this.smalls="abcdefghijklmnopqrstuvwxyz",this.digits="1234567890",this.symbols=",./?'!@#$%^&*()-_+=`~\\| ",this.months=["January","Febuary","March","April","May","June","July","August","September","October","November","December"],this.days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],this.genders=["Male","Female","Do not disclose"],this.maritals=["Married","Single","Divorced","Widowed"],this.religions=["Christainity","Islam","Judaism","Paganism","Budism"],this.userTypes=["student","staff","admin","ceo"],this.staffRequests=["leave","allowance"],this.studentsRequests=["absence","academic"],this.subjectList=["Mathematics","English","Physics","Chemistry","Biology","Agriculture","Literature","History"].sort(),this.subjectLevels=["General","Senior","Science","Arts","Junior"],this.fontStyles=["Arial","Times New Roman","Helvetica","Times","Courier New","Verdana","Courier","Arial Narrow","Candara","Geneva","Calibri","Optima","Cambria","Garamond","Perpetua","Monaco","Didot","Brush Script MT","Lucida Bright","Copperplate","Serif","San-Serif","Georgia","Segoe UI"],this.pixelSizes=["0px","1px","2px","3px","4px","5px","6px","7px","8px","9px","10px","20px","30px","40px","50px","60px","70px","80px","90px","100px","None","Unset","auto","-webkit-fill-available"],this.colors=["Red","Green","Blue","Yellow","Black","White","Purple","Violet","Indigo","Orange","Transparent","None","Unset"],this.boldness=[100,200,300,400,500,600,700,800,900,1e3,"lighter","bold","bolder","normal","unset"],this.borderTypes=["Solid","Dotted","Double","Groove","Dashed","Inset","None","Unset","Outset","Rigged","Inherit","Initial"],this.shadows=["2px 2px 5px 2px red","2px 2px 5px green","2px 2px yellow","2px black","None","Unset"],this.borders=["1px solid black","2px dotted green","3px dashed yellow","1px double red","None","Unset"],this.alignment=["Left","Justified","Right","Center"]}extractSource(e){let t=this.inBetween(e,"$#&{","}&#$");try{t=JSON.parse(t)}catch(s){t={}}return t}indexAt(e="",t="",s=0){if(s=s||0,-1==e.indexOf(t))return-1;if(s>=(e=e.split(t)).length)return-1;let r=0;for(let n=0;n<e.length;n++)n<=s&&(r+=e[n].length);return r+t.length*s}combine(e="",t="",s="",r=0){let n=r=r||0,i=t===s?r+1:r,a=this.indexAt(e,t,n),l=this.indexAt(e,s,i);return-1==a||a+t.length>=e.length||-1==l?-1:e.slice(a,l+s.length)}allCombine(e="",t="",s=""){let r,n=0,i=[];for(;-1!=r;)r=this.combine(e,t,s,n),n++,-1!=r&&i.push(r);return i}inBetween(e="",t="",s="",r=0){let n=r=r||0,i=t===s?r+1:r,a=this.indexAt(e,t,n),l=this.indexAt(e,s,i);return-1==a||a+t.length>=e.length||-1==l?-1:e.slice(a+t.length,l)}allInBetween(e="",t="",s=""){let r,n=0,i=[];for(;-1!=r;)r=this.inBetween(e,t,s,n),n++,-1!=r&&i.push(r);return i}extractCSS(e){let t,s,r=e.style.cssText,n={};if(""!=r){let e;r=r.split("; ");for(let i of r)e=this.trem(i),t=this.jsStyleName(e.split(":")[0]),s=this.stringReplace(e.split(":").pop(),";",""),""!=t&&(n[t]=this.trem(s))}return n}trimMonthArray(){let e=[];for(let t=0;t<this.months.length;t++)e.push(this.months[t].slice(0,3));return e}jsStyleName(e=""){let t="";for(let s=0;s<e.length;s++)"-"==e[s]?t+=e[++s].toUpperCase():t+=e[s].toLowerCase();return t}cssStyleName(e=""){let t="";for(let s=0;s<e.length;s++)this.isCapital(e[s])&&(t+="-"),t+=e[s].toLowerCase();return t}textToCamelCased(e=""){let t="";for(let s in e)" "!=e[s]&&(0==s?t+=e[s].toLowerCase():this.isset(e[s-1])&&" "==e[s-1]?t+=e[s].toUpperCase():t+=e[s]);return t}camelCasedToText(e=""){let t="";for(let s in e)0!=s&&this.isCapital(e[s])?t+=" "+e[s].toLowerCase():t+=e[s];return t}emptyObject(e){return JSON.stringify(e)==JSON.stringify({})}random(e={limit:1,range:1}){let t;return this.emptyObject(e)?t=2*Math.random()-1:this.isset(e.limit)?t=Math.random()*e.limit:this.isset(e.range),t}range(e=1,t=1){let s=[];for(let r=t||0;r<e;r++)s.push(r);return s}generateRandom(e=5){for(var t=this.capitals+this.smalls+this.digits,s="",r=0;r<e;r++)s+=t[Math.floor(Math.random()*t.length)];return s}generateRandomHex(e=5){for(var t=this.capitals.slice(0,3)+this.smalls.slice(0,3)+this.digits,s="",r=0;r<e;r++)s+=t[Math.floor(Math.random()*t.length)];return s}generateKey(e=5){return Date.now().toString(e)+Math.random().toString(e).slice(2)}edittedUrl(e){var t=this.urlSplitter(e.url);return t.vars[e.toAdd]=e.addValue.toLowerCase(),this.urlMerger(t,e.toAdd)}addCommaToMoney(e=""){for(var t="",s=e.length-1;s>=0;s--)t+=e[s];for(e="",s=0;s<t.length;s++){let r=(s+1)%3;e+=t[s],0==r&&s!=t.length-1&&(e+=",")}for(t="",s=e.length-1;s>=0;s--)t+=e[s];return t}isCapital(e=""){if(1==e.length)return this.capitals.includes(e)}capitalize(e=""){return this.isCapital(e[0])?e:((e=e.split(""))[0]=this.capitals[this.smalls.indexOf(e[0])],this.stringReplace(e.toString(),",",""))}flip(e=""){return e.split("").reverse().join("")}isSmall(e=""){if(1==e.length)return this.smalls.includes(e)}isSymbol(e=""){if(1==e.length)return this.symbols.includes(e)}isName(e=""){for(var t in e)if(this.isDigit(e[t]))return!1;return!0}isPasswordValid(e=""){if(e.length>7)for(var t in e)if(this.isCapital(e[t]))for(var s in e)if(this.isSmall(e[s]))for(var r in e)if(this.isDigit(e[r]))for(var n in e)if(this.isSymbol(e[n]))return!0;return!1}isSubString(e="",t=""){return-1!=e.indexOf(t)}isDigit(e=""){return 1==(e=new String(e)).length&&this.digits.includes(e)}isEmail(e=""){var t=e.split("@");if(2!=t.length)return!1;if(this.isSpaceString(t[0]))return!1;var s=t[1].split(".");return 2==s.length&&!this.isSpaceString(s[0])&&!this.isSpaceString(s[1])}isTruthy(e){let t;return"boolean"==typeof e?t=e:"string"==typeof e?t="true"==e.toLocaleLowerCase()||"1"==e.toLocaleLowerCase():"number"==typeof e&&(t=1==e),t}isFalsy(e){let t;return"boolean"==typeof e?t=e:"string"==typeof e?t="false"==e.toLocaleLowerCase()||"0"==e.toLocaleLowerCase():"number"==typeof e&&(t=0==e),t}objectLength(e={}){return Object.keys(e).length}isSpaceString(e=""){if(""==e)return!0;for(var t in e)if(" "!=e[t])return!1;return!0}hasString(e="",t=""){for(var s in e)if(t==e[s])return!0;return!1}trem(e=""){if(" "==e[0]){for(var t="",s=0;s<e.length;s++)0!=s&&(t+=e[s]);e=this.trem(t)}if(" "==e[e.length-1]){for(t="",s=0;s<e.length;s++)s!=e.length-1&&(t+=e[s]);e=this.trem(t)}return e}stringReplace(e="",t="",s=""){var r="";for(let n=0;n<e.length;n++)e[n]==t?r+=s:r+=e[n];return r}converToRealPath(e=""){return"/"!=e[e.length-1]&&(e+="/"),e}isSpacialCharacter(e=""){for(var t=0;t<"'\\/:?*<>|!.".length;t++)if("'\\/:?*<>|!."[t]==e)return!0;return!1}countChar(e="",t=""){for(var s=0,r=0;r<e.length;r++)e[r]==t&&s++;return s}occurancesOf(e="",t=""){let s=[];for(let r=0;r<e.length;r++)e[r]===t&&s.push(r);return s}isset(e){return void 0!==e}isnull(e){return null==e}notNull(e){return this.isset(e)&&!this.isnull(e)}isArray(e){let t=!1;return"object"==typeof e&&(t=e.constructor===Array),t}isObject(e){let t=!1;return"object"==typeof e&&(t=e.constructor===Object),t}isString(e){let t=!1;return"string"==typeof e&&(t=e.constructor===String),t}isNumber(e){let t=!1;return"number"==typeof e&&(t=e.constructor===Number),t}isBool(e){let t=!1;return"boolean"==typeof e&&(t=e.constructor===Boolean),t}isfunction(e){return"function"==typeof e}async runParallel(e=[],t=(()=>{})){var s={};for(var r in e)s[r]=await e[r];t(s)}isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}urlMerger(e="",t=""){var s=this.isset(e.hostType)?e.hostType:"http",r=this.isset(e.hostName)?e.hostName:"",n=this.isset(e.host)?e.port:"",i=this.isset(e.pathName)?e.pathName:"",a="?",l=!0;this.isset(e.vars)&&Object.keys(e.vars).map(s=>{l&&(a+=s+"="+e.vars[s]+"&"),s==t&&(l=!1)});var o=s+"::/"+r+":"+n+"/"+i+a;return(o=o.lastIndexOf("&")==o.length-1?o.slice(0,o.length-1):o).lastIndexOf("=")==o.length-1?o.slice(0,o.length-1):o}urlSplitter(e=""){if(this.isset(e)){var t=-1===(e=e.toString()).indexOf("://")?null:e.split("://")[0],s=e.split("://").pop(0),r=s.split("/")[0],n=r.split(":")[0],i=r.split(":").pop(0),a="/"+s.split("/").pop(0),l=a.split("?")[0],o=-1===a.indexOf("?")?null:a.split("?").pop(0),d={};if(null!=o){var c=o.split("&");for(var u in c){var f=c[u].split("=");f[1]?d[this.stringReplace(f[0],"-"," ")]=this.stringReplace(f[1],"-"," "):d[this.stringReplace(f[0],"-"," ")]=""}}return{location:e,httpType:t,fullPath:s,host:r,httphost:t+"://"+r,hostName:n,port:i,path:a,pathName:l,queries:o,vars:d}}}getUrlVars(e=""){var t=-1===(e=e.toString()).indexOf("?")?null:e.split("?").pop(0),s={};if(null!=t){var r=t.split("&");for(var n in r){var i=r[n].split("=");i[1]?s[this.stringReplace(i[0],"-"," ")]=this.stringReplace(i[1],"-"," "):s[this.stringReplace(i[0],"-"," ")]=""}}return s}};let t=new e;class s{constructor(e={rows:2,cols:2,contents:[]}){Object.keys(e).map(t=>{this[t]=e[t]}),this.rows=this.rows||2,this.cols=this.cols||2,this.contents=this.contents||[],this.setData(this.contents)}setData(e=[]){this.contents=e,this.data=[];for(let t=0;t<this.rows;t++){this.data[t]=[];for(let s=0;s<this.rows;s++)this.data[t][s]=e.shift()}}get structure(){let{rows:e,cols:t}=this;return{rows:e,cols:t}}add(e=0){if(e instanceof s)for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]+=e.data[t][s];else if(e instanceof Array)for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]+=e[t][s];else for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]+=e}subtract(e=0){if(e instanceof s)for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]-=e.data[t][s];else if(e instanceof Array)for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]-=e[t][s];else for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]-=e}multiply(e=1){if(e instanceof s)for(let t=0;t<this.rows;t++)for(let s=0;s<e.cols;s++)this.data[t][s]*=e.data[t][s];else if(e instanceof Array)for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]*=e[t][s];else for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]*=e}randomize(){this.map(e=>t.random())}transpose(){let e=new s({rows:this.cols,cols:this.rows});for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)e.data[s][t]=this.data[t][s];Object.keys(e).map(t=>{this[t]=e[t]})}map(e=((e,...t)=>{})){for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++){let r=this.data[t][s];this.data[t][s]=e(r,t,s)}}print(){console.table(this.data)}say(){console.log(this.toArray())}toArray(){return this.contents=[],s.map(this,e=>{this.contents.push(e)}),this.contents}reshape(e={rows:2,cols:2}){this.toArray(),this.rows=e.rows,this.cols=e.cols,this.setData(this.contents)}getColumns(...e){let t=[];for(let s in e)t.push(Array.each(this.data,t=>t[e[s]]));return t}getRows(...e){let t=[];for(let s=0;s<this.rows;s++)e.includes(s)&&t.push(this.data[s]);return t}static toArray(e){let t=[];return s.map(e,e=>{t.push(e)}),t}static subtract(e=new s,t){let r=[],n=e.rows,i=e.cols;if(t instanceof s)for(let s=0;s<n;s++)for(let n=0;n<i;n++)r.push(e.data[s][n]-t.data[s][n]);else if(t instanceof Array)for(let s=0;s<e.rows;s++)for(let n=0;n<e.cols;n++)r.push(e.data[s][n]-t[s][n]);else for(let s=0;s<this.rows;s++)for(let n=0;n<this.cols;n++)r.push(e.data[s][n]-t);return new s({rows:n,cols:i,contents:r})}static add(e=new s,t){let r=[],n=e.rows,i=e.cols;if(t instanceof s)for(let s=0;s<n;s++)for(let n=0;n<i;n++)r.push(e.data[s][n]+t.data[s][n]);else if(t instanceof Array)for(let s=0;s<e.rows;s++)for(let n=0;n<e.cols;n++)r.push(e.data[s][n]+t[s][n]);else for(let s=0;s<this.rows;s++)for(let n=0;n<this.cols;n++)r.push(e.data[s][n]+t);return new s({rows:n,cols:i,contents:r})}static multiply(e=new s,t){let r,n,i=[];if(t instanceof s){if(e.cols!==t.rows)return void console.log("Columns of A must equal rows of B");r=e.rows,n=t.cols;for(let s=0;s<r;s++)for(let r=0;r<n;r++){let n=0;for(let i=0;i<e.cols;i++)n+=e.data[s][i]*t.data[i][r];i.push(n)}}else if(t instanceof Array){r=e.rows,n=e.cols;for(let s=0;s<e.rows;s++)for(let r=0;r<e.cols;r++)i.push(e.data[s][r]*t[s][r])}else for(let s=0;s<this.rows;s++)for(let r=0;r<this.cols;r++)i.push(e.data[s][r]*t);return new s({rows:r,cols:n,contents:i})}static divide(e=new s,t){let r,n,i=[];if(t instanceof s){if(e.cols!==t.rows)return void console.log("Columns of A must equal rows of B");r=e.rows,n=t.cols;for(let s=0;s<r;s++)for(let r=0;r<n;r++){let n=0;for(let i=0;i<e.cols;i++)n+=e.data[s][i]/t.data[i][r]||0;i.push(n)}}else if(t instanceof Array){r=e.rows,n=e.cols;for(let s=0;s<e.rows;s++)for(let r=0;r<e.cols;r++)i.push(e.data[s][r]/t[s][r]||0)}else for(let s=0;s<this.rows;s++)for(let r=0;r<this.cols;r++)i.push(e.data[s][r]/t||0);return new s({rows:r,cols:n,contents:i})}static randomize(e=new s){return s.map(e,e=>t.random())}static transpose(e=new s){let t=new s({rows:e.cols,cols:e.rows});for(let s=0;s<e.rows;s++)for(let r=0;r<e.cols;r++)t.data[r][s]=e.data[s][r];return t}static map(e=new s,t=(()=>{})){let r=new s({rows:e.rows,cols:e.cols});for(let s=0;s<e.rows;s++)for(let n=0;n<e.cols;n++){let i=e.data[s][n];r.data[s][n]=t(i,s,n)}return r}static fromArray(e=[]){return new s({rows:e.length,cols:1,contents:e})}static reshape(e={rows:2,cols:2,matrix:new s}){return e.contents=s.toArray(e.matrix),delete e.matrix,new s(e)}static normalize(e=new s){let t=Math.normalize(s.toArray(e));return new s({rows:e.rows,cols:e.cols,contents:t})}static diagonal(e=[]){let t=s.square(e.length);for(let s in t.data)for(let r in t.data[s])s==r&&(t.data[s][r]=e[s]);return t.toArray(),t}static unit(e=2){let t=s.square(e);for(let s in t.data)for(let e in t.data[s])s==e&&(t.data[s][e]=1);return t.toArray(),t}static square(e=2){return new s({rows:e,cols:e})}static fromMatrixCols(e=new s,...t){let r=e.getColumns(...t),n=Array.flatten(r),i=new s({rows:r.length,cols:e.cols,contents:n});return i.transpose(),i}static deepMatrix(e=[],t=[]){let r=[];for(let s=0;s<e.length;s++)r.push({rows:e[s],cols:e[++s]||1});let n=e=>{let i=new s(r[e]);return e+1==r.length?i.map(e=>t.shift()||0):i.map(t=>n(e+1)),i};return n(0)}}var r=s,n=function(){let e={combine:(t,s,r,n)=>{let i=n=n||0,a=s===r?n+1:n,l=e.indexAt(t,s,i),o=e.indexAt(t,r,a)+1;return-1==l||0==o?null:t.slice(l,o)},inBetween:(t,s,r,n)=>{let i=n=n||0,a=s===r?n+1:n,l=e.indexAt(t,s,i)+1,o=e.indexAt(t,r,a);return 0==l||-1==o?null:t.slice(l,o)},contains:(e,t)=>{for(let s in e)if(e[s]==t)return!0;return!1},indexAt:(e,t,s)=>{s=s||0;let r=-1;for(let n=0;n<e.length;n++)if(e[n]==t&&++r==s)return n;return-1},find:(e,t)=>{for(let s in e)if(1==t(e[s]))return e[s]},findAll:(e,t)=>{let s=[];for(let r in e)1==t(e[r])&&s.push(e[r]);return s},getObject:(e,t,s)=>{let r;for(let n in e)e[n][t]==s&&(r=e[n]);return r},getAllObjects:(e,t,s)=>{let r=[];for(let n in e)e[n][t]==s&&r.push(e[n]);return r},getAll:(e,t)=>{let s=[];for(let r in e)e[r]==t&&s.push(r);return s},removeAll:(e,t)=>{let s=[];for(let r of e)r!=t&&s.push(r);return s},putAt:(e=[],t,s=0)=>{let r=[];for(let n in e)if(n==s){r[n]=t;let i=Math.floor(s);isNaN(i)?i=s+1:i++,r[i]=e[n]}else r[n]=e[n];return r},pushArray:(t=[],s,r)=>{let n=e.arrayIndex(t,s);return e.putAt(t,r,n)},arrayIndex:(e=[],t=[])=>{for(let s in e)if(JSON.stringify(e[s])==JSON.stringify(t))return s;return-1},hasArray:(e=[],t=[])=>(e=JSON.stringify(e),t=JSON.stringify(t),-1!=e.indexOf(t)),toObject:(e=[],t)=>{let s={};for(let r in e)s[e[r][t]]=e[r],delete s[e[r][t]][t];return s},reshape:e=>{},randomPick:e=>e[Math.floor(Math.random()*e.length)],removeEmpty:(t=[])=>{let s=[];for(let r in t)Array.isArray(t[r])&&t[r].length>0?s.push(e.removeEmpty(t[r])):null!=t[r]&&null!=t[r]&&0!=t[r]&&""!=t[r]&&s.push(t[r]);return s},each:(e=[],t=(()=>{}))=>{let s=[];for(let r in e)s.push(t(e[r],r));return s},hasArrayElement:(e=[],t=[])=>{for(let s in t)if(-1!=e.indexOf(t[s]))return!0;return!1},toSet:(e=[])=>{let t=[];for(let s in e)-1==t.indexOf(e[s])&&t.push(e[s]);return t},popIndex:(e=[],t)=>{let s=[];for(let r in e)r!=t&&s.push(e[r]);return s},dataType:(e=[])=>{let t=typeof e[0];for(let s in e)if(typeof e[s]!=t)return"mixed";return t}};return e};let i=new e,a=n();var l=class extends e{constructor(){super()}trimMonthArray(){let e=[];for(let t=0;t<this.months.length;t++)e.push(this.months[t].slice(0,3));return e}getYears(e=5){let t=(new Date).getYear()+1900,s=[];for(let r=0;r<e;r++)s.push(`${t-1}-${t}`),t++;return s}isTimeValid(e){if(2==(e=e.split(":")).length||3==e.length){var t=new Number(e[0]),s=new Number(e[1]),r=0;if(3==e.length){if(r=new Number(e[2]),t>23||t<0||s>59||s<0||r>59||r<0)return!1}else if(t>23||t<0||s>59||s<0)return!1;return 60*t*60+60*s+r}return!1}time(e){let t=this.isset(e)?new Date(Math.floor(e)):new Date,s=t.getHours().toString(),r=t.getMinutes().toString(),n=t.getSeconds().toString();return`${s=s.length>1?s:"0"+s}:${r=r.length>1?r:"0"+r}:${n=n.length>1?n:"0"+n}`}date(e){let t=this.isset(e)?new Date(Math.floor(e)):new Date,s=t.getDate().toString(),r=(t.getMonth()+1).toString(),n=t.getFullYear().toString();return s=s.length>1?s:"0"+s,`${n}-${r=r.length>1?r:"0"+r}-${s}`}time_date(e){return`${this.time(e)}, ${this.date(e)}`}timeToday(){let e=new Date,t=e.getHours(),s=e.getMinutes(),r=e.getSeconds();return this.isTimeValid(`${t}:${s}:${r}`)||-1}isDateValid(e){return!!(this.isDate(e)&&this.isYearValid(e)&&this.isMonthValid(e)&&this.isDayValid(e))}isDayValid(e){for(var t="",s=0;s<2;s++)t+=e[s+8];var r=0,n=this.isMonthValid(e);return"01"==n?r=31:"02"==n?r=this.isLeapYear(this.isYearValid(e))?29:28:"03"==n?r=31:"04"==n?r=30:"05"==n?r=31:"06"==n?r=30:"07"==n||"08"==n?r=31:"09"==n?r=30:"10"==n?r=31:"11"==n?r=30:"12"==n&&(r=31),r<t?0:t}isDate(e){if(10!=e.length)return!1;for(var t in e)if(!this.isDigit(e[t])){if(4==t||7==t){if("-"==e[t])continue;return!1}return!1}return!0}isMonthValid(e){for(var t="",s=0;s<2;s++)t+=e[s+5];return t>12||t<1?0:t}isYearValid(e){for(var t=(new Date).getFullYear("Y"),s="",r=0;r<4;r++)s+=e[r+0];return s>t?0:s}getYear(e){for(var t="",s=0;s<4;s++)t+=e[s+0];return t}isLeapYear(e){return e%4==0&&(e%100!=0||e%400==0)}daysInMonth(e,t){var s=0;return"01"==e?s=31:"02"==e?s=this.isLeapYear(t)?29:28:"03"==e?s=31:"04"==e?s=30:"05"==e?s=31:"06"==e?s=30:"07"==e||"08"==e?s=31:"09"==e?s=30:"10"==e?s=31:"11"==e?s=30:"12"==e&&(s=31),s}dateValue(e){for(var t=365*this.getYear(e),s=0,r=1;r<this.isMonthValid(e);r++)s=this.daysInMonth(r,this.getYear(e))/1+s/1;return t/1+s/1+this.isDayValid(e)/1}today(){var e=new Date,t=e.getMonth()/1+1;return 2!=t.length&&(t="0"+t),e.getFullYear()+"-"+t+"-"+e.getDate()}getDateObject(e){let t=Math.floor(e/this.secondsInDays(1));e-=this.secondsInDays(t);let s=Math.floor(e/this.secondsInHours(1));e-=this.secondsInHours(s);let r=Math.floor(e/this.secondsInMinutes(1));return{days:t,hours:s,minutes:r,seconds:e-=this.secondsInMinutes(r)}}dateWithToday(e){var t=Math.floor(this.dateValue(this.today()));let s=Math.floor(this.dateValue(e));var r={diff:s-t,when:""};return r.when=s>t?"future":s==t?"today":"past",r}dateString(e){var t=new Number(this.getYear(e)),s=new Number(this.isMonthValid(e));return new Number(this.isDayValid(e))+" "+this.months[s-1]+", "+t}secondsInDays(e){return Math.floor(24*e*60*60)}secondsInHours(e){return Math.floor(60*e*60)}secondsInMinutes(e){return Math.floor(60*e)}secondsTillDate(e){return this.secondsInDays(Math.floor(this.dateValue(e)))}secondsTillToday(){return this.secondsTillDate(this.today())}secondsTillNow(){return this.secondsTillDate(this.today())+this.timeToday()}secondsTillMoment(e){return this.secondsTillDate(this.date(e))+this.isTimeValid(this.time(e))}log(...e){let t=`[${this.time()}]:`;console.log(t,...e)}};var o=class extends l{constructor(e=class{}){super(),this.Element=e.Element,this.document=e.document}loadCss(e=""){let t=this.createElement({element:"link",attributes:{rel:"stylesheet",type:"text/css",href:e}});void 0!==this.document&&void 0!==this.document.head&&this.document.head.append(t)}jsonForm(e){let t={},s=e=>{let r=e.children;for(let t=0;t<r.length;t++)s(r[t]);e.hasAttribute("name")&&("file"==e.type?e.hasAttribute("multiple")?t[e.getAttribute("name")]=e.files:t[e.getAttribute("name")]=e.files[0]:t[e.getAttribute("name")]=e.value)};return s(e),t}jsonElement(e){let t=e.nodeName.toLowerCase(),s=e.getAttributes();s.style=e.css();let r=[];for(let n=0;n<e.children.length;n++)r.push(e.children[n].toJson());return{element:t,attributes:s,children:r}}isElement(e){return e instanceof this.Element}createFromObject(e={},t){let s,r;if(this.isElement(e)?r=(s=e).nodeName:this.isElement(e.element)?r=(s=e.element).nodeName:(r=e.element.toLowerCase(),s=document.createElement(e.element)),this.isset(e.attributes)&&!this.isElement(e))for(var n in e.attributes)"style"==n?s.css(e.attributes[n]):s.setAttribute(n,e.attributes[n]);if(this.isset(e.text)&&(s.textContent=e.text),this.isset(e.html)&&(s.innerHTML=e.html),this.isset(e.value)&&(s.value=e.value),r.includes("-")&&(s=this.createFromHTML(s.outerHTML)),this.isset(t)&&t.attachElement(s,e.attachment),this.isset(e.children)&&s.makeElement(e.children),this.isset(e.options)&&Array.isArray(e.options))for(var i of e.options){let t=s.makeElement({element:"option",value:i,text:i,attachment:"append"});this.isset(e.selected)&&e.selected==i&&t.setAttribute("selected",!0),"null"==i.toString().toLowerCase()&&t.setAttribute("disabled",!0)}return this.isset(s.dataset.icon)&&s.addClasses(s.dataset.icon),s}createFromHTML(e="",t){let s=(new DOMParser).parseFromString(e,"text/html"),r=s.body.firstChild;return 1==e.indexOf("html")?r=s:1==e.indexOf("body")&&(r=s.body),this.isset(t)&&t.attachElement(r,t.attachment),r}createPerceptorElement(e,t){let s=this[e.perceptorElement](e.params);return this.isset(t)&&t.attachElement(s,e.attachment),s}getElement(e={element:"",attributes:{}},t){var s;if("string"==typeof e?s=this.createFromHTML(e,t):this.isElement(e)?(s=e,this.isset(t)&&t.attachElement(s,e.attachment)):e.constructor==Object&&(s=e.perceptorElement?this.createPerceptorElement(e,t):this.createFromObject(e,t)),this.isset(s.setKey)&&!this.isset(s.dataset.domKey)&&s.setKey(),this.isset(e.list)){let t=s.makeElement({element:"datalist",options:e.list});s.setAttribute("list",s.dataset.domKey),t.setAttribute("id",s.dataset.domKey)}if(this.isset(e.state)){let t=s.getParents(e.state.owner,e.state.value);this.isnull(t)?s.dataset.stateStatus="pending":(t.addState({name:e.state.name,state:s}),s.dataset.stateStatus="set")}return s}createElement(e={element:"",attributes:{}},t){if(Array.isArray(e)){let s=[];for(let r of e)s.push(this.getElement(r,t));return s}return this.getElement(e,t)}validateFormTextarea(e){return""!=e.value}validateFormInput(e){var t=e.getAttribute("type"),s=e.value;return this.isnull(t)?!this.isSpaceString(s):"file"==(t=t.toLowerCase())?""!=s:"text"==t?!this.isSpaceString(s):"date"==t?this.hasString(e.className,"future")?this.isDate(s):this.isDateValid(s):"email"==t?this.isEmail(s):"number"==t?this.isNumber(s):"password"==t?this.isPasswordValid(s):!this.isSpaceString(s)}validateFormSelect(e){return 0!=e.value&&"null"!=e.value.toLowerCase()}validateForm(e,t){(t=t||{}).nodeNames=t.nodeNames||"INPUT, SELECT, TEXTAREA";let s,r,n=!0,i=e.findAll(t.nodeNames),a=e=>"INPUT"==s?this.validateFormInput(e):"SELECT"==s?this.validateFormSelect(e):"TEXTAREA"==s?this.validateFormTextarea(e):this.validateOtherElements(e);for(let l=0;l<i.length;l++)if(s=i[l].nodeName,r=i[l].getAttribute("name"),"true"!=i[l].getAttribute("ignore")){if(this.isset(t.names)){if(!t.names.includes(r))continue;n=a(i[l])}else n=a(i[l]);if(!n)break}return{flag:n,elementName:r}}validateOtherElements(e){let t=!1;return this.isset(e.value)&&""!=e.value&&(t=!0),t}ValidateFormImages(e){return"file"==type&&!self.isImageValid(value)}isImageValid(e){var t=e.substring(e.lastIndexOf(".")+1).toLowerCase();return"png"==t||"gif"==t||"jpeg"==t||"jpg"==t}imageToJson(e,t=(()=>{})){let s=new FileReader,r={};s.onload=e=>{r.src=e.target.result,t(r)},r.size=e.size,r.type=e.type,s.readAsDataURL(e)}};class d{}var c=class extends o{constructor(e=d){super(e),this.virtual={},this.elementLibrary(e.Element),this.htmlCollectionLibrary(e.HTMLCollection),this.nodeLibrary(e.Node),this.nodeListLibrary(e.NodeList)}elementLibrary(e=d){let t=this;e.prototype.changeNodeName=function(e){let s=this.toJson();return s.element=e,t.createElement(s)},e.prototype.toJson=function(){let e=this.nodeName.toLowerCase(),t=this.getAttributes();t.style=this.css();let s=[];for(let r=0;r<this.children.length;r++)s.push(this.children[r].toJson());return{element:e,attributes:t,children:s}},e.prototype.setOptions=function(e=[],s={selected:""}){s=s||{},t.isset(s.flag)&&(this.innerHTML="");for(let r=0;r<e.length;r++){let n=e[r].text||e[r],i=e[r].value||e[r],a=this.makeElement({element:"option",attributes:{value:i},text:n});"null"==i.toString().toLowerCase()&&a.setAttribute("disabled",!0),t.isset(s.selected)&&i==s.selected&&a.setAttribute("selected",!0)}},e.prototype.commonAncestor=function(e,t){for(let s of e.parents())for(let e of t.parents())if(s==e)return s;return null},e.prototype.onAdded=function(e=(()=>{})){this.addEventListener("DOMNodeInsertedIntoDocument",t=>{e()})},e.prototype.states={},e.prototype.temp={},e.prototype.manyBubbledEvents=function(e,t=(()=>{})){e=e.split(",");for(let s of e)this.bubbledEvent(s.trim(),t)},e.prototype.manyNotBubbledEvents=function(e,t=(()=>{})){e=e.split(",");for(let s of e)this.notBubbledEvent(s.trim(),t)},e.prototype.bubbledEvent=function(e,t=(()=>{})){document.addEventListener(e,e=>{(e.target==this||this.isAncestor(e.target))&&t(e)})},e.prototype.notBubbledEvent=function(e,t=(()=>{})){document.addEventListener(e,e=>{e.target==this||this.isAncestor(e.target)||t(e)})},e.prototype.addMultipleEventListener=function(e,t=(()=>{})){e=e.split(",");for(let s of e)this.addEventListener(s.trim(),e=>{t(e)})},e.prototype.hover=function(e={css:{},do:()=>{}}){let s,r=[];this.addMultipleEventListener("mouseenter",n=>{s=this.css(),t.isset(e.css)&&(r=t.array.each(Object.keys(e.css),e=>t.cssStyleName(e)),this.css(e.css)),t.isfunction(e.do)&&e.do(n)}),this.addMultipleEventListener("mouseleave",n=>{t.isset(e.css)&&(this.cssRemove(r),this.css(s))})},e.prototype.find=function(e="",s=0){let r=null;return t.isset(s)?this.querySelectorAll(e).forEach((e,t)=>{s==t&&(r=e)}):r=this.querySelector(e),r},e.prototype.findAll=function(e=""){return this.querySelectorAll(e)},e.prototype.search=function(e="",s={attributes:{},id:"",nodeName:"",class:"",classes:""},r=0){let n=null,i=[];if(t.isset(s)){let a=this.querySelectorAll(e);for(let e=0;e<a.length;e++){if(n=a[e],t.isset(s.attributes)){for(let e in s.attributes)n.getAttribute(e)==s.attributes[e]||(n=null);if(t.isnull(n))continue}if(t.isset(s.id)&&s.id!=n.id)n=null;else if(!t.isset(s.class)||n.classList.contains(s.class))if(!t.isset(s.classes)||n.hasClasses(s.classes))if(t.isset(s.nodeName)&&n.nodeName.toLowerCase()!=s.nodeName)n=null;else{if(r<=0)return n;i.push(n)}else n=null;else n=null}n=i.length&&t.isset(i[r])?i[r]:null}else n=this.find(e);return n},e.prototype.searchAll=function(e="",s={attributes:{},id:"",nodeName:"",class:"",classes:""}){if(t.isset(s)){let r=this.querySelectorAll(e),n=[];for(let e=0;e<r.length;e++){let i=r[e];if(t.isset(s.attributes))for(let e in s.attributes)i.getAttribute(e)==s.attributes[e]||(i=null);t.isset(s.id)&&s.id!=i.id||t.isset(s.class)&&!i.classList.contains(s.class)||t.isset(s.classes)&&!i.hasClasses(s.classes)||t.isset(s.nodeName)&&i.nodeName.toLowerCase()!=s.nodeName?i=null:t.isnull(i)||n.push(i)}return n}return this.querySelectorAll(e)},e.prototype.fetch=function(e=[],t=0){let s={};for(let r of e)s[r]=this.find(r,t);return s},e.prototype.fetchAll=function(e=[]){let t={};for(let s of e)t[s]=this.findAll(s);return t},e.prototype.nodesBetween=function(e,t){let s=[];for(let r of Array.from(this.children))(r==e||r==t||r.isAncestor(e)||r.isAncestor(t))&&s.push(r);return s},e.prototype.isAncestor=function(e){return e.parents().includes(this)},e.prototype.parents=function(){let e=[],t=this.parentNode;for(;null!=t;)e.push(t),t=t.parentNode;return e},e.prototype.customParents=function(){let e=this.parents(),t=[];for(let s=0;s<e.length;s++)e[s].nodeName.includes("-")&&t.push(e[s]);return t},e.prototype.removeState=function(e={name:""}){let s=this.getState(e);t.isset(s)&&t.isset(e.force)&&(t.isset(s.dataset.domKey)&&delete t.virtual[s.dataset.domKey],s.remove()),this.removeAttribute("data-"+e.name)},e.prototype.getState=function(e={name:""}){let s,r=null;return"string"==typeof e?s=e:t.isset(this.dataset[""+e.name])&&(s=e.name),t.isset(s)&&(r=t.virtual[this.dataset[s]]),r},e.prototype.addState=function(e={name:""}){return t.isset(e.state.dataset.domKey)||e.state.setKey(),this.dataset[e.name]=e.state.dataset.domKey,this.states[e.name]={},this},e.prototype.setState=function(e={name:"",attributes:{},render:{},children:[],text:"",html:"",value:"",options:[]}){let s=this.getState(e);if(s.setAttributes(e.attributes),t.isset(e.children)&&s.makeElement(e.children),t.isset(e.render)&&s.render(e.render),t.isset(e.text)&&(s.textContent=e.text),t.isset(e.html)&&(s.innerHTML=e.html),t.isset(e.value)&&(s.value=e.value),t.isset(e.options))for(var r of e.options)s.makeElement({element:"option",value:r,text:r,attachment:"append"});return this.states[e.name][JSON.stringify(e)]=s.cloneNode(!0),s},e.prototype.setKeyAsync=async function(){return await this.setKey()},e.prototype.setKey=function(){let e=Date.now().toString(36)+Math.random().toString(36).slice(2);return t.isset(this.dataset.domKey)?e=this.dataset.domKey:this.dataset.domKey=e,t.virtual[e]=this,e},e.prototype.dropDown=function(e){let t=this.cloneNode(!0);this.innerHTML="",this.append(t),t.css({boxShadow:"1px 1px 1px 1px #aaaaaa"}),this.css({boxShadow:"0.5px 0.5px 0.5px 0.5px #cccccc"});let s=this.makeElement({element:"div",attributes:{class:"drop-down"}});return s.append(e),this.removeDropDown=()=>{s.remove(),t.css({boxShadow:"unset"}),this.innerHTML=t.innerHTML},this},e.prototype.stopMonitor=function(){return this.observe&&this.observer.disconnect(),this},e.prototype.onAttributeChange=function(e="",t=(()=>{})){this.addEventListener("attributesChanged",s=>{s.detail.attributeName==e&&t(s)})},e.prototype.monitor=function(e={attributes:!0,childList:!0,subtree:!0}){return this.observer=new MutationObserver((e,t)=>{e.length&&this.dispatchEvent(new CustomEvent("mutated"));for(let s of e)"childList"==s.type?this.dispatchEvent(new CustomEvent("childListchanged",{detail:s})):"attributes"==s.type?this.dispatchEvent(new CustomEvent("attributesChanged",{detail:s})):"characterData"==s.type&&this.dispatchEvent(new CustomEvent("characterDataChanged",{detail:s}))}),this.observer.observe(this,e),this},e.prototype.checkChanges=function(e=(()=>{})){this.monitor(),this.addEventListener("mutated",t=>{e(t)})},e.prototype.onChanged=function(e=(()=>{})){this.getAttribute("value");let s=s=>{if("INPUT"==s.target.nodeName)if("date"==s.target.type)this.isDate(this.value)&&this.setAttribute("value",this.value);else if("time"==s.target.type)this.isTimeValid(this.value)&&this.setAttribute("value",this.value);else if("file"==s.target.type){s.target.value;let r=s.target.files[0];0==r.type.indexOf("image")&&t.imageToJson(r,e)}else this.setAttribute("value",this.value);else if("SELECT"==s.target.nodeName)for(let e=0;e<s.target.options.length;e++)e==s.target.selectedIndex?s.target.options[e].setAttribute("selected",!0):s.target.options[e].removeAttribute("selected");else"DATA-ELEMENT"==s.target.nodeName||"SELECT-ELEMENT"==s.target.nodeName?this.setAttribute("value",this.value):this.value=this.textContent;t.isset(e)&&"file"!=s.target.type&&e(this.value,s)};this.addEventListener("keyup",e=>{s(e)}),this.addEventListener("change",e=>{s(e)})},e.prototype.render=function(e={element:"",attributes:{}},s){t.isset(s)?this.removeChildren(s):this.removeChildren(),this.makeElement(e)},e.prototype.getAllCssProperties=function(){let e,t,s=Array.from(document.styleSheets),r=this.id,n=this.nodeName,i=Array.from(this.classList),a={};for(var l in i)i[l]="."+i[l];for(l=0;l<s.length;l++){e=s[l].cssRules;for(var o=0;o<e.length;o++)if((t=e[o].selectorText)=="#"+r||t==n||-1!=i.indexOf(t)){a[t]={};let s=e[o].style;for(let e in s)""!==s[e]&&(a[t][e]=s[e])}}return a.style=this.css(),a},e.prototype.getCssProperties=function(e=""){let t=this.getAllCssProperties(),s={};for(let r in t){s[r]={};for(let n in t[r])e==n&&(s[r][n]=t[r][n])}return s},e.prototype.hasCssProperty=function(e=""){var s=this.getCssProperties(e);for(var r in s)if(t.isset(s[r])&&""!=s[r])return!0;return!1},e.prototype.cssPropertyValue=function(e=""){var s=this.getCssProperties(e),r=this.id,n=Array.from(this.classList);if(t.isset(s.style)&&""!=s.style)return s.style;if(t.isset(r)&&t.isset(s["#"+r])&&""!=s["#"+r])return s["#"+r];for(var i of n)if(t.isset(s["."+i])&&""!=s["."+i])return s["."+i];return t.isset(s[this.nodeName])&&""!=s[this.nodeName]?s[this.nodeName]:""},e.prototype.css=function(e={}){return t.isset(e)&&Object.keys(e).map(t=>{this.style[t]=e[t]}),t.extractCSS(this)},e.prototype.cssRemove=function(e=[]){if(Array.isArray(e))for(var t of e)this.style.removeProperty(t);else this.style.removeProperty(e);return this.css()},e.prototype.toggleChild=function(e){var t,s,r,n=!1;console.log(e),this.children.forEach(i=>{t=i.nodeName,s=i.classList,r=i.id,t==e.nodeName&&r==e.id&&s.toString()==e.classList.toString()&&(i.remove(),n=!0)}),n||this.append(e)},e.prototype.clearClasses=function(e=""){e=e.split(",");for(let t in e)e[t]=e[t].trim();for(let s of this.classList)t.isset(e)&&e.includes(s)||this.classList.remove(s)},e.prototype.removeClasses=function(e=""){e=e.split(",");for(let t of e)""!=(t=t.trim())&&this.classList.remove(t)},e.prototype.addClasses=function(e=""){e=e.split(",");for(let t of e)""!=(t=t.trim())&&this.classList.add(t)},e.prototype.toggleClasses=function(e=""){e=e.split(",");for(let t of e)""!=(t=t.trim())&&this.classList.toggle(t)},e.prototype.removeClass=function(e=""){return this.classList.remove(e),this},e.prototype.hasClasses=function(e=[]){for(let t of e)if(!this.classList.contains(t))return!1;return!0},e.prototype.addClass=function(e=""){return this.classList.add(e),this},e.prototype.toggleClass=function(e=""){return this.classList.toggle(e),this},e.prototype.position=function(e={}){return t.isset(e)&&(Object.keys(e).map(t=>{e[t]="px"==new String(e[t]).slice(e[t].length-2)?e[t]:e[t]+"px"}),this.css(e)),this.getBoundingClientRect()},e.prototype.inView=function(e=""){let s=this.getParents(e),r=this.position().top,n=!1;return t.isnull(s)||(n=r>=0&&r<=s.clientHeight),n},e.prototype.hasClass=function(e=""){return this.classList.contains(e)},e.prototype.setProperties=function(e={}){for(let t in e)this[t]=e[t]},e.prototype.setAttributes=function(e={}){for(let t in e)"style"==t?this.css(e[t]):this.setAttribute(t,e[t])},e.prototype.getAttributes=function(e=[]){0==e.length&&(e=this.getAttributeNames());let t={};for(let s of e)t[s]=this.getAttribute(s);return t},e.prototype.makeElement=function(e={element:"",attributes:{}}){return this.setKeyAsync(),t.createElement(e,this)},e.prototype.getParents=function(e="",s=""){var r=e.slice(0,1),n=this.parentNode;if("."==r)for(;n&&(!t.isset(n.classList)||!n.classList.contains(e.slice(1)));)n=n.parentNode;else if("#"==r)for(;n&&(!t.isset(n.id)||n.id!=e.slice(1));)n=n.parentNode;else for(;n&&(!t.isset(n.nodeName)||n.nodeName.toLowerCase()!=e.toLowerCase());){if(t.isset(n.hasAttribute)&&n.hasAttribute(e)){if(t.isset(s)&&n.getAttribute(e)==s)break;break}n=n.parentNode}return n},e.prototype.toggle=function(){"none"==this.style.display||"hidden"==this.style.visibility?this.show():this.hide()},e.prototype.hide=function(){return this.style.display="none",this},e.prototype.show=function(){return this.cssRemove(["display"]),this},e.prototype.removeChildren=function(e={except:[]}){let t=[];(e=e||{}).except=e.except||[];let s=e.except;for(let r=0;r<s.length;r++){let e=this.findAll(s[r]);for(let s=0;s<e.length;s++)t.includes(e[s])||t.push(e[s])}return this.children.forEach(e=>{t.includes(e)||e.remove()}),this},e.prototype.delete=function(){t.isset(this.dataset.domKey)&&delete t.virtual[this.dataset.domKey],this.remove()},e.prototype.deleteChild=function(e){return e.delete(),this},e.prototype.toggleChildren=function(e={name:"",class:"",id:""}){Array.from(this.children).forEach(s=>{t.isset(e.name)&&e.name==s.nodeName||t.isset(e.class)&&t.hasArrayElement(Array.from(s.classList),e.class.split(" "))||t.isset(e.id)&&(e.id,s.id),s.toggle()})},e.prototype.attachElement=function(e,t="append"){this[t](e)},e.prototype.pressed=function(e=(()=>{})){let t=0,s=0;this.addMultipleEventListener("mousedown, touchstart",e=>{t=e.timeStamp}),this.addMultipleEventListener("mouseup, touchend",r=>{s=r.timeStamp,r.duration=s-t,e(r)})}}htmlCollectionLibrary(e=d){let t=this;e.prototype.popIndex=function(e=0){let s=t.createElement({element:"sample"}).children,r=Array.from(this);for(let t=0;t<r.length;t++)t!=e&&(s[t]=this.item(t),console.log(s));return s},e.prototype.forEach=function(e=(()=>{})){let t=Array.from(this);for(let s=0;s<t.length;s++)e(t[s],s)},e.prototype.each=function(e=(()=>{})){let t=Array.from(this);for(let s=0;s<t.length;s++)e(t[s],s)},e.prototype.indexOf=function(e){let t=Array.from(this);for(let s in t)if(t==e)return s;return-1},e.prototype.includes=function(e){return-1!=this.indexOf(e)},e.prototype.nodesBetween=function(e,t){let s=[],r=Array.from(this);for(let n of r)(n==e||n==t||n.isAncestor(e)||n.isAncestor(t))&&s.push(n);return s}}nodeLibrary(e=d){e.prototype.states={}}nodeListLibrary(e=d){e.prototype.each=function(e=(()=>{})){for(let t=0;t<this.length;t++)e(this[t],t)},e.prototype.indexOf=function(e){for(let t in this)if(this[t]==e)return t;return-1},e.prototype.includes=function(e){return-1!=this.indexOf(e)},e.prototype.nodesBetween=function(e,t){let s=[];for(let r of this)(r==e||r==t||r.isAncestor(e)||r.isAncestor(t))&&s.push(r);return s}}};var u=class extends c{constructor(e=class{}){super(e)}createTab(e={titles:[]}){var t=this.createElement({element:"ul",attributes:{class:"tab"}});for(var s of(e.view.append(t),e.titles))t.append(this.createElement({element:"li",attributes:{class:"tab-title"},text:s}));t.findAll("li").forEach(e=>{e.addEventListener("click",t=>{var s=this.urlSplitter(location.href);s.vars.tab=e.textContent.toLowerCase(),router.render({url:"?"+this.urlSplitter(this.urlMerger(s,"tab")).queries})})})}cell(e={element:"input",attributes:{},name:"",dataAttributes:{},value:"",text:"",html:"",edit:""}){var t,s=this.stringReplace(e.name," ","-")+"-cell",r=this.createElement({element:"label",attributes:{class:"cell-label"},text:e.name});let n;e.attributes=this.isset(e.attributes)?e.attributes:{},e.dataAttributes=this.isset(e.dataAttributes)?e.dataAttributes:{},e.dataAttributes.id=s,t="select"==e.element?{element:e.element,attributes:e.dataAttributes,children:[{element:"option",attributes:{disabled:"",selected:""},text:"Select "+e.name,value:""}]}:{element:e.element,attributes:e.dataAttributes,text:e.value},this.isset(e.value)&&(t.attributes.value=e.value),this.isset(e.options)&&(t.options=e.options),(n=e.element instanceof Element?e.element:this.createElement(t)).classList.add("cell-data"),this.isset(e.value)&&(n.value=e.value);let i,a=this.createElement({element:"div",attributes:e.attributes,children:[r,n]});return a.classList.add("cell"),this.isset(e.text)&&(n.textContent=e.text),this.isset(e.html)&&(n.innerHTML=e.html),this.isset(e.list)&&(a.makeElement({element:"datalist",attributes:{id:s+"-list"},options:e.list.sort()}),n.setAttribute("list",s+"-list")),this.isset(e.edit)&&(i=a.makeElement({element:"i",attributes:{class:""+e.edit,"data-icon":"fas, fa-pen",style:{cursor:"pointer",backgroundColor:"var(--primary-color)",width:"1em",height:"auto",position:"absolute",top:"0px",right:"0px",padding:".15em"}}}),a.css({position:"relative"})),a}message(e={link:"",text:"",temp:0}){var t=this.createElement({element:"span",attributes:{class:"alert"},children:[this.createElement({element:"a",text:e.text,attributes:{class:"text",href:e.link}}),this.createElement({element:"span",attributes:{class:"close"}})]});if(this.isset(e.temp))var s=setTimeout(()=>{t.remove(),clearTimeout(s)},""!=e.temp?1e3*e.time:5e3);t.find(".close").addEventListener("click",e=>{t.remove()}),body.find("#notification-block").append(t)}createTable(e={title:"",contents:{},projection:{},rename:{},sort:!1,search:!1,filter:[]}){let t,s=[],r={},n=0,i=this.createElement({element:"div",attributes:e.attributes});i.classList.add("kerdx-table");for(let d of e.contents){t=e.contents.indexOf(d);for(let t in d)-1==s.indexOf(t)&&(s.push(t),r[t]=i.makeElement({element:"column",attributes:{class:"kerdx-table-column","data-name":t},children:[{element:"span",attributes:{class:"kerdx-table-column-title","data-name":t},children:[{element:"p",attributes:{class:"kerdx-table-column-title-text"},text:t}]},{element:"div",attributes:{class:"kerdx-table-column-contents"}}]}),this.isset(e.sort)&&r[t].find(".kerdx-table-column-title").makeElement({element:"i",attributes:{class:"kerdx-table-column-title-sort","data-icon":"fas, fa-arrow-down"}}))}e.projection=e.projection||{};let a=Object.values(e.projection).includes(1);for(let d of s){for(let s of e.contents)t=e.contents.indexOf(s),r[d].find(".kerdx-table-column-contents").makeElement({element:"span",attributes:{class:"kerdx-table-column-cell","data-name":d,"data-value":s[d]||"","data-row":t},html:s[d]||""});-1==e.projection[d]||a&&!this.isset(e.projection[d])?r[d].css({display:"none"}):n++}i.css({gridTemplateColumns:`repeat(${n}, 1fr)`});let l=this.createElement({element:"div",attributes:{class:"kerdx-table-container"},children:[{element:"span",attributes:{class:"kerdx-table-titleandsearch"}},i]}),o=0;return this.isset(e.title)&&(l.find(".kerdx-table-titleandsearch").makeElement({element:"h5",attributes:{class:"kerdx-table-title"},text:e.title}),o++),this.isset(e.sort)&&(i.dataset.sort=!0),this.isset(e.search)&&(l.find(".kerdx-table-titleandsearch").makeElement({element:"input",attributes:{class:"kerdx-table-search",placeHolder:"Search table..."}}),o++),this.isset(e.filter)&&(l.find(".kerdx-table-titleandsearch").makeElement({element:"select",attributes:{class:"kerdx-table-filter"},options:e.filter}),o++),0==e.contents.length&&(i.textContent="Empty Table"),l.makeElement({element:"style",text:`\n            @media(min-width: 700px) {\n                .kerdx-table-titleandsearch {\n                  grid-template-columns: repeat(${o}, 1fr);\n                }\n              }\n        `}),l}getTableData(e){let t=[],s=e.findAll(".kerdx-table-column-cell");for(let r=0;r<s.length;r++){let{name:e,value:n,row:i}=s[r].dataset;t[i]=t[i]||{},t[i][e]=n}return t}sortTable(e,t="",s=1){let r=this.getTableData(e);return r.sort((e,r)=>(e=e[t],r=r[t],this.isNumber(e)&&this.isNumber(r)&&(e/=1,r/=1),s>-1?e>r?1:-1:e>r?-1:1)),r}listenTable(e={table:{},options:[]},t={click:()=>{},filter:()=>{}}){e.options=e.options||[],t=t||[];let s,r=e.table.find(".kerdx-table"),n=this.createElement({element:"span",attributes:{class:"kerdx-table-options"}}),i={view:"fas fa-eye",delete:"fas fa-trash",edit:"fas fa-pen",revert:"fas fa-history"};for(let b of e.options)s=i[b]||"fas fa-"+b,n.makeElement({element:"i",attributes:{class:s+" kerdx-table-option",id:"kerdx-table-option-"+b}});let a,l=r.findAll(".kerdx-table-column-title"),o=r.findAll(".kerdx-table-column"),d=[],c=o[0];if(this.isnull(c))return;for(let b=0;b<o.length;b++)if("none"!=o[b].css().display){a=o[b];break}let u,f,h,p=c.findAll(".kerdx-table-column-cell"),m=a.findAll(".kerdx-table-column-cell");for(let b=0;b<p.length;b++)d.push(p[b].dataset.row);if("true"==e.table.find(".kerdx-table").dataset.sort)for(let b=0;b<l.length;b++)l[b].addEventListener("mouseenter",e=>{l[b].find(".kerdx-table-column-title-sort").css({display:"unset"})}),l[b].addEventListener("mouseleave",e=>{l[b].find(".kerdx-table-column-title-sort").css({display:"none"})}),l[b].find(".kerdx-table-column-title-sort").addEventListener("click",t=>{let s;l[b].find(".kerdx-table-column-title-sort").toggleClasses("fas, fa-arrow-up"),l[b].find(".kerdx-table-column-title-sort").toggleClasses("fas, fa-arrow-down"),"up"==l[b].find(".kerdx-table-column-title-sort").dataset.direction?(l[b].find(".kerdx-table-column-title-sort").dataset.direction="down",s=1):(l[b].find(".kerdx-table-column-title-sort").dataset.direction="up",s=-1);let n=l[b].find(".kerdx-table-column-title-text").textContent,i=this.sortTable(e.table.find(".kerdx-table"),n,s),a=this.createTable({contents:i}).findAll(".kerdx-table-column");for(let e=0;e<a.length;e++)o[e].find(".kerdx-table-column-contents").innerHTML=a[e].find(".kerdx-table-column-contents").innerHTML;o=r.findAll(".kerdx-table-column"),g()});this.isnull(e.table.find(".kerdx-table-search"))||e.table.find(".kerdx-table-search").onChanged(e=>{g()}),this.isnull(e.table.find(".kerdx-table-filter"))||e.table.find(".kerdx-table-filter").onChanged(e=>{g()});let g=()=>{this.isnull(e.table.find(".kerdx-table-search"))||(f=e.table.find(".kerdx-table-search").value),this.isnull(e.table.find(".kerdx-table-filter"))||(h=e.table.find(".kerdx-table-filter").value);for(let e=0;e<d.length;e++){let s=!1;u=r.findAll(`.kerdx-table-column-cell[data-row="${e}"]`);for(let e=0;e<u.length;e++)u[e].cssRemove(["display"]);if(this.isset(h)&&0==s&&this.isset(t.filter)&&(s=t.filter(h,u)),this.isset(f)&&0==s){s=!0;for(let e=0;e<u.length;e++)if(u[e].textContent.toLowerCase().includes(f.toLowerCase())){s=!1;break}}if(s)for(let e=0;e<u.length;e++)u[e].css({display:"none"})}};this.isset(t.click)&&(r.addMultipleEventListener("mousedown, touchstart",s=>{let i=s.target;if(i.classList.contains("kerdx-table-option"))this.isset(t.click)&&t.click(s);else if(i.classList.contains("kerdx-table-column-cell")||!this.isnull(i.getParents(".kerdx-table-column-cell"))){i.classList.contains("kerdx-table-column-cell")||(i=i.getParents(".kerdx-table-column-cell"));let t=i.dataset.row;if(n.remove(),m[t].css({position:"relative"}),m[t].append(n),e.table.classList.contains("kerdx-selectable")){let s=r.findAll(`.kerdx-table-column-cell[data-row="${t}"]`);for(let e=0;e<s.length;e++)s[e].classList.toggle("kerdx-table-selected-row");n.remove(),i.classList.contains("kerdx-table-selected-row")||0==c.findAll(".kerdx-table-selected-row").length&&e.table.classList.remove("kerdx-selectable")}}}),r.pressed(t=>{let s=t.target;if(t.duration>300&&(s.classList.contains("kerdx-table-column-cell")||!this.isnull(s.getParents(".kerdx-table-column-cell")))){s.classList.contains("kerdx-table-column-cell")||(s=s.getParents(".kerdx-table-column-cell"));let t=s.dataset.row;if(0==c.findAll(".kerdx-table-selected-row").length&&!e.table.classList.contains("kerdx-selectable")){e.table.classList.add("kerdx-selectable");let s=r.findAll(`.kerdx-table-column-cell[data-row="${t}"]`);for(let e=0;e<s.length;e++)s[e].classList.add("kerdx-table-selected-row");n.remove()}}}))}createForm(e={element:"",title:"",columns:1,contents:{},required:[],buttons:{}}){let t,s=this.createElement({element:e.element||"form",attributes:e.attributes,children:[{element:"h3",attributes:{class:"kerdx-form-title"},text:e.title},{element:"section",attributes:{class:"kerdx-form-contents",style:{gridTemplateColumns:`repeat(${e.columns}, 1fr)`}}},{element:"section",attributes:{class:"kerdx-form-buttons"}}]});s.classList.add("kerdx-form"),this.isset(e.parent)&&e.parent.append(s);let r=s.find(".kerdx-form-contents");for(let n in e.contents){t=this.isset(e.contents[n].note)?`(${e.contents[n].note})`:"";let s=e.contents[n].label||this.camelCasedToText(n).toLowerCase(),i=r.makeElement({element:"div",attributes:{class:"kerdx-form-single-content"},children:[{element:"label",html:s,attributes:{class:"kerdx-form-label",for:n.toLowerCase()}}]}),a=i.makeElement(e.contents[n]);a.classList.add("kerdx-form-data"),this.isset(e.contents[n].note)&&i.makeElement({element:"span",text:e.contents[n].note,attributes:{class:"kerdx-form-note"}}),this.isset(e.required)&&e.required.includes(n)&&(a.required=!0)}for(let n in e.buttons)s.find(".kerdx-form-buttons").makeElement(e.buttons[n]);return s.makeElement({element:"span",attributes:{class:"kerdx-form-error"},state:{name:"error",owner:"#"+s.id}}),s}picker(e={title:"",contents:[]},t=(e=>{})){let s=this.createElement({element:"div",attributes:{class:"kerdx-picker"},children:[{element:"h3",attributes:{class:"kerdx-picker-title"},text:e.title||""},{element:"div",attributes:{class:"kerdx-picker-contents"}}]});for(let r of e.contents)s.find(".kerdx-picker-contents").makeElement({element:"span",attributes:{class:"kerdx-picker-single","data-name":r},text:r});return s.addEventListener("dblclick",e=>{e.target.classList.contains("kerdx-picker-single")&&t(e.target.dataset.name)}),s}popUp(e,t={title:"",attributes:{}}){let s=t.container||document.body,r=t.title||"";t.attributes=t.attributes||{},t.attributes.style=t.attributes.style||{},t.attributes.style.width=t.attributes.style.width||"50vw",t.attributes.style.height=t.attributes.style.height||"50vh";let n=this.createElement({element:"div",attributes:{class:"kerdx-pop-up"},children:[{element:"div",attributes:{id:"pop-up-window",class:"kerdx-pop-up-window"},children:[{element:"div",attributes:{id:"pop-up-menu",class:"kerdx-pop-up-menu"},children:[{element:"p",attributes:{id:"",style:{color:"inherit",padding:"1em"}},text:r},{element:"i",attributes:{id:"toggle-window",class:"kerdx-pop-up-control fas fa-expand-alt"}},{element:"i",attributes:{id:"close-window",class:"kerdx-pop-up-control fas fa-times"}}]},{element:"div",attributes:{id:"pop-up-content",class:"kerdx-pop-up-content"},children:[e]}]}]});return n.find("#pop-up-window").setAttributes(t.attributes),n.find("#toggle-window").addEventListener("click",e=>{n.find("#toggle-window").classList.toggle("fa-expand-alt"),n.find("#toggle-window").classList.toggle("fa-compress-alt"),n.find("#toggle-window").classList.contains("fa-expand-alt")?n.find("#pop-up-window").css({height:t.attributes.style.height,width:t.attributes.style.width}):n.find("#pop-up-window").css({height:"var(--fill-parent)",width:"var(--fill-parent)"})}),n.find("#close-window").addEventListener("click",e=>{n.remove()}),s.append(n),n}createSelect(e={value:"",contents:{},multiple:!1}){let t,s=[],r=!1,n=-1,i=this.createElement({element:"div",attributes:e.attributes,children:[{element:"span",attributes:{class:"kerdx-select-control"},children:[{element:"input",attributes:{class:"kerdx-select-input",value:e.value||"",ignore:!0}},{element:"span",attributes:{class:"kerdx-select-toggle"}}]},{element:"input",attributes:{class:"kerdx-select-search",placeHolder:"Search me...",ignore:!0}},{element:"span",attributes:{class:"kerdx-select-contents"}}]});i.classList.add("kerdx-select");let a=i.getAttribute("value");i.value=[],this.isnull(a)||(i.value=this.array.findAll(a.split(","),e=>""!=e.trim())),i.dataset.active="false";let l=i.find(".kerdx-select-contents"),o=i.find(".kerdx-select-input"),d=i.find(".kerdx-select-search"),c=i.find(".kerdx-select-toggle");if(e.contents=e.contents||{},Array.isArray(e.contents)){let t=e.contents;e.contents={};for(let s=0;s<t.length;s++)e.contents[t[s]]=t[s]}for(let v in e.contents){let t=l.makeElement({element:"span",attributes:{class:"kerdx-select-option",value:v}});t.innerHTML=e.contents[v],t.value=v}for(let v of i.value)o.value+=e.contents[v],o.dispatchEvent(new CustomEvent("change"));let u=!this.isset(e.multiple)||0==e.multiple,f=i.findAll(".kerdx-select-option");d.onChanged(e=>{for(let t=0;t<f.length;t++)f[t].textContent.toLowerCase().includes(e.toLowerCase())?f[t].cssRemove(["display"]):f[t].css({display:"none"})});let h,p,m=e=>{r=!1,"ArrowDown"==e.key&&n<f.length-1?(n++,r=!0):"ArrowUp"==e.key&&n>0?(n--,r=!0):e.key,r&&(t=l.find(".kerdx-select-active-option"),this.isnull(t)||t.classList.remove("kerdx-select-active-option"),f[n].classList.add("kerdx-select-active-option"))};c.addEventListener("click",e=>{let t="true"==i.dataset.active;t?y(t):b(t)}),document.body.css({overflow:"auto"});let g=()=>{h=i.position().top,p=document.body.clientHeight-i.position().top,h>p?l.css({top:-l.position().height+"px"}):l.css({top:i.position().height+"px"})},b=()=>{i.inView("body")&&(o.addEventListener("keydown",m,!1),d.css({display:"flex"}),l.css({display:"flex"}),g(),i.dataset.active="true")},y=()=>{o.removeEventListener("keydown",m,!1),d.cssRemove(["display"]),l.cssRemove(["display"]),i.dataset.active="false"};return i.bubbledEvent("click",t=>{if(t.target!=c&&"false"==i.dataset.active&&b(),t.target.classList.contains("kerdx-select-option")){let s=e.contents[t.target.value];"single"==e.multiple&&o.value.includes(s)?o.value=o.value.replace(s,""):o.value+=", "+s,o.dispatchEvent(new CustomEvent("change")),u&&y()}}),i.notBubbledEvent("click",e=>{"true"==i.dataset.active&&y()}),o.addEventListener("change",t=>{let r=o.value.split(",");r=this.array.findAll(r,e=>""!=e.trim()),r=this.array.each(r,e=>e.trim()),u||"single"==e.multiple&&(r=this.array.toSet(r)),(t=>{s=[],t=t.split(",");for(let r of t){r=r.trim();for(let t in e.contents)e.contents[t]==r&&(r=t);s.push(r)}i.value=s,o.value=t})(r=r.join(", "))}),window.addEventListener("scroll",e=>{i.inView("body")&&g()}),i}choose(e={note:"",options:[]}){let t=this.createElement({element:"span",attributes:{class:"crater-choose"},children:[{element:"p",attributes:{class:"crater-choose-note"},text:e.note},{element:"span",attributes:{class:"crater-choose-control"}},{element:"button",attributes:{id:"crater-choose-close",class:"btn"},text:"Close"}]}),s=t.querySelector(".crater-choose-control");t.querySelector("#crater-choose-close").addEventListener("click",e=>{t.remove()});for(let r of e.options)s.makeElement({element:"button",attributes:{class:"btn choose-option"},text:r});return{display:t,choice:new Promise((e,r)=>{s.addEventListener("click",s=>{s.target.classList.contains("choose-option")&&(e(s.target.textContent),t.remove())})})}}textEditor(e={id:"",width:"max-width"}){(e=e||{}).id=e.id||"text-editor";let t=this.createElement({element:"div",attributes:{id:e.id},children:[{element:"style",text:`\n\n                    div#crater-text-editor{\n                        margin: 0 auto;\n                        display: grid;\n                        width: ${e.width||"max-content"};\n                        height: max-content;\n                        border: 2px solid rgb(40, 110, 89);\n                        border-radius: 8px 8px 0px 0px;\n                        background-color: var(--primary-color);\n                    }\n                    \n                    div#crater-rich-text-area{\n                        height: 100%;\n                        width: 100%;\n                    }\n\n                    div#crater-the-ribbon{\n                        border-bottom: none;\n                        width: 100%;\n                        padding: .5em 0;\n                        display: grid;\n                        grid-template-rows: max-content max-content;\n                        background-color: rgb(40, 110, 89);\n                        color: var(--primary-color);\n                        text-align: left;\n                    }\n\n                    iframe#crater-the-WYSIWYG{\n                        height: 100%;\n                        width: 100%;\n                    }\n\n                    div#crater-the-ribbon button{\n                        color: var(--primary-color);\n                        border: none;\n                        outline: none;\n                        background-color: transparent;\n                        cursor: pointer;\n                        padding: .3em;\n                        margin: .5em;\n                    }\n\n                    div#crater-the-ribbon button:hover{\n                        background-color: rgb(20, 90, 70);\n                        transition: all 0.3s linear 0s;\n                    }\n\n                    div#crater-the-ribbon input,  div#crater-the-ribbon select{\n                        margin: .5em;\n                    }\n\n                    div#crater-the-ribbon input[type="color"]{\n                        border: none;\n                        outline: none;\n                        background-color: transparent;\n                    }\n                `},{element:"div",attributes:{id:"crater-the-ribbon"},children:[{element:"span",children:[{element:"button",attributes:{id:"undoButton",title:"Undo"},text:"&larr;"},{element:"button",attributes:{id:"redoButton",title:"Redo"},text:"&rarr;"},{element:"select",attributes:{id:"fontChanger"},options:this.fontStyles},{element:"select",attributes:{id:"fontSizeChanger"},options:this.range(1,20)},{element:"button",attributes:{id:"orderedListButton",title:"Numbered List"},text:"(i)"},{element:"button",attributes:{id:"unorderedListButton",title:"Bulletted List"},text:"&bull;"},{element:"button",attributes:{id:"linkButton",title:"Create Link"},text:"Link"},{element:"button",attributes:{id:"unLinkButton",title:"Remove Link"},text:"Unlink"}]},{element:"span",children:[{element:"button",attributes:{id:"boldButton",title:"Bold"},children:[{element:"b",text:"B"}]},{element:"button",attributes:{id:"italicButton",title:"Italic"},children:[{element:"em",text:"I"}]},{element:"button",attributes:{id:"underlineButton",title:"Underline"},children:[{element:"u",text:"U"}]},{element:"button",attributes:{id:"supButton",title:"Superscript"},children:[{element:"sup",text:"2"}]},{element:"button",attributes:{id:"subButton",title:"Subscript"},children:[{element:"sub",text:"2"}]},{element:"button",attributes:{id:"strikeButton",title:"Strikethrough"},children:[{element:"s",text:"abc"}]},{element:"input",attributes:{type:"color",id:"fontColorButton",title:"Change Font Color",value:"#000000"}},{element:"input",attributes:{type:"color",id:"highlightButton",title:"Hightlight Text",value:"#ffffff"}},{element:"input",attributes:{type:"color",id:"backgroundButton",title:"Change Background",value:"#ffffff"}},{element:"button",attributes:{id:"alignLeftButton",title:"Align Left"},children:[{element:"a",text:"L"}]},{element:"button",attributes:{id:"alignCenterButton",title:"Align Center"},children:[{element:"a",text:"C"}]},{element:"button",attributes:{id:"alignJustifyButton",title:"Align Justify"},children:[{element:"a",text:"J"}]},{element:"button",attributes:{id:"alignRightButton",title:"Align Right"},children:[{element:"a",text:"R"}]}]}]},{element:"div",attributes:{id:"crater-rich-text-area"},children:[{element:"iframe",attributes:{id:"crater-the-WYSIWYG",frameBorder:0,name:"theWYSIWYG"}}]}]});t.findAll("select#font-changer > option").forEach(e=>{e.css({fontFamily:e.value})}),t.find("#unorderedListButton").innerHTML="&bull;",t.find("#redoButton").innerHTML="&rarr;",t.find("#undoButton").innerHTML="&larr;";let s=this,r=t.find("#crater-the-WYSIWYG");return r.onAdded(()=>{let n=r.contentWindow.document;n.body.innerHTML="",s.isset(e.content)&&(n.body.innerHTML=e.content.innerHTML),n.designMode="on",t.find("#boldButton").addEventListener("click",()=>{n.execCommand("Bold",!1,null)},!1),t.find("#italicButton").addEventListener("click",()=>{n.execCommand("Italic",!1,null)},!1),t.find("#underlineButton").addEventListener("click",()=>{n.execCommand("Underline",!1,null)},!1),t.find("#supButton").addEventListener("click",()=>{n.execCommand("Superscript",!1,null)},!1),t.find("#subButton").addEventListener("click",()=>{n.execCommand("Subscript",!1,null)},!1),t.find("#strikeButton").addEventListener("click",()=>{n.execCommand("Strikethrough",!1,null)},!1),t.find("#orderedListButton").addEventListener("click",()=>{n.execCommand("InsertOrderedList",!1,"newOL"+s.random())},!1),t.find("#unorderedListButton").addEventListener("click",()=>{n.execCommand("InsertUnorderedList",!1,"newUL"+s.random())},!1),t.find("#fontColorButton").onChanged(e=>{n.execCommand("ForeColor",!1,e)}),t.find("#highlightButton").onChanged(e=>{n.execCommand("BackColor",!1,e)}),t.find("#backgroundButton").onChanged(e=>{n.body.style.background=e}),t.find("#fontChanger").onChanged(e=>{n.execCommand("FontName",!1,e)}),t.find("#fontSizeChanger").onChanged(e=>{n.execCommand("FontSize",!1,e)}),t.find("#linkButton").addEventListener("click",()=>{let e=prompt("Enter a URL","http://");s.isnull(e)||n.execCommand("CreateLink",!1,e)},!1),t.find("#unLinkButton").addEventListener("click",()=>{n.execCommand("UnLink",!1,null)},!1),t.find("#undoButton").addEventListener("click",()=>{n.execCommand("Undo",!1,null)},!1),t.find("#redoButton").addEventListener("click",()=>{n.execCommand("redo",!1,null)},!1),t.find("#alignLeftButton").addEventListener("click",()=>{n.execCommand("justifyLeft",!1,null)}),t.find("#alignCenterButton").addEventListener("click",()=>{n.execCommand("justifyCenter",!1,null)}),t.find("#alignJustifyButton").addEventListener("click",()=>{n.execCommand("justifyFull",!1,null)}),t.find("#alignRightButton").addEventListener("click",()=>{n.execCommand("justifyRight",!1,null)})},!1),t}displayData(e={},t){let s=[],r=e=>this.createElement({element:"span",attributes:{class:"kerdx-data-str"},text:`"${e}"`}),n=e=>this.createElement({element:"span",attributes:{class:"kerdx-data-lit"},text:""+e}),i=e=>this.createElement({element:"span",attributes:{class:"kerdx-data-pun"},text:""+e}),a=(e,t)=>{t=t||{};let n=this.createElement({element:"span",attributes:{class:"kerdx-data-item"}});return s.push(n),this.isset(t.key)?n.makeElement([r(t.key),i(" : "),d(e)]):n.makeElement([d(e)]),n},l=e=>{let t,r=this.createElement({element:"span",attributes:{class:"kerdx-data-block"}});s.push(r),r.makeElement(i("["));for(let s=0;s<e.length;s++)t=r.makeElement(a(e[s])),s!=e.length-1&&t.makeElement(i(","));return r.makeElement(i("]")),r},o=e=>{let t,r=this.createElement({element:"span",attributes:{class:"kerdx-data-block"}});s.push(r),r.makeElement(i("{"));let n=0;for(let s in e)t=r.makeElement(a(e[s],{key:s})),n!=Object.keys(e).length-1&&t.makeElement(i(",")),n++;return r.makeElement(i("}")),r},d=e=>"string"==typeof e?r(e):Array.isArray(e)?l(e):"object"==typeof e?o(e):n(e),c=this.createElement({element:"pre",attributes:{class:"kerdx-data-window"},children:[{element:"span",attributes:{class:"kerdx-data-line",style:{lineHeight:"25px"}}},{element:"span",attributes:{class:"kerdx-data-toggles"}},{element:"code",attributes:{class:"kerdx-data-code",style:{lineHeight:"25px"}},children:[d(e)]}]});this.isset(t)&&t.append(c);let u,f,h=c.find(".kerdx-data-code"),p=(h.position().height,c.find(".kerdx-data-line")),m=c.find(".kerdx-data-toggles"),g=(parseInt("25px"),h.findAll(".kerdx-data-item"),h.findAll(".kerdx-data-block")),b=e=>{let t=Math.floor((e.position().top-h.position().top)/parseInt("25px"))+1,s=Math.floor((e.position().bottom-h.position().top)/parseInt("25px"))+1;e.range=this.range(s,t)},y=e=>{for(let t=0;t<e.range.length;t++)this.isset(u[e.range[t]].controller)||(u[e.range[t]].css({display:"none"}),u[e.range[t]].controller=e)},v=e=>{let t=e.children;for(let s=0;s<t.length;s++)t[s].classList.contains("kerdx-data-item")&&(t[s].css({display:"none"}),t[s].findAll(".kerdx-data-block").forEach(t=>{this.isset(t.toggle.controller)||(t.toggle.controller=e,t.toggle.css({display:"none"}))}))};return s.push(void 0),c.onAdded(e=>{(()=>{for(let e=0;e<s.length;e++)p.makeElement([{element:"a",html:""+(e/1+1),attributes:{class:"kerdx-data-line-number"}}])})(),(()=>{for(let e=0;e<g.length;e++){let t=g[e].position().top-h.position().top+6+"px",s=m.makeElement({element:"i",attributes:{class:"kerdx-data-toggles-button fas fa-arrow-down",style:{top:t}}});s.block=g[e],g[e].toggle=s}})(),u=p.findAll(".kerdx-data-line-number"),f=m.findAll(".kerdx-data-toggles-button"),c.addEventListener("click",e=>{let t=e.target;t.classList.contains("kerdx-data-toggles-button")&&(this.isset(t.block.range)||b(t.block),t.classList.contains("fa-arrow-down")?(y(t.block),v(t.block)):((e=>{for(let t=0;t<e.range.length;t++)u[e.range[t]].controller==e&&(u[e.range[t]].cssRemove(["display"]),delete u[e.range[t]].controller)})(t.block),(e=>{let t=e.children;for(let s=0;s<t.length;s++)t[s].classList.contains("kerdx-data-item")&&(t[s].cssRemove(["display"]),t[s].findAll(".kerdx-data-block").forEach(t=>{t.toggle.controller==e&&(delete t.toggle.controller,t.toggle.cssRemove(["display"]))}))})(t.block)),t.classList.toggle("fa-arrow-up"),t.classList.toggle("fa-arrow-down"),(()=>{for(let e=0;e<f.length;e++)f[e].css({top:f[e].block.position().top-h.position().top+6+"px"})})())})}),c}},f=function(){let t={};return t.func=new e,t.elementModifier=new c,t.elementModifier.elementLibrary(),t.colorIndicatorPosition={x:0,y:0},t.opacityIndicatorPosition={x:0,y:0},t.convertTo="RGB",t.init=e=>(t.picker=t.elementModifier.createElement({element:"div",attributes:{class:"color-picker"},children:[{element:"span",attributes:{id:"color-picker-setters"},children:[{element:"span",attributes:{id:"color-picker-colors-window"},children:[{element:"canvas",attributes:{id:"color-picker-colors"}},{element:"span",attributes:{id:"color-picker-color-indicator"}}]},{element:"span",attributes:{id:"color-picker-opacities-window"},children:[{element:"canvas",attributes:{id:"color-picker-opacities"}},{element:"span",attributes:{id:"color-picker-opacity-indicator"}}]}]},{element:"div",attributes:{id:"color-picker-result"},children:[{element:"span",attributes:{id:"picked-color"}},{element:"span",attributes:{id:"picked-color-window"},children:[{element:"select",attributes:{id:"picked-color-setter"},options:["RGB","HEX","HSL"]},{element:"span",attributes:{id:"picked-color-value"}}]}]}]}),t.colorWindow=t.picker.find("#color-picker-colors-window"),t.opacityWindow=t.picker.find("#color-picker-opacities-window"),t.colorCanvas=t.picker.find("#color-picker-colors"),t.opacityCanvas=t.picker.find("#color-picker-opacities"),t.colorMarker=t.picker.find("#color-picker-color-indicator"),t.opacityMarker=t.picker.find("#color-picker-opacity-indicator"),t.width=e.width,t.height=e.height,t.pickedColor=e.color||"rgb(0, 0, 0)",t.colorWindow.css({height:t.height+"px"}),t.colorCanvas.width=t.width,t.colorCanvas.height=t.height,t.opacityWindow.css({height:t.height+"px"}),t.opacityCanvas.height=t.height,t.opacityCanvas.width=20,t.colorContext=t.colorCanvas.getContext("2d"),t.opacityContext=t.opacityCanvas.getContext("2d"),t.picker.find("#picked-color-value").innerText=t.pickedColor,t.picker.find("#picked-color-setter").onChanged(e=>{t.convertTo=e,t.reply()}),t.listen(),t.picker),t.calibrateColor=()=>{let e=t.colorContext.createLinearGradient(0,0,t.width,0);e.addColorStop(0,"rgb(255, 0, 0)"),e.addColorStop(.15,"rgb(255, 0, 255)"),e.addColorStop(.33,"rgb(0, 0, 255)"),e.addColorStop(.49,"rgb(0, 255, 255)"),e.addColorStop(.67,"rgb(0, 255, 0)"),e.addColorStop(.87,"rgb(255, 255, 0)"),e.addColorStop(1,"rgb(255, 0, 0)"),t.colorContext.fillStyle=e,t.colorContext.fillRect(0,0,t.width,t.height),(e=t.colorContext.createLinearGradient(0,0,0,t.height)).addColorStop(0,"rgba(255, 255, 255, 1)"),e.addColorStop(.5,"rgba(255, 255, 255, 0)"),e.addColorStop(.5,"rgba(0, 0, 0, 0)"),e.addColorStop(1,"rgba(0, 0, 0, 1)"),t.colorContext.fillStyle=e,t.colorContext.fillRect(0,0,t.width,t.height)},t.calibrateOpacity=()=>{let e;t.opacityContext.clearRect(0,0,t.opacityCanvas.width,t.height);let s=t.opacityContext.createLinearGradient(0,0,0,t.opacityCanvas.height);for(let r=100;r>=0;r--)e=t.addOpacity(t.pickedColor,r/100),s.addColorStop(r/100,e);t.opacityContext.fillStyle=s,t.opacityContext.clearRect(0,0,t.opacityCanvas.width,t.opacityCanvas.height),t.opacityContext.fillRect(0,0,t.opacityCanvas.width,t.opacityCanvas.height)},t.listen=()=>{let e=!1,s=!1;t.picker.notBubbledEvent("click",r=>{!t.added||e||s||t.dispose()}),t.colorCanvas.addEventListener("mousedown",s=>{let r=s.clientX-t.colorCanvas.getBoundingClientRect().left,n=s.clientY-t.colorCanvas.getBoundingClientRect().top;e=r>0&&r<t.colorCanvas.getBoundingClientRect().width&&n>0&&n<t.colorCanvas.getBoundingClientRect().height}),t.colorCanvas.addEventListener("mousemove",s=>{if(e){t.colorIndicatorPosition.x=s.clientX-t.colorCanvas.getBoundingClientRect().left,t.colorIndicatorPosition.y=s.clientY-t.colorCanvas.getBoundingClientRect().top,t.colorMarker.css({top:t.colorIndicatorPosition.y+"px",left:t.colorIndicatorPosition.x+"px"});let e=t.getPickedColor();t.pickedColor=`rgb(${e.r}, ${e.g}, ${e.b})`,t.reply()}}),t.colorCanvas.addEventListener("mouseup",s=>{e=!1,t.calibrateOpacity()}),t.opacityCanvas.addEventListener("mousedown",e=>{let r=e.clientX-t.opacityCanvas.getBoundingClientRect().left,n=e.clientY-t.opacityCanvas.getBoundingClientRect().top;s=r>0&&r<t.opacityCanvas.getBoundingClientRect().width&&n>0&&n<t.opacityCanvas.getBoundingClientRect().height}),t.opacityCanvas.addEventListener("mousemove",e=>{if(s){t.opacityIndicatorPosition.x=e.clientX-t.opacityCanvas.getBoundingClientRect().left,t.opacityIndicatorPosition.y=e.clientY-t.opacityCanvas.getBoundingClientRect().top,t.opacityMarker.css({top:t.opacityIndicatorPosition.y+"px"});let s=t.getPickedOpacity();t.pickedColor=`rgb(${s.r}, ${s.g}, ${s.b}, ${s.a})`,t.reply()}}),t.opacityCanvas.addEventListener("mouseup",e=>{s=!1})},t.reply=()=>{t.converColor(),t.picker.dispatchEvent(new CustomEvent("colorChanged")),t.picker.find("#picked-color").css({backgroundColor:t.convertedColor}),t.picker.find("#picked-color-value").innerText=t.convertedColor},t.converColor=()=>{"HEX"==t.convertTo?t.convertedColor=t.rgbToHex(t.pickedColor):"HSL"==t.convertTo?t.convertedColor=t.rgbToHSL(t.pickedColor):"RGB"==t.convertTo&&(t.convertedColor=t.pickedColor)},t.onChanged=e=>{t.picker.addEventListener("colorChanged",s=>{e(t.convertedColor)})},t.getPickedColor=()=>{let e=t.colorContext.getImageData(t.colorIndicatorPosition.x,t.colorIndicatorPosition.y,1,1);return{r:e.data[0],g:e.data[1],b:e.data[2]}},t.getPickedOpacity=()=>{let e=t.opacityContext.getImageData(t.opacityIndicatorPosition.x,t.opacityIndicatorPosition.y,1,1),s=Math.ceil(e.data[3]/255*100)/100;return{r:e.data[0],g:e.data[1],b:e.data[2],a:s}},t.draw=e=>{t.init(e),t.calibrateColor(),t.calibrateOpacity();let s=setTimeout(()=>{t.added=!0,clearTimeout(s)},2e3);return t.picker},t.dispose=()=>{clearInterval(t.interval),t.picker.remove()},t.colorType=(e="#ffffff")=>{let s="string";if(0==e.indexOf("#")&&(e.length-1)%3==0)s="hex";else if(0==e.indexOf("rgba")){let r=t.func.inBetween(e,"rgba(",")");-1!=r&&4==r.split(",").length&&(s="rgba")}else if(0==e.indexOf("rgb")){let r=t.func.inBetween(e,"rgb(",")");-1!=r&&3==r.split(",").length&&(s="rgb")}else if(0==e.indexOf("hsla")){let r=t.func.inBetween(e,"hsla(",")");-1!=r&&4==r.split(",").length&&(s="hsla")}else if(0==e.indexOf("hsl")){let r=t.func.inBetween(e,"hsl(",")");-1!=r&&3==r.split(",").length&&(s="hsl")}return s},t.hexToRGB=(e="#ffffff",t=!0)=>{let s=0,r=0,n=0,i=255;return 4==e.length?(s="0x"+e[1]+e[1],r="0x"+e[2]+e[2],n="0x"+e[3]+e[3]):5==e.length?(s="0x"+e[1]+e[1],r="0x"+e[2]+e[2],n="0x"+e[3]+e[3],i="0x"+e[4]+e[4]):7==e.length?(s="0x"+e[1]+e[2],r="0x"+e[3]+e[4],n="0x"+e[5]+e[6]):9==e.length&&(s="0x"+e[1]+e[2],r="0x"+e[3]+e[4],n="0x"+e[5]+e[6],i="0x"+e[7]+e[8]),i=+(i/255).toFixed(3),0==t?`rgb(${+s}, ${+r}, ${+n})`:`rgb(${+s}, ${+r}, ${+n}, ${i})`},t.hexToHSL=(e="#ffffff",s=!0)=>{let r=t.hexToRGB(e,s);return t.rgbToHSL(r,s)},t.rgbToHex=(e="rgb(0, 0, 0)",s=!0)=>{let r=e.indexOf("(")+1,n=e.indexOf(")"),[i,a,l,o]=e.slice(r,n).split(",");return t.func.isset(o)||(o=1),i=(+i).toString(16),a=(+a).toString(16),l=(+l).toString(16),o=Math.round(255*o).toString(16),1==i.length&&(i="0"+i),1==a.length&&(a="0"+a),1==l.length&&(l="0"+l),1==o.length&&(o="0"+o),"#"+(0!=s?`${i}${a}${l}${o}`:`${i}${a}${l}`)},t.rgbToHSL=(e="rgb(0, 0, 0)",s=!0)=>{let r=e.indexOf("(")+1,n=e.indexOf(")"),[i,a,l,o]=e.slice(r,n).split(",");console.log(i,a,l),t.func.isset(o)||(o=1),i/=225,a/=225,l/=225;let d=Math.min(i,a,l),c=Math.max(i,a,l),u=c-d,f=0,h=0,p=0;return 0==u?f=0:c==i?f=(a-l)/u%6:c==a?f=(l-i)/u+2:c==a&&(f=(i-a)/u+4),(f=Math.round(60*f))<0&&(f+=360),p=(c+d)/2,h=0==u?0:u/(1-Math.abs(2*p-1)),p=+(100*p).toFixed(1),h=+(100*h).toFixed(1),"hsl"+(0==s?`(${f}, ${h}%, ${p}%)`:`(${f}, ${h}%, ${p}%, ${o})`)},t.hslToRGB=(e="hsl(0, 0%, 0%)",s=!0)=>{let r="rgb",n=e.indexOf("(")+1,i=e.indexOf(")"),[a,l,o,d]=e.slice(n,i).split(",");t.func.isset(d)||(d=1),console.log(a,l,o),a.indexOf("deg")>-1?a=a.substr(0,a.length-3):a.indexOf("rad")>-1?a=Math.round(a.substr(0,a.length-3)*(180/Math.PI)):a.indexOf("turn")>-1&&(a=Math.round(360*a.substr(0,a.length-4))),a>=360&&(a%=360),l=l.replace("%","")/100,o=o.replace("%","")/100;let c=(1-Math.abs(2*o-1))*l,u=c*(1-Math.abs(a/60%2-1)),f=o-c/2,h=0,p=0,m=0;return 0<=a&&a<60?(h=c,p=u,m=0):60<=a&&a<120?(h=u,p=c,m=0):120<=a&&a<180?(h=0,p=c,m=u):180<=a&&a<240?(h=0,p=u,m=c):240<=a&&a<300?(h=u,p=0,m=c):300<=a&&a<360&&(h=c,p=0,m=u),h=Math.round(255*(h+f)),p=Math.round(255*(p+f)),m=Math.round(255*(m+f)),r+(0==s?`(${h}, ${p}, ${m})`:`(${h}, ${p}, ${m}, ${d})`)},t.hslToHex=(e="",s=!0)=>{let r=t.hslToRGB(e,s);return t.rgbToHex(r,s)},t.addOpacity=(e="rgb(0, 0, 0)",t=.5)=>{let s=e.indexOf("(")+1,r=e.indexOf(")"),n=e.slice(s,r).split(",");return n[3]=t,`rgba(${n.join(",")})`},t.getOpacity=(e="rgb(0, 0, 0)")=>{e=t.func.inBetween(e,"(",")");let[s,r,n,i]=e.split(",");return i.trim()},t.invertColor=(e="#ffffff")=>{let s,r=t.colorType(e);if("hex"==r)e=e.replace("#",""),s="#"+t.invertHex(e);else if("rgb"==r)e=t.rgbToHex(e).replace("#",""),s=t.invertHex(e),s=t.hexToRGB(s);else if("rgba"==r){let r=t.getOpacity(e);e=t.rgbToHex(e).replace("#",""),s=t.invertHex(e),s=t.hexToRGB(s),s=t.addOpacity(s,r)}return s},t.invertHex=(e="ffffff")=>(16777215^Number("0x1"+e)).toString(16).substr(1).toUpperCase(),t};var h={"address-book":"fas, fa-address-book",amazon:"fas, fa-amazon",ambulance:"fas, fa-ambulance",android:"fas, fa-android",apple:"fas, fa-apple",asterisk:"fas, fa-asterisk",at:"fas, fa-at",backward:"fas, fa-backward",bank:"fas, fa-bank",battery:"fas, fa-battery",bed:"fas, fa-bed",bell:"fas, fa-bell",bicycle:"fas, fa-bicycle","birthday-cake":"fas, fa-birthday-cake",bitbucket:"fas, fa-bitbucket",bitcoin:"fas, fa-bitcoin",bluetooth:"fas, fa-bluetooth",bolt:"fas, fa-bolt",book:"fas, fa-book",bus:"fas, fa-bus",cab:"fas, fa-cab",calculator:"fas, fa-calculator",camera:"fas, fa-camera",car:"fas, fa-car",certificate:"fas, fa-certificate",child:"fas, fa-child",chrome:"fas, fa-chrome",cloud:"fas, fa-cloud",coffee:"fas, fa-coffee",comment:"fas, fa-comment",compass:"fas, fa-compass",copy:"fas, fa-copy",copyright:"fas, fa-copyright",clone:"fas, fa-clone","credit-card":"fas, fa-credit-card",cube:"fas, fa-cube",desktop:"fas, fa-desktop",diamond:"fas, fa-diamond",download:"fas, fa-download","drivers-license":"fas, fa-drivers-license",dropbox:"fas, fa-dropbox",drupal:"fas, fa-drupal",edge:"fas, fa-edge",edit:"fas, fa-edit",eject:"fas, fa-eject","ellipsis-h":"fas, fa-ellipsis-h",envelope:"fas, fa-envelope",eraser:"fas, fa-eraser",exchange:"fas, fa-exchange",exclamation:"fas, fa-exclamation",expand:"fas, fa-expand",eye:"fas, fa-eye","eye-slash":"fas, fa-eye-slash",fax:"fas, fa-fax",female:"fas, fa-female",file:"fas, fa-file",film:"fas, fa-film",fire:"fas, fa-fire",flag:"fas, fa-flag",flickr:"fas, fa-flickr",folder:"fas, fa-folder",forward:"fas, fa-forward",foursquare:"fas, fa-foursquare",gift:"fas, fa-gift",glass:"fas, fa-glass",globe:"fas, fa-globe",google:"fas, fa-google","graduation-cap":"fas, fa-graduation-cap",group:"fas, fa-group",hashtag:"fas, fa-hashtag",headphones:"fas, fa-headphones",heart:"fas, fa-heart",history:"fas, fa-history",home:"fas, fa-home",hotel:"fas, fa-hotel",hourglass:"fas, fa-hourglass",image:"fas, fa-image",imdb:"fas, fa-imdb",inbox:"fas, fa-inbox",industry:"fas, fa-industry",info:"fas, fa-info",instagram:"fas, fa-instagram",key:"fas, fa-key",language:"fas, fa-language",laptop:"fas, fa-laptop",leaf:"fas, fa-leaf",legal:"fas, fa-legal","life-bouy":"fas, fa-life-bouy",linkedin:"fas, fa-linkedin",linux:"fas, fa-linux",lock:"fas, fa-lock",magic:"fas, fa-magic",magnet:"fas, fa-magnet",male:"fas, fa-male",map:"fas, fa-map",microphone:"fas, fa-microphone",mobile:"fas, fa-mobile",money:"fas, fa-money",motorcycle:"fas, fa-motorcycle",music:"fas, fa-music",opera:"fas, fa-opera","paint-brush":"fas, fa-paint-brush","paper-plane":"fas, fa-paper-plane",pause:"fas, fa-pause",paw:"fas, fa-paw",paypal:"fas, fa-paypal",pen:"fas, fa-pen",pencil:"fas, fa-pencil",phone:"fas, fa-phone",photo:"fas, fa-photo",pinterest:"fas, fa-pinterest",plane:"fas, fa-plane",play:"fas, fa-play",plug:"fas, fa-plug",plus:"fas, fa-plus",podcast:"fas, fa-podcast",question:"fas, fa-question",quora:"fas, fa-quora",recycle:"fas, fa-recycle",reddit:"fas, fa-reddit",redo:"fas, fa-redo",refresh:"fas, fa-refresh",reply:"fas, fa-reply",resistance:"fas, fa-resistance",retweet:"fas, fa-retweet",road:"fas, fa-road",rocket:"fas, fa-rocket",rss:"fas, fa-rss",safari:"fas, fa-safari",scribe:"fas, fa-scribe",search:"fas, fa-search",send:"fas, fa-send",server:"fas, fa-server",ship:"fas, fa-ship","sign-in":"fas, fa-sign-in",sitemap:"fas, fa-sitemap",skyatlas:"fas, fa-skyatlas",skype:"fas, fa-skype",slideshare:"fas, fa-slideshare",snapchat:"fas, fa-snapchat",sort:"fas, fa-sort",soundcloud:"fas, fa-soundcloud",spoon:"fas, fa-spoon",spotify:"fas, fa-spotify",square:"fas, fa-square","stack-exchange":"fas, fa-stack-exchange",star:"fas, fa-star",steam:"fas, fa-steam","sticky-note":"fas, fa-sticky-note",stop:"fas, fa-stop","street-view":"fas, fa-street-view",subway:"fas, fa-subway",suitcase:"fas, fa-suitcase",support:"fas, fa-support",tasks:"fas, fa-tasks",taxi:"fas, fa-taxi",telegram:"fas, fa-telegram",television:"fas, fa-television",terminal:"fas, fa-terminal",thermometer:"fas, fa-thermometer",ticket:"fas, fa-ticket",times:"fas, fa-times",train:"fas, fa-train",trash:"fas, fa-trash",tree:"fas, fa-tree",trophy:"fas, fa-trophy",truck:"fas, fa-truck",tumblr:"fas, fa-tumblr",tv:"fas, fa-tv",twitter:"fas, fa-twitter",umbrella:"fas, fa-umbrella",university:"fas, fa-university",unlock:"fas, fa-unlock",upload:"fas, fa-upload",usb:"fas, fa-usb",user:"fas, fa-user","video-camera":"fas, fa-video-camera",vimeo:"fas, fa-vimeo",warning:"fas, fa-warning",wechat:"fas, fa-wechat",weibo:"fas, fa-weibo",whatsapp:"fas, fa-whatsapp",wheelchair:"fas, fa-wheelchair",wifi:"fas, fa-wifi","wikipedia-w":"fas, fa-wikipedia-w",wordpress:"fas, fa-wordpress",yelp:"fas, fa-yelp",yoast:"fas, fa-yoast",youtube:"fas, fa-youtube",undo:"fas, fa-undo"};new e;let p=n();var m=function(){let e={size:e=>{let t=0;if("string"==typeof e)t+=2*e.length;else if("number"==typeof e)t+=8;else if("boolean"==typeof e)t+=4;else if("object"==typeof e)for(let s in e)t+=roughObjectSize(e[s]);return t},extractFromJsonArray:(e,t)=>{let s=Object.keys(e),r=Object.values(e),n=[];if(null!=t)for(let i of t){let e={};for(let t in s)p.contains(Object.keys(i),r[t])&&(e[s[t]]=i[r[t]]);n.push(e)}return n},find:(e,t)=>{for(let s in e)if(1==t(e[s]))return e[s]},findAll:(e,t)=>{let s={};for(let r in e)1==t(e[r])&&(s[r]=e[r]);return s}};return e.makeIterable=e=>(e[Symbol.iterator]=function*(){let t=Object.keys(e);for(let e of t)yield this[e]},e),e.max=t=>(t=e.sort(t,{value:!0}),e.getIndex(t)),e.min=t=>(t=e.sort(t,{value:!1}),e.getIndex(t)),e.onChanged=(e,t)=>{const s={get(e,t,r){try{return new Proxy(e[t],s)}catch(n){return Reflect.get(e,t,r)}},defineProperty:(e,s,r)=>(t(e,s),Reflect.defineProperty(e,s,r)),deleteProperty:(e,s)=>(t(e,s),Reflect.deleteProperty(e,s))};return new Proxy(e,s)},e.toArray=(e,t)=>{var s=[];return Object.keys(e).map(r=>{1==t?s[r]=e[r]:s.push(e[r])}),s},e.valueOfObjectArray=(e,t)=>{var s=[];for(let r in e)s.push(e[r][t]);return s},e.keysOfObjectArray=(e=[])=>{var t=[];for(let s in e)t=t.concat(Object.keys(e[s]));return p.toSet(t)},e.objectOfObjectArray=(e=[],t,s)=>{var r={};for(let n in e)r[e[n][t]]=e[n][s];return r},e.copy=(e,t)=>{Object.keys(e).map(s=>{t[s]=e[s]})},e.forEach=(e,t)=>{for(let s in e)t(e[s],s)},e.each=function(e,t){let s={};for(let r in e)s[r]=t(e[r],r);return s},e.isSubObject=(e,t)=>{let s;for(let r in t)if(!(s=JSON.stringify(t[r])==JSON.stringify(e[r])))break;return s},e.getSubObject=(t=[],s={})=>{let r=[],n=!0;for(let i in t)(n=e.isSubObject(t[i],s))&&r.push(t[i]);return r},e.sort=(e={},t={items:[],descend:!1,key:!1,value:!1})=>{t.item=t.item||"",t.descend=t.descend||!1;let s=[],r={};for(let[n,i]of Object.entries(e))s.push({key:n,value:i});null!=t.key&&(console.log("Hello"),s.sort((e,s)=>{let r=e.key>=s.key;return 1==t.key&&(r=!r),r})),null!=t.value&&s.sort((e,s)=>{let r=e.value>=s.value;return 1==t.value&&(r=!r),r}),null!=t.items&&s.sort((e,s)=>{let r=0,n=0;for(let a of t.items)e.value[a]>=s.value[a]?r++:n++;let i=r>=n;return 1==t.descend&&(i=!i),i});for(let{key:n,value:i}of s)r[n]=i;return r},e.reverse=(e={})=>{let t=Object.keys(e).reverse(),s={};for(let r of t)s[r]=e[r];return s},e.getIndex=(e={})=>{let t=Object.keys(e).shift();return{key:t,value:e[t]}},e.getLast=(e={})=>{let t=Object.keys(e).pop();return{key:t,value:e[t]}},e.getAt=(e={},t)=>{let s=Object.keys(e)[t];return{key:s,value:e[s]}},e.keyOf=(e={},t)=>{for(let s in e)if(JSON.stringify(e[s])==JSON.stringify(t))return s;return-1},e.lastKeyOf=(e={},t)=>{let s=-1;for(let r in e)JSON.stringify(e[r])==JSON.stringify(t)&&(s=r);return s},e.includes=(t={},s)=>-1!=e.keyOf(t,s),e};let g=n();var b=function(){let e={placeUnit:(e,t,s)=>{e=Math.floor(e).toString(),t=t||e[0],s=s||0;let r=-1;for(let n=0;n<e.length;n++)e[n]==t&&(0==s&&(r=n),s--);return-1!=r&&(r=10**(e.length-r-1)),r},round:e=>(e.dir=e.dir||"round",e.to=e.to||1,Math[e.dir](e.num/e.to)*e.to),variance:t=>{let s=e.mean(t),r=0;for(let e=0;e<t.length;e++)r+=(t[e]-s)**2;return r/t.length},standardDeviation:t=>{let s=e.variance(t);return Math.sqrt(s)},range:e=>{let t=Math.min(...e);return Math.max(...e)-t},mean:t=>e.sum(t)/t.length,median:e=>{let t=e.length;return t%2==0?(e[t/2-1]+e[t/2])/2:e[Math.floor(t/2)]},mode:e=>{let t={};for(let n=0;n<e.length;n++)null!=t[e[n]]?t[e[n]]++:t[e[n]]=n;let s,r=Math.max(...Object.value(t));for(let n in t)if(t[n]==r){s=n;break}return s},normalizeData:e=>{e.sort((e,t)=>e-t);for(var t=e[e.length-1],s=e[0],r=[],n=0;n<e.length;n++)r.push((e[n]-s)/(t-s));return r},minimuimSwaps:(e,t)=>{var s=0,r=[],n=0,i=[...e].sort((e,t)=>e-t);-1==t&&(i=i.reverse());for(var a=0;a<e.length;a++){var l=e[a];if(a!=l&&!r[a]){for(n=0,0==e[0]&&(l=a);!r[a];)r[a]=!0,l=e[a=i.indexOf(l)],n++;0!=n&&(s+=n-1)}}return s},primeFactorize:e=>{if("number"!=typeof e)return[];if(1==(e=Math.abs(parseInt(e)))||0==e)return[];for(var t,s=2,r=[];1!=e;)-1==(t=e/s).toString().indexOf(".")?(e=t,r.push(s)):s++;return r},lcf:t=>{if(!Array.isArray(t))return[];var s=[],r=[],n=1;for(var i of t){if("number"!=typeof i)return[];s.push(e.primeFactorize(i))}e:for(var a of s[0])if(-1==r.indexOf(a)){for(var l of s)if(-1==l.indexOf(a))continue e;r.push(a),n*=a}return n},stripInteger:e=>-1==(e=e.toString()).indexOf(".")?e:e.slice(0,e.indexOf(".")),stripFraction:e=>-1==(e=e.toString()).indexOf(".")?"0":e.slice(e.indexOf(".")+1),changeBase:(e,t,s)=>parseFloat(e,t).toString(s),max:e=>{var t=e[0];return g.each(e,e=>{t<e&&(t=e)}),t},min:e=>{var t=e[0];return g.each(e,e=>{t>e&&(t=e)}),t},sum:e=>{let t=0;for(let s=0;s<e.length;s++){if(isNaN(Math.floor(e[s]))){t=!1;break}t+=e[s]/1}return t},product:e=>{let t=1;for(let s=0;s<e.length;s++){if(isNaN(Math.floor(e[s]))){t=!1;break}t*=e[s]}return t},add:(...e)=>{let t=[];return e[0].forEach((s,r)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[r]:e;s+=1==isNaN(t)?0:t}}),t.push(s)}),t},sub:(...e)=>{let t=[];return e[0].forEach((s,r)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[r]:e;s-=1==isNaN(t)?0:t}}),t.push(s)}),t},mul:(...e)=>{let t=[];return e[0].forEach((s,r)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[r]:e;s*=1==isNaN(t)?0:t}}),t.push(s)}),t},divide:(...e)=>{let t=[];return e[0].forEach((s,r)=>{e.forEach((e,t)=>{if(0!=t){let t=Array.isArray(e)?e[r]:e;s/=1==isNaN(t)?0:t}}),t.push(s)}),t},abs:e=>g.each(e,e=>(e=1==isNaN(e)?0:e,Math.abs(e)))};return e};let y=b(),v=m();let x=b(),w=m(),k=n();var C={Base:class extends u{constructor(e=class{}){super(e),this.colorHandler=new f,this.array=n(),this.object=m(),this.math=b(),this.analytics=function(){let e={entropy:e=>{let t=0,s=Object.values(e),r=y.sum(s);for(let n of s)t-=n/r*Math.log2(n/r);return t},informationGain:(t,s)=>{let r=e=>{let t={};for(let s of e)t[s]=t[s]||0,t[s]++;return t},n=r(t),i=e.entropy(n),a=0,l=Object.values(s),o=0;for(let e=0;e<l.length;e++)o+=l[e].length,l[e]=r(l[e]);for(let d of l)a+=y.sum(Object.values(d))/o*e.entropy(d);return i-a},highestInformationGainNode:(t,s)=>{let r={};for(let n in s)r[n]=e.informationGain(t,s[n]);return v.max(r)},quartileRange:e=>{let t=e=>e.length%2==0?[Math.ceil(e.length/2)-1,Math.ceil(e.length/2)]:[Math.ceil(e.length/2)-1],s=e=>{let[s,r]=t(e),n=[];return n.push(e[s]),null!=r&&n.push(e[r]),n},r=e=>{let[s,r]=t(e);return null==r&&(r=s),[e.slice(0,s),e.slice(r+1)]},n=r(e),[i,a]=r(n[0]),[l,o]=r(n[1]),d=s(n[0]),c=s(n[1]),u=y.median(d);return y.median(c)-u},normalizeData:e=>{e.sort((e,t)=>e-t);for(var t=e[e.length-1],s=e[0],r=[],n=0;n<e.length;n++)r.push((e[n]-s)/(t-s));return r}};return e}(),this.icons=h,this.styles=["https://kade-95.github.io/kerdx/css/table.css","https://kade-95.github.io/kerdx/css/cell.css","https://kade-95.github.io/kerdx/css/form.css","https://kade-95.github.io/kerdx/css/picker.css","https://kade-95.github.io/kerdx/css/select.css","https://kade-95.github.io/kerdx/css/json.css","https://kade-95.github.io/kerdx/css/popup.css"];for(let t of this.styles)this.loadCss(t)}},ColorPicker:f,Matrix:r,Func:e,Components:u,Template:c,NeuralNetwork:class{constructor(e){i.object.copy(e,this),this.ihWeights=new r({rows:this.hNodes,cols:this.iNodes}),this.ihWeights.randomize(),this.ihBias=new r({rows:this.hNodes,cols:1}),this.ihBias.randomize(),this.hoWeights=new r({rows:this.oNodes,cols:this.hNodes}),this.hoWeights.randomize(),this.hoBias=new r({rows:this.oNodes,cols:1}),this.hoBias.randomize(),this.lr=this.lr||.1}feedFoward(e=[]){let t=e instanceof r?e:this.prepareInputs(e),s=r.multiply(this.ihWeights,t);s.add(this.ihBias),s.map(sigmoid);let n=r.multiply(this.hoWeights,s);return n.add(this.hoBias),n.map(sigmoid),{inputs:t,hiddens:s,outputs:n}}queryBack(e=[]){}predict(e=[]){return this.feedFoward(e).outputs}getWeightsUpdate(e=new r,t=new r,s=1){let n=r.map(t,dSigmoid);n.multiply(s),n.multiply(this.lr);let i=r.transpose(e);return{change:r.multiply(n,i),gradients:n}}backpropagate(e=[],t=new r){let{hiddens:s,outputs:n}=this.feedFoward(e),i=r.subtract(t,n),a=this.getWeightsUpdate(s,n,i);this.hoWeights.add(a.change),this.hoBias.add(a.gradients);let l=r.transpose(this.hoWeights),o=r.multiply(l,i),d=this.getWeightsUpdate(e,s,o);this.ihWeights.add(d.change),this.ihBias.add(d.gradients)}train(e={trainingData:[],period:1,epoch:1}){let t=[],s=[];for(let i of e.trainingData)t.push(i.inputs),s.push(i.targets);let r=a.each(t,e=>this.prepareInputs(e)),n=a.each(s,e=>this.prepareTargets(e)),l=()=>{for(let t=0;t<e.period;t++)for(let e in r)this.backpropagate(r[e],n[e])};if(i.isset(e.epoch))for(let i=0;i<e.epoch;i++)l();else l()}setLearningRate(e=.1){this.lr=e}prepareInputs(e=[]){let t=r.fromArray(Math.normalize(e));return t.multiply(.99),t.add(.01),t}prepareTargets(e=[]){let t=r.fromArray(e);return t.add(.01),t.multiply(.99),t}},ObjectsLibrary:m,Compression:function(){const e={getFrequency:(e=[])=>{const t={};for(let s in e)null==t[e[s]]?t[e[s]]=1:t[e[s]]++;return t},getProbabilities:(t=[])=>{let s=e.getFrequency(t);for(let e in s)s[e]=s[e]/t.length;return s},entropy:(t=[])=>{let s,r=0,n=k.dataType(t);"number"==n?s=t:"string"==n&&(s=Object.values(e.getProbabilities(t)));for(let e of s)r+=-e*Math.log2(e);return r},isUDC:(e=[])=>{let t,s=!0,r=!0,n=t=>{if(e.includes(t))return s=!1,void(r=!1);e.push(t)},i=i=>{t=!0;for(let t=0;t<e.length&&(t==i||(e[t]==e[i]?(s=!1,r=!1):0==e[t].indexOf(e[i])&&n(e[t].replace(e[i],"")),r));t++);};for(;r;){for(let t=0;t<e.length&&(i(t),0!=r);t++);1==t&&(r=!1)}return s},sfAlgorithm:(t=[])=>{let s=e.getFrequency(t),r=w.sort(s,{value:!0}),n="",i={path:"",size:x.sum(Object.values(r)),value:JSON.parse(JSON.stringify(r))},a=JSON.parse(JSON.stringify(r));for(let e in a)a[e]={frequency:a[e]};let l=e=>{let s=[{path:e.path+"0",size:0,value:[]},{path:e.path+"1",size:0,value:[]}];for(let t in e.value)s[0].size<s[1].size?(s[0].value[t]=e.value[t],s[0].size+=e.value[t]):(s[1].value[t]=e.value[t],s[1].size+=e.value[t]);s=(e=>{if(e[0].size>e[1].size){let t=e[0];e[0]=e[1],e[1]=t,t=e[0].path,e[0].path=e[1].path,e[1].path=t}return e})(s);for(let r in s)if(Object.values(s[r].value).length>1)s[r].value=l(s[r]);else{let e=Object.keys(s[r].value)[0];a[e].code=s[r].path,a[e].length=s[r].path.length,a[e].probability=s[r].size/t.length,a[e].log=Math.log2(1/a[e].probability)}return s};i=l(i);for(let e of t)n+=a[e].code;return{codeWord:n,table:a,data:t,tree:i}},huffmanCoding:(t=[])=>{let s=e.getProbabilities(t),r=w.sort(s,{value:!0}),n=[],i={};for(let e in r)i[e]={probability:r[e],path:"",length:0,prod:0},n.push({value:r[e],origins:e});let a=(e=[])=>{let t=e.length,s=[];if(t>1){let r=t-1,n=t-2,i=e[n].value+e[r].value,l=!1;for(let a=0;a<e.length;a++)if(a!=n&&a!=r){if(e[a].value<=i&&!l){let t={value:i,origins:[e[n].origins,e[r].origins]};s.push(t),l=!0}s.push(e[a])}else if(2==t){let t={value:i,origins:[e[n].origins,e[r].origins]};s.push(t);break}t>2&&(s=a(s))}return s};n=a(n);let l=(e,t)=>{for(let s in e)Array.isArray(e[s])?l(e[s],t+s):(i[e[s]].path=t+s,i[e[s]].length=t.length,i[e[s]].prod=t.length*i[e[s]].probability)};l(n[0].origins,"");let o=x.sum(w.valueOfObjectArray(i,"prod"));return s=r=void 0,{table:i,data:t,avgLength:o,tree:n}},golomb:(e,t)=>{let s=Math.floor(e/t),r=Array(s).fill(1).join("")+"0",n=Math.ceil(Math.log2(t)),i=2**n-t,a=e%t;return r+(()=>{let e=a.toString();return a<i?(e=a.toString(),e=Array(n-1-e.length).fill(0).join("")+e):(e=(a+i).toString(),e=Array(n-e.length).fill(0).join("")+e),e})()},encodeArithmetic:(e,t)=>{let s=e=>{let s=0;for(let r in t){if(e==r)break;s=100*(s/10+t[r]/10)/10}return s},r=[{l:0,u:1}],n=t=>{let n=r[t];return n.l+(n.u-n.l)*s(e[t]-1)},i=t=>{let n=r[t];return n.l+(n.u-n.l)*s(e[t])};for(let l=0;l<e.length;l++)r.push({l:n(l),u:i(l)});let a=r.pop();return(a.l+a.u)/2},decodeArithmetic:(e=0,t)=>{let s="",r=e=>{let s=0;for(let r in t){if(e==r)break;s=100*(s/10+t[r]/10)/10}return s},n=[{l:0,u:1}],i=e=>{let t=n[e];return t.l+(t.u-t.l)*r(s[e]-1)},a=e=>{let t=n[e];return t.l+(t.u-t.l)*r(s[e])},l=0,o=!1;for(;!o;){let t=!1,r=1,d={};for(;!t;){let s=i(l),n=a(l);if(o=s>=e&&e<=n)break;t=s<e&&e<n,d={l:s,u:n,x:r},r++}if(o)break;l++,n.push(d),s+=d.x}return s},encodeDiagram:(e="",t={})=>{let s,r="",n=()=>{let r,n=e[s],i=n+e[s+1];return null!=t[i]?(r=t[i],s++):r=t[n],r};for(s=0;s<e.length;s++)r+=n();return r},encodeLZ1:(e="",t={windowSize:0,searchSize:0,lookAheadSize:0})=>{null==t.windowSize&&(t.windowSize=t.searchSize+t.lookAheadSize),null==t.searchSize&&(t.searchSize=t.windowSize-t.lookAheadSize),null==t.lookAheadSize&&(t.lookAheadSize=t.windowSize-t.searchSize);let s,r,n,i,a=0,l=()=>{let t=n[0],s={o:0,l:0,c:t};if(i.includes(t)){let t=[];for(let a in i)if(i[a]==s.c){let s=+r+ +a,l=0,o=0,d=!0,c=[];for(;d;)c.push(e[s]),d=n[l+ ++o]===e[s+o];t.push({o:i.length-a,l:c.length,c:n[c.length]})}s=t[0];for(let e of t)(s.l<e.l||s.l==e.l&&s.o>e.o)&&(s=e)}return a+=s.l,s},o=[];for(a=0;a<e.length;a++)(r=a-t.searchSize)<0&&(r=0),s=a+t.lookAheadSize,i=e.slice(r,a).split(""),n=e.slice(a,s).split(""),o.push(l());return o},decodeLZ1:(e=[{o:0,l:0,c:""}],t={windowSize:0,searchSize:0,lookAheadSize:0})=>{let s="";null==t.windowSize&&(t.windowSize=t.searchSize+t.lookAheadSize),null==t.searchSize&&(t.searchSize=t.windowSize-t.lookAheadSize),null==t.lookAheadSize&&(t.lookAheadSize=t.windowSize-t.searchSize);for(let r of e){for(let e=0;e<r.l;e++)s+=s[s.length-r.o];s+=r.c}return s},encodeLZ2:(e="")=>{let t,s,r=[],n=[],i=r=>{let a=(t=>{let s="";for(let r of t)s+=e[r];return s})(r),l=n.indexOf(a),o={i:s,c:a[a.length-1]};return-1==l?n.push(a):(r.push(++t),s=l+1,o=i(r)),o};for(t=0;t<e.length;t++)s=0,r.push(i([t]));return r},decodeLZ2:(e=[{i:0,c:""}])=>{let t,s=[];for(let r of e)t="",0!=r.i&&(t=s[r.i-1]),t+=r.c,s.push(t);return s.join("")},encodeLZW:(e="",t=[])=>{let s,r,n=[],i=Array.from(t),a=t=>{let n=(t=>{let s="";for(let r of t)s+=e[r];return s})(t),l=i.indexOf(n);return-1==l?(i.push(n),l=0,r--):(r++,t.push(r),s=l+=1,n=a(t)),s};for(r=0;r<e.length;r++){s=0;let e=a([r]);null!=e&&n.push(e)}return n},decodeLZW:(e=[],t=[])=>{let s,r="",n=[],i=0,a=!1,l="",o=0,d=Array.from(t),c=(e=[])=>{let t=(e=>{let t="";i=0,l="";for(let s of e)null==r[s]?(i++,a=!0):l+=r[s],t+=r[s];return t})(e);return-1==d.indexOf(t)?(d.push(t),s--):(++s,e.push(s),c(e)),t},u=e=>{for(s=o;s<r.length;s++)if(c([s]),d.length==e){o=s+1-i;break}};for(let f of e){let e=d[f-1];if(null==e&&(u(f),e=d[f-1]),n.push(e),r=n.join(""),a){a=!1;for(let e=0;e<i;e++)l+=l[e];n.pop(),n.push(l),d.pop(),d.push(l),o+=i}}return r}};return e}};const{Func:L}=C;let E=new L;const{ObjectsLibrary:A}=C;A();const{Base:S,Func:O,NeuralNetwork:M,Matrix:N,Template:T,Components:B,Compression:I,ColorPicker:j}=C;var R={Base:S,Template:T,Compression:I,AppLibrary:function(){let e={makeWebapp:(e=(()=>{}))=>{document.addEventListener("click",t=>{let s=t.target,r=t.target.getParents("a"),n=s.getAttribute("href");"a"==s.nodeName.toLowerCase()||E.isnull(r)||(s=r),E.isnull(n)&&!E.isnull(r)&&(s=r),n=s.getAttribute("href"),"_blank"==s.getAttribute("target")?window.open(E.prepareUrl(n)):E.isnull(n)||(t.preventDefault(),E.prepareUrl(n)!=location.href&&window.history.pushState("page","title",n),e())}),window.onpopstate=e},prepareUrl:(e="")=>(e.includes(location.origin)?e.includes(location.protocol)||(e=location.protocol+"//"+e):E.urlSplitter(e).location==location.origin&&(e=location.origin+"/"+e),e)};return e.ajax=(e={async:!0,data:{},url:"",method:"",secured:!1})=>{e.async=e.async||!0,e.data=e.data||{},e.url=e.url||"./",e.method=e.method||"POST",e.secured=e.secured||!1,e.secured&&(e.url="https://cors-anywhere.herokuapp.com/"+e.url);let t=new FormData;if(e.data instanceof FormData)t=e.data;else for(let s in e.data)t.append(s,e.data[s]);return new Promise((s,r)=>{var n=new XMLHttpRequest;n.onreadystatechange=function(e){4==this.readyState&&200==this.status&&s(n.responseText)},E.isset(e.onprogress)&&(n.upload.onprogress=t=>{e.onprogress(t.loaded/t.total*50)},n.onprogress=t=>{e.onprogress(t.loaded/t.total*100)}),n.onerror=e=>{r(e)},n.open(e.method,e.url,e.async),n.send(t)})},e}},D={};Object.defineProperty(D,"__esModule",{value:!0}),D.System=function(){return{connect:(e={encode:!0,data:{}})=>{if(null==e.encode&&(e.encode=!0),1==e.encode){let t=JSON.stringify(e.data),s=kerdx.array.toSet(t.split("")).join(""),r=compressor.encodeLZW(t,s);e.data={code:r,dictionary:s,encoded:!0}}return new Promise((t,s)=>{appLibrary.ajax(e).then(e=>{try{e=JSON.parse(e)}catch(s){}finally{1==e.encoded&&(e=JSON.parse(compressor.decodeLZW(e.code,e.dictionary))),t(e)}}).catch(e=>{s(e)})})}}};var q={};Object.defineProperty(q,"__esModule",{value:!0}),q.Logger=function(){const e={board:void 0,previousCommands:[],index:0,commandList:{}};return e.commandList.clear=()=>{e.board.innerHTML=""},e.commandList.log=t=>{let s=kerdx.createElement({element:"div",attributes:{class:"log-item"}});if(t instanceof Element)s.append(t);else try{s.innerHTML=t}catch(r){s.innerHTML="Error writing to the log"}e.board.append(s)},e.commandList.print=e=>{},e.commandList.request=t=>{let s=e.getCommandProps(t,"-");if(null!=s.url)if(null!=s.method)try{s.data=JSON.parse(s.data),e.disableInput(),e.write("Connecting to "+s.url),P.connect(s).then(t=>{e.write("Connected"),e.write(t)}).catch(e=>{console.log(e)}).finally(e.enableInput())}catch(r){e.write("Data format not valid")}else e.commandList.log("Method is required");else e.commandList.log("Url is required")},e.getCommandProps=(e,t)=>{let s,r={},n=e.split(" ");for(let i=0;i<n.length;i++)(s=n[i])[0]==t&&(r[s.replace(t,"")]=n[i+1]);return r},e.createWindow=()=>{let t=kerdx.createElement({element:"div",attributes:{id:"response-window"},children:[{element:"span",attributes:{id:"response-window-controls"},children:[{element:"input",attributes:{id:"response-window-search"}},{element:"i",attributes:{id:"response-window-clear",class:"fas fa-minus-circle"}},{element:"i",attributes:{id:"response-window-toggle",class:"fas fa-arrow-up"}}]},{element:"span",attributes:{id:"response-window-log"},children:[{element:"span",attributes:{id:"response-window-board"}},{element:"span",attributes:{id:"response-window-command"},children:[{element:"label",text:"RUN: "},{element:"input",attributes:{id:"response-window-input",autoComplete:"off"}}]}]}]});e.commandInput=t.find("#response-window-input"),e.board=t.find("#response-window-board");let s=t.find("#response-window-log");return t.addEventListener("click",t=>{(t.target==s||s.isAncestor(t.target))&&(e.commandInput.focus(),e.commandInput.setSelectionRange(e.commandInput.value.length,e.commandInput.value.length,"forward"))}),e.commandInput.addEventListener("keydown",t=>{let s;if("ArrowUp"==t.key||"ArrowDown"==t.key)"ArrowUp"==t.key?e.index--:"ArrowDown"==t.key&&e.index++,0==e.previousCommands.length||e.index<0?e.index=0:e.index>=e.previousCommands.length&&(e.index=e.previousCommands.length-1),s=e.previousCommands[e.index],e.commandInput.value=s||"",e.commandInput.setSelectionRange(e.commandInput.value.length,e.commandInput.value.length,"forward");else if("Enter"==t.key){let t=e.commandInput.value;e.commandInput.value="",e.commandList.log("RUN: "+t),""!=t?(e.previousCommands.push(t),kerdx.isset(e.commandList[t.split(" ")[0]])?e.commandList[t.split(" ")[0]](t.replace(t.split(" ")[0],"").trim()):e.write(`'${t.split(" ")[0]}' not found`)):e.write(t),e.index=e.previousCommands.length-1}}),e.window=t,e.resize(),t},e.write=t=>{let s;s=t instanceof Element?t:"object"==typeof t?kerdx.displayData(t):kerdx.createElement({element:"span",html:t});let r=`[${kerdx.time()}]:`,n=kerdx.createElement({element:"div",attributes:{style:{display:"grid",gridTemplateColumns:"max-content 1fr"}},children:[{element:"label",text:r},s]});e.commandList.log(n)},e.clean=()=>{e.commandList.clear()},e.disableInput=()=>{e.commandInput.css({display:"none"})},e.enableInput=()=>{e.commandInput.cssRemove(["display"])},e.resize=()=>{e.window.onAdded(()=>{let t=e.window.parentNode,s=!1,r=e.window.position();e.window.addEventListener("mousemove",t=>{let r=t.y-e.window.position().top;r<15&&r>-15?e.window.css({cursor:"ns-resize"}):s||e.window.cssRemove(["cursor"])}),e.window.addEventListener("mousedown",t=>{let r=t.y-e.window.position().top;r<15&&r>-15&&(e.window.css({cursor:"ns-resize"}),s=!0)}),t.addEventListener("mousemove",n=>{let i=r.bottom-n.y,a=i>200,l=n.y>t.position().top;s&&l&&a&&e.window.css({height:i+"px"})}),e.window.addEventListener("mouseup",e=>{s=!1}),t.addEventListener("mouseup",e=>{s=!1})})},e.clear=()=>{e.commandList.clear()},e};let P=new D.System;const{Base:z,Compression:H,AppLibrary:$,Template:F}=R;window.kerdx=new z(window),new F(window);const{Logger:J}=q,{System:U}=D;window.mmu={},window.compressor=H(),window.appLibrary=$();let W=new J,V=new U;mmu.generateRequestContent=(e={name:"",options:[]})=>{let t=kerdx.camelCasedToText(e.name),s="input";Array.isArray(e.options)&&(s="select");let r=kerdx.createElement({element:"div",attributes:{class:"request-window-content"},children:[{element:"label",attributes:{class:"request-window-content-label",id:name},text:t},{element:s,attributes:{class:"request-window-content-data",name:e.name}}]});if(Array.isArray(e.options)){r.find(".request-window-content-data").makeElement({element:"option",attributes:{selected:!0,disabled:!0,value:null},text:"Select "+t});for(let t of e.options)r.find(".request-window-content-data").makeElement({element:"option",attributes:{value:t},text:t})}return r},mmu.generateData=()=>kerdx.createElement({element:"div",attributes:{class:"request-single-data"},children:[{element:"input",attributes:{class:"request-single-data-name",placeHolder:"Name"}},{element:"label",text:"=>"},{element:"input",attributes:{class:"request-single-data-value",placeHolder:"Value"}},{element:"select",attributes:{class:"request-single-data-type"},options:["String","Array","Json"]},{element:"i",attributes:{class:"request-single-data-remove fas fa-trash"}}]}),mmu.validateRequest=()=>{let e=document.body.find("#request-contents"),t=kerdx.validateForm(e);return!!t.flag||(W.write(kerdx.camelCasedToText(t.elementName)+" is required"),!1)},mmu.sendRequest=()=>{let e=document.body.find("#request-contents");if(mmu.validateRequest()){let t,s,r=kerdx.jsonForm(e),n=document.body.find("#request-data").findAll(".request-single-data");r.data={};for(let e=0;e<n.length;e++)t=n[e].find(".request-single-data-value").value,s=n[e].find(".request-single-data-type").value,r.data[n[e].find(".request-single-data-name").value]="Json"==s?JSON.parse(t):"Array"==s?""==t?[]:t.split(","):t;W.disableInput(),W.write("Connecting to "+r.url),V.connect(r).then(e=>{W.write("Connected"),W.write(e)}).catch(e=>{console.log(e)}).finally(W.enableInput())}},mmu.render=()=>{document.body.makeElement({element:"header",attributes:{id:"header-window"}});let e=document.body.makeElement({element:"main",attributes:{id:"main-window"},children:[{element:"nav",attributes:{id:"navigator"}},{element:"section",attributes:{id:"request-window"},children:[{element:"div",attributes:{id:"request-contents"},children:[mmu.generateRequestContent({name:"url"}),mmu.generateRequestContent({name:"method",options:["POST","GET","DELETE"]}),{element:"div",attributes:{class:"request-window-content"},children:[{element:"label",attributes:{class:"request-window-content-label"},text:"Request Data"},{element:"i",attributes:{class:"fas fa-plus",id:"new-data"}}]}]},{element:"div",attributes:{id:"request-data"}},{element:"div",attributes:{id:"request-controls"},children:[{element:"button",attributes:{id:"submit-request"},text:"Submit Request"}]}]},W.createWindow()]}),t=e.find("#new-data"),s=e.find("#submit-request"),r=e.find("#request-data"),n=e.find("#response-window"),i=e.find("#response-window-clear"),a=e.find("#response-window-toggle");t.addEventListener("click",e=>{r.makeElement(mmu.generateData())}),r.addEventListener("click",e=>{e.target.classList.contains("request-single-data-remove")&&e.target.parentNode.remove()}),s.addEventListener("click",e=>{mmu.sendRequest()}),a.addEventListener("click",e=>{n.toggleClass("response-window-full"),a.toggleClass("fa-arrow-down"),a.toggleClass("fa-arrow-up")}),i.addEventListener("click",e=>{W.clear()})},document.addEventListener("DOMContentLoaded",e=>{document.body.innerHTML="",mmu.render()})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlc1xcYnJvd3Nlci1wYWNrLWZsYXRcXF9wcmVsdWRlIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9GdW5jLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9NYXRyaXguanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUva2VyZC9ub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9mdW5jdGlvbnMvQXJyYXlMaWJyYXJ5LmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9OZXVyYWxOZXR3b3JrLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9QZXJpb2QuanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUva2VyZC9ub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9jbGFzc2VzL0pTRWxlbWVudHMuanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUva2VyZC9ub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9jbGFzc2VzL1RlbXBsYXRlLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9Db21wb25lbnRzLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvY2xhc3Nlcy9Db2xvclBpY2tlci5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9rZXJkL25vZGVfbW9kdWxlcy9AdGhla2FkZS9iYXNlL0ljb25zLmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvbm9kZV9tb2R1bGVzL0B0aGVrYWRlL2Jhc2UvZnVuY3Rpb25zL1NoYWRvdy5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9rZXJkL25vZGVfbW9kdWxlcy9AdGhla2FkZS9iYXNlL2Z1bmN0aW9ucy9PYmplY3RzTGlicmFyeS5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9rZXJkL25vZGVfbW9kdWxlcy9AdGhla2FkZS9iYXNlL2Z1bmN0aW9ucy9NYXRoc0xpYnJhcnkuanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUva2VyZC9ub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9mdW5jdGlvbnMvQ29tcHJlc3Npb24uanMiLCJub2RlX21vZHVsZXMvQHRoZWthZGUva2VyZC9ub2RlX21vZHVsZXMvQHRoZWthZGUvYmFzZS9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9AdGhla2FkZS9rZXJkL2Z1bmN0aW9ucy9BcHBMaWJyYXJ5LmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvZnVuY3Rpb25zL0luZGV4ZWRMaWJyYXJ5LmpzIiwibm9kZV9tb2R1bGVzL0B0aGVrYWRlL2tlcmQvY2xhc3Nlcy9icm93c2VyLmpzIiwic3JjL2Z1bmN0aW9ucy9TeXN0ZW0uanMiLCJzcmMvZnVuY3Rpb25zL0xvZ2dlci5qcyIsInNyYy9tYWluLmpzIl0sIm5hbWVzIjpbIl8kRnVuY183IiwiW29iamVjdCBPYmplY3RdIiwidGhpcyIsImNhcGl0YWxzIiwic21hbGxzIiwiZGlnaXRzIiwic3ltYm9scyIsIm1vbnRocyIsImRheXMiLCJnZW5kZXJzIiwibWFyaXRhbHMiLCJyZWxpZ2lvbnMiLCJ1c2VyVHlwZXMiLCJzdGFmZlJlcXVlc3RzIiwic3R1ZGVudHNSZXF1ZXN0cyIsInN1YmplY3RMaXN0Iiwic29ydCIsInN1YmplY3RMZXZlbHMiLCJmb250U3R5bGVzIiwicGl4ZWxTaXplcyIsImNvbG9ycyIsImJvbGRuZXNzIiwiYm9yZGVyVHlwZXMiLCJzaGFkb3dzIiwiYm9yZGVycyIsImFsaWdubWVudCIsInNvdXJjZSIsInZhbHVlIiwiaW5CZXR3ZWVuIiwiSlNPTiIsInBhcnNlIiwiZXJyb3IiLCJoYXlzdGFjayIsIm5lZWRsZSIsInBvcyIsImluZGV4T2YiLCJzcGxpdCIsImxlbmd0aCIsImluZGV4IiwiaSIsImZpcnN0Iiwic2Vjb25kIiwiYXQxIiwiYXQyIiwic3RhcnQiLCJpbmRleEF0IiwiZW5kIiwic2xpY2UiLCJmb3VuZCIsImFsbCIsImNvbWJpbmUiLCJwdXNoIiwiZWxlbWVudCIsImtleSIsImNzcyIsInN0eWxlIiwiY3NzVGV4dCIsInBhaXIiLCJ0cmVtIiwianNTdHlsZU5hbWUiLCJzdHJpbmdSZXBsYWNlIiwicG9wIiwibmFtZSIsIm5ld05hbWUiLCJ0b1VwcGVyQ2FzZSIsInRvTG93ZXJDYXNlIiwiaXNDYXBpdGFsIiwidGV4dCIsImlzc2V0IiwiY2FtZWxDYXNlIiwib2JqIiwic3RyaW5naWZ5IiwicGFyYW1zIiwibGltaXQiLCJyYW5nZSIsInJhbmRvbSIsImVtcHR5T2JqZWN0IiwiTWF0aCIsInN0cmluZyIsImFscGhhbnVtZXJpYyIsImZsb29yIiwiRGF0ZSIsIm5vdyIsInRvU3RyaW5nIiwidXJsIiwidXJsU3BsaXR0ZXIiLCJ2YXJzIiwidG9BZGQiLCJhZGRWYWx1ZSIsInVybE1lcmdlciIsIm1vbmV5IiwiaW52ZXJzZSIsInBvc2l0aW9uIiwiaW5jbHVkZXMiLCJyZXZlcnNlIiwiam9pbiIsIngiLCJpc0RpZ2l0IiwiYSIsImIiLCJpc1NtYWxsIiwiYyIsImQiLCJpc1N5bWJvbCIsIlN0cmluZyIsImVtYWlsX3BhcnRzIiwiaXNTcGFjZVN0cmluZyIsImRvdF9wYXJ0cyIsInRydXRoeSIsInRvTG9jYWxlTG93ZXJDYXNlIiwiZmFsc3kiLCJvYmplY3QiLCJPYmplY3QiLCJrZXlzIiwibmV3X25lZWRsZSIsIndvcmQiLCJmcm9tIiwidG8iLCJwYXRoIiwiY2hhciIsImoiLCJvY2N1cmFuY2VzIiwidmFyaWFibGUiLCJpc251bGwiLCJmbGFnIiwiY29uc3RydWN0b3IiLCJBcnJheSIsIk51bWJlciIsIkJvb2xlYW4iLCJmdW5jdGlvbnMiLCJjYWxsQmFjayIsInJlc3VsdHMiLCJmIiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInNwbGl0VXJsIiwibGFzdFF1ZXJ5IiwiaG9zdFR5cGUiLCJob3N0TmFtZSIsInBvcnQiLCJob3N0IiwicGF0aE5hbWUiLCJxdWVyaWVzIiwia2VlcE1hcHBpbmciLCJtYXAiLCJsb2NhdGlvbiIsImxhc3RJbmRleE9mIiwiaHR0cFR5cGUiLCJmdWxsUGF0aCIsInF1ZXJ5IiwicGFydHMiLCJodHRwaG9zdCIsImZ1bmMiLCJNYXRyaXgiLCJyb3dzIiwiY29scyIsImNvbnRlbnRzIiwic2V0RGF0YSIsImRhdGEiLCJzaGlmdCIsInN0cnVjdHVyZSIsIm4iLCJuZXdNYXRyaXgiLCJjYWxsYmFjayIsImNvbnNvbGUiLCJ0YWJsZSIsImxvZyIsInRvQXJyYXkiLCJlYWNoIiwicm93IiwiciIsIm1hdHJpeCIsImFycmF5Iiwic3VtIiwiayIsIm5vcm1hbGl6ZSIsInNxdWFyZSIsInNpemUiLCJnZXRDb2x1bW5zIiwiZmxhdHRlbiIsInRyYW5zcG9zZSIsImRpbWVuc2lvbnMiLCJtYXRyaXhEaW1lbnNpb25zIiwibWFrZU1hdHJpeCIsImxheWVyIiwiXyRNYXRyaXhfOSIsIl8kQXJyYXlMaWJyYXJ5XzE0Iiwic2VsZiIsImNvbnRhaW5zIiwiY291bnQiLCJmaW5kIiwiZmluZEFsbCIsInZhbHVlcyIsImdldE9iamVjdCIsImdldEFsbE9iamVjdHMiLCJuZXdBcnJheSIsImdldEFsbCIsInJlbW92ZUFsbCIsInB1dEF0IiwibmV4dCIsImlzTmFOIiwicHVzaEFycmF5IiwiaW5zZXJ0IiwiYXJyYXlJbmRleCIsImhhc0FycmF5IiwidG9PYmplY3QiLCJyZXNoYXBlIiwicmFuZG9tUGljayIsInJlbW92ZUVtcHR5IiwiaXNBcnJheSIsImhhc0FycmF5RWxlbWVudCIsInRvU2V0Iiwic2luZ2xlIiwicG9wSW5kZXgiLCJkYXRhVHlwZSIsInR5cGUiLCJfX2Z1bmNfMTAiLCJhcnJheUxpYnJhcnkiLCJfJFBlcmlvZF8xMSIsInN1cGVyIiwieWVhciIsImdldFllYXIiLCJmZXRjaGVkIiwidGltZSIsImhvdXIiLCJtaW51dGVzIiwic2Vjb25kcyIsImRhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZGF5IiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJnZXRGdWxsWWVhciIsImlzVGltZVZhbGlkIiwiaXNEYXRlIiwiaXNZZWFyVmFsaWQiLCJpc01vbnRoVmFsaWQiLCJpc0RheVZhbGlkIiwidl9kYXkiLCJpc0xlYXBZZWFyIiwidl9tb250aCIsInZfeWVhciIsImRheXNJbk1vbnRoIiwidG9kYXkiLCJzZWNvbmRzSW5EYXlzIiwiaG91cnMiLCJzZWNvbmRzSW5Ib3VycyIsInNlY29uZHNJbk1pbnV0ZXMiLCJkYXRlVmFsdWUiLCJkaWZmIiwid2hlbiIsInNlY29uZHNUaWxsRGF0ZSIsInRpbWVUb2RheSIsIm1vbWVudCIsIl8kSlNFbGVtZW50c184IiwidGhlV2luZG93IiwiRWxlbWVudCIsImRvY3VtZW50IiwiaHJlZiIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwicmVsIiwiaGVhZCIsImFwcGVuZCIsImZvcm0iLCJqc29uIiwicGVyZm9ybSIsImNoaWxkcmVuIiwiaGFzQXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlIiwiZmlsZXMiLCJfZWxlbWVudF8iLCJub2RlTmFtZSIsImdldEF0dHJpYnV0ZXMiLCJ0b0pzb24iLCJzaW5nbGVQYXJlbnQiLCJjcmVhdGVkIiwiaXNFbGVtZW50IiwiYXR0ciIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiaHRtbCIsImlubmVySFRNTCIsImNyZWF0ZUZyb21IVE1MIiwib3V0ZXJIVE1MIiwiYXR0YWNoRWxlbWVudCIsImF0dGFjaG1lbnQiLCJtYWtlRWxlbWVudCIsIm9wdGlvbnMiLCJvcHRpb24iLCJzZWxlY3RlZCIsImRhdGFzZXQiLCJpY29uIiwiYWRkQ2xhc3NlcyIsImh0bWxTdHJpbmciLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJib2R5IiwiZmlyc3RDaGlsZCIsInBlcmNlcHRvckVsZW1lbnQiLCJzaW5nbGVQYXJhbSIsImNyZWF0ZVBlcmNlcHRvckVsZW1lbnQiLCJjcmVhdGVGcm9tT2JqZWN0Iiwic2V0S2V5IiwiZG9tS2V5IiwibGlzdCIsInN0YXRlIiwib3duZXIiLCJnZXRQYXJlbnRzIiwic3RhdGVTdGF0dXMiLCJhZGRTdGF0ZSIsInBhcmVudCIsImVsZW1lbnRzIiwicGFyYW0iLCJnZXRFbGVtZW50IiwiaGFzU3RyaW5nIiwiY2xhc3NOYW1lIiwiaXNEYXRlVmFsaWQiLCJpc0VtYWlsIiwiaXNOdW1iZXIiLCJpc1Bhc3N3b3JkVmFsaWQiLCJub2RlTmFtZXMiLCJlbGVtZW50TmFtZSIsInZhbGlkYXRlTWUiLCJtZSIsInZhbGlkYXRlRm9ybUlucHV0IiwidmFsaWRhdGVGb3JtU2VsZWN0IiwidmFsaWRhdGVGb3JtVGV4dGFyZWEiLCJ2YWxpZGF0ZU90aGVyRWxlbWVudHMiLCJuYW1lcyIsImlzSW1hZ2VWYWxpZCIsImlucHV0IiwiZXh0Iiwic3Vic3RyaW5nIiwiZmlsZSIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwibXlmaWxlIiwib25sb2FkIiwiZXZlbnQiLCJzcmMiLCJ0YXJnZXQiLCJyZXN1bHQiLCJyZWFkQXNEYXRhVVJMIiwiX19FbXB0eV8xMiIsIl8kVGVtcGxhdGVfMTIiLCJ2aXJ0dWFsIiwiZWxlbWVudExpYnJhcnkiLCJodG1sQ29sbGVjdGlvbkxpYnJhcnkiLCJIVE1MQ29sbGVjdGlvbiIsIm5vZGVMaWJyYXJ5IiwiTm9kZSIsIm5vZGVMaXN0TGlicmFyeSIsIk5vZGVMaXN0IiwicHJvdG90eXBlIiwiY2hhbmdlTm9kZU5hbWUiLCJzZXRPcHRpb25zIiwiY29tbW9uQW5jZXN0b3IiLCJlbGVtZW50QSIsImVsZW1lbnRCIiwiYW5jZXN0b3JBIiwicGFyZW50cyIsImFuY2VzdG9yQiIsIm9uQWRkZWQiLCJhZGRFdmVudExpc3RlbmVyIiwic3RhdGVzIiwidGVtcCIsIm1hbnlCdWJibGVkRXZlbnRzIiwiZXZlbnRzIiwiYnViYmxlZEV2ZW50IiwidHJpbSIsIm1hbnlOb3RCdWJibGVkRXZlbnRzIiwibm90QnViYmxlZEV2ZW50IiwiaXNBbmNlc3RvciIsImFkZE11bHRpcGxlRXZlbnRMaXN0ZW5lciIsImUiLCJob3ZlciIsImRvIiwiY3NzVmFsdWVzIiwiY3NzU3R5bGVOYW1lIiwiaXNmdW5jdGlvbiIsImNzc1JlbW92ZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwicCIsInF1ZXJ5U2VsZWN0b3IiLCJzZWFyY2giLCJpZCIsImNsYXNzIiwiY2xhc3NlcyIsImZvdW5kRWxlbWVudHMiLCJhbGxFbGVtZW50cyIsImNsYXNzTGlzdCIsImhhc0NsYXNzZXMiLCJzZWFyY2hBbGwiLCJmZXRjaCIsImZldGNoQWxsIiwibm9kZXNCZXR3ZWVuIiwiaW5CZXR3ZWVuTm9kZXMiLCJjaGlsZCIsImN1cnJlbnRQYXJlbnQiLCJwYXJlbnROb2RlIiwiY3VzdG9tUGFyZW50cyIsInJlbW92ZVN0YXRlIiwiZ2V0U3RhdGUiLCJmb3JjZSIsInJlbW92ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInN0YXRlTmFtZSIsInNldFN0YXRlIiwicmVuZGVyIiwic2V0QXR0cmlidXRlcyIsImNsb25lTm9kZSIsInNldEtleUFzeW5jIiwiYXN5bmMiLCJkcm9wRG93biIsInBhcmVudENvbnRlbnQiLCJib3hTaGFkb3ciLCJkcm9wQ29udGFpbmVyIiwicmVtb3ZlRHJvcERvd24iLCJzdG9wTW9uaXRvciIsIm9ic2VydmUiLCJvYnNlcnZlciIsImRpc2Nvbm5lY3QiLCJvbkF0dHJpYnV0ZUNoYW5nZSIsImF0dHJpYnV0ZSIsImRldGFpbCIsImF0dHJpYnV0ZU5hbWUiLCJtb25pdG9yIiwiY29uZmlnIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJtdXRhdGlvbkxpc3QiLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJtdXRhdGlvbiIsImNoZWNrQ2hhbmdlcyIsIm9uQ2hhbmdlZCIsInVwZGF0ZU1lIiwiaW1hZ2VUb0pzb24iLCJzZWxlY3RlZEluZGV4IiwiZXhjZXB0IiwicmVtb3ZlQ2hpbGRyZW4iLCJnZXRBbGxDc3NQcm9wZXJ0aWVzIiwiY3NzUnVsZXMiLCJzZWxlY3RvclRleHQiLCJzdHlsZVNoZWV0cyIsInByb3BlcnRpZXMiLCJnZXRDc3NQcm9wZXJ0aWVzIiwicHJvcGVydHkiLCJhbGxQcm9wZXJ0aWVzIiwiaGFzQ3NzUHJvcGVydHkiLCJjc3NQcm9wZXJ0eVZhbHVlIiwic3R5bGVzIiwiZXh0cmFjdENTUyIsInJlbW92ZVByb3BlcnR5IiwidG9nZ2xlQ2hpbGQiLCJfY2xhc3NlcyIsIm5vZGUiLCJjbGVhckNsYXNzZXMiLCJyZW1vdmVDbGFzc2VzIiwiYWRkIiwidG9nZ2xlQ2xhc3NlcyIsInRvZ2dsZSIsInJlbW92ZUNsYXNzIiwiX2NsYXNzIiwibUNsYXNzIiwiYWRkQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImluVmlldyIsInBhcmVudElkZW50aWZpZXIiLCJ0b3AiLCJjbGllbnRIZWlnaHQiLCJoYXNDbGFzcyIsInNldFByb3BlcnRpZXMiLCJnZXRBdHRyaWJ1dGVOYW1lcyIsImRpc3BsYXkiLCJ2aXNpYmlsaXR5Iiwic2hvdyIsImhpZGUiLCJleGNlcHRpb25zIiwiZGVsZXRlIiwiZGVsZXRlQ2hpbGQiLCJ0b2dnbGVDaGlsZHJlbiIsInByZXNzZWQiLCJzdGFydFRpbWUiLCJlbmRUaW1lIiwidGltZVN0YW1wIiwiZHVyYXRpb24iLCJjb2xsZWN0aW9uIiwiaXRlbSIsImFQYXJlbnQiLCJfJENvbXBvbmVudHNfNiIsInRpdGxlcyIsInRhYlRpdGxlIiwidmlldyIsInRhYiIsInJvdXRlciIsImRhdGFBdHRyaWJ1dGVzIiwiZWRpdCIsImNvbXBvbmVudHMiLCJsYWJlbCIsImRpc2FibGVkIiwiY2VsbCIsImRhdGEtaWNvbiIsImN1cnNvciIsImJhY2tncm91bmRDb2xvciIsIndpZHRoIiwiaGVpZ2h0IiwicmlnaHQiLCJwYWRkaW5nIiwibGluayIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJ0aXRsZSIsInByb2plY3Rpb24iLCJyZW5hbWUiLCJmaWx0ZXIiLCJoZWFkZXJzIiwiY29sdW1ucyIsImNvbHVtbkNvdW50IiwiY29udGVudCIsImRhdGEtbmFtZSIsImRhdGEtdmFsdWUiLCJkYXRhLXJvdyIsImdyaWRUZW1wbGF0ZUNvbHVtbnMiLCJ0YWJsZUNvbnRhaW5lciIsInRpdGxlQ291bnQiLCJwbGFjZUhvbGRlciIsImNlbGxzIiwiYnkiLCJkaXJlY3Rpb24iLCJnZXRUYWJsZURhdGEiLCJjYWxsYmFja3MiLCJjbGljayIsIm9wdGlvbkNsYXNzIiwicmV2ZXJ0IiwiZmlyc3RWaXNpYmxlQ29sdW1uIiwidGFibGVUaXRsZXMiLCJ0YWJsZUNvbHVtbnMiLCJmaXJzdENvbHVtbiIsInRhYmxlUm93Iiwic2VhcmNoVmFsdWUiLCJmaWx0ZXJWYWx1ZSIsImZpcnN0Q2VsbHMiLCJmaXJzdFZpc2libGVDZWxscyIsInNvcnRUYWJsZSIsIm5ld1RhYmxlQ29sdW1ucyIsImNyZWF0ZVRhYmxlIiwicmVxdWlyZWQiLCJidXR0b25zIiwibm90ZSIsImZvcm1Db250ZW50cyIsImxhYmxlVGV4dCIsImNhbWVsQ2FzZWRUb1RleHQiLCJibG9jayIsImZvciIsInBpY2tlciIsImNvbnRhaW5lciIsInBvcFVwIiwiY29sb3IiLCJtdWx0aXBsZSIsImFjdGl2ZSIsImFsbG93TmF2aWdhdGUiLCJzY3JvbGxQb3NpdGlvbiIsInNlbGVjdCIsImlnbm9yZSIsInNldFZhbHVlIiwidiIsIml0ZW1zIiwiYm90dG9tIiwibmF2aWdhdGUiLCJkZWFjdGl2YXRlIiwiYWN0aXZhdGUiLCJvdmVyZmxvdyIsInBsYWNlQ29udGVudHMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVwbGFjZSIsIndpbmRvdyIsImNob29zZVdpbmRvdyIsImNob29zZUNvbnRyb2wiLCJjaG9pY2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInRleHRFZGl0b3IiLCJmcmFtZUJvcmRlciIsImZvbnQiLCJmb250RmFtaWx5IiwiZWRpdG9yV2luZG93IiwiZWRpdG9yIiwiY29udGVudFdpbmRvdyIsImRlc2lnbk1vZGUiLCJleGVjQ29tbWFuZCIsImJhY2tncm91bmQiLCJwcm9tcHQiLCJsaW5lTnVtYmVycyIsImRpc3BsYXlTdHJpbmciLCJkaXNwbGF5TGl0ZXJhbCIsImRpc3BsYXlQdW5jdHVhdGlvbiIsImRpc3BsYXlJdGVtIiwiY2hvb3NlRGlzcGxheSIsImRpc3BsYXlBcnJheSIsImRpc3BsYXlPYmplY3QiLCJkaXNwbGF5ZWQiLCJsaW5lSGVpZ2h0IiwibnVtYmVycyIsInRvZ2dsZUJ1dHRvbnMiLCJjb2RlIiwibGluZXMiLCJ0b2dnbGVzIiwiYmxvY2tzIiwicGFyc2VJbnQiLCJzZXRSYW5nZSIsImhpZGVOdW1iZXJzIiwiY29udHJvbGxlciIsImhpZGVCbG9jayIsImJsb2NrQ29udGVudCIsIl8kQ29sb3JQaWNrZXJfNSIsImVsZW1lbnRNb2RpZmllciIsImNvbG9ySW5kaWNhdG9yUG9zaXRpb24iLCJ5Iiwib3BhY2l0eUluZGljYXRvclBvc2l0aW9uIiwiY29udmVydFRvIiwiaW5pdCIsImNvbG9yV2luZG93Iiwib3BhY2l0eVdpbmRvdyIsImNvbG9yQ2FudmFzIiwib3BhY2l0eUNhbnZhcyIsImNvbG9yTWFya2VyIiwib3BhY2l0eU1hcmtlciIsInBpY2tlZENvbG9yIiwiY29sb3JDb250ZXh0IiwiZ2V0Q29udGV4dCIsIm9wYWNpdHlDb250ZXh0IiwiaW5uZXJUZXh0IiwicmVwbHkiLCJsaXN0ZW4iLCJjYWxpYnJhdGVDb2xvciIsImNvbG9yR3JhZGllbnQiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsImFkZENvbG9yU3RvcCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiY2FsaWJyYXRlT3BhY2l0eSIsInJnYmEiLCJjbGVhclJlY3QiLCJvcGFjaXR5R3JhZGllbnQiLCJhZGRPcGFjaXR5IiwiaXNDb2xvck1vdXNlRG93biIsImlzT3BhY2l0eU1vdXNlRG93biIsImFkZGVkIiwiZGlzcG9zZSIsImN1cnJlbnRYIiwiY2xpZW50WCIsImxlZnQiLCJjdXJyZW50WSIsImNsaWVudFkiLCJwaWNrZWQiLCJnZXRQaWNrZWRDb2xvciIsImciLCJnZXRQaWNrZWRPcGFjaXR5IiwiY29udmVyQ29sb3IiLCJjb252ZXJ0ZWRDb2xvciIsInJnYlRvSGV4IiwicmdiVG9IU0wiLCJpbWFnZURhdGEiLCJnZXRJbWFnZURhdGEiLCJhbHBoYSIsImNlaWwiLCJkcmF3IiwiaW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiY29sb3JUeXBlIiwiaGV4VG9SR0IiLCJoZXgiLCJ0b0ZpeGVkIiwiaGV4VG9IU0wiLCJyZ2IiLCJyb3VuZCIsImNtaW4iLCJtaW4iLCJjbWF4IiwibWF4IiwiZGVsdGEiLCJoIiwicyIsImwiLCJhYnMiLCJoc2xUb1JHQiIsImhzbCIsInN1YnN0ciIsIlBJIiwibSIsImhzbFRvSGV4Iiwib3BhY2l0eSIsInBvaW50cyIsImdldE9wYWNpdHkiLCJpbnZlcnRDb2xvciIsImludmVydCIsImludmVydEhleCIsIl8kSWNvbnNfNCIsImFkZHJlc3MtYm9vayIsImFtYXpvbiIsImFtYnVsYW5jZSIsImFuZHJvaWQiLCJhcHBsZSIsImFzdGVyaXNrIiwiYXQiLCJiYWNrd2FyZCIsImJhbmsiLCJiYXR0ZXJ5IiwiYmVkIiwiYmVsbCIsImJpY3ljbGUiLCJiaXJ0aGRheS1jYWtlIiwiYml0YnVja2V0IiwiYml0Y29pbiIsImJsdWV0b290aCIsImJvbHQiLCJib29rIiwiYnVzIiwiY2FiIiwiY2FsY3VsYXRvciIsImNhbWVyYSIsImNhciIsImNlcnRpZmljYXRlIiwiY2hyb21lIiwiY2xvdWQiLCJjb2ZmZWUiLCJjb21tZW50IiwiY29tcGFzcyIsImNvcHkiLCJjb3B5cmlnaHQiLCJjbG9uZSIsImNyZWRpdC1jYXJkIiwiY3ViZSIsImRlc2t0b3AiLCJkaWFtb25kIiwiZG93bmxvYWQiLCJkcml2ZXJzLWxpY2Vuc2UiLCJkcm9wYm94IiwiZHJ1cGFsIiwiZWRnZSIsImVqZWN0IiwiZWxsaXBzaXMtaCIsImVudmVsb3BlIiwiZXJhc2VyIiwiZXhjaGFuZ2UiLCJleGNsYW1hdGlvbiIsImV4cGFuZCIsImV5ZSIsImV5ZS1zbGFzaCIsImZheCIsImZlbWFsZSIsImZpbG0iLCJmaXJlIiwiZmxpY2tyIiwiZm9sZGVyIiwiZm9yd2FyZCIsImZvdXJzcXVhcmUiLCJnaWZ0IiwiZ2xhc3MiLCJnbG9iZSIsImdvb2dsZSIsImdyYWR1YXRpb24tY2FwIiwiZ3JvdXAiLCJoYXNodGFnIiwiaGVhZHBob25lcyIsImhlYXJ0IiwiaGlzdG9yeSIsImhvbWUiLCJob3RlbCIsImhvdXJnbGFzcyIsImltYWdlIiwiaW1kYiIsImluYm94IiwiaW5kdXN0cnkiLCJpbmZvIiwiaW5zdGFncmFtIiwibGFuZ3VhZ2UiLCJsYXB0b3AiLCJsZWFmIiwibGVnYWwiLCJsaWZlLWJvdXkiLCJsaW5rZWRpbiIsImxpbnV4IiwibG9jayIsIm1hZ2ljIiwibWFnbmV0IiwibWFsZSIsIm1pY3JvcGhvbmUiLCJtb2JpbGUiLCJtb3RvcmN5Y2xlIiwibXVzaWMiLCJvcGVyYSIsInBhaW50LWJydXNoIiwicGFwZXItcGxhbmUiLCJwYXVzZSIsInBhdyIsInBheXBhbCIsInBlbiIsInBlbmNpbCIsInBob25lIiwicGhvdG8iLCJwaW50ZXJlc3QiLCJwbGFuZSIsInBsYXkiLCJwbHVnIiwicGx1cyIsInBvZGNhc3QiLCJxdWVzdGlvbiIsInF1b3JhIiwicmVjeWNsZSIsInJlZGRpdCIsInJlZG8iLCJyZWZyZXNoIiwicmVzaXN0YW5jZSIsInJldHdlZXQiLCJyb2FkIiwicm9ja2V0IiwicnNzIiwic2FmYXJpIiwic2NyaWJlIiwic2VuZCIsInNlcnZlciIsInNoaXAiLCJzaWduLWluIiwic2l0ZW1hcCIsInNreWF0bGFzIiwic2t5cGUiLCJzbGlkZXNoYXJlIiwic25hcGNoYXQiLCJzb3VuZGNsb3VkIiwic3Bvb24iLCJzcG90aWZ5Iiwic3RhY2stZXhjaGFuZ2UiLCJzdGFyIiwic3RlYW0iLCJzdGlja3ktbm90ZSIsInN0b3AiLCJzdHJlZXQtdmlldyIsInN1YndheSIsInN1aXRjYXNlIiwic3VwcG9ydCIsInRhc2tzIiwidGF4aSIsInRlbGVncmFtIiwidGVsZXZpc2lvbiIsInRlcm1pbmFsIiwidGhlcm1vbWV0ZXIiLCJ0aWNrZXQiLCJ0aW1lcyIsInRyYWluIiwidHJhc2giLCJ0cmVlIiwidHJvcGh5IiwidHJ1Y2siLCJ0dW1ibHIiLCJ0diIsInR3aXR0ZXIiLCJ1bWJyZWxsYSIsInVuaXZlcnNpdHkiLCJ1bmxvY2siLCJ1cGxvYWQiLCJ1c2IiLCJ1c2VyIiwidmlkZW8tY2FtZXJhIiwidmltZW8iLCJ3YXJuaW5nIiwid2VjaGF0Iiwid2VpYm8iLCJ3aGF0c2FwcCIsIndoZWVsY2hhaXIiLCJ3aWZpIiwid2lraXBlZGlhLXciLCJ3b3JkcHJlc3MiLCJ5ZWxwIiwieW9hc3QiLCJ5b3V0dWJlIiwidW5kbyIsIl9fYXJyYXlMaWJyYXJ5XzE3IiwiXyRPYmplY3RzTGlicmFyeV8xNyIsImJ5dGVzIiwicm91Z2hPYmplY3RTaXplIiwiZXh0cmFjdEZyb21Kc29uQXJyYXkiLCJtZXRhIiwiZVNvdXJjZSIsIm1ha2VJdGVyYWJsZSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiZ2V0SW5kZXgiLCJoYW5kbGVyIiwicmVjZWl2ZXIiLCJQcm94eSIsImVyciIsIlJlZmxlY3QiLCJnZXQiLCJkZWZpbmVQcm9wZXJ0eSIsImRlc2NyaXB0b3IiLCJkZWxldGVQcm9wZXJ0eSIsIm5hbWVkIiwidmFsdWVPZk9iamVjdEFycmF5Iiwia2V5c09mT2JqZWN0QXJyYXkiLCJjb25jYXQiLCJvYmplY3RPZk9iamVjdEFycmF5IiwibmV3T2JqZWN0IiwiaXNTdWJPYmplY3QiLCJzYW1wbGUiLCJnZXRTdWJPYmplY3QiLCJtYXRjaGVkIiwiZGVzY2VuZCIsInNvcnRlZCIsIm5EYXRhIiwiZW50cmllcyIsImdyZWF0ZXIiLCJsZXNzZXIiLCJnZXRMYXN0IiwiZ2V0QXQiLCJrZXlPZiIsImxhc3RLZXlPZiIsIl9fYXJyYXlMaWJyYXJ5XzE2IiwiXyRNYXRoc0xpYnJhcnlfMTYiLCJwbGFjZVVuaXQiLCJudW0iLCJkaXIiLCJ2YXJpYW5jZSIsIm1lYW4iLCJzdGFuZGFyZERldmlhdGlvbiIsInNxcnQiLCJtZWRpYW4iLCJtb2RlIiwicmVjb3JkIiwibm9ybWFsaXplRGF0YSIsIm5vcm1hbGl6ZWQiLCJtaW5pbXVpbVN3YXBzIiwiYXJyIiwib3JkZXIiLCJzd2FwIiwiY2hlY2tlZCIsImNvdW50ZXIiLCJmaW5hbCIsInByaW1lRmFjdG9yaXplIiwibnVtYmVyIiwiZGl2aWRlbmQiLCJkaXZpZGVyIiwiZmFjdG9ycyIsImxjZiIsImNvbW1vbkZhY3RvcnMiLCJtYWluIiwiZmFjdG9yIiwic3RyaXBJbnRlZ2VyIiwic3RyaXBGcmFjdGlvbiIsImNoYW5nZUJhc2UiLCJwYXJzZUZsb2F0IiwicHJvZHVjdCIsImFycmF5cyIsInN1YiIsIm11bCIsImRpdmlkZSIsIm1hdGhMaWJyYXJ5Iiwib2JqZWN0TGlicmFyeSIsIl9fbWF0aExpYnJhcnlfMTUiLCJfX29iamVjdExpYnJhcnlfMTUiLCJfX2FycmF5TGlicmFyeV8xNSIsIl8kYmFzZV8xOSIsIkJhc2UiLCJjb2xvckhhbmRsZXIiLCJtYXRoIiwiYW5hbHl0aWNzIiwiZW50cm9weSIsImxvZzIiLCJpbmZvcm1hdGlvbkdhaW4iLCJ0YXJnZXROb2RlIiwidmFyaWFibGVEYXRhIiwiYXJyYW5nZURhdGEiLCJ0YXJnZXREYXRhIiwidGFyZ2V0RW50cm9weSIsInN1bU9mSW5mb3JtYXRpb24iLCJ2YXJpYWJsZVZhbHVlcyIsInZhcmlhYmxlTGVuZ3RoIiwiaGlnaGVzdEluZm9ybWF0aW9uR2Fpbk5vZGUiLCJub2RlcyIsImdhaW5lZEluZm9ybWF0aW9uIiwicXVhcnRpbGVSYW5nZSIsIm1pZGRsZSIsIl9kdCIsImdldE1pZGRsZSIsIm1pZGRsZTEiLCJtaWRkbGUyIiwibWlkZGxlcyIsImhhbGZzIiwibGF5ZXJzIiwibGF5ZXIxIiwibGF5ZXIyIiwibGF5ZXIzIiwibGF5ZXI0IiwibWlkZGxlMyIsInExIiwiXyRBbmFseXNpc0xpYnJhcnlfMTMiLCJpY29ucyIsImxvYWRDc3MiLCJDb2xvclBpY2tlciIsIkZ1bmMiLCJDb21wb25lbnRzIiwiVGVtcGxhdGUiLCJOZXVyYWxOZXR3b3JrIiwiaWhXZWlnaHRzIiwiaE5vZGVzIiwiaU5vZGVzIiwicmFuZG9taXplIiwiaWhCaWFzIiwiaG9XZWlnaHRzIiwib05vZGVzIiwiaG9CaWFzIiwibHIiLCJpbnB1dEFycmF5IiwiaW5wdXRzIiwicHJlcGFyZUlucHV0cyIsImhpZGRlbnMiLCJtdWx0aXBseSIsInNpZ21vaWQiLCJvdXRwdXRzIiwidGFyZ2V0QXJyYXkiLCJmZWVkRm93YXJkIiwiZXJyb3JzIiwiZ3JhZGllbnRzIiwiZFNpZ21vaWQiLCJpbnB1dHNUcmFuc3Bvc2VkIiwiY2hhbmdlIiwidGFyZ2V0cyIsImhvRXJyb3JzIiwic3VidHJhY3QiLCJob1VwZGF0ZXMiLCJnZXRXZWlnaHRzVXBkYXRlIiwiaG9XZWlnaHRzVHJhbnNwb3NlZCIsImloRXJyb3JzIiwiaWhVcGRhdGVzIiwidHJhaW5pbmdEYXRhIiwicGVyaW9kIiwiZXBvY2giLCJwcmVwYXJlVGFyZ2V0cyIsInJ1biIsImJhY2twcm9wYWdhdGUiLCJmcm9tQXJyYXkiLCJPYmplY3RzTGlicmFyeSIsIkNvbXByZXNzaW9uIiwiZ2V0RnJlcXVlbmN5IiwiZnJlcXVlbmN5IiwiZ2V0UHJvYmFiaWxpdGllcyIsInByb2JzIiwicHJvYmFiaWxpdGllcyIsInByb2IiLCJpc1VEQyIsIm5vUHJlZml4Iiwia2VlcFJ1bm5pbmciLCJhZGRTdXJmaXgiLCJzdHIiLCJjaGVja1ByZWZpeCIsInNmQWxnb3JpdGhtIiwiY29kZVdvcmQiLCJzcGxpdERhdGEiLCJjb21pbmdOb2RlIiwicHJvYmFiaWxpdHkiLCJodWZmbWFuQ29kaW5nIiwicHJvZCIsIm9yaWdpbnMiLCJkaWciLCJjb21pbmciLCJkb3duIiwidXAiLCJuZXdMZWFmIiwibmFtZUl0ZW1zIiwiYXZnTGVuZ3RoIiwiZ29sb21iIiwicSIsInVuYXJ5IiwiZmlsbCIsImVuY29kZUFyaXRobWV0aWMiLCJnZXRYIiwiYm91bmRzIiwidSIsImxvd2VyTiIsImJvdW5kIiwidXBwZXJOIiwiZGVjb2RlQXJpdGhtZXRpYyIsInRhZyIsImNvbXBsZXRlIiwiZW5jb2RlRGlhZ3JhbSIsImRpY3Rpb25hcnkiLCJlbmNvZGUiLCJzeW1ib2wiLCJlbmNvZGVMWjEiLCJ3aW5kb3dTaXplIiwic2VhcmNoU2l6ZSIsImxvb2tBaGVhZFNpemUiLCJsb29rQWhlYWRTdG9wIiwic2VhcmNoU3RvcCIsImxvb2tBaGVhZEJ1ZmZlciIsInNlYXJjaEJ1ZmZlciIsImdldFRyaXBsZXQiLCJvIiwiZm91bmRNYXRjaGVzIiwiaW5kZXhJbkRhdGEiLCJpbmRleEluTG9va0FoZWFkIiwibWF0Y2hpbmciLCJkZWNvZGVMWjEiLCJ0cmlwbGV0cyIsInQiLCJlbmNvZGVMWjIiLCJsYXN0SW5kZXgiLCJkdXBsZXRzIiwiZGVjb2RlTFoyIiwiZW5jb2RlTFpXIiwiaW5pdERpY3Rpb25hcnkiLCJkZWNvZGVMWlciLCJzaW5nbGV0b24iLCJyZWJ1aWxkIiwiYnVpbGRXaXRoIiwiZGVjb2RlIiwiYnVpbGQiLCJfX0Z1bmNfMiIsIl9fZnVuY18yIiwiX19PYmplY3RzTGlicmFyeV8zIiwiX19GdW5jXzEiLCJfX05ldXJhbE5ldHdvcmtfMSIsIl9fTWF0cml4XzEiLCJfX1RlbXBsYXRlXzEiLCJfX0NvbXBvbmVudHNfMSIsIl9fQ29tcHJlc3Npb25fMSIsIl9fQ29sb3JQaWNrZXJfMSIsIl8kYnJvd3Nlcl8xIiwiQXBwTGlicmFyeSIsIm1ha2VXZWJhcHAiLCJhbmNob3IiLCJwYXJlbnRBbmNob3IiLCJvcGVuIiwicHJlcGFyZVVybCIsInByZXZlbnREZWZhdWx0IiwicHVzaFN0YXRlIiwib25wb3BzdGF0ZSIsIm9yaWdpbiIsInByb3RvY29sIiwiYWpheCIsIm1ldGhvZCIsInNlY3VyZWQiLCJGb3JtRGF0YSIsInJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJvbnByb2dyZXNzIiwibG9hZGVkIiwidG90YWwiLCJvbmVycm9yIiwiXyRTeXN0ZW1fMjEiLCJjb25uZWN0Iiwic2VudGVuY2UiLCJrZXJkeCIsImNvbXByZXNzb3IiLCJlbmNvZGVkIiwiYXBwTGlicmFyeSIsInRoZW4iLCJyZXNwb25zZSIsImNhdGNoIiwiYm9hcmQiLCJwcmV2aW91c0NvbW1hbmRzIiwiY29tbWFuZExpc3QiLCJjbGVhciIsImxvZ0l0ZW0iLCJwcmludCIsInByb3BzIiwiZ2V0Q29tbWFuZFByb3BzIiwiZGlzYWJsZUlucHV0Iiwid3JpdGUiLCJzeXN0ZW0iLCJmaW5hbGx5IiwiZW5hYmxlSW5wdXQiLCJhcmciLCJjb21tYW5kcyIsImFyZ3MiLCJjcmVhdGVXaW5kb3ciLCJyZXNwb25zZVdpbmRvdyIsImF1dG9Db21wbGV0ZSIsImNvbW1hbmRJbnB1dCIsIndpbmRvd0xvZyIsImZvY3VzIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJjb21tYW5kIiwicmVzaXplIiwiZGlzcGxheURhdGEiLCJjbGVhbiIsImNhbkRyYWciLCJva0hlaWdodCIsIndpdGhpbiIsIl9fQmFzZV8yMiIsIl9fQ29tcHJlc3Npb25fMjIiLCJfX0FwcExpYnJhcnlfMjIiLCJfX1RlbXBsYXRlXzIyIiwiTG9nZ2VyIiwiXyRMb2dnZXJfMjAiLCJTeXN0ZW0iLCJtbXUiLCJsb2dnZXIiLCJfX3N5c3RlbV8yMiIsImdlbmVyYXRlUmVxdWVzdENvbnRlbnQiLCJnZW5lcmF0ZURhdGEiLCJ2YWxpZGF0ZVJlcXVlc3QiLCJyZXF1ZXN0Q29udGVudHMiLCJ2YWxpZGF0ZUZvcm0iLCJzZW5kUmVxdWVzdCIsImpzb25Gb3JtIiwiYWxsRGF0YSIsIm5ld0RhdGEiLCJzdWJtaXRSZXF1ZXN0IiwicmVxdWVzdERhdGEiLCJyZXNwb25zZVdpbmRvd0NsZWFyIiwicmVzcG9uc2VXaW5kb3dUb2dnbGUiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0EsSUFBQUEsRUFBQSxNQUFBQyxjQUFBQyxLQUFBQyxTQUFBLDZCQUFBRCxLQUFBRSxPQUFBLDZCQUFBRixLQUFBRyxPQUFBLGFBQUFILEtBQUFJLFFBQUEsNEJBQUFKLEtBQUFLLE9BQUEsQ0FBQSxVQUFBLFVBQUEsUUFBQSxRQUFBLE1BQUEsT0FBQSxPQUFBLFNBQUEsWUFBQSxVQUFBLFdBQUEsWUFBQUwsS0FBQU0sS0FBQSxDQUFBLFNBQUEsU0FBQSxVQUFBLFlBQUEsV0FBQSxTQUFBLFlBQUFOLEtBQUFPLFFBQUEsQ0FBQSxPQUFBLFNBQUEsbUJBQUFQLEtBQUFRLFNBQUEsQ0FBQSxVQUFBLFNBQUEsV0FBQSxXQUFBUixLQUFBUyxVQUFBLENBQUEsZUFBQSxRQUFBLFVBQUEsV0FBQSxVQUFBVCxLQUFBVSxVQUFBLENBQUEsVUFBQSxRQUFBLFFBQUEsT0FBQVYsS0FBQVcsY0FBQSxDQUFBLFFBQUEsYUFBQVgsS0FBQVksaUJBQUEsQ0FBQSxVQUFBLFlBQUFaLEtBQUFhLFlBQUEsQ0FBQSxjQUFBLFVBQUEsVUFBQSxZQUFBLFVBQUEsY0FBQSxhQUFBLFdBQUFDLE9BQUFkLEtBQUFlLGNBQUEsQ0FBQSxVQUFBLFNBQUEsVUFBQSxPQUFBLFVBQUFmLEtBQUFnQixXQUFBLENBQUEsUUFBQSxrQkFBQSxZQUFBLFFBQUEsY0FBQSxVQUFBLFVBQUEsZUFBQSxVQUFBLFNBQUEsVUFBQSxTQUFBLFVBQUEsV0FBQSxXQUFBLFNBQUEsUUFBQSxrQkFBQSxnQkFBQSxjQUFBLFFBQUEsWUFBQSxVQUFBLFlBQUFoQixLQUFBaUIsV0FBQSxDQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLE9BQUEsUUFBQSxPQUFBLFFBQUEsT0FBQSwwQkFBQWpCLEtBQUFrQixPQUFBLENBQUEsTUFBQSxRQUFBLE9BQUEsU0FBQSxRQUFBLFFBQUEsU0FBQSxTQUFBLFNBQUEsU0FBQSxjQUFBLE9BQUEsU0FBQWxCLEtBQUFtQixTQUFBLENBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxVQUFBLE9BQUEsU0FBQSxTQUFBLFNBQUFuQixLQUFBb0IsWUFBQSxDQUFBLFFBQUEsU0FBQSxTQUFBLFNBQUEsU0FBQSxRQUFBLE9BQUEsUUFBQSxTQUFBLFNBQUEsVUFBQSxXQUFBcEIsS0FBQXFCLFFBQUEsQ0FBQSxzQkFBQSxvQkFBQSxpQkFBQSxZQUFBLE9BQUEsU0FBQXJCLEtBQUFzQixRQUFBLENBQUEsa0JBQUEsbUJBQUEsb0JBQUEsaUJBQUEsT0FBQSxTQUFBdEIsS0FBQXVCLFVBQUEsQ0FBQSxPQUFBLFlBQUEsUUFBQSxVQUFBeEIsY0FBQXlCLEdBQUEsSUFBQUMsRUFBQXpCLEtBQUEwQixVQUFBRixFQUFBLE9BQUEsUUFBQSxJQUFBQyxFQUFBRSxLQUFBQyxNQUFBSCxHQUFBLE1BQUFJLEdBQUFKLEVBQUEsR0FBQSxPQUFBQSxFQUFBMUIsUUFBQStCLEVBQUEsR0FBQUMsRUFBQSxHQUFBQyxFQUFBLEdBQUEsR0FBQUEsRUFBQUEsR0FBQSxHQUFBLEdBQUFGLEVBQUFHLFFBQUFGLEdBQUEsT0FBQSxFQUFBLEdBQUFDLElBQUFGLEVBQUFBLEVBQUFJLE1BQUFILElBQUFJLE9BQUEsT0FBQSxFQUFBLElBQUFDLEVBQUEsRUFBQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsRUFBQVAsRUFBQUssT0FBQUUsSUFBQUEsR0FBQUwsSUFBQUksR0FBQU4sRUFBQU8sR0FBQUYsUUFBQSxPQUFBQyxFQUFBTCxFQUFBSSxPQUFBSCxFQUFBakMsUUFBQStCLEVBQUEsR0FBQVEsRUFBQSxHQUFBQyxFQUFBLEdBQUFQLEVBQUEsR0FBQSxJQUFBUSxFQUFBUixFQUFBQSxHQUFBLEVBQUFTLEVBQUFILElBQUFDLEVBQUFQLEVBQUEsRUFBQUEsRUFBQVUsRUFBQTFDLEtBQUEyQyxRQUFBYixFQUFBUSxFQUFBRSxHQUFBSSxFQUFBNUMsS0FBQTJDLFFBQUFiLEVBQUFTLEVBQUFFLEdBQUEsT0FBQSxHQUFBQyxHQUFBQSxFQUFBSixFQUFBSCxRQUFBTCxFQUFBSyxTQUFBLEdBQUFTLEdBQUEsRUFBQWQsRUFBQWUsTUFBQUgsRUFBQUUsRUFBQUwsRUFBQUosUUFBQXBDLFdBQUErQixFQUFBLEdBQUFRLEVBQUEsR0FBQUMsRUFBQSxJQUFBLElBQUFPLEVBQUFkLEVBQUEsRUFBQWUsRUFBQSxHQUFBLE1BQUEsR0FBQUQsR0FBQUEsRUFBQTlDLEtBQUFnRCxRQUFBbEIsRUFBQVEsRUFBQUMsRUFBQVAsR0FBQUEsS0FBQSxHQUFBYyxHQUFBQyxFQUFBRSxLQUFBSCxHQUFBLE9BQUFDLEVBQUFoRCxVQUFBK0IsRUFBQSxHQUFBUSxFQUFBLEdBQUFDLEVBQUEsR0FBQVAsRUFBQSxHQUFBLElBQUFRLEVBQUFSLEVBQUFBLEdBQUEsRUFBQVMsRUFBQUgsSUFBQUMsRUFBQVAsRUFBQSxFQUFBQSxFQUFBVSxFQUFBMUMsS0FBQTJDLFFBQUFiLEVBQUFRLEVBQUFFLEdBQUFJLEVBQUE1QyxLQUFBMkMsUUFBQWIsRUFBQVMsRUFBQUUsR0FBQSxPQUFBLEdBQUFDLEdBQUFBLEVBQUFKLEVBQUFILFFBQUFMLEVBQUFLLFNBQUEsR0FBQVMsR0FBQSxFQUFBZCxFQUFBZSxNQUFBSCxFQUFBSixFQUFBSCxPQUFBUyxHQUFBN0MsYUFBQStCLEVBQUEsR0FBQVEsRUFBQSxHQUFBQyxFQUFBLElBQUEsSUFBQU8sRUFBQWQsRUFBQSxFQUFBZSxFQUFBLEdBQUEsTUFBQSxHQUFBRCxHQUFBQSxFQUFBOUMsS0FBQTBCLFVBQUFJLEVBQUFRLEVBQUFDLEVBQUFQLEdBQUFBLEtBQUEsR0FBQWMsR0FBQUMsRUFBQUUsS0FBQUgsR0FBQSxPQUFBQyxFQUFBaEQsV0FBQW1ELEdBQUEsSUFBQUMsRUFBQTFCLEVBQUEyQixFQUFBRixFQUFBRyxNQUFBQyxRQUFBRCxFQUFBLEdBQUEsR0FBQSxJQUFBRCxFQUFBLENBQUEsSUFBQUcsRUFBQUgsRUFBQUEsRUFBQWxCLE1BQUEsTUFBQSxJQUFBLElBQUFHLEtBQUFlLEVBQUFHLEVBQUF2RCxLQUFBd0QsS0FBQW5CLEdBQUFjLEVBQUFuRCxLQUFBeUQsWUFBQUYsRUFBQXJCLE1BQUEsS0FBQSxJQUFBVCxFQUFBekIsS0FBQTBELGNBQUFILEVBQUFyQixNQUFBLEtBQUF5QixNQUFBLElBQUEsSUFBQSxJQUFBUixJQUFBRSxFQUFBRixHQUFBbkQsS0FBQXdELEtBQUEvQixJQUFBLE9BQUE0QixFQUFBdEQsaUJBQUEsSUFBQU0sRUFBQSxHQUFBLElBQUEsSUFBQWdDLEVBQUEsRUFBQUEsRUFBQXJDLEtBQUFLLE9BQUE4QixPQUFBRSxJQUFBaEMsRUFBQTRDLEtBQUFqRCxLQUFBSyxPQUFBZ0MsR0FBQVEsTUFBQSxFQUFBLElBQUEsT0FBQXhDLEVBQUFOLFlBQUE2RCxFQUFBLElBQUEsSUFBQUMsRUFBQSxHQUFBLElBQUEsSUFBQXhCLEVBQUEsRUFBQUEsRUFBQXVCLEVBQUF6QixPQUFBRSxJQUFBLEtBQUF1QixFQUFBdkIsR0FBQXdCLEdBQUFELElBQUF2QixHQUFBeUIsY0FBQUQsR0FBQUQsRUFBQXZCLEdBQUEwQixjQUFBLE9BQUFGLEVBQUE5RCxhQUFBNkQsRUFBQSxJQUFBLElBQUFDLEVBQUEsR0FBQSxJQUFBLElBQUF4QixFQUFBLEVBQUFBLEVBQUF1QixFQUFBekIsT0FBQUUsSUFBQXJDLEtBQUFnRSxVQUFBSixFQUFBdkIsTUFBQXdCLEdBQUEsS0FBQUEsR0FBQUQsRUFBQXZCLEdBQUEwQixjQUFBLE9BQUFGLEVBQUE5RCxpQkFBQWtFLEVBQUEsSUFBQSxJQUFBeEMsRUFBQSxHQUFBLElBQUEsSUFBQVksS0FBQTRCLEVBQUEsS0FBQUEsRUFBQTVCLEtBQUEsR0FBQUEsRUFBQVosR0FBQXdDLEVBQUE1QixHQUFBMEIsY0FBQS9ELEtBQUFrRSxNQUFBRCxFQUFBNUIsRUFBQSxLQUFBLEtBQUE0QixFQUFBNUIsRUFBQSxHQUFBWixHQUFBd0MsRUFBQTVCLEdBQUF5QixjQUFBckMsR0FBQXdDLEVBQUE1QixJQUFBLE9BQUFaLEVBQUExQixpQkFBQW9FLEVBQUEsSUFBQSxJQUFBMUMsRUFBQSxHQUFBLElBQUEsSUFBQVksS0FBQThCLEVBQUEsR0FBQTlCLEdBQUFyQyxLQUFBZ0UsVUFBQUcsRUFBQTlCLElBQUFaLEdBQUEsSUFBQTBDLEVBQUE5QixHQUFBMEIsY0FBQXRDLEdBQUEwQyxFQUFBOUIsR0FBQSxPQUFBWixFQUFBMUIsWUFBQXFFLEdBQUEsT0FBQXpDLEtBQUEwQyxVQUFBRCxJQUFBekMsS0FBQTBDLFVBQUEsSUFBQXRFLE9BQUF1RSxFQUFBLENBQUFDLE1BQUEsRUFBQUMsTUFBQSxJQUFBLElBQUFDLEVBQUEsT0FBQXpFLEtBQUEwRSxZQUFBSixHQUFBRyxFQUFBLEVBQUFFLEtBQUFGLFNBQUEsRUFBQXpFLEtBQUFrRSxNQUFBSSxFQUFBQyxPQUFBRSxFQUFBRSxLQUFBRixTQUFBSCxFQUFBQyxNQUFBdkUsS0FBQWtFLE1BQUFJLEVBQUFFLE9BQUFDLEVBQUExRSxNQUFBNkMsRUFBQSxFQUFBRixFQUFBLEdBQUEsSUFBQWpCLEVBQUEsR0FBQSxJQUFBLElBQUFZLEVBQUFLLEdBQUEsRUFBQUwsRUFBQU8sRUFBQVAsSUFBQVosRUFBQXdCLEtBQUFaLEdBQUEsT0FBQVosRUFBQTFCLGVBQUFvQyxFQUFBLEdBQUEsSUFBQSxJQUFBeUMsRUFBQTVFLEtBQUFDLFNBQUFELEtBQUFFLE9BQUFGLEtBQUFHLE9BQUEwRSxFQUFBLEdBQUF4QyxFQUFBLEVBQUFBLEVBQUFGLEVBQUFFLElBQUF3QyxHQUFBRCxFQUFBRCxLQUFBRyxNQUFBSCxLQUFBRixTQUFBRyxFQUFBekMsU0FBQSxPQUFBMEMsRUFBQTlFLGtCQUFBb0MsRUFBQSxHQUFBLElBQUEsSUFBQXlDLEVBQUE1RSxLQUFBQyxTQUFBNEMsTUFBQSxFQUFBLEdBQUE3QyxLQUFBRSxPQUFBMkMsTUFBQSxFQUFBLEdBQUE3QyxLQUFBRyxPQUFBMEUsRUFBQSxHQUFBeEMsRUFBQSxFQUFBQSxFQUFBRixFQUFBRSxJQUFBd0MsR0FBQUQsRUFBQUQsS0FBQUcsTUFBQUgsS0FBQUYsU0FBQUcsRUFBQXpDLFNBQUEsT0FBQTBDLEVBQUE5RSxZQUFBb0MsRUFBQSxHQUFBLE9BQUE0QyxLQUFBQyxNQUFBQyxTQUFBOUMsR0FBQXdDLEtBQUFGLFNBQUFRLFNBQUE5QyxHQUFBVSxNQUFBLEdBQUE5QyxXQUFBdUUsR0FBQSxJQUFBWSxFQUFBbEYsS0FBQW1GLFlBQUFiLEVBQUFZLEtBQUEsT0FBQUEsRUFBQUUsS0FBQWQsRUFBQWUsT0FBQWYsRUFBQWdCLFNBQUF2QixjQUFBL0QsS0FBQXVGLFVBQUFMLEVBQUFaLEVBQUFlLE9BQUF0RixnQkFBQXlGLEVBQUEsSUFBQSxJQUFBLElBQUFDLEVBQUEsR0FBQXBELEVBQUFtRCxFQUFBckQsT0FBQSxFQUFBRSxHQUFBLEVBQUFBLElBQUFvRCxHQUFBRCxFQUFBbkQsR0FBQSxJQUFBbUQsRUFBQSxHQUFBbkQsRUFBQSxFQUFBQSxFQUFBb0QsRUFBQXRELE9BQUFFLElBQUEsQ0FBQSxJQUFBcUQsR0FBQXJELEVBQUEsR0FBQSxFQUFBbUQsR0FBQUMsRUFBQXBELEdBQUEsR0FBQXFELEdBQUFyRCxHQUFBb0QsRUFBQXRELE9BQUEsSUFBQXFELEdBQUEsS0FBQSxJQUFBQyxFQUFBLEdBQUFwRCxFQUFBbUQsRUFBQXJELE9BQUEsRUFBQUUsR0FBQSxFQUFBQSxJQUFBb0QsR0FBQUQsRUFBQW5ELEdBQUEsT0FBQW9ELEVBQUExRixVQUFBMEIsRUFBQSxJQUFBLEdBQUEsR0FBQUEsRUFBQVUsT0FBQSxPQUFBbkMsS0FBQUMsU0FBQTBGLFNBQUFsRSxHQUFBMUIsV0FBQTBCLEVBQUEsSUFBQSxPQUFBekIsS0FBQWdFLFVBQUF2QyxFQUFBLElBQUFBLElBQUFBLEVBQUFBLEVBQUFTLE1BQUEsS0FBQSxHQUFBbEMsS0FBQUMsU0FBQUQsS0FBQUUsT0FBQStCLFFBQUFSLEVBQUEsS0FBQXpCLEtBQUEwRCxjQUFBakMsRUFBQXdELFdBQUEsSUFBQSxLQUFBbEYsS0FBQStCLEVBQUEsSUFBQSxPQUFBQSxFQUFBSSxNQUFBLElBQUEwRCxVQUFBQyxLQUFBLElBQUE5RixRQUFBMEIsRUFBQSxJQUFBLEdBQUEsR0FBQUEsRUFBQVUsT0FBQSxPQUFBbkMsS0FBQUUsT0FBQXlGLFNBQUFsRSxHQUFBMUIsU0FBQTBCLEVBQUEsSUFBQSxHQUFBLEdBQUFBLEVBQUFVLE9BQUEsT0FBQW5DLEtBQUFJLFFBQUF1RixTQUFBbEUsR0FBQTFCLE9BQUEwQixFQUFBLElBQUEsSUFBQSxJQUFBcUUsS0FBQXJFLEVBQUEsR0FBQXpCLEtBQUErRixRQUFBdEUsRUFBQXFFLElBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQS9GLGdCQUFBMEIsRUFBQSxJQUFBLEdBQUFBLEVBQUFVLE9BQUEsRUFBQSxJQUFBLElBQUE2RCxLQUFBdkUsRUFBQSxHQUFBekIsS0FBQWdFLFVBQUF2QyxFQUFBdUUsSUFBQSxJQUFBLElBQUFDLEtBQUF4RSxFQUFBLEdBQUF6QixLQUFBa0csUUFBQXpFLEVBQUF3RSxJQUFBLElBQUEsSUFBQUUsS0FBQTFFLEVBQUEsR0FBQXpCLEtBQUErRixRQUFBdEUsRUFBQTBFLElBQUEsSUFBQSxJQUFBQyxLQUFBM0UsRUFBQSxHQUFBekIsS0FBQXFHLFNBQUE1RSxFQUFBMkUsSUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBckcsWUFBQStCLEVBQUEsR0FBQUwsRUFBQSxJQUFBLE9BQUEsR0FBQUssRUFBQUcsUUFBQVIsR0FBQTFCLFFBQUEwQixFQUFBLElBQUEsT0FBQSxJQUFBQSxFQUFBLElBQUE2RSxPQUFBN0UsSUFBQVUsUUFBQW5DLEtBQUFHLE9BQUF3RixTQUFBbEUsR0FBQTFCLFFBQUEwQixFQUFBLElBQUEsSUFBQThFLEVBQUE5RSxFQUFBUyxNQUFBLEtBQUEsR0FBQSxHQUFBcUUsRUFBQXBFLE9BQUEsT0FBQSxFQUFBLEdBQUFuQyxLQUFBd0csY0FBQUQsRUFBQSxJQUFBLE9BQUEsRUFBQSxJQUFBRSxFQUFBRixFQUFBLEdBQUFyRSxNQUFBLEtBQUEsT0FBQSxHQUFBdUUsRUFBQXRFLFNBQUFuQyxLQUFBd0csY0FBQUMsRUFBQSxNQUFBekcsS0FBQXdHLGNBQUFDLEVBQUEsSUFBQTFHLFNBQUEwQixHQUFBLElBQUFpRixFQUFBLE1BQUEsa0JBQUFqRixFQUFBaUYsRUFBQWpGLEVBQUEsaUJBQUFBLEVBQUFpRixFQUFBLFFBQUFqRixFQUFBa0YscUJBQUEsS0FBQWxGLEVBQUFrRixvQkFBQSxpQkFBQWxGLElBQUFpRixFQUFBLEdBQUFqRixHQUFBaUYsRUFBQTNHLFFBQUEwQixHQUFBLElBQUFtRixFQUFBLE1BQUEsa0JBQUFuRixFQUFBbUYsRUFBQW5GLEVBQUEsaUJBQUFBLEVBQUFtRixFQUFBLFNBQUFuRixFQUFBa0YscUJBQUEsS0FBQWxGLEVBQUFrRixvQkFBQSxpQkFBQWxGLElBQUFtRixFQUFBLEdBQUFuRixHQUFBbUYsRUFBQTdHLGFBQUE4RyxFQUFBLElBQUEsT0FBQUMsT0FBQUMsS0FBQUYsR0FBQTFFLE9BQUFwQyxjQUFBMEIsRUFBQSxJQUFBLEdBQUEsSUFBQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxJQUFBcUUsS0FBQXJFLEVBQUEsR0FBQSxLQUFBQSxFQUFBcUUsR0FBQSxPQUFBLEVBQUEsT0FBQSxFQUFBL0YsVUFBQStCLEVBQUEsR0FBQUMsRUFBQSxJQUFBLElBQUEsSUFBQStELEtBQUFoRSxFQUFBLEdBQUFDLEdBQUFELEVBQUFnRSxHQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUEvRixLQUFBZ0MsRUFBQSxJQUFBLEdBQUEsS0FBQUEsRUFBQSxHQUFBLENBQUEsSUFBQSxJQUFBaUYsRUFBQSxHQUFBM0UsRUFBQSxFQUFBQSxFQUFBTixFQUFBSSxPQUFBRSxJQUFBLEdBQUFBLElBQUEyRSxHQUFBakYsRUFBQU0sSUFBQU4sRUFBQS9CLEtBQUF3RCxLQUFBd0QsR0FBQSxHQUFBLEtBQUFqRixFQUFBQSxFQUFBSSxPQUFBLEdBQUEsQ0FBQSxJQUFBNkUsRUFBQSxHQUFBM0UsRUFBQSxFQUFBQSxFQUFBTixFQUFBSSxPQUFBRSxJQUFBQSxHQUFBTixFQUFBSSxPQUFBLElBQUE2RSxHQUFBakYsRUFBQU0sSUFBQU4sRUFBQS9CLEtBQUF3RCxLQUFBd0QsR0FBQSxPQUFBakYsRUFBQWhDLGNBQUFrSCxFQUFBLEdBQUFDLEVBQUEsR0FBQUMsRUFBQSxJQUFBLElBQUExRixFQUFBLEdBQUEsSUFBQSxJQUFBWSxFQUFBLEVBQUFBLEVBQUE0RSxFQUFBOUUsT0FBQUUsSUFBQTRFLEVBQUE1RSxJQUFBNkUsRUFBQXpGLEdBQUEwRixFQUFBMUYsR0FBQXdGLEVBQUE1RSxHQUFBLE9BQUFaLEVBQUExQixpQkFBQXFILEVBQUEsSUFBQSxNQUFBLEtBQUFBLEVBQUFBLEVBQUFqRixPQUFBLEtBQUFpRixHQUFBLEtBQUFBLEVBQUFySCxtQkFBQXNILEVBQUEsSUFBQSxJQUFBLElBQUFoRixFQUFBLEVBQUFBLEVBQUEsZUFBQUYsT0FBQUUsSUFBQSxHQUFBLGVBQUFBLElBQUFnRixFQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUF0SCxVQUFBK0IsRUFBQSxHQUFBQyxFQUFBLElBQUEsSUFBQSxJQUFBdUYsRUFBQSxFQUFBakYsRUFBQSxFQUFBQSxFQUFBUCxFQUFBSyxPQUFBRSxJQUFBUCxFQUFBTyxJQUFBTixHQUFBdUYsSUFBQSxPQUFBQSxFQUFBdkgsYUFBQStCLEVBQUEsR0FBQUMsRUFBQSxJQUFBLElBQUF3RixFQUFBLEdBQUEsSUFBQSxJQUFBbEYsRUFBQSxFQUFBQSxFQUFBUCxFQUFBSyxPQUFBRSxJQUFBUCxFQUFBTyxLQUFBTixHQUFBd0YsRUFBQXRFLEtBQUFaLEdBQUEsT0FBQWtGLEVBQUF4SCxNQUFBeUgsR0FBQSxZQUFBLElBQUFBLEVBQUF6SCxPQUFBeUgsR0FBQSxPQUFBLE1BQUFBLEVBQUF6SCxRQUFBeUgsR0FBQSxPQUFBeEgsS0FBQWtFLE1BQUFzRCxLQUFBeEgsS0FBQXlILE9BQUFELEdBQUF6SCxRQUFBeUgsR0FBQSxJQUFBRSxHQUFBLEVBQUEsTUFBQSxpQkFBQUYsSUFBQUUsRUFBQUYsRUFBQUcsY0FBQUMsT0FBQUYsRUFBQTNILFNBQUF5SCxHQUFBLElBQUFFLEdBQUEsRUFBQSxNQUFBLGlCQUFBRixJQUFBRSxFQUFBRixFQUFBRyxjQUFBYixRQUFBWSxFQUFBM0gsU0FBQXlILEdBQUEsSUFBQUUsR0FBQSxFQUFBLE1BQUEsaUJBQUFGLElBQUFFLEVBQUFGLEVBQUFHLGNBQUFyQixRQUFBb0IsRUFBQTNILFNBQUF5SCxHQUFBLElBQUFFLEdBQUEsRUFBQSxNQUFBLGlCQUFBRixJQUFBRSxFQUFBRixFQUFBRyxjQUFBRSxRQUFBSCxFQUFBM0gsT0FBQXlILEdBQUEsSUFBQUUsR0FBQSxFQUFBLE1BQUEsa0JBQUFGLElBQUFFLEVBQUFGLEVBQUFHLGNBQUFHLFNBQUFKLEVBQUEzSCxXQUFBeUgsR0FBQSxNQUFBLG1CQUFBQSxFQUFBekgsa0JBQUFnSSxFQUFBLEdBQUFDLEVBQUEsVUFBQSxJQUFBQyxFQUFBLEdBQUEsSUFBQSxJQUFBQyxLQUFBSCxFQUFBRSxFQUFBQyxTQUFBSCxFQUFBRyxHQUFBRixFQUFBQyxHQUFBbEksV0FBQSxNQUFBLGlFQUFBb0ksS0FBQUMsVUFBQUMsV0FBQXRJLFVBQUF1SSxFQUFBLEdBQUFDLEVBQUEsSUFBQSxJQUFBQyxFQUFBeEksS0FBQWtFLE1BQUFvRSxFQUFBRSxVQUFBRixFQUFBRSxTQUFBLE9BQUFDLEVBQUF6SSxLQUFBa0UsTUFBQW9FLEVBQUFHLFVBQUFILEVBQUFHLFNBQUEsR0FBQUMsRUFBQTFJLEtBQUFrRSxNQUFBb0UsRUFBQUssTUFBQUwsRUFBQUksS0FBQSxHQUFBRSxFQUFBNUksS0FBQWtFLE1BQUFvRSxFQUFBTSxVQUFBTixFQUFBTSxTQUFBLEdBQUFDLEVBQUEsSUFBQUMsR0FBQSxFQUFBOUksS0FBQWtFLE1BQUFvRSxFQUFBbEQsT0FBQTBCLE9BQUFDLEtBQUF1QixFQUFBbEQsTUFBQTJELElBQUE1RixJQUFBMkYsSUFBQUQsR0FBQTFGLEVBQUEsSUFBQW1GLEVBQUFsRCxLQUFBakMsR0FBQSxLQUFBQSxHQUFBb0YsSUFBQU8sR0FBQSxLQUFBLElBQUFFLEVBQUFSLEVBQUEsTUFBQUMsRUFBQSxJQUFBQyxFQUFBLElBQUFFLEVBQUFDLEVBQUEsT0FBQUcsRUFBQUEsRUFBQUMsWUFBQSxNQUFBRCxFQUFBN0csT0FBQSxFQUFBNkcsRUFBQW5HLE1BQUEsRUFBQW1HLEVBQUE3RyxPQUFBLEdBQUE2RyxHQUFBQyxZQUFBLE1BQUFELEVBQUE3RyxPQUFBLEVBQUE2RyxFQUFBbkcsTUFBQSxFQUFBbUcsRUFBQTdHLE9BQUEsR0FBQTZHLEVBQUFqSixZQUFBaUosRUFBQSxJQUFBLEdBQUFoSixLQUFBa0UsTUFBQThFLEdBQUEsQ0FBQSxJQUFBRSxHQUFBLEtBQUFGLEVBQUFBLEVBQUEvRCxZQUFBaEQsUUFBQSxPQUFBLEtBQUErRyxFQUFBOUcsTUFBQSxPQUFBLEdBQUFpSCxFQUFBSCxFQUFBOUcsTUFBQSxPQUFBeUIsSUFBQSxHQUFBZ0YsRUFBQVEsRUFBQWpILE1BQUEsS0FBQSxHQUFBdUcsRUFBQUUsRUFBQXpHLE1BQUEsS0FBQSxHQUFBd0csRUFBQUMsRUFBQXpHLE1BQUEsS0FBQXlCLElBQUEsR0FBQXlELEVBQUEsSUFBQStCLEVBQUFqSCxNQUFBLEtBQUF5QixJQUFBLEdBQUFpRixFQUFBeEIsRUFBQWxGLE1BQUEsS0FBQSxHQUFBMkcsR0FBQSxJQUFBekIsRUFBQW5GLFFBQUEsS0FBQSxLQUFBbUYsRUFBQWxGLE1BQUEsS0FBQXlCLElBQUEsR0FBQXlCLEVBQUEsR0FBQSxHQUFBLE1BQUF5RCxFQUFBLENBQUEsSUFBQU8sRUFBQVAsRUFBQTNHLE1BQUEsS0FBQSxJQUFBLElBQUE0RCxLQUFBc0QsRUFBQSxDQUFBLElBQUFDLEVBQUFELEVBQUF0RCxHQUFBNUQsTUFBQSxLQUFBbUgsRUFBQSxHQUFBakUsRUFBQXBGLEtBQUEwRCxjQUFBMkYsRUFBQSxHQUFBLElBQUEsTUFBQXJKLEtBQUEwRCxjQUFBMkYsRUFBQSxHQUFBLElBQUEsS0FBQWpFLEVBQUFwRixLQUFBMEQsY0FBQTJGLEVBQUEsR0FBQSxJQUFBLE1BQUEsSUFBQSxNQUFBLENBQUFMLFNBQUFBLEVBQUFFLFNBQUFBLEVBQUFDLFNBQUFBLEVBQUFSLEtBQUFBLEVBQUFXLFNBQUFKLEVBQUEsTUFBQVAsRUFBQUYsU0FBQUEsRUFBQUMsS0FBQUEsRUFBQXRCLEtBQUFBLEVBQUF3QixTQUFBQSxFQUFBQyxRQUFBQSxFQUFBekQsS0FBQUEsSUFBQXJGLFdBQUFpSixFQUFBLElBQUEsSUFBQUgsR0FBQSxLQUFBRyxFQUFBQSxFQUFBL0QsWUFBQWhELFFBQUEsS0FBQSxLQUFBK0csRUFBQTlHLE1BQUEsS0FBQXlCLElBQUEsR0FBQXlCLEVBQUEsR0FBQSxHQUFBLE1BQUF5RCxFQUFBLENBQUEsSUFBQU8sRUFBQVAsRUFBQTNHLE1BQUEsS0FBQSxJQUFBLElBQUE0RCxLQUFBc0QsRUFBQSxDQUFBLElBQUFDLEVBQUFELEVBQUF0RCxHQUFBNUQsTUFBQSxLQUFBbUgsRUFBQSxHQUFBakUsRUFBQXBGLEtBQUEwRCxjQUFBMkYsRUFBQSxHQUFBLElBQUEsTUFBQXJKLEtBQUEwRCxjQUFBMkYsRUFBQSxHQUFBLElBQUEsS0FBQWpFLEVBQUFwRixLQUFBMEQsY0FBQTJGLEVBQUEsR0FBQSxJQUFBLE1BQUEsSUFBQSxPQUFBakUsSUNDQSxJQUFBbUUsRUFBQSxJQUFBLEVBQUEsTUFBQUMsRUFBQXpKLFlBQUF1RSxFQUFBLENBQUFtRixLQUFBLEVBQUFDLEtBQUEsRUFBQUMsU0FBQSxLQUFBN0MsT0FBQUMsS0FBQXpDLEdBQUF5RSxJQUFBNUYsSUFBQW5ELEtBQUFtRCxHQUFBbUIsRUFBQW5CLEtBQUFuRCxLQUFBeUosS0FBQXpKLEtBQUF5SixNQUFBLEVBQUF6SixLQUFBMEosS0FBQTFKLEtBQUEwSixNQUFBLEVBQUExSixLQUFBMkosU0FBQTNKLEtBQUEySixVQUFBLEdBQUEzSixLQUFBNEosUUFBQTVKLEtBQUEySixVQUFBNUosUUFBQTRKLEVBQUEsSUFBQTNKLEtBQUEySixTQUFBQSxFQUFBM0osS0FBQTZKLEtBQUEsR0FBQSxJQUFBLElBQUF4SCxFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsQ0FBQXJDLEtBQUE2SixLQUFBeEgsR0FBQSxHQUFBLElBQUEsSUFBQWlGLEVBQUEsRUFBQUEsRUFBQXRILEtBQUF5SixLQUFBbkMsSUFBQXRILEtBQUE2SixLQUFBeEgsR0FBQWlGLEdBQUFxQyxFQUFBRyxTQUFBQyxnQkFBQSxJQUFBTixLQUFBQSxFQUFBQyxLQUFBQSxHQUFBMUosS0FBQSxNQUFBLENBQUF5SixLQUFBQSxFQUFBQyxLQUFBQSxHQUFBM0osSUFBQWlLLEVBQUEsR0FBQSxHQUFBQSxhQUFBUixFQUFBLElBQUEsSUFBQW5ILEVBQUEsRUFBQUEsRUFBQXJDLEtBQUF5SixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0SCxLQUFBMEosS0FBQXBDLElBQUF0SCxLQUFBNkosS0FBQXhILEdBQUFpRixJQUFBMEMsRUFBQUgsS0FBQXhILEdBQUFpRixRQUFBLEdBQUEwQyxhQUFBcEMsTUFBQSxJQUFBLElBQUF2RixFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEgsS0FBQTBKLEtBQUFwQyxJQUFBdEgsS0FBQTZKLEtBQUF4SCxHQUFBaUYsSUFBQTBDLEVBQUEzSCxHQUFBaUYsUUFBQSxJQUFBLElBQUFqRixFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEgsS0FBQTBKLEtBQUFwQyxJQUFBdEgsS0FBQTZKLEtBQUF4SCxHQUFBaUYsSUFBQTBDLEVBQUFqSyxTQUFBaUssRUFBQSxHQUFBLEdBQUFBLGFBQUFSLEVBQUEsSUFBQSxJQUFBbkgsRUFBQSxFQUFBQSxFQUFBckMsS0FBQXlKLEtBQUFwSCxJQUFBLElBQUEsSUFBQWlGLEVBQUEsRUFBQUEsRUFBQXRILEtBQUEwSixLQUFBcEMsSUFBQXRILEtBQUE2SixLQUFBeEgsR0FBQWlGLElBQUEwQyxFQUFBSCxLQUFBeEgsR0FBQWlGLFFBQUEsR0FBQTBDLGFBQUFwQyxNQUFBLElBQUEsSUFBQXZGLEVBQUEsRUFBQUEsRUFBQXJDLEtBQUF5SixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0SCxLQUFBMEosS0FBQXBDLElBQUF0SCxLQUFBNkosS0FBQXhILEdBQUFpRixJQUFBMEMsRUFBQTNILEdBQUFpRixRQUFBLElBQUEsSUFBQWpGLEVBQUEsRUFBQUEsRUFBQXJDLEtBQUF5SixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0SCxLQUFBMEosS0FBQXBDLElBQUF0SCxLQUFBNkosS0FBQXhILEdBQUFpRixJQUFBMEMsRUFBQWpLLFNBQUFpSyxFQUFBLEdBQUEsR0FBQUEsYUFBQVIsRUFBQSxJQUFBLElBQUFuSCxFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBMEMsRUFBQU4sS0FBQXBDLElBQUF0SCxLQUFBNkosS0FBQXhILEdBQUFpRixJQUFBMEMsRUFBQUgsS0FBQXhILEdBQUFpRixRQUFBLEdBQUEwQyxhQUFBcEMsTUFBQSxJQUFBLElBQUF2RixFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEgsS0FBQTBKLEtBQUFwQyxJQUFBdEgsS0FBQTZKLEtBQUF4SCxHQUFBaUYsSUFBQTBDLEVBQUEzSCxHQUFBaUYsUUFBQSxJQUFBLElBQUFqRixFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEgsS0FBQTBKLEtBQUFwQyxJQUFBdEgsS0FBQTZKLEtBQUF4SCxHQUFBaUYsSUFBQTBDLEVBQUFqSyxZQUFBQyxLQUFBK0ksSUFBQXRILEdBQUE4SCxFQUFBOUUsVUFBQTFFLFlBQUEsSUFBQWtLLEVBQUEsSUFBQVQsRUFBQSxDQUFBQyxLQUFBekosS0FBQTBKLEtBQUFBLEtBQUExSixLQUFBeUosT0FBQSxJQUFBLElBQUFwSCxFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEgsS0FBQTBKLEtBQUFwQyxJQUFBMkMsRUFBQUosS0FBQXZDLEdBQUFqRixHQUFBckMsS0FBQTZKLEtBQUF4SCxHQUFBaUYsR0FBQVIsT0FBQUMsS0FBQWtELEdBQUFsQixJQUFBNUYsSUFBQW5ELEtBQUFtRCxHQUFBOEcsRUFBQTlHLEtBQUFwRCxJQUFBbUssRUFBQSxFQUFBekksS0FBQU8sU0FBQSxJQUFBLElBQUFLLEVBQUEsRUFBQUEsRUFBQXJDLEtBQUF5SixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0SCxLQUFBMEosS0FBQXBDLElBQUEsQ0FBQSxJQUFBN0YsRUFBQXpCLEtBQUE2SixLQUFBeEgsR0FBQWlGLEdBQUF0SCxLQUFBNkosS0FBQXhILEdBQUFpRixHQUFBNEMsRUFBQXpJLEVBQUFZLEVBQUFpRixJQUFBdkgsUUFBQW9LLFFBQUFDLE1BQUFwSyxLQUFBNkosTUFBQTlKLE1BQUFvSyxRQUFBRSxJQUFBckssS0FBQXNLLFdBQUF2SyxVQUFBLE9BQUFDLEtBQUEySixTQUFBLEdBQUFILEVBQUFULElBQUEvSSxLQUFBeUIsSUFBQXpCLEtBQUEySixTQUFBMUcsS0FBQXhCLEtBQUF6QixLQUFBMkosU0FBQTVKLFFBQUF1RSxFQUFBLENBQUFtRixLQUFBLEVBQUFDLEtBQUEsSUFBQTFKLEtBQUFzSyxVQUFBdEssS0FBQXlKLEtBQUFuRixFQUFBbUYsS0FBQXpKLEtBQUEwSixLQUFBcEYsRUFBQW9GLEtBQUExSixLQUFBNEosUUFBQTVKLEtBQUEySixVQUFBNUosY0FBQTJKLEdBQUEsSUFBQWpJLEVBQUEsR0FBQSxJQUFBLElBQUFZLEtBQUFxSCxFQUFBakksRUFBQXdCLEtBQUEyRSxNQUFBMkMsS0FBQXZLLEtBQUE2SixLQUFBVyxHQUFBQSxFQUFBZCxFQUFBckgsTUFBQSxPQUFBWixFQUFBMUIsV0FBQTBKLEdBQUEsSUFBQWhJLEVBQUEsR0FBQSxJQUFBLElBQUFnSixFQUFBLEVBQUFBLEVBQUF6SyxLQUFBeUosS0FBQWdCLElBQUFoQixFQUFBOUQsU0FBQThFLElBQUFoSixFQUFBd0IsS0FBQWpELEtBQUE2SixLQUFBWSxJQUFBLE9BQUFoSixFQUFBMUIsZUFBQTJLLEdBQUEsSUFBQUMsRUFBQSxHQUFBLE9BQUFuQixFQUFBVCxJQUFBMkIsRUFBQWpKLElBQUFrSixFQUFBMUgsS0FBQXhCLEtBQUFrSixFQUFBNUssZ0JBQUFpRyxFQUFBLElBQUF3RCxFQUFBdkQsR0FBQSxJQUFBMEQsRUFBQSxHQUFBRixFQUFBekQsRUFBQXlELEtBQUFDLEVBQUExRCxFQUFBMEQsS0FBQSxHQUFBekQsYUFBQXVELEVBQUEsSUFBQSxJQUFBbkgsRUFBQSxFQUFBQSxFQUFBb0gsRUFBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBb0MsRUFBQXBDLElBQUFxQyxFQUFBMUcsS0FBQStDLEVBQUE2RCxLQUFBeEgsR0FBQWlGLEdBQUFyQixFQUFBNEQsS0FBQXhILEdBQUFpRixTQUFBLEdBQUFyQixhQUFBMkIsTUFBQSxJQUFBLElBQUF2RixFQUFBLEVBQUFBLEVBQUEyRCxFQUFBeUQsS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEIsRUFBQTBELEtBQUFwQyxJQUFBcUMsRUFBQTFHLEtBQUErQyxFQUFBNkQsS0FBQXhILEdBQUFpRixHQUFBckIsRUFBQTVELEdBQUFpRixTQUFBLElBQUEsSUFBQWpGLEVBQUEsRUFBQUEsRUFBQXJDLEtBQUF5SixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0SCxLQUFBMEosS0FBQXBDLElBQUFxQyxFQUFBMUcsS0FBQStDLEVBQUE2RCxLQUFBeEgsR0FBQWlGLEdBQUFyQixHQUFBLE9BQUEsSUFBQXVELEVBQUEsQ0FBQUMsS0FBQUEsRUFBQUMsS0FBQUEsRUFBQUMsU0FBQUEsSUFBQTVKLFdBQUFpRyxFQUFBLElBQUF3RCxFQUFBdkQsR0FBQSxJQUFBMEQsRUFBQSxHQUFBRixFQUFBekQsRUFBQXlELEtBQUFDLEVBQUExRCxFQUFBMEQsS0FBQSxHQUFBekQsYUFBQXVELEVBQUEsSUFBQSxJQUFBbkgsRUFBQSxFQUFBQSxFQUFBb0gsRUFBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBb0MsRUFBQXBDLElBQUFxQyxFQUFBMUcsS0FBQStDLEVBQUE2RCxLQUFBeEgsR0FBQWlGLEdBQUFyQixFQUFBNEQsS0FBQXhILEdBQUFpRixTQUFBLEdBQUFyQixhQUFBMkIsTUFBQSxJQUFBLElBQUF2RixFQUFBLEVBQUFBLEVBQUEyRCxFQUFBeUQsS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEIsRUFBQTBELEtBQUFwQyxJQUFBcUMsRUFBQTFHLEtBQUErQyxFQUFBNkQsS0FBQXhILEdBQUFpRixHQUFBckIsRUFBQTVELEdBQUFpRixTQUFBLElBQUEsSUFBQWpGLEVBQUEsRUFBQUEsRUFBQXJDLEtBQUF5SixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0SCxLQUFBMEosS0FBQXBDLElBQUFxQyxFQUFBMUcsS0FBQStDLEVBQUE2RCxLQUFBeEgsR0FBQWlGLEdBQUFyQixHQUFBLE9BQUEsSUFBQXVELEVBQUEsQ0FBQUMsS0FBQUEsRUFBQUMsS0FBQUEsRUFBQUMsU0FBQUEsSUFBQTVKLGdCQUFBaUcsRUFBQSxJQUFBd0QsRUFBQXZELEdBQUEsSUFBQXdELEVBQUFDLEVBQUFDLEVBQUEsR0FBQSxHQUFBMUQsYUFBQXVELEVBQUEsQ0FBQSxHQUFBeEQsRUFBQTBELE9BQUF6RCxFQUFBd0QsS0FBQSxZQUFBVSxRQUFBRSxJQUFBLHFDQUFBWixFQUFBekQsRUFBQXlELEtBQUFDLEVBQUF6RCxFQUFBeUQsS0FBQSxJQUFBLElBQUFySCxFQUFBLEVBQUFBLEVBQUFvSCxFQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUFvQyxFQUFBcEMsSUFBQSxDQUFBLElBQUFzRCxFQUFBLEVBQUEsSUFBQSxJQUFBQyxFQUFBLEVBQUFBLEVBQUE3RSxFQUFBMEQsS0FBQW1CLElBQUFELEdBQUE1RSxFQUFBNkQsS0FBQXhILEdBQUF3SSxHQUFBNUUsRUFBQTRELEtBQUFnQixHQUFBdkQsR0FBQXFDLEVBQUExRyxLQUFBMkgsU0FBQSxHQUFBM0UsYUFBQTJCLE1BQUEsQ0FBQTZCLEVBQUF6RCxFQUFBeUQsS0FBQUMsRUFBQTFELEVBQUEwRCxLQUFBLElBQUEsSUFBQXJILEVBQUEsRUFBQUEsRUFBQTJELEVBQUF5RCxLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0QixFQUFBMEQsS0FBQXBDLElBQUFxQyxFQUFBMUcsS0FBQStDLEVBQUE2RCxLQUFBeEgsR0FBQWlGLEdBQUFyQixFQUFBNUQsR0FBQWlGLFNBQUEsSUFBQSxJQUFBakYsRUFBQSxFQUFBQSxFQUFBckMsS0FBQXlKLEtBQUFwSCxJQUFBLElBQUEsSUFBQWlGLEVBQUEsRUFBQUEsRUFBQXRILEtBQUEwSixLQUFBcEMsSUFBQXFDLEVBQUExRyxLQUFBK0MsRUFBQTZELEtBQUF4SCxHQUFBaUYsR0FBQXJCLEdBQUEsT0FBQSxJQUFBdUQsRUFBQSxDQUFBQyxLQUFBQSxFQUFBQyxLQUFBQSxFQUFBQyxTQUFBQSxJQUFBNUosY0FBQWlHLEVBQUEsSUFBQXdELEVBQUF2RCxHQUFBLElBQUF3RCxFQUFBQyxFQUFBQyxFQUFBLEdBQUEsR0FBQTFELGFBQUF1RCxFQUFBLENBQUEsR0FBQXhELEVBQUEwRCxPQUFBekQsRUFBQXdELEtBQUEsWUFBQVUsUUFBQUUsSUFBQSxxQ0FBQVosRUFBQXpELEVBQUF5RCxLQUFBQyxFQUFBekQsRUFBQXlELEtBQUEsSUFBQSxJQUFBckgsRUFBQSxFQUFBQSxFQUFBb0gsRUFBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBb0MsRUFBQXBDLElBQUEsQ0FBQSxJQUFBc0QsRUFBQSxFQUFBLElBQUEsSUFBQUMsRUFBQSxFQUFBQSxFQUFBN0UsRUFBQTBELEtBQUFtQixJQUFBRCxHQUFBNUUsRUFBQTZELEtBQUF4SCxHQUFBd0ksR0FBQTVFLEVBQUE0RCxLQUFBZ0IsR0FBQXZELElBQUEsRUFBQXFDLEVBQUExRyxLQUFBMkgsU0FBQSxHQUFBM0UsYUFBQTJCLE1BQUEsQ0FBQTZCLEVBQUF6RCxFQUFBeUQsS0FBQUMsRUFBQTFELEVBQUEwRCxLQUFBLElBQUEsSUFBQXJILEVBQUEsRUFBQUEsRUFBQTJELEVBQUF5RCxLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF0QixFQUFBMEQsS0FBQXBDLElBQUFxQyxFQUFBMUcsS0FBQStDLEVBQUE2RCxLQUFBeEgsR0FBQWlGLEdBQUFyQixFQUFBNUQsR0FBQWlGLElBQUEsUUFBQSxJQUFBLElBQUFqRixFQUFBLEVBQUFBLEVBQUFyQyxLQUFBeUosS0FBQXBILElBQUEsSUFBQSxJQUFBaUYsRUFBQSxFQUFBQSxFQUFBdEgsS0FBQTBKLEtBQUFwQyxJQUFBcUMsRUFBQTFHLEtBQUErQyxFQUFBNkQsS0FBQXhILEdBQUFpRixHQUFBckIsR0FBQSxHQUFBLE9BQUEsSUFBQXVELEVBQUEsQ0FBQUMsS0FBQUEsRUFBQUMsS0FBQUEsRUFBQUMsU0FBQUEsSUFBQTVKLGlCQUFBMkssRUFBQSxJQUFBbEIsR0FBQSxPQUFBQSxFQUFBVCxJQUFBMkIsRUFBQWpKLEdBQUE4SCxFQUFBOUUsVUFBQTFFLGlCQUFBMkssRUFBQSxJQUFBbEIsR0FBQSxJQUFBUyxFQUFBLElBQUFULEVBQUEsQ0FBQUMsS0FBQWlCLEVBQUFoQixLQUFBQSxLQUFBZ0IsRUFBQWpCLE9BQUEsSUFBQSxJQUFBcEgsRUFBQSxFQUFBQSxFQUFBcUksRUFBQWpCLEtBQUFwSCxJQUFBLElBQUEsSUFBQWlGLEVBQUEsRUFBQUEsRUFBQW9ELEVBQUFoQixLQUFBcEMsSUFBQTJDLEVBQUFKLEtBQUF2QyxHQUFBakYsR0FBQXFJLEVBQUFiLEtBQUF4SCxHQUFBaUYsR0FBQSxPQUFBMkMsRUFBQWxLLFdBQUEySyxFQUFBLElBQUFsQixFQUFBVSxFQUFBLFVBQUEsSUFBQUQsRUFBQSxJQUFBVCxFQUFBLENBQUFDLEtBQUFpQixFQUFBakIsS0FBQUMsS0FBQWdCLEVBQUFoQixPQUFBLElBQUEsSUFBQXJILEVBQUEsRUFBQUEsRUFBQXFJLEVBQUFqQixLQUFBcEgsSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUFvRCxFQUFBaEIsS0FBQXBDLElBQUEsQ0FBQSxJQUFBN0YsRUFBQWlKLEVBQUFiLEtBQUF4SCxHQUFBaUYsR0FBQTJDLEVBQUFKLEtBQUF4SCxHQUFBaUYsR0FBQTRDLEVBQUF6SSxFQUFBWSxFQUFBaUYsR0FBQSxPQUFBMkMsRUFBQWxLLGlCQUFBNEosRUFBQSxJQUFBLE9BQUEsSUFBQUgsRUFBQSxDQUFBQyxLQUFBRSxFQUFBeEgsT0FBQXVILEtBQUEsRUFBQUMsU0FBQUEsSUFBQTVKLGVBQUF1RSxFQUFBLENBQUFtRixLQUFBLEVBQUFDLEtBQUEsRUFBQWdCLE9BQUEsSUFBQWxCLElBQUEsT0FBQWxGLEVBQUFxRixTQUFBSCxFQUFBYyxRQUFBaEcsRUFBQW9HLGVBQUFwRyxFQUFBb0csT0FBQSxJQUFBbEIsRUFBQWxGLEdBQUF2RSxpQkFBQTJLLEVBQUEsSUFBQWxCLEdBQUEsSUFBQUcsRUFBQWhGLEtBQUFtRyxVQUFBdEIsRUFBQWMsUUFBQUksSUFBQSxPQUFBLElBQUFsQixFQUFBLENBQUFDLEtBQUFpQixFQUFBakIsS0FBQUMsS0FBQWdCLEVBQUFoQixLQUFBQyxTQUFBQSxJQUFBNUosZ0JBQUE0SyxFQUFBLElBQUEsSUFBQUQsRUFBQWxCLEVBQUF1QixPQUFBSixFQUFBeEksUUFBQSxJQUFBLElBQUFFLEtBQUFxSSxFQUFBYixLQUFBLElBQUEsSUFBQXZDLEtBQUFvRCxFQUFBYixLQUFBeEgsR0FBQUEsR0FBQWlGLElBQUFvRCxFQUFBYixLQUFBeEgsR0FBQWlGLEdBQUFxRCxFQUFBdEksSUFBQSxPQUFBcUksRUFBQUosVUFBQUksRUFBQTNLLFlBQUFpTCxFQUFBLEdBQUEsSUFBQU4sRUFBQWxCLEVBQUF1QixPQUFBQyxHQUFBLElBQUEsSUFBQTNJLEtBQUFxSSxFQUFBYixLQUFBLElBQUEsSUFBQXZDLEtBQUFvRCxFQUFBYixLQUFBeEgsR0FBQUEsR0FBQWlGLElBQUFvRCxFQUFBYixLQUFBeEgsR0FBQWlGLEdBQUEsR0FBQSxPQUFBb0QsRUFBQUosVUFBQUksRUFBQTNLLGNBQUFpTCxFQUFBLEdBQUEsT0FBQSxJQUFBeEIsRUFBQSxDQUFBQyxLQUFBdUIsRUFBQXRCLEtBQUFzQixJQUFBakwsc0JBQUEySyxFQUFBLElBQUFsQixLQUFBRSxHQUFBLElBQUFqSSxFQUFBaUosRUFBQU8sY0FBQXZCLEdBQUFDLEVBQUEvQixNQUFBc0QsUUFBQXpKLEdBQUF3SSxFQUFBLElBQUFULEVBQUEsQ0FBQUMsS0FBQWhJLEVBQUFVLE9BQUF1SCxLQUFBZ0IsRUFBQWhCLEtBQUFDLFNBQUFBLElBQUEsT0FBQU0sRUFBQWtCLFlBQUFsQixFQUFBbEssa0JBQUFxTCxFQUFBLEdBQUF6QixFQUFBLElBQUEsSUFBQTBCLEVBQUEsR0FBQSxJQUFBLElBQUFoSixFQUFBLEVBQUFBLEVBQUErSSxFQUFBakosT0FBQUUsSUFBQWdKLEVBQUFwSSxLQUFBLENBQUF3RyxLQUFBMkIsRUFBQS9JLEdBQUFxSCxLQUFBMEIsSUFBQS9JLElBQUEsSUFBQSxJQUFBaUosRUFBQUMsSUFBQSxJQUFBYixFQUFBLElBQUFsQixFQUFBNkIsRUFBQUUsSUFBQSxPQUFBQSxFQUFBLEdBQUFGLEVBQUFsSixPQUFBdUksRUFBQTNCLElBQUF0SCxHQUFBa0ksRUFBQUcsU0FBQSxHQUFBWSxFQUFBM0IsSUFBQXRILEdBQUE2SixFQUFBQyxFQUFBLElBQUFiLEdBQUEsT0FBQVksRUFBQSxJQUFBLElBQUFFLEVBQUFoQyxFQ0FBaUMsRUFBQSxXQUFBLElBQUFDLEVBQUEsQ0FBQTFJLFFBQUEsQ0FBQWxCLEVBQUFRLEVBQUFDLEVBQUFQLEtBQUEsSUFBQVEsRUFBQVIsRUFBQUEsR0FBQSxFQUFBUyxFQUFBSCxJQUFBQyxFQUFBUCxFQUFBLEVBQUFBLEVBQUFVLEVBQUFnSixFQUFBL0ksUUFBQWIsRUFBQVEsRUFBQUUsR0FBQUksRUFBQThJLEVBQUEvSSxRQUFBYixFQUFBUyxFQUFBRSxHQUFBLEVBQUEsT0FBQSxHQUFBQyxHQUFBLEdBQUFFLEVBQUEsS0FBQWQsRUFBQWUsTUFBQUgsRUFBQUUsSUFBQWxCLFVBQUEsQ0FBQUksRUFBQVEsRUFBQUMsRUFBQVAsS0FBQSxJQUFBUSxFQUFBUixFQUFBQSxHQUFBLEVBQUFTLEVBQUFILElBQUFDLEVBQUFQLEVBQUEsRUFBQUEsRUFBQVUsRUFBQWdKLEVBQUEvSSxRQUFBYixFQUFBUSxFQUFBRSxHQUFBLEVBQUFJLEVBQUE4SSxFQUFBL0ksUUFBQWIsRUFBQVMsRUFBQUUsR0FBQSxPQUFBLEdBQUFDLElBQUEsR0FBQUUsRUFBQSxLQUFBZCxFQUFBZSxNQUFBSCxFQUFBRSxJQUFBK0ksU0FBQSxDQUFBN0osRUFBQUMsS0FBQSxJQUFBLElBQUFNLEtBQUFQLEVBQUEsR0FBQUEsRUFBQU8sSUFBQU4sRUFBQSxPQUFBLEVBQUEsT0FBQSxHQUFBWSxRQUFBLENBQUFiLEVBQUFDLEVBQUFDLEtBQUFBLEVBQUFBLEdBQUEsRUFBQSxJQUFBNEosR0FBQSxFQUFBLElBQUEsSUFBQXZKLEVBQUEsRUFBQUEsRUFBQVAsRUFBQUssT0FBQUUsSUFBQSxHQUFBUCxFQUFBTyxJQUFBTixLQUFBNkosR0FBQTVKLEVBQUEsT0FBQUssRUFBQSxPQUFBLEdBQUF3SixLQUFBLENBQUEvSixFQUFBb0ksS0FBQSxJQUFBLElBQUE3SCxLQUFBUCxFQUFBLEdBQUEsR0FBQW9JLEVBQUFwSSxFQUFBTyxJQUFBLE9BQUFQLEVBQUFPLElBQUF5SixRQUFBLENBQUFoSyxFQUFBb0ksS0FBQSxJQUFBNkIsRUFBQSxHQUFBLElBQUEsSUFBQTFKLEtBQUFQLEVBQUEsR0FBQW9JLEVBQUFwSSxFQUFBTyxLQUFBMEosRUFBQTlJLEtBQUFuQixFQUFBTyxJQUFBLE9BQUEwSixHQUFBQyxVQUFBLENBQUFsSyxFQUFBcUIsRUFBQTFCLEtBQUEsSUFBQW9GLEVBQUEsSUFBQSxJQUFBeEUsS0FBQVAsRUFBQUEsRUFBQU8sR0FBQWMsSUFBQTFCLElBQUFvRixFQUFBL0UsRUFBQU8sSUFBQSxPQUFBd0UsR0FBQW9GLGNBQUEsQ0FBQW5LLEVBQUFxQixFQUFBMUIsS0FBQSxJQUFBeUssRUFBQSxHQUFBLElBQUEsSUFBQTdKLEtBQUFQLEVBQUFBLEVBQUFPLEdBQUFjLElBQUExQixHQUFBeUssRUFBQWpKLEtBQUFuQixFQUFBTyxJQUFBLE9BQUE2SixHQUFBQyxPQUFBLENBQUFySyxFQUFBQyxLQUFBLElBQUFtSyxFQUFBLEdBQUEsSUFBQSxJQUFBN0osS0FBQVAsRUFBQUEsRUFBQU8sSUFBQU4sR0FBQW1LLEVBQUFqSixLQUFBWixHQUFBLE9BQUE2SixHQUFBRSxVQUFBLENBQUF0SyxFQUFBQyxLQUFBLElBQUFtSyxFQUFBLEdBQUEsSUFBQSxJQUFBN0osS0FBQVAsRUFBQU8sR0FBQU4sR0FBQW1LLEVBQUFqSixLQUFBWixHQUFBLE9BQUE2SixHQUFBRyxNQUFBLENBQUF2SyxFQUFBLEdBQUFMLEVBQUEwQixFQUFBLEtBQUEsSUFBQStJLEVBQUEsR0FBQSxJQUFBLElBQUE3SixLQUFBUCxFQUFBLEdBQUFPLEdBQUFjLEVBQUEsQ0FBQStJLEVBQUE3SixHQUFBWixFQUFBLElBQUE2SyxFQUFBM0gsS0FBQUcsTUFBQTNCLEdBQUFvSixNQUFBRCxHQUFBQSxFQUFBbkosRUFBQSxFQUFBbUosSUFBQUosRUFBQUksR0FBQXhLLEVBQUFPLFFBQUE2SixFQUFBN0osR0FBQVAsRUFBQU8sR0FBQSxPQUFBNkosR0FBQU0sVUFBQSxDQUFBMUssRUFBQSxHQUFBQyxFQUFBMEssS0FBQSxJQUFBL0csRUFBQWdHLEVBQUFnQixXQUFBNUssRUFBQUMsR0FBQSxPQUFBMkosRUFBQVcsTUFBQXZLLEVBQUEySyxFQUFBL0csSUFBQWdILFdBQUEsQ0FBQTVLLEVBQUEsR0FBQUMsRUFBQSxNQUFBLElBQUEsSUFBQU0sS0FBQVAsRUFBQSxHQUFBSCxLQUFBMEMsVUFBQXZDLEVBQUFPLEtBQUFWLEtBQUEwQyxVQUFBdEMsR0FBQSxPQUFBTSxFQUFBLE9BQUEsR0FBQXNLLFNBQUEsQ0FBQTdLLEVBQUEsR0FBQUMsRUFBQSxNQUFBRCxFQUFBSCxLQUFBMEMsVUFBQXZDLEdBQUFDLEVBQUFKLEtBQUEwQyxVQUFBdEMsSUFBQSxHQUFBRCxFQUFBRyxRQUFBRixJQUFBNkssU0FBQSxDQUFBakMsRUFBQSxHQUFBeEgsS0FBQSxJQUFBMEQsRUFBQSxHQUFBLElBQUEsSUFBQXhFLEtBQUFzSSxFQUFBOUQsRUFBQThELEVBQUF0SSxHQUFBYyxJQUFBd0gsRUFBQXRJLFVBQUF3RSxFQUFBOEQsRUFBQXRJLEdBQUFjLElBQUFBLEdBQUEsT0FBQTBELEdBQUFnRyxRQUFBdkksTUFBQXdJLFdBQUFuQyxHQUFBQSxFQUFBaEcsS0FBQUcsTUFBQUgsS0FBQUYsU0FBQWtHLEVBQUF4SSxTQUFBNEssWUFBQSxDQUFBcEMsRUFBQSxNQUFBLElBQUF1QixFQUFBLEdBQUEsSUFBQSxJQUFBN0osS0FBQXNJLEVBQUEvQyxNQUFBb0YsUUFBQXJDLEVBQUF0SSxLQUFBc0ksRUFBQXRJLEdBQUFGLE9BQUEsRUFBQStKLEVBQUFqSixLQUFBeUksRUFBQXFCLFlBQUFwQyxFQUFBdEksS0FBQSxNQUFBc0ksRUFBQXRJLElBQUEsTUFBQXNJLEVBQUF0SSxJQUFBLEdBQUFzSSxFQUFBdEksSUFBQSxJQUFBc0ksRUFBQXRJLElBQUE2SixFQUFBakosS0FBQTBILEVBQUF0SSxJQUFBLE9BQUE2SixHQUFBM0IsS0FBQSxDQUFBSSxFQUFBLEdBQUFULEVBQUEsWUFBQSxJQUFBZ0MsRUFBQSxHQUFBLElBQUEsSUFBQTdKLEtBQUFzSSxFQUFBdUIsRUFBQWpKLEtBQUFpSCxFQUFBUyxFQUFBdEksR0FBQUEsSUFBQSxPQUFBNkosR0FBQWUsZ0JBQUEsQ0FBQW5MLEVBQUEsR0FBQUMsRUFBQSxNQUFBLElBQUEsSUFBQU0sS0FBQU4sRUFBQSxJQUFBLEdBQUFELEVBQUFHLFFBQUFGLEVBQUFNLElBQUEsT0FBQSxFQUFBLE9BQUEsR0FBQTZLLE1BQUEsQ0FBQXBMLEVBQUEsTUFBQSxJQUFBcUwsRUFBQSxHQUFBLElBQUEsSUFBQTlLLEtBQUFQLEdBQUEsR0FBQXFMLEVBQUFsTCxRQUFBSCxFQUFBTyxLQUFBOEssRUFBQWxLLEtBQUFuQixFQUFBTyxJQUFBLE9BQUE4SyxHQUFBQyxTQUFBLENBQUF6QyxFQUFBLEdBQUF2SSxLQUFBLElBQUE4SixFQUFBLEdBQUEsSUFBQSxJQUFBN0osS0FBQXNJLEVBQUF0SSxHQUFBRCxHQUFBOEosRUFBQWpKLEtBQUEwSCxFQUFBdEksSUFBQSxPQUFBNkosR0FBQW1CLFNBQUEsQ0FBQTFDLEVBQUEsTUFBQSxJQUFBMkMsU0FBQTNDLEVBQUEsR0FBQSxJQUFBLElBQUF0SSxLQUFBc0ksRUFBQSxVQUFBQSxFQUFBdEksSUFBQWlMLEVBQUEsTUFBQSxRQUFBLE9BQUFBLElBQUEsT0FBQTVCLEdDQUEsSUFBQTZCLEVBQUEsSUFBQXpOLEVBQUEwTixFQUFBL0IsSUFBQSxJQ0FBZ0MsRUFBQSxjQUFBM04sRUFBQUMsY0FBQTJOLFFBQUEzTixpQkFBQSxJQUFBTSxFQUFBLEdBQUEsSUFBQSxJQUFBZ0MsRUFBQSxFQUFBQSxFQUFBckMsS0FBQUssT0FBQThCLE9BQUFFLElBQUFoQyxFQUFBNEMsS0FBQWpELEtBQUFLLE9BQUFnQyxHQUFBUSxNQUFBLEVBQUEsSUFBQSxPQUFBeEMsRUFBQU4sU0FBQTZMLEVBQUEsR0FBQSxJQUFBK0IsR0FBQSxJQUFBNUksTUFBQTZJLFVBQUEsS0FBQUMsRUFBQSxHQUFBLElBQUEsSUFBQXhMLEVBQUEsRUFBQUEsRUFBQXVKLEVBQUF2SixJQUFBd0wsRUFBQTVLLEtBQUEsR0FBQTBLLEVBQUEsS0FBQUEsS0FBQUEsSUFBQSxPQUFBRSxFQUFBOU4sWUFBQStOLEdBQUEsR0FBQSxJQUFBQSxFQUFBQSxFQUFBNUwsTUFBQSxNQUFBQyxRQUFBLEdBQUEyTCxFQUFBM0wsT0FBQSxDQUFBLElBQUE0TCxFQUFBLElBQUFsRyxPQUFBaUcsRUFBQSxJQUFBRSxFQUFBLElBQUFuRyxPQUFBaUcsRUFBQSxJQUFBRyxFQUFBLEVBQUEsR0FBQSxHQUFBSCxFQUFBM0wsUUFBQSxHQUFBOEwsRUFBQSxJQUFBcEcsT0FBQWlHLEVBQUEsSUFBQUMsRUFBQSxJQUFBQSxFQUFBLEdBQUFDLEVBQUEsSUFBQUEsRUFBQSxHQUFBQyxFQUFBLElBQUFBLEVBQUEsRUFBQSxPQUFBLE9BQUEsR0FBQUYsRUFBQSxJQUFBQSxFQUFBLEdBQUFDLEVBQUEsSUFBQUEsRUFBQSxFQUFBLE9BQUEsRUFBQSxPQUFBLEdBQUFELEVBQUEsR0FBQSxHQUFBQyxFQUFBQyxFQUFBLE9BQUEsRUFBQWxPLEtBQUErTixHQUFBLElBQUFJLEVBQUFsTyxLQUFBa0UsTUFBQTRKLEdBQUEsSUFBQS9JLEtBQUFKLEtBQUFHLE1BQUFnSixJQUFBLElBQUEvSSxLQUFBZ0osRUFBQUcsRUFBQUMsV0FBQWxKLFdBQUErSSxFQUFBRSxFQUFBRSxhQUFBbkosV0FBQWdKLEVBQUFDLEVBQUFHLGFBQUFwSixXQUFBLE1BQUEsR0FBQThJLEVBQUFBLEVBQUE1TCxPQUFBLEVBQUE0TCxFQUFBLElBQUFBLEtBQUFDLEVBQUFBLEVBQUE3TCxPQUFBLEVBQUE2TCxFQUFBLElBQUFBLEtBQUFDLEVBQUFBLEVBQUE5TCxPQUFBLEVBQUE4TCxFQUFBLElBQUFBLElBQUFsTyxLQUFBK04sR0FBQSxJQUFBSSxFQUFBbE8sS0FBQWtFLE1BQUE0SixHQUFBLElBQUEvSSxLQUFBSixLQUFBRyxNQUFBZ0osSUFBQSxJQUFBL0ksS0FBQXVKLEVBQUFKLEVBQUFLLFVBQUF0SixXQUFBdUosR0FBQU4sRUFBQU8sV0FBQSxHQUFBeEosV0FBQTBJLEVBQUFPLEVBQUFRLGNBQUF6SixXQUFBLE9BQUFxSixFQUFBQSxFQUFBbk0sT0FBQSxFQUFBbU0sRUFBQSxJQUFBQSxFQUFBLEdBQUFYLEtBQUFhLEVBQUFBLEVBQUFyTSxPQUFBLEVBQUFxTSxFQUFBLElBQUFBLEtBQUFGLElBQUF2TyxVQUFBK04sR0FBQSxNQUFBLEdBQUE5TixLQUFBOE4sS0FBQUEsT0FBQTlOLEtBQUFrTyxLQUFBSixLQUFBL04sWUFBQSxJQUFBbU8sRUFBQSxJQUFBbkosS0FBQWdKLEVBQUFHLEVBQUFDLFdBQUFILEVBQUFFLEVBQUFFLGFBQUFILEVBQUFDLEVBQUFHLGFBQUEsT0FBQXJPLEtBQUEyTyxZQUFBLEdBQUFaLEtBQUFDLEtBQUFDLE9BQUEsRUFBQWxPLFlBQUEwQixHQUFBLFNBQUF6QixLQUFBNE8sT0FBQW5OLElBQUF6QixLQUFBNk8sWUFBQXBOLElBQUF6QixLQUFBOE8sYUFBQXJOLElBQUF6QixLQUFBK08sV0FBQXROLElBQUExQixXQUFBMEIsR0FBQSxJQUFBLElBQUF1TixFQUFBLEdBQUEzTSxFQUFBLEVBQUFBLEVBQUEsRUFBQUEsSUFBQTJNLEdBQUF2TixFQUFBWSxFQUFBLEdBQUEsSUFBQWtDLEVBQUEsRUFBQWlLLEVBQUF4TyxLQUFBOE8sYUFBQXJOLEdBQUEsTUFBQSxNQUFBK00sRUFBQWpLLEVBQUEsR0FBQSxNQUFBaUssRUFBQWpLLEVBQUF2RSxLQUFBaVAsV0FBQWpQLEtBQUE2TyxZQUFBcE4sSUFBQSxHQUFBLEdBQUEsTUFBQStNLEVBQUFqSyxFQUFBLEdBQUEsTUFBQWlLLEVBQUFqSyxFQUFBLEdBQUEsTUFBQWlLLEVBQUFqSyxFQUFBLEdBQUEsTUFBQWlLLEVBQUFqSyxFQUFBLEdBQUEsTUFBQWlLLEdBQUEsTUFBQUEsRUFBQWpLLEVBQUEsR0FBQSxNQUFBaUssRUFBQWpLLEVBQUEsR0FBQSxNQUFBaUssRUFBQWpLLEVBQUEsR0FBQSxNQUFBaUssRUFBQWpLLEVBQUEsR0FBQSxNQUFBaUssSUFBQWpLLEVBQUEsSUFBQUEsRUFBQXlLLEVBQUEsRUFBQUEsRUFBQWpQLE9BQUEwQixHQUFBLEdBQUEsSUFBQUEsRUFBQVUsT0FBQSxPQUFBLEVBQUEsSUFBQSxJQUFBMkQsS0FBQXJFLEVBQUEsSUFBQXpCLEtBQUErRixRQUFBdEUsRUFBQXFFLElBQUEsQ0FBQSxHQUFBLEdBQUFBLEdBQUEsR0FBQUEsRUFBQSxDQUFBLEdBQUEsS0FBQXJFLEVBQUFxRSxHQUFBLFNBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUEvRixhQUFBMEIsR0FBQSxJQUFBLElBQUF5TixFQUFBLEdBQUE3TSxFQUFBLEVBQUFBLEVBQUEsRUFBQUEsSUFBQTZNLEdBQUF6TixFQUFBWSxFQUFBLEdBQUEsT0FBQTZNLEVBQUEsSUFBQUEsRUFBQSxFQUFBLEVBQUFBLEVBQUFuUCxZQUFBMEIsR0FBQSxJQUFBLElBQUFrTSxHQUFBLElBQUE1SSxNQUFBMkosWUFBQSxLQUFBUyxFQUFBLEdBQUE5TSxFQUFBLEVBQUFBLEVBQUEsRUFBQUEsSUFBQThNLEdBQUExTixFQUFBWSxFQUFBLEdBQUEsT0FBQThNLEVBQUF4QixFQUFBLEVBQUF3QixFQUFBcFAsUUFBQTBCLEdBQUEsSUFBQSxJQUFBME4sRUFBQSxHQUFBOU0sRUFBQSxFQUFBQSxFQUFBLEVBQUFBLElBQUE4TSxHQUFBMU4sRUFBQVksRUFBQSxHQUFBLE9BQUE4TSxFQUFBcFAsV0FBQTBCLEdBQUEsT0FBQUEsRUFBQSxHQUFBLElBQUFBLEVBQUEsS0FBQSxHQUFBQSxFQUFBLEtBQUEsR0FBQTFCLFlBQUF5TyxFQUFBYixHQUFBLElBQUFyTixFQUFBLEVBQUEsTUFBQSxNQUFBa08sRUFBQWxPLEVBQUEsR0FBQSxNQUFBa08sRUFBQWxPLEVBQUFOLEtBQUFpUCxXQUFBdEIsR0FBQSxHQUFBLEdBQUEsTUFBQWEsRUFBQWxPLEVBQUEsR0FBQSxNQUFBa08sRUFBQWxPLEVBQUEsR0FBQSxNQUFBa08sRUFBQWxPLEVBQUEsR0FBQSxNQUFBa08sRUFBQWxPLEVBQUEsR0FBQSxNQUFBa08sR0FBQSxNQUFBQSxFQUFBbE8sRUFBQSxHQUFBLE1BQUFrTyxFQUFBbE8sRUFBQSxHQUFBLE1BQUFrTyxFQUFBbE8sRUFBQSxHQUFBLE1BQUFrTyxFQUFBbE8sRUFBQSxHQUFBLE1BQUFrTyxJQUFBbE8sRUFBQSxJQUFBQSxFQUFBUCxVQUFBbU8sR0FBQSxJQUFBLElBQUFQLEVBQUEsSUFBQTNOLEtBQUE0TixRQUFBTSxHQUFBTSxFQUFBLEVBQUFuTSxFQUFBLEVBQUFBLEVBQUFyQyxLQUFBOE8sYUFBQVosR0FBQTdMLElBQUFtTSxFQUFBeE8sS0FBQW9QLFlBQUEvTSxFQUFBckMsS0FBQTROLFFBQUFNLElBQUEsRUFBQU0sRUFBQSxFQUFBLE9BQUFiLEVBQUEsRUFBQWEsRUFBQSxFQUFBeE8sS0FBQStPLFdBQUFiLEdBQUEsRUFBQW5PLFFBQUEsSUFBQXNQLEVBQUEsSUFBQXRLLEtBQUF5SixFQUFBYSxFQUFBWixXQUFBLEVBQUEsRUFBQSxPQUFBLEdBQUFELEVBQUFyTSxTQUFBcU0sRUFBQSxJQUFBQSxHQUFBYSxFQUFBWCxjQUFBLElBQUFGLEVBQUEsSUFBQWEsRUFBQWQsVUFBQXhPLGNBQUEwQixHQUFBLElBQUFuQixFQUFBcUUsS0FBQUcsTUFBQXJELEVBQUF6QixLQUFBc1AsY0FBQSxJQUFBN04sR0FBQXpCLEtBQUFzUCxjQUFBaFAsR0FBQSxJQUFBaVAsRUFBQTVLLEtBQUFHLE1BQUFyRCxFQUFBekIsS0FBQXdQLGVBQUEsSUFBQS9OLEdBQUF6QixLQUFBd1AsZUFBQUQsR0FBQSxJQUFBdkIsRUFBQXJKLEtBQUFHLE1BQUFyRCxFQUFBekIsS0FBQXlQLGlCQUFBLElBQUEsTUFBQSxDQUFBblAsS0FBQUEsRUFBQWlQLE1BQUFBLEVBQUF2QixRQUFBQSxFQUFBQyxRQUFBeE0sR0FBQXpCLEtBQUF5UCxpQkFBQXpCLElBQUFqTyxjQUFBbU8sR0FBQSxJQUFBbUIsRUFBQTFLLEtBQUFHLE1BQUE5RSxLQUFBMFAsVUFBQTFQLEtBQUFxUCxVQUFBLElBQUFLLEVBQUEvSyxLQUFBRyxNQUFBOUUsS0FBQTBQLFVBQUF4QixJQUFBLElBQUF6TSxFQUFBLENBQUFrTyxLQUFBRCxFQUFBTCxFQUFBTyxLQUFBLElBQUEsT0FBQW5PLEVBQUFtTyxLQUFBRixFQUFBTCxFQUFBLFNBQUFLLEdBQUFMLEVBQUEsUUFBQSxPQUFBNU4sRUFBQTFCLFdBQUFtTyxHQUFBLElBQUFQLEVBQUEsSUFBQTlGLE9BQUE3SCxLQUFBNE4sUUFBQU0sSUFBQU0sRUFBQSxJQUFBM0csT0FBQTdILEtBQUE4TyxhQUFBWixJQUFBLE9BQUEsSUFBQXJHLE9BQUE3SCxLQUFBK08sV0FBQWIsSUFBQSxJQUFBbE8sS0FBQUssT0FBQW1PLEVBQUEsR0FBQSxLQUFBYixFQUFBNU4sY0FBQU8sR0FBQSxPQUFBcUUsS0FBQUcsTUFBQSxHQUFBeEUsRUFBQSxHQUFBLElBQUFQLGVBQUF3UCxHQUFBLE9BQUE1SyxLQUFBRyxNQUFBLEdBQUF5SyxFQUFBLElBQUF4UCxpQkFBQWlPLEdBQUEsT0FBQXJKLEtBQUFHLE1BQUEsR0FBQWtKLEdBQUFqTyxnQkFBQW1PLEdBQUEsT0FBQWxPLEtBQUFzUCxjQUFBM0ssS0FBQUcsTUFBQTlFLEtBQUEwUCxVQUFBeEIsS0FBQW5PLG1CQUFBLE9BQUFDLEtBQUE2UCxnQkFBQTdQLEtBQUFxUCxTQUFBdFAsaUJBQUEsT0FBQUMsS0FBQTZQLGdCQUFBN1AsS0FBQXFQLFNBQUFyUCxLQUFBOFAsWUFBQS9QLGtCQUFBZ1EsR0FBQSxPQUFBL1AsS0FBQTZQLGdCQUFBN1AsS0FBQWtPLEtBQUE2QixJQUFBL1AsS0FBQTJPLFlBQUEzTyxLQUFBOE4sS0FBQWlDLElBQUFoUSxPQUFBOEosR0FBQSxJQUFBaUUsRUFBQSxJQUFBOU4sS0FBQThOLFdBQUEzRCxRQUFBRSxJQUFBeUQsS0FBQWpFLEtDQUEsSUFBQW1HLEVBQUEsY0FBQXZDLEVBQUExTixZQUFBa1EsRUFBQSxTQUFBdkMsUUFBQTFOLEtBQUFrUSxRQUFBRCxFQUFBQyxRQUFBbFEsS0FBQW1RLFNBQUFGLEVBQUFFLFNBQUFwUSxRQUFBcVEsRUFBQSxJQUFBLElBQUFsTixFQUFBbEQsS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQUMsSUFBQSxhQUFBakQsS0FBQSxXQUFBOEMsS0FBQUEsVUFBQSxJQUFBcFEsS0FBQW1RLGVBQUEsSUFBQW5RLEtBQUFtUSxTQUFBSyxNQUFBeFEsS0FBQW1RLFNBQUFLLEtBQUFDLE9BQUF2TixHQUFBbkQsU0FBQTJRLEdBQUEsSUFBQUMsRUFBQSxHQUFBQyxFQUFBMU4sSUFBQSxJQUFBMk4sRUFBQTNOLEVBQUEyTixTQUFBLElBQUEsSUFBQXhPLEVBQUEsRUFBQUEsRUFBQXdPLEVBQUExTyxPQUFBRSxJQUFBdU8sRUFBQUMsRUFBQXhPLElBQUFhLEVBQUE0TixhQUFBLFVBQUEsUUFBQTVOLEVBQUFvSyxLQUFBcEssRUFBQTROLGFBQUEsWUFBQUgsRUFBQXpOLEVBQUE2TixhQUFBLFNBQUE3TixFQUFBOE4sTUFBQUwsRUFBQXpOLEVBQUE2TixhQUFBLFNBQUE3TixFQUFBOE4sTUFBQSxHQUFBTCxFQUFBek4sRUFBQTZOLGFBQUEsU0FBQTdOLEVBQUF6QixRQUFBLE9BQUFtUCxFQUFBRixHQUFBQyxFQUFBNVEsWUFBQWtSLEdBQUEsSUFBQS9OLEVBQUErTixFQUFBQyxTQUFBbk4sY0FBQXVNLEVBQUFXLEVBQUFFLGdCQUFBYixFQUFBak4sTUFBQTROLEVBQUE3TixNQUFBLElBQUF5TixFQUFBLEdBQUEsSUFBQSxJQUFBeE8sRUFBQSxFQUFBQSxFQUFBNE8sRUFBQUosU0FBQTFPLE9BQUFFLElBQUF3TyxFQUFBNU4sS0FBQWdPLEVBQUFKLFNBQUF4TyxHQUFBK08sVUFBQSxNQUFBLENBQUFsTyxRQUFBQSxFQUFBb04sV0FBQUEsRUFBQU8sU0FBQUEsR0FBQTlRLFVBQUE4RyxHQUFBLE9BQUFBLGFBQUE3RyxLQUFBa1EsUUFBQW5RLGlCQUFBOEcsRUFBQSxHQUFBd0ssR0FBQSxJQUFBQyxFQUFBMU4sRUFBQSxHQUFBNUQsS0FBQXVSLFVBQUExSyxHQUFBakQsR0FBQTBOLEVBQUF6SyxHQUFBcUssU0FBQWxSLEtBQUF1UixVQUFBMUssRUFBQTNELFNBQUFVLEdBQUEwTixFQUFBekssRUFBQTNELFNBQUFnTyxVQUFBdE4sRUFBQWlELEVBQUEzRCxRQUFBYSxjQUFBdU4sRUFBQW5CLFNBQUFFLGNBQUF4SixFQUFBM0QsVUFBQWxELEtBQUFrRSxNQUFBMkMsRUFBQXlKLGNBQUF0USxLQUFBdVIsVUFBQTFLLEdBQUEsSUFBQSxJQUFBMkssS0FBQTNLLEVBQUF5SixXQUFBLFNBQUFrQixFQUFBRixFQUFBbE8sSUFBQXlELEVBQUF5SixXQUFBa0IsSUFBQUYsRUFBQUcsYUFBQUQsRUFBQTNLLEVBQUF5SixXQUFBa0IsSUFBQSxHQUFBeFIsS0FBQWtFLE1BQUEyQyxFQUFBNUMsUUFBQXFOLEVBQUFJLFlBQUE3SyxFQUFBNUMsTUFBQWpFLEtBQUFrRSxNQUFBMkMsRUFBQThLLFFBQUFMLEVBQUFNLFVBQUEvSyxFQUFBOEssTUFBQTNSLEtBQUFrRSxNQUFBMkMsRUFBQXBGLFNBQUE2UCxFQUFBN1AsTUFBQW9GLEVBQUFwRixPQUFBbUMsRUFBQStCLFNBQUEsT0FBQTJMLEVBQUF0UixLQUFBNlIsZUFBQVAsRUFBQVEsWUFBQTlSLEtBQUFrRSxNQUFBbU4sSUFBQUEsRUFBQVUsY0FBQVQsRUFBQXpLLEVBQUFtTCxZQUFBaFMsS0FBQWtFLE1BQUEyQyxFQUFBZ0ssV0FBQVMsRUFBQVcsWUFBQXBMLEVBQUFnSyxVQUFBN1EsS0FBQWtFLE1BQUEyQyxFQUFBcUwsVUFBQXRLLE1BQUFvRixRQUFBbkcsRUFBQXFMLFNBQUEsSUFBQSxJQUFBN1AsS0FBQXdFLEVBQUFxTCxRQUFBLENBQUEsSUFBQUMsRUFBQWIsRUFBQVcsWUFBQSxDQUFBL08sUUFBQSxTQUFBekIsTUFBQVksRUFBQTRCLEtBQUE1QixFQUFBMlAsV0FBQSxXQUFBaFMsS0FBQWtFLE1BQUEyQyxFQUFBdUwsV0FBQXZMLEVBQUF1TCxVQUFBL1AsR0FBQThQLEVBQUFWLGFBQUEsWUFBQSxHQUFBLFFBQUFwUCxFQUFBNEMsV0FBQWxCLGVBQUFvTyxFQUFBVixhQUFBLFlBQUEsR0FBQSxPQUFBelIsS0FBQWtFLE1BQUFvTixFQUFBZSxRQUFBQyxPQUFBaEIsRUFBQWlCLFdBQUFqQixFQUFBZSxRQUFBQyxNQUFBaEIsRUFBQXZSLGVBQUF5UyxFQUFBLEdBQUFuQixHQUFBLElBQUFNLEdBQUEsSUFBQWMsV0FBQUMsZ0JBQUFGLEVBQUEsYUFBQWxCLEVBQUFLLEVBQUFnQixLQUFBQyxXQUFBLE9BQUEsR0FBQUosRUFBQXZRLFFBQUEsUUFBQXFQLEVBQUFLLEVBQUEsR0FBQWEsRUFBQXZRLFFBQUEsVUFBQXFQLEVBQUFLLEVBQUFnQixNQUFBM1MsS0FBQWtFLE1BQUFtTixJQUFBQSxFQUFBVSxjQUFBVCxFQUFBRCxFQUFBVyxZQUFBVixFQUFBdlIsdUJBQUE4RyxFQUFBd0ssR0FBQSxJQUFBQyxFQUFBdFIsS0FBQTZHLEVBQUFnTSxrQkFBQWhNLEVBQUF2QyxRQUFBLE9BQUF0RSxLQUFBa0UsTUFBQW1OLElBQUFBLEVBQUFVLGNBQUFULEVBQUF6SyxFQUFBbUwsWUFBQVYsRUFBQXZSLFdBQUErUyxFQUFBLENBQUE1UCxRQUFBLEdBQUFvTixXQUFBLElBQUFlLEdBQUEsSUFBQW5PLEVBQUEsR0FBQSxpQkFBQTRQLEVBQUE1UCxFQUFBbEQsS0FBQTZSLGVBQUFpQixFQUFBekIsR0FBQXJSLEtBQUF1UixVQUFBdUIsSUFBQTVQLEVBQUE0UCxFQUFBOVMsS0FBQWtFLE1BQUFtTixJQUFBQSxFQUFBVSxjQUFBN08sRUFBQTRQLEVBQUFkLGFBQUFjLEVBQUFuTCxhQUFBYixTQUFBNUQsRUFBQTRQLEVBQUFELGlCQUFBN1MsS0FBQStTLHVCQUFBRCxFQUFBekIsR0FBQXJSLEtBQUFnVCxpQkFBQUYsRUFBQXpCLElBQUFyUixLQUFBa0UsTUFBQWhCLEVBQUErUCxVQUFBalQsS0FBQWtFLE1BQUFoQixFQUFBbVAsUUFBQWEsU0FBQWhRLEVBQUErUCxTQUFBalQsS0FBQWtFLE1BQUE0TyxFQUFBSyxNQUFBLENBQUEsSUFBQUEsRUFBQWpRLEVBQUErTyxZQUFBLENBQUEvTyxRQUFBLFdBQUFnUCxRQUFBWSxFQUFBSyxPQUFBalEsRUFBQXVPLGFBQUEsT0FBQXZPLEVBQUFtUCxRQUFBYSxRQUFBQyxFQUFBMUIsYUFBQSxLQUFBdk8sRUFBQW1QLFFBQUFhLFFBQUEsR0FBQWxULEtBQUFrRSxNQUFBNE8sRUFBQU0sT0FBQSxDQUFBLElBQUFDLEVBQUFuUSxFQUFBb1EsV0FBQVIsRUFBQU0sTUFBQUMsTUFBQVAsRUFBQU0sTUFBQTNSLE9BQUF6QixLQUFBeUgsT0FBQTRMLEdBQUFuUSxFQUFBbVAsUUFBQWtCLFlBQUEsV0FBQUYsRUFBQUcsU0FBQSxDQUFBNVAsS0FBQWtQLEVBQUFNLE1BQUF4UCxLQUFBd1AsTUFBQWxRLElBQUFBLEVBQUFtUCxRQUFBa0IsWUFBQSxPQUFBLE9BQUFyUSxFQUFBbkQsY0FBQXVFLEVBQUEsQ0FBQXBCLFFBQUEsR0FBQW9OLFdBQUEsSUFBQW1ELEdBQUEsR0FBQTdMLE1BQUFvRixRQUFBMUksR0FBQSxDQUFBLElBQUFvUCxFQUFBLEdBQUEsSUFBQSxJQUFBQyxLQUFBclAsRUFBQW9QLEVBQUF6USxLQUFBakQsS0FBQTRULFdBQUFELEVBQUFGLElBQUEsT0FBQUMsRUFBQSxPQUFBMVQsS0FBQTRULFdBQUF0UCxFQUFBbVAsR0FBQTFULHFCQUFBbUQsR0FBQSxNQUFBLElBQUFBLEVBQUF6QixNQUFBMUIsa0JBQUFtRCxHQUFBLElBQUFvSyxFQUFBcEssRUFBQTZOLGFBQUEsUUFBQXRQLEVBQUF5QixFQUFBekIsTUFBQSxPQUFBekIsS0FBQXlILE9BQUE2RixJQUFBdE4sS0FBQXdHLGNBQUEvRSxHQUFBLFNBQUE2TCxFQUFBQSxFQUFBdkosZUFBQSxJQUFBdEMsRUFBQSxRQUFBNkwsR0FBQXROLEtBQUF3RyxjQUFBL0UsR0FBQSxRQUFBNkwsRUFBQXROLEtBQUE2VCxVQUFBM1EsRUFBQTRRLFVBQUEsVUFBQTlULEtBQUE0TyxPQUFBbk4sR0FBQXpCLEtBQUErVCxZQUFBdFMsR0FBQSxTQUFBNkwsRUFBQXROLEtBQUFnVSxRQUFBdlMsR0FBQSxVQUFBNkwsRUFBQXROLEtBQUFpVSxTQUFBeFMsR0FBQSxZQUFBNkwsRUFBQXROLEtBQUFrVSxnQkFBQXpTLElBQUF6QixLQUFBd0csY0FBQS9FLEdBQUExQixtQkFBQW1ELEdBQUEsT0FBQSxHQUFBQSxFQUFBekIsT0FBQSxRQUFBeUIsRUFBQXpCLE1BQUFzQyxjQUFBaEUsYUFBQTJRLEVBQUF3QixJQUFBQSxFQUFBQSxHQUFBLElBQUFpQyxVQUFBakMsRUFBQWlDLFdBQUEsMEJBQUEsSUFBQWpELEVBQUFrRCxFQUFBMU0sR0FBQSxFQUFBZ00sRUFBQWhELEVBQUE1RSxRQUFBb0csRUFBQWlDLFdBQUFFLEVBQUFDLEdBQUEsU0FBQXBELEVBQUFsUixLQUFBdVUsa0JBQUFELEdBQUEsVUFBQXBELEVBQUFsUixLQUFBd1UsbUJBQUFGLEdBQUEsWUFBQXBELEVBQUFsUixLQUFBeVUscUJBQUFILEdBQUF0VSxLQUFBMFUsc0JBQUFKLEdBQUEsSUFBQSxJQUFBalMsRUFBQSxFQUFBQSxFQUFBcVIsRUFBQXZSLE9BQUFFLElBQUEsR0FBQTZPLEVBQUF3QyxFQUFBclIsR0FBQTZPLFNBQUFrRCxFQUFBVixFQUFBclIsR0FBQTBPLGFBQUEsUUFBQSxRQUFBMkMsRUFBQXJSLEdBQUEwTyxhQUFBLFVBQUEsQ0FBQSxHQUFBL1EsS0FBQWtFLE1BQUFnTyxFQUFBeUMsT0FBQSxDQUFBLElBQUF6QyxFQUFBeUMsTUFBQWhQLFNBQUF5TyxHQUFBLFNBQUExTSxFQUFBMk0sRUFBQVgsRUFBQXJSLFNBQUFxRixFQUFBMk0sRUFBQVgsRUFBQXJSLElBQUEsSUFBQXFGLEVBQUEsTUFBQSxNQUFBLENBQUFBLEtBQUFBLEVBQUEwTSxZQUFBQSxHQUFBclUsc0JBQUFtRCxHQUFBLElBQUF6QixHQUFBLEVBQUEsT0FBQXpCLEtBQUFrRSxNQUFBaEIsRUFBQXpCLFFBQUEsSUFBQXlCLEVBQUF6QixRQUFBQSxHQUFBLEdBQUFBLEVBQUExQixtQkFBQTJRLEdBQUEsTUFBQSxRQUFBcEQsT0FBQTVCLEtBQUFrSixhQUFBblQsT0FBQTFCLGFBQUE4VSxHQUFBLElBQUFDLEVBQUFELEVBQUFFLFVBQUFGLEVBQUE1TCxZQUFBLEtBQUEsR0FBQWxGLGNBQUEsTUFBQSxPQUFBK1EsR0FBQSxPQUFBQSxHQUFBLFFBQUFBLEdBQUEsT0FBQUEsRUFBQS9VLFlBQUFpVixFQUFBaE4sRUFBQSxVQUFBLElBQUFpTixFQUFBLElBQUFDLFdBQUFDLEVBQUEsR0FBQUYsRUFBQUcsT0FBQUMsSUFBQUYsRUFBQUcsSUFBQUQsRUFBQUUsT0FBQUMsT0FBQXhOLEVBQUFtTixJQUFBQSxFQUFBbkssS0FBQWdLLEVBQUFoSyxLQUFBbUssRUFBQTdILEtBQUEwSCxFQUFBMUgsS0FBQTJILEVBQUFRLGNBQUFULEtDQUEsTUFBQVUsR0FBQSxJQUFBQyxFQUFBLGNBQUEzRixFQUFBalEsWUFBQWtRLEVBQUF5RixHQUFBaEksTUFBQXVDLEdBQUFqUSxLQUFBNFYsUUFBQSxHQUFBNVYsS0FBQTZWLGVBQUE1RixFQUFBQyxTQUFBbFEsS0FBQThWLHNCQUFBN0YsRUFBQThGLGdCQUFBL1YsS0FBQWdXLFlBQUEvRixFQUFBZ0csTUFBQWpXLEtBQUFrVyxnQkFBQWpHLEVBQUFrRyxVQUFBcFcsZUFBQW1RLEVBQUF3RixHQUFBLElBQUFoSyxFQUFBMUwsS0FBQWtRLEVBQUFrRyxVQUFBQyxlQUFBLFNBQUF6UyxHQUFBLElBQUFtRyxFQUFBL0osS0FBQW9SLFNBQUEsT0FBQXJILEVBQUE3RyxRQUFBVSxFQUFBOEgsRUFBQTJFLGNBQUF0RyxJQUFBbUcsRUFBQWtHLFVBQUFoRixPQUFBLFdBQUEsSUFBQWxPLEVBQUFsRCxLQUFBa1IsU0FBQW5OLGNBQUF1TSxFQUFBdFEsS0FBQW1SLGdCQUFBYixFQUFBak4sTUFBQXJELEtBQUFvRCxNQUFBLElBQUF5TixFQUFBLEdBQUEsSUFBQSxJQUFBeE8sRUFBQSxFQUFBQSxFQUFBckMsS0FBQTZRLFNBQUExTyxPQUFBRSxJQUFBd08sRUFBQTVOLEtBQUFqRCxLQUFBNlEsU0FBQXhPLEdBQUErTyxVQUFBLE1BQUEsQ0FBQWxPLFFBQUFBLEVBQUFvTixXQUFBQSxFQUFBTyxTQUFBQSxJQUFBWCxFQUFBa0csVUFBQUUsV0FBQSxTQUFBcEUsRUFBQSxHQUFBNU4sRUFBQSxDQUFBOE4sU0FBQSxLQUFBOU4sRUFBQUEsR0FBQSxHQUFBb0gsRUFBQXhILE1BQUFJLEVBQUFvRCxRQUFBMUgsS0FBQTRSLFVBQUEsSUFBQSxJQUFBLElBQUF2UCxFQUFBLEVBQUFBLEVBQUE2UCxFQUFBL1AsT0FBQUUsSUFBQSxDQUFBLElBQUE0QixFQUFBaU8sRUFBQTdQLEdBQUE0QixNQUFBaU8sRUFBQTdQLEdBQUFaLEVBQUF5USxFQUFBN1AsR0FBQVosT0FBQXlRLEVBQUE3UCxHQUFBOFAsRUFBQW5TLEtBQUFpUyxZQUFBLENBQUEvTyxRQUFBLFNBQUFvTixXQUFBLENBQUE3TyxNQUFBQSxHQUFBd0MsS0FBQUEsSUFBQSxRQUFBeEMsRUFBQXdELFdBQUFsQixlQUFBb08sRUFBQVYsYUFBQSxZQUFBLEdBQUEvRixFQUFBeEgsTUFBQUksRUFBQThOLFdBQUEzUSxHQUFBNkMsRUFBQThOLFVBQUFELEVBQUFWLGFBQUEsWUFBQSxLQUFBdkIsRUFBQWtHLFVBQUFHLGVBQUEsU0FBQUMsRUFBQUMsR0FBQSxJQUFBLElBQUFDLEtBQUFGLEVBQUFHLFVBQUEsSUFBQSxJQUFBQyxLQUFBSCxFQUFBRSxVQUFBLEdBQUFELEdBQUFFLEVBQUEsT0FBQUYsRUFBQSxPQUFBLE1BQUF4RyxFQUFBa0csVUFBQVMsUUFBQSxTQUFBM00sRUFBQSxVQUFBbEssS0FBQThXLGlCQUFBLDhCQUFBekIsSUFBQW5MLE9BQUFnRyxFQUFBa0csVUFBQVcsT0FBQSxHQUFBN0csRUFBQWtHLFVBQUFZLEtBQUEsR0FBQTlHLEVBQUFrRyxVQUFBYSxrQkFBQSxTQUFBQyxFQUFBaE4sRUFBQSxVQUFBZ04sRUFBQUEsRUFBQWhWLE1BQUEsS0FBQSxJQUFBLElBQUFtVCxLQUFBNkIsRUFBQWxYLEtBQUFtWCxhQUFBOUIsRUFBQStCLE9BQUFsTixJQUFBZ0csRUFBQWtHLFVBQUFpQixxQkFBQSxTQUFBSCxFQUFBaE4sRUFBQSxVQUFBZ04sRUFBQUEsRUFBQWhWLE1BQUEsS0FBQSxJQUFBLElBQUFtVCxLQUFBNkIsRUFBQWxYLEtBQUFzWCxnQkFBQWpDLEVBQUErQixPQUFBbE4sSUFBQWdHLEVBQUFrRyxVQUFBZSxhQUFBLFNBQUE5QixFQUFBbkwsRUFBQSxVQUFBaUcsU0FBQTJHLGlCQUFBekIsRUFBQUEsS0FBQUEsRUFBQUUsUUFBQXZWLE1BQUFBLEtBQUF1WCxXQUFBbEMsRUFBQUUsVUFBQXJMLEVBQUFtTCxNQUFBbkYsRUFBQWtHLFVBQUFrQixnQkFBQSxTQUFBakMsRUFBQW5MLEVBQUEsVUFBQWlHLFNBQUEyRyxpQkFBQXpCLEVBQUFBLElBQUFBLEVBQUFFLFFBQUF2VixNQUFBQSxLQUFBdVgsV0FBQWxDLEVBQUFFLFNBQUFyTCxFQUFBbUwsTUFBQW5GLEVBQUFrRyxVQUFBb0IseUJBQUEsU0FBQU4sRUFBQWhOLEVBQUEsVUFBQWdOLEVBQUFBLEVBQUFoVixNQUFBLEtBQUEsSUFBQSxJQUFBbVQsS0FBQTZCLEVBQUFsWCxLQUFBOFcsaUJBQUF6QixFQUFBK0IsT0FBQUssSUFBQXZOLEVBQUF1TixNQUFBdkgsRUFBQWtHLFVBQUFzQixNQUFBLFNBQUFwVCxFQUFBLENBQUFsQixJQUFBLEdBQUF1VSxHQUFBLFNBQUEsSUFBQUMsRUFBQXhVLEVBQUEsR0FBQXBELEtBQUF3WCx5QkFBQSxhQUFBbkMsSUFBQXVDLEVBQUE1WCxLQUFBb0QsTUFBQXNJLEVBQUF4SCxNQUFBSSxFQUFBbEIsT0FBQUEsRUFBQXNJLEVBQUFmLE1BQUFKLEtBQUF6RCxPQUFBQyxLQUFBekMsRUFBQWxCLEtBQUEzQixHQUFBaUssRUFBQW1NLGFBQUFwVyxJQUFBekIsS0FBQW9ELElBQUFrQixFQUFBbEIsTUFBQXNJLEVBQUFvTSxXQUFBeFQsRUFBQXFULEtBQUFyVCxFQUFBcVQsR0FBQXRDLEtBQUFyVixLQUFBd1gseUJBQUEsYUFBQW5DLElBQUEzSixFQUFBeEgsTUFBQUksRUFBQWxCLE9BQUFwRCxLQUFBK1gsVUFBQTNVLEdBQUFwRCxLQUFBb0QsSUFBQXdVLE9BQUExSCxFQUFBa0csVUFBQXZLLEtBQUEsU0FBQWpJLEVBQUEsR0FBQThCLEVBQUEsR0FBQSxJQUFBeEMsRUFBQSxLQUFBLE9BQUF3SSxFQUFBeEgsTUFBQXdCLEdBQUExRixLQUFBZ1ksaUJBQUFwVSxHQUFBcVUsUUFBQSxDQUFBUixFQUFBUyxLQUFBeFMsR0FBQXdTLElBQUFoVixFQUFBdVUsS0FBQXZVLEVBQUFsRCxLQUFBbVksY0FBQXZVLEdBQUFWLEdBQUFnTixFQUFBa0csVUFBQXRLLFFBQUEsU0FBQWxJLEVBQUEsSUFBQSxPQUFBNUQsS0FBQWdZLGlCQUFBcFUsSUFBQXNNLEVBQUFrRyxVQUFBZ0MsT0FBQSxTQUFBeFUsRUFBQSxHQUFBc08sRUFBQSxDQUFBNUIsV0FBQSxHQUFBK0gsR0FBQSxHQUFBbkgsU0FBQSxHQUFBb0gsTUFBQSxHQUFBQyxRQUFBLElBQUE3UyxFQUFBLEdBQUEsSUFBQXhDLEVBQUEsS0FBQXNWLEVBQUEsR0FBQSxHQUFBOU0sRUFBQXhILE1BQUFnTyxHQUFBLENBQUEsSUFBQXVHLEVBQUF6WSxLQUFBZ1ksaUJBQUFwVSxHQUFBLElBQUEsSUFBQXZCLEVBQUEsRUFBQUEsRUFBQW9XLEVBQUF0VyxPQUFBRSxJQUFBLENBQUEsR0FBQWEsRUFBQXVWLEVBQUFwVyxHQUFBcUosRUFBQXhILE1BQUFnTyxFQUFBNUIsWUFBQSxDQUFBLElBQUEsSUFBQWtCLEtBQUFVLEVBQUE1QixXQUFBcE4sRUFBQTZOLGFBQUFTLElBQUFVLEVBQUE1QixXQUFBa0IsS0FBQXRPLEVBQUEsTUFBQSxHQUFBd0ksRUFBQWpFLE9BQUF2RSxHQUFBLFNBQUEsR0FBQXdJLEVBQUF4SCxNQUFBZ08sRUFBQW1HLEtBQUFuRyxFQUFBbUcsSUFBQW5WLEVBQUFtVixHQUFBblYsRUFBQSxVQUFBLElBQUF3SSxFQUFBeEgsTUFBQWdPLEVBQUFvRyxRQUFBcFYsRUFBQXdWLFVBQUEvTSxTQUFBdUcsRUFBQW9HLE9BQUEsSUFBQTVNLEVBQUF4SCxNQUFBZ08sRUFBQXFHLFVBQUFyVixFQUFBeVYsV0FBQXpHLEVBQUFxRyxTQUFBLEdBQUE3TSxFQUFBeEgsTUFBQWdPLEVBQUFoQixXQUFBaE8sRUFBQWdPLFNBQUFuTixlQUFBbU8sRUFBQWhCLFNBQUFoTyxFQUFBLFNBQUEsQ0FBQSxHQUFBd0MsR0FBQSxFQUFBLE9BQUF4QyxFQUFBc1YsRUFBQXZWLEtBQUFDLFFBQUFBLEVBQUEsVUFBQUEsRUFBQSxLQUFBQSxFQUFBc1YsRUFBQXJXLFFBQUF1SixFQUFBeEgsTUFBQXNVLEVBQUE5UyxJQUFBOFMsRUFBQTlTLEdBQUEsVUFBQXhDLEVBQUFsRCxLQUFBNkwsS0FBQWpJLEdBQUEsT0FBQVYsR0FBQWdOLEVBQUFrRyxVQUFBd0MsVUFBQSxTQUFBaFYsRUFBQSxHQUFBc08sRUFBQSxDQUFBNUIsV0FBQSxHQUFBK0gsR0FBQSxHQUFBbkgsU0FBQSxHQUFBb0gsTUFBQSxHQUFBQyxRQUFBLEtBQUEsR0FBQTdNLEVBQUF4SCxNQUFBZ08sR0FBQSxDQUFBLElBQUF1RyxFQUFBelksS0FBQWdZLGlCQUFBcFUsR0FBQThQLEVBQUEsR0FBQSxJQUFBLElBQUFyUixFQUFBLEVBQUFBLEVBQUFvVyxFQUFBdFcsT0FBQUUsSUFBQSxDQUFBLElBQUFhLEVBQUF1VixFQUFBcFcsR0FBQSxHQUFBcUosRUFBQXhILE1BQUFnTyxFQUFBNUIsWUFBQSxJQUFBLElBQUFrQixLQUFBVSxFQUFBNUIsV0FBQXBOLEVBQUE2TixhQUFBUyxJQUFBVSxFQUFBNUIsV0FBQWtCLEtBQUF0TyxFQUFBLE1BQUF3SSxFQUFBeEgsTUFBQWdPLEVBQUFtRyxLQUFBbkcsRUFBQW1HLElBQUFuVixFQUFBbVYsSUFBQTNNLEVBQUF4SCxNQUFBZ08sRUFBQW9HLFNBQUFwVixFQUFBd1YsVUFBQS9NLFNBQUF1RyxFQUFBb0csUUFBQTVNLEVBQUF4SCxNQUFBZ08sRUFBQXFHLFdBQUFyVixFQUFBeVYsV0FBQXpHLEVBQUFxRyxVQUFBN00sRUFBQXhILE1BQUFnTyxFQUFBaEIsV0FBQWhPLEVBQUFnTyxTQUFBbk4sZUFBQW1PLEVBQUFoQixTQUFBaE8sRUFBQSxLQUFBd0ksRUFBQWpFLE9BQUF2RSxJQUFBd1EsRUFBQXpRLEtBQUFDLEdBQUEsT0FBQXdRLEVBQUEsT0FBQTFULEtBQUFnWSxpQkFBQXBVLElBQUFzTSxFQUFBa0csVUFBQXlDLE1BQUEsU0FBQWxFLEVBQUEsR0FBQWpQLEVBQUEsR0FBQSxJQUFBZ08sRUFBQSxHQUFBLElBQUEsSUFBQTlQLEtBQUErUSxFQUFBakIsRUFBQTlQLEdBQUE1RCxLQUFBNkwsS0FBQWpJLEVBQUE4QixHQUFBLE9BQUFnTyxHQUFBeEQsRUFBQWtHLFVBQUEwQyxTQUFBLFNBQUFuRSxFQUFBLElBQUEsSUFBQWpCLEVBQUEsR0FBQSxJQUFBLElBQUE5UCxLQUFBK1EsRUFBQWpCLEVBQUE5UCxHQUFBNUQsS0FBQThMLFFBQUFsSSxHQUFBLE9BQUE4UCxHQUFBeEQsRUFBQWtHLFVBQUEyQyxhQUFBLFNBQUF2QyxFQUFBQyxHQUFBLElBQUF1QyxFQUFBLEdBQUEsSUFBQSxJQUFBQyxLQUFBclIsTUFBQVYsS0FBQWxILEtBQUE2USxXQUFBb0ksR0FBQXpDLEdBQUF5QyxHQUFBeEMsR0FBQXdDLEVBQUExQixXQUFBZixJQUFBeUMsRUFBQTFCLFdBQUFkLEtBQUF1QyxFQUFBL1YsS0FBQWdXLEdBQUEsT0FBQUQsR0FBQTlJLEVBQUFrRyxVQUFBbUIsV0FBQSxTQUFBMEIsR0FBQSxPQUFBQSxFQUFBdEMsVUFBQWhSLFNBQUEzRixPQUFBa1EsRUFBQWtHLFVBQUFPLFFBQUEsV0FBQSxJQUFBQSxFQUFBLEdBQUF1QyxFQUFBbFosS0FBQW1aLFdBQUEsS0FBQSxNQUFBRCxHQUFBdkMsRUFBQTFULEtBQUFpVyxHQUFBQSxFQUFBQSxFQUFBQyxXQUFBLE9BQUF4QyxHQUFBekcsRUFBQWtHLFVBQUFnRCxjQUFBLFdBQUEsSUFBQXpDLEVBQUEzVyxLQUFBMlcsVUFBQXlDLEVBQUEsR0FBQSxJQUFBLElBQUEvVyxFQUFBLEVBQUFBLEVBQUFzVSxFQUFBeFUsT0FBQUUsSUFBQXNVLEVBQUF0VSxHQUFBNk8sU0FBQXZMLFNBQUEsTUFBQXlULEVBQUFuVyxLQUFBMFQsRUFBQXRVLElBQUEsT0FBQStXLEdBQUFsSixFQUFBa0csVUFBQWlELFlBQUEsU0FBQS9VLEVBQUEsQ0FBQVYsS0FBQSxLQUFBLElBQUF3UCxFQUFBcFQsS0FBQXNaLFNBQUFoVixHQUFBb0gsRUFBQXhILE1BQUFrUCxJQUFBMUgsRUFBQXhILE1BQUFJLEVBQUFpVixTQUFBN04sRUFBQXhILE1BQUFrUCxFQUFBZixRQUFBYSxnQkFBQXhILEVBQUFrSyxRQUFBeEMsRUFBQWYsUUFBQWEsUUFBQUUsRUFBQW9HLFVBQUF4WixLQUFBeVosZ0JBQUEsUUFBQW5WLEVBQUFWLE9BQUFzTSxFQUFBa0csVUFBQWtELFNBQUEsU0FBQWhWLEVBQUEsQ0FBQVYsS0FBQSxLQUFBLElBQUE4VixFQUFBdEcsRUFBQSxLQUFBLE1BQUEsaUJBQUE5TyxFQUFBb1YsRUFBQXBWLEVBQUFvSCxFQUFBeEgsTUFBQWxFLEtBQUFxUyxRQUFBLEdBQUEvTixFQUFBVixTQUFBOFYsRUFBQXBWLEVBQUFWLE1BQUE4SCxFQUFBeEgsTUFBQXdWLEtBQUF0RyxFQUFBMUgsRUFBQWtLLFFBQUE1VixLQUFBcVMsUUFBQXFILEtBQUF0RyxHQUFBbEQsRUFBQWtHLFVBQUE1QyxTQUFBLFNBQUFsUCxFQUFBLENBQUFWLEtBQUEsS0FBQSxPQUFBOEgsRUFBQXhILE1BQUFJLEVBQUE4TyxNQUFBZixRQUFBYSxTQUFBNU8sRUFBQThPLE1BQUFILFNBQUFqVCxLQUFBcVMsUUFBQS9OLEVBQUFWLE1BQUFVLEVBQUE4TyxNQUFBZixRQUFBYSxPQUFBbFQsS0FBQStXLE9BQUF6UyxFQUFBVixNQUFBLEdBQUE1RCxNQUFBa1EsRUFBQWtHLFVBQUF1RCxTQUFBLFNBQUFyVixFQUFBLENBQUFWLEtBQUEsR0FBQTBNLFdBQUEsR0FBQXNKLE9BQUEsR0FBQS9JLFNBQUEsR0FBQTVNLEtBQUEsR0FBQTBOLEtBQUEsR0FBQWxRLE1BQUEsR0FBQXlRLFFBQUEsS0FBQSxJQUFBa0IsRUFBQXBULEtBQUFzWixTQUFBaFYsR0FBQSxHQUFBOE8sRUFBQXlHLGNBQUF2VixFQUFBZ00sWUFBQTVFLEVBQUF4SCxNQUFBSSxFQUFBdU0sV0FBQXVDLEVBQUFuQixZQUFBM04sRUFBQXVNLFVBQUFuRixFQUFBeEgsTUFBQUksRUFBQXNWLFNBQUF4RyxFQUFBd0csT0FBQXRWLEVBQUFzVixRQUFBbE8sRUFBQXhILE1BQUFJLEVBQUFMLFFBQUFtUCxFQUFBMUIsWUFBQXBOLEVBQUFMLE1BQUF5SCxFQUFBeEgsTUFBQUksRUFBQXFOLFFBQUF5QixFQUFBeEIsVUFBQXROLEVBQUFxTixNQUFBakcsRUFBQXhILE1BQUFJLEVBQUE3QyxTQUFBMlIsRUFBQTNSLE1BQUE2QyxFQUFBN0MsT0FBQWlLLEVBQUF4SCxNQUFBSSxFQUFBNE4sU0FBQSxJQUFBLElBQUE3UCxLQUFBaUMsRUFBQTROLFFBQUFrQixFQUFBbkIsWUFBQSxDQUFBL08sUUFBQSxTQUFBekIsTUFBQVksRUFBQTRCLEtBQUE1QixFQUFBMlAsV0FBQSxXQUFBLE9BQUFoUyxLQUFBK1csT0FBQXpTLEVBQUFWLE1BQUFqQyxLQUFBMEMsVUFBQUMsSUFBQThPLEVBQUEwRyxXQUFBLEdBQUExRyxHQUFBbEQsRUFBQWtHLFVBQUEyRCxZQUFBQyxpQkFBQSxhQUFBaGEsS0FBQWlULFVBQUEvQyxFQUFBa0csVUFBQW5ELE9BQUEsV0FBQSxJQUFBOVAsRUFBQTRCLEtBQUFDLE1BQUFDLFNBQUEsSUFBQU4sS0FBQUYsU0FBQVEsU0FBQSxJQUFBcEMsTUFBQSxHQUFBLE9BQUE2SSxFQUFBeEgsTUFBQWxFLEtBQUFxUyxRQUFBYSxRQUFBL1AsRUFBQW5ELEtBQUFxUyxRQUFBYSxPQUFBbFQsS0FBQXFTLFFBQUFhLE9BQUEvUCxFQUFBdUksRUFBQWtLLFFBQUF6UyxHQUFBbkQsS0FBQW1ELEdBQUErTSxFQUFBa0csVUFBQTZELFNBQUEsU0FBQS9XLEdBQUEsSUFBQWdYLEVBQUFsYSxLQUFBOFosV0FBQSxHQUFBOVosS0FBQTRSLFVBQUEsR0FBQTVSLEtBQUF5USxPQUFBeUosR0FBQUEsRUFBQTlXLElBQUEsQ0FBQStXLFVBQUEsNEJBQUFuYSxLQUFBb0QsSUFBQSxDQUFBK1csVUFBQSxvQ0FBQSxJQUFBQyxFQUFBcGEsS0FBQWlTLFlBQUEsQ0FBQS9PLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsZUFBQSxPQUFBOEIsRUFBQTNKLE9BQUF2TixHQUFBbEQsS0FBQXFhLGVBQUEsS0FBQUQsRUFBQVosU0FBQVUsRUFBQTlXLElBQUEsQ0FBQStXLFVBQUEsVUFBQW5hLEtBQUE0UixVQUFBc0ksRUFBQXRJLFdBQUE1UixNQUFBa1EsRUFBQWtHLFVBQUFrRSxZQUFBLFdBQUEsT0FBQXRhLEtBQUF1YSxTQUFBdmEsS0FBQXdhLFNBQUFDLGFBQUF6YSxNQUFBa1EsRUFBQWtHLFVBQUFzRSxrQkFBQSxTQUFBQyxFQUFBLEdBQUF6USxFQUFBLFVBQUFsSyxLQUFBOFcsaUJBQUEsb0JBQUF6QixJQUFBQSxFQUFBdUYsT0FBQUMsZUFBQUYsR0FBQXpRLEVBQUFtTCxNQUFBbkYsRUFBQWtHLFVBQUEwRSxRQUFBLFNBQUFDLEVBQUEsQ0FBQXpLLFlBQUEsRUFBQTBLLFdBQUEsRUFBQUMsU0FBQSxJQUFBLE9BQUFqYixLQUFBd2EsU0FBQSxJQUFBVSxpQkFBQSxDQUFBQyxFQUFBWCxLQUFBVyxFQUFBaFosUUFBQW5DLEtBQUFvYixjQUFBLElBQUFDLFlBQUEsWUFBQSxJQUFBLElBQUFDLEtBQUFILEVBQUEsYUFBQUcsRUFBQWhPLEtBQUF0TixLQUFBb2IsY0FBQSxJQUFBQyxZQUFBLG1CQUFBLENBQUFULE9BQUFVLEtBQUEsY0FBQUEsRUFBQWhPLEtBQUF0TixLQUFBb2IsY0FBQSxJQUFBQyxZQUFBLG9CQUFBLENBQUFULE9BQUFVLEtBQUEsaUJBQUFBLEVBQUFoTyxNQUFBdE4sS0FBQW9iLGNBQUEsSUFBQUMsWUFBQSx1QkFBQSxDQUFBVCxPQUFBVSxPQUFBdGIsS0FBQXdhLFNBQUFELFFBQUF2YSxLQUFBK2EsR0FBQS9hLE1BQUFrUSxFQUFBa0csVUFBQW1GLGFBQUEsU0FBQXJSLEVBQUEsVUFBQWxLLEtBQUE4YSxVQUFBOWEsS0FBQThXLGlCQUFBLFVBQUF6QixJQUFBbkwsRUFBQW1MLE1BQUFuRixFQUFBa0csVUFBQW9GLFVBQUEsU0FBQXhULEVBQUEsVUFBQWhJLEtBQUErUSxhQUFBLFNBQUEsSUFBQTBLLEVBQUFwRyxJQUFBLEdBQUEsU0FBQUEsRUFBQUUsT0FBQXJFLFNBQUEsR0FBQSxRQUFBbUUsRUFBQUUsT0FBQWpJLEtBQUF0TixLQUFBNE8sT0FBQTVPLEtBQUF5QixRQUFBekIsS0FBQXlSLGFBQUEsUUFBQXpSLEtBQUF5QixZQUFBLEdBQUEsUUFBQTRULEVBQUFFLE9BQUFqSSxLQUFBdE4sS0FBQTJPLFlBQUEzTyxLQUFBeUIsUUFBQXpCLEtBQUF5UixhQUFBLFFBQUF6UixLQUFBeUIsWUFBQSxHQUFBLFFBQUE0VCxFQUFBRSxPQUFBakksS0FBQSxDQUFBK0gsRUFBQUUsT0FBQTlULE1BQUEsSUFBQXVULEVBQUFLLEVBQUFFLE9BQUF2RSxNQUFBLEdBQUEsR0FBQWdFLEVBQUExSCxLQUFBckwsUUFBQSxVQUFBeUosRUFBQWdRLFlBQUExRyxFQUFBaE4sUUFBQWhJLEtBQUF5UixhQUFBLFFBQUF6UixLQUFBeUIsWUFBQSxHQUFBLFVBQUE0VCxFQUFBRSxPQUFBckUsU0FBQSxJQUFBLElBQUE3TyxFQUFBLEVBQUFBLEVBQUFnVCxFQUFBRSxPQUFBckQsUUFBQS9QLE9BQUFFLElBQUFBLEdBQUFnVCxFQUFBRSxPQUFBb0csY0FBQXRHLEVBQUFFLE9BQUFyRCxRQUFBN1AsR0FBQW9QLGFBQUEsWUFBQSxHQUFBNEQsRUFBQUUsT0FBQXJELFFBQUE3UCxHQUFBb1gsZ0JBQUEsZ0JBQUEsZ0JBQUFwRSxFQUFBRSxPQUFBckUsVUFBQSxrQkFBQW1FLEVBQUFFLE9BQUFyRSxTQUFBbFIsS0FBQXlSLGFBQUEsUUFBQXpSLEtBQUF5QixPQUFBekIsS0FBQXlCLE1BQUF6QixLQUFBMFIsWUFBQWhHLEVBQUF4SCxNQUFBOEQsSUFBQSxRQUFBcU4sRUFBQUUsT0FBQWpJLE1BQUF0RixFQUFBaEksS0FBQXlCLE1BQUE0VCxJQUFBclYsS0FBQThXLGlCQUFBLFFBQUF6QixJQUFBb0csRUFBQXBHLEtBQUFyVixLQUFBOFcsaUJBQUEsU0FBQXpCLElBQUFvRyxFQUFBcEcsTUFBQW5GLEVBQUFrRyxVQUFBd0QsT0FBQSxTQUFBdFYsRUFBQSxDQUFBcEIsUUFBQSxHQUFBb04sV0FBQSxJQUFBc0wsR0FBQWxRLEVBQUF4SCxNQUFBMFgsR0FBQTViLEtBQUE2YixlQUFBRCxHQUFBNWIsS0FBQTZiLGlCQUFBN2IsS0FBQWlTLFlBQUEzTixJQUFBNEwsRUFBQWtHLFVBQUEwRixvQkFBQSxXQUFBLElBQUFDLEVBQUFDLEVBQUFDLEVBQUFyVSxNQUFBVixLQUFBaUosU0FBQThMLGFBQUE1RCxFQUFBclksS0FBQXFZLEdBQUFuSCxFQUFBbFIsS0FBQWtSLFNBQUF3SCxFQUFBOVEsTUFBQVYsS0FBQWxILEtBQUEwWSxXQUFBd0QsRUFBQSxHQUFBLElBQUEsSUFBQTdaLEtBQUFxVyxFQUFBQSxFQUFBclcsR0FBQSxJQUFBcVcsRUFBQXJXLEdBQUEsSUFBQUEsRUFBQSxFQUFBQSxFQUFBNFosRUFBQTlaLE9BQUFFLElBQUEsQ0FBQTBaLEVBQUFFLEVBQUE1WixHQUFBMFosU0FBQSxJQUFBLElBQUF6VSxFQUFBLEVBQUFBLEVBQUF5VSxFQUFBNVosT0FBQW1GLElBQUEsSUFBQTBVLEVBQUFELEVBQUF6VSxHQUFBMFUsZUFBQSxJQUFBM0QsR0FBQTJELEdBQUE5SyxJQUFBLEdBQUF3SCxFQUFBelcsUUFBQStaLEdBQUEsQ0FBQUUsRUFBQUYsR0FBQSxHQUFBLElBQUEzWSxFQUFBMFksRUFBQXpVLEdBQUFqRSxNQUFBLElBQUEsSUFBQTJHLEtBQUEzRyxFQUFBLEtBQUFBLEVBQUEyRyxLQUFBa1MsRUFBQUYsR0FBQWhTLEdBQUEzRyxFQUFBMkcsS0FBQSxPQUFBa1MsRUFBQTdZLE1BQUFyRCxLQUFBb0QsTUFBQThZLEdBQUFoTSxFQUFBa0csVUFBQStGLGlCQUFBLFNBQUFDLEVBQUEsSUFBQSxJQUFBQyxFQUFBcmMsS0FBQThiLHNCQUFBSSxFQUFBLEdBQUEsSUFBQSxJQUFBdFksS0FBQXlZLEVBQUEsQ0FBQUgsRUFBQXRZLEdBQUEsR0FBQSxJQUFBLElBQUFzVSxLQUFBbUUsRUFBQXpZLEdBQUF3WSxHQUFBbEUsSUFBQWdFLEVBQUF0WSxHQUFBc1UsR0FBQW1FLEVBQUF6WSxHQUFBc1UsSUFBQSxPQUFBZ0UsR0FBQWhNLEVBQUFrRyxVQUFBa0csZUFBQSxTQUFBRixFQUFBLElBQUEsSUFBQUYsRUFBQWxjLEtBQUFtYyxpQkFBQUMsR0FBQSxJQUFBLElBQUEvWixLQUFBNlosRUFBQSxHQUFBeFEsRUFBQXhILE1BQUFnWSxFQUFBN1osS0FBQSxJQUFBNlosRUFBQTdaLEdBQUEsT0FBQSxFQUFBLE9BQUEsR0FBQTZOLEVBQUFrRyxVQUFBbUcsaUJBQUEsU0FBQUgsRUFBQSxJQUFBLElBQUFGLEVBQUFsYyxLQUFBbWMsaUJBQUFDLEdBQUEvRCxFQUFBclksS0FBQXFZLEdBQUFLLEVBQUE5USxNQUFBVixLQUFBbEgsS0FBQTBZLFdBQUEsR0FBQWhOLEVBQUF4SCxNQUFBZ1ksRUFBQTdZLFFBQUEsSUFBQTZZLEVBQUE3WSxNQUFBLE9BQUE2WSxFQUFBN1ksTUFBQSxHQUFBcUksRUFBQXhILE1BQUFtVSxJQUFBM00sRUFBQXhILE1BQUFnWSxFQUFBLElBQUE3RCxLQUFBLElBQUE2RCxFQUFBLElBQUE3RCxHQUFBLE9BQUE2RCxFQUFBLElBQUE3RCxHQUFBLElBQUEsSUFBQWhXLEtBQUFxVyxFQUFBLEdBQUFoTixFQUFBeEgsTUFBQWdZLEVBQUEsSUFBQTdaLEtBQUEsSUFBQTZaLEVBQUEsSUFBQTdaLEdBQUEsT0FBQTZaLEVBQUEsSUFBQTdaLEdBQUEsT0FBQXFKLEVBQUF4SCxNQUFBZ1ksRUFBQWxjLEtBQUFrUixZQUFBLElBQUFnTCxFQUFBbGMsS0FBQWtSLFVBQUFnTCxFQUFBbGMsS0FBQWtSLFVBQUEsSUFBQWhCLEVBQUFrRyxVQUFBaFQsSUFBQSxTQUFBb1osRUFBQSxJQUFBLE9BQUE5USxFQUFBeEgsTUFBQXNZLElBQUExVixPQUFBQyxLQUFBeVYsR0FBQXpULElBQUE1RixJQUFBbkQsS0FBQXFELE1BQUFGLEdBQUFxWixFQUFBclosS0FBQXVJLEVBQUErUSxXQUFBemMsT0FBQWtRLEVBQUFrRyxVQUFBMkIsVUFBQSxTQUFBeUUsRUFBQSxJQUFBLEdBQUE1VSxNQUFBb0YsUUFBQXdQLEdBQUEsSUFBQSxJQUFBbmEsS0FBQW1hLEVBQUF4YyxLQUFBcUQsTUFBQXFaLGVBQUFyYSxRQUFBckMsS0FBQXFELE1BQUFxWixlQUFBRixHQUFBLE9BQUF4YyxLQUFBb0QsT0FBQThNLEVBQUFrRyxVQUFBdUcsWUFBQSxTQUFBMUQsR0FBQSxJQUFBclYsRUFBQWdaLEVBQUF2RSxFQUFBdlYsR0FBQSxFQUFBcUgsUUFBQUUsSUFBQTRPLEdBQUFqWixLQUFBNlEsU0FBQW9ILFFBQUE0RSxJQUFBalosRUFBQWlaLEVBQUEzTCxTQUFBMEwsRUFBQUMsRUFBQW5FLFVBQUFMLEVBQUF3RSxFQUFBeEUsR0FBQXpVLEdBQUFxVixFQUFBL0gsVUFBQW1ILEdBQUFZLEVBQUFaLElBQUF1RSxFQUFBM1gsWUFBQWdVLEVBQUFQLFVBQUF6VCxhQUFBNFgsRUFBQXJELFNBQUExVyxHQUFBLEtBQUFBLEdBQUE5QyxLQUFBeVEsT0FBQXdJLElBQUEvSSxFQUFBa0csVUFBQTBHLGFBQUEsU0FBQWxCLEVBQUEsSUFBQUEsRUFBQUEsRUFBQTFaLE1BQUEsS0FBQSxJQUFBLElBQUFvRixLQUFBc1UsRUFBQUEsRUFBQXRVLEdBQUFzVSxFQUFBdFUsR0FBQThQLE9BQUEsSUFBQSxJQUFBL1UsS0FBQXJDLEtBQUEwWSxVQUFBaE4sRUFBQXhILE1BQUEwWCxJQUFBQSxFQUFBalcsU0FBQXRELElBQUFyQyxLQUFBMFksVUFBQWMsT0FBQW5YLElBQUE2TixFQUFBa0csVUFBQTJHLGNBQUEsU0FBQXhFLEVBQUEsSUFBQUEsRUFBQUEsRUFBQXJXLE1BQUEsS0FBQSxJQUFBLElBQUFHLEtBQUFrVyxFQUFBLEtBQUFsVyxFQUFBQSxFQUFBK1UsU0FBQXBYLEtBQUEwWSxVQUFBYyxPQUFBblgsSUFBQTZOLEVBQUFrRyxVQUFBN0QsV0FBQSxTQUFBZ0csRUFBQSxJQUFBQSxFQUFBQSxFQUFBclcsTUFBQSxLQUFBLElBQUEsSUFBQUcsS0FBQWtXLEVBQUEsS0FBQWxXLEVBQUFBLEVBQUErVSxTQUFBcFgsS0FBQTBZLFVBQUFzRSxJQUFBM2EsSUFBQTZOLEVBQUFrRyxVQUFBNkcsY0FBQSxTQUFBMUUsRUFBQSxJQUFBQSxFQUFBQSxFQUFBclcsTUFBQSxLQUFBLElBQUEsSUFBQUcsS0FBQWtXLEVBQUEsS0FBQWxXLEVBQUFBLEVBQUErVSxTQUFBcFgsS0FBQTBZLFVBQUF3RSxPQUFBN2EsSUFBQTZOLEVBQUFrRyxVQUFBK0csWUFBQSxTQUFBQyxFQUFBLElBQUEsT0FBQXBkLEtBQUEwWSxVQUFBYyxPQUFBNEQsR0FBQXBkLE1BQUFrUSxFQUFBa0csVUFBQXVDLFdBQUEsU0FBQUQsRUFBQSxJQUFBLElBQUEsSUFBQTJFLEtBQUEzRSxFQUFBLElBQUExWSxLQUFBMFksVUFBQS9NLFNBQUEwUixHQUFBLE9BQUEsRUFBQSxPQUFBLEdBQUFuTixFQUFBa0csVUFBQWtILFNBQUEsU0FBQUYsRUFBQSxJQUFBLE9BQUFwZCxLQUFBMFksVUFBQXNFLElBQUFJLEdBQUFwZCxNQUFBa1EsRUFBQWtHLFVBQUFtSCxZQUFBLFNBQUFILEVBQUEsSUFBQSxPQUFBcGQsS0FBQTBZLFVBQUF3RSxPQUFBRSxHQUFBcGQsTUFBQWtRLEVBQUFrRyxVQUFBMVEsU0FBQSxTQUFBcEIsRUFBQSxJQUFBLE9BQUFvSCxFQUFBeEgsTUFBQUksS0FBQXdDLE9BQUFDLEtBQUF6QyxHQUFBeUUsSUFBQTVGLElBQUFtQixFQUFBbkIsR0FBQSxNQUFBLElBQUFtRCxPQUFBaEMsRUFBQW5CLElBQUFOLE1BQUF5QixFQUFBbkIsR0FBQWhCLE9BQUEsR0FBQW1DLEVBQUFuQixHQUFBbUIsRUFBQW5CLEdBQUEsT0FBQW5ELEtBQUFvRCxJQUFBa0IsSUFBQXRFLEtBQUF3ZCx5QkFBQXROLEVBQUFrRyxVQUFBcUgsT0FBQSxTQUFBQyxFQUFBLElBQUEsSUFBQWpLLEVBQUF6VCxLQUFBc1QsV0FBQW9LLEdBQUFDLEVBQUEzZCxLQUFBMEYsV0FBQWlZLElBQUFqVyxHQUFBLEVBQUEsT0FBQWdFLEVBQUFqRSxPQUFBZ00sS0FBQS9MLEVBQUFpVyxHQUFBLEdBQUFBLEdBQUFsSyxFQUFBbUssY0FBQWxXLEdBQUF3SSxFQUFBa0csVUFBQXlILFNBQUEsU0FBQVQsRUFBQSxJQUFBLE9BQUFwZCxLQUFBMFksVUFBQS9NLFNBQUF5UixJQUFBbE4sRUFBQWtHLFVBQUEwSCxjQUFBLFNBQUE1QixFQUFBLElBQUEsSUFBQSxJQUFBN1osS0FBQTZaLEVBQUFsYyxLQUFBcUMsR0FBQTZaLEVBQUE3WixJQUFBNk4sRUFBQWtHLFVBQUF5RCxjQUFBLFNBQUF2SixFQUFBLElBQUEsSUFBQSxJQUFBak8sS0FBQWlPLEVBQUEsU0FBQWpPLEVBQUFyQyxLQUFBb0QsSUFBQWtOLEVBQUFqTyxJQUFBckMsS0FBQXlSLGFBQUFwUCxFQUFBaU8sRUFBQWpPLEtBQUE2TixFQUFBa0csVUFBQWpGLGNBQUEsU0FBQXdELEVBQUEsSUFBQSxHQUFBQSxFQUFBeFMsU0FBQXdTLEVBQUEzVSxLQUFBK2QscUJBQUEsSUFBQXpOLEVBQUEsR0FBQSxJQUFBLElBQUExTSxLQUFBK1EsRUFBQXJFLEVBQUExTSxHQUFBNUQsS0FBQStRLGFBQUFuTixHQUFBLE9BQUEwTSxHQUFBSixFQUFBa0csVUFBQW5FLFlBQUEsU0FBQTNOLEVBQUEsQ0FBQXBCLFFBQUEsR0FBQW9OLFdBQUEsS0FBQSxPQUFBdFEsS0FBQStaLGNBQUFyTyxFQUFBMkUsY0FBQS9MLEVBQUF0RSxPQUFBa1EsRUFBQWtHLFVBQUE5QyxXQUFBLFNBQUExUCxFQUFBLEdBQUFuQyxFQUFBLElBQUEsSUFBQWtaLEVBQUEvVyxFQUFBZixNQUFBLEVBQUEsR0FBQTRRLEVBQUF6VCxLQUFBbVosV0FBQSxHQUFBLEtBQUF3QixFQUFBLEtBQUFsSCxLQUFBL0gsRUFBQXhILE1BQUF1UCxFQUFBaUYsYUFBQWpGLEVBQUFpRixVQUFBL00sU0FBQS9ILEVBQUFmLE1BQUEsTUFBQTRRLEVBQUFBLEVBQUEwRixnQkFBQSxHQUFBLEtBQUF3QixFQUFBLEtBQUFsSCxLQUFBL0gsRUFBQXhILE1BQUF1UCxFQUFBNEUsS0FBQTVFLEVBQUE0RSxJQUFBelUsRUFBQWYsTUFBQSxLQUFBNFEsRUFBQUEsRUFBQTBGLGdCQUFBLEtBQUExRixLQUFBL0gsRUFBQXhILE1BQUF1UCxFQUFBdkMsV0FBQXVDLEVBQUF2QyxTQUFBbk4sZUFBQUgsRUFBQUcsZ0JBQUEsQ0FBQSxHQUFBMkgsRUFBQXhILE1BQUF1UCxFQUFBM0MsZUFBQTJDLEVBQUEzQyxhQUFBbE4sR0FBQSxDQUFBLEdBQUE4SCxFQUFBeEgsTUFBQXpDLElBQUFnUyxFQUFBMUMsYUFBQW5OLElBQUFuQyxFQUFBLE1BQUEsTUFBQWdTLEVBQUFBLEVBQUEwRixXQUFBLE9BQUExRixHQUFBdkQsRUFBQWtHLFVBQUE4RyxPQUFBLFdBQUEsUUFBQWxkLEtBQUFxRCxNQUFBMmEsU0FBQSxVQUFBaGUsS0FBQXFELE1BQUE0YSxXQUFBamUsS0FBQWtlLE9BQUFsZSxLQUFBbWUsUUFBQWpPLEVBQUFrRyxVQUFBK0gsS0FBQSxXQUFBLE9BQUFuZSxLQUFBcUQsTUFBQTJhLFFBQUEsT0FBQWhlLE1BQUFrUSxFQUFBa0csVUFBQThILEtBQUEsV0FBQSxPQUFBbGUsS0FBQStYLFVBQUEsQ0FBQSxZQUFBL1gsTUFBQWtRLEVBQUFrRyxVQUFBeUYsZUFBQSxTQUFBdlgsRUFBQSxDQUFBc1gsT0FBQSxLQUFBLElBQUF3QyxFQUFBLElBQUE5WixFQUFBQSxHQUFBLElBQUFzWCxPQUFBdFgsRUFBQXNYLFFBQUEsR0FBQSxJQUFBQSxFQUFBdFgsRUFBQXNYLE9BQUEsSUFBQSxJQUFBdlosRUFBQSxFQUFBQSxFQUFBdVosRUFBQXpaLE9BQUFFLElBQUEsQ0FBQSxJQUFBVSxFQUFBL0MsS0FBQThMLFFBQUE4UCxFQUFBdlosSUFBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUF2RSxFQUFBWixPQUFBbUYsSUFBQThXLEVBQUF6WSxTQUFBNUMsRUFBQXVFLEtBQUE4VyxFQUFBbmIsS0FBQUYsRUFBQXVFLElBQUEsT0FBQXRILEtBQUE2USxTQUFBb0gsUUFBQTRFLElBQUF1QixFQUFBelksU0FBQWtYLElBQUFBLEVBQUFyRCxXQUFBeFosTUFBQWtRLEVBQUFrRyxVQUFBaUksT0FBQSxXQUFBM1MsRUFBQXhILE1BQUFsRSxLQUFBcVMsUUFBQWEsZ0JBQUF4SCxFQUFBa0ssUUFBQTVWLEtBQUFxUyxRQUFBYSxRQUFBbFQsS0FBQXdaLFVBQUF0SixFQUFBa0csVUFBQWtJLFlBQUEsU0FBQXJGLEdBQUEsT0FBQUEsRUFBQW9GLFNBQUFyZSxNQUFBa1EsRUFBQWtHLFVBQUFtSSxlQUFBLFNBQUFqYSxFQUFBLENBQUFWLEtBQUEsR0FBQTBVLE1BQUEsR0FBQUQsR0FBQSxLQUFBelEsTUFBQVYsS0FBQWxILEtBQUE2USxVQUFBb0gsUUFBQTRFLElBQUFuUixFQUFBeEgsTUFBQUksRUFBQVYsT0FBQVUsRUFBQVYsTUFBQWlaLEVBQUEzTCxVQUFBeEYsRUFBQXhILE1BQUFJLEVBQUFnVSxRQUFBNU0sRUFBQXVCLGdCQUFBckYsTUFBQVYsS0FBQTJWLEVBQUFuRSxXQUFBcFUsRUFBQWdVLE1BQUFwVyxNQUFBLE9BQUF3SixFQUFBeEgsTUFBQUksRUFBQStULE1BQUEvVCxFQUFBK1QsR0FBQXdFLEVBQUF4RSxJQUFBd0UsRUFBQUssWUFBQWhOLEVBQUFrRyxVQUFBckUsY0FBQSxTQUFBN08sRUFBQThPLEVBQUEsVUFBQWhTLEtBQUFnUyxHQUFBOU8sSUFBQWdOLEVBQUFrRyxVQUFBb0ksUUFBQSxTQUFBdFUsRUFBQSxVQUFBLElBQUF1VSxFQUFBLEVBQUFDLEVBQUEsRUFBQTFlLEtBQUF3WCx5QkFBQSx3QkFBQW5DLElBQUFvSixFQUFBcEosRUFBQXNKLFlBQUEzZSxLQUFBd1gseUJBQUEsb0JBQUFuQyxJQUFBcUosRUFBQXJKLEVBQUFzSixVQUFBdEosRUFBQXVKLFNBQUFGLEVBQUFELEVBQUF2VSxFQUFBbUwsTUFBQXRWLHNCQUFBZ1csRUFBQUwsR0FBQSxJQUFBaEssRUFBQTFMLEtBQUErVixFQUFBSyxVQUFBaEosU0FBQSxTQUFBMUgsRUFBQSxHQUFBLElBQUFtWixFQUFBblQsRUFBQTJFLGNBQUEsQ0FBQW5OLFFBQUEsV0FBQTJOLFNBQUFzQyxFQUFBdkwsTUFBQVYsS0FBQWxILE1BQUEsSUFBQSxJQUFBcUMsRUFBQSxFQUFBQSxFQUFBOFEsRUFBQWhSLE9BQUFFLElBQUFBLEdBQUFxRCxJQUFBbVosRUFBQXhjLEdBQUFyQyxLQUFBOGUsS0FBQXpjLEdBQUE4SCxRQUFBRSxJQUFBd1UsSUFBQSxPQUFBQSxHQUFBOUksRUFBQUssVUFBQTZCLFFBQUEsU0FBQS9OLEVBQUEsVUFBQSxJQUFBaUosRUFBQXZMLE1BQUFWLEtBQUFsSCxNQUFBLElBQUEsSUFBQXFDLEVBQUEsRUFBQUEsRUFBQThRLEVBQUFoUixPQUFBRSxJQUFBNkgsRUFBQWlKLEVBQUE5USxHQUFBQSxJQUFBMFQsRUFBQUssVUFBQTdMLEtBQUEsU0FBQUwsRUFBQSxVQUFBLElBQUFpSixFQUFBdkwsTUFBQVYsS0FBQWxILE1BQUEsSUFBQSxJQUFBcUMsRUFBQSxFQUFBQSxFQUFBOFEsRUFBQWhSLE9BQUFFLElBQUE2SCxFQUFBaUosRUFBQTlRLEdBQUFBLElBQUEwVCxFQUFBSyxVQUFBblUsUUFBQSxTQUFBaUIsR0FBQSxJQUFBaVEsRUFBQXZMLE1BQUFWLEtBQUFsSCxNQUFBLElBQUEsSUFBQXFDLEtBQUE4USxFQUFBLEdBQUFBLEdBQUFqUSxFQUFBLE9BQUFiLEVBQUEsT0FBQSxHQUFBMFQsRUFBQUssVUFBQXpRLFNBQUEsU0FBQXpDLEdBQUEsT0FBQSxHQUFBbEQsS0FBQWlDLFFBQUFpQixJQUFBNlMsRUFBQUssVUFBQTJDLGFBQUEsU0FBQXZDLEVBQUFDLEdBQUEsSUFBQXVDLEVBQUEsR0FBQTdGLEVBQUF2TCxNQUFBVixLQUFBbEgsTUFBQSxJQUFBLElBQUErZSxLQUFBNUwsR0FBQTRMLEdBQUF2SSxHQUFBdUksR0FBQXRJLEdBQUFzSSxFQUFBeEgsV0FBQWYsSUFBQXVJLEVBQUF4SCxXQUFBZCxLQUFBdUMsRUFBQS9WLEtBQUE4YixHQUFBLE9BQUEvRixHQUFBalosWUFBQWtXLEVBQUFQLEdBQUFPLEVBQUFHLFVBQUFXLE9BQUEsR0FBQWhYLGdCQUFBb1csRUFBQVQsR0FBQVMsRUFBQUMsVUFBQTdMLEtBQUEsU0FBQUwsRUFBQSxVQUFBLElBQUEsSUFBQTdILEVBQUEsRUFBQUEsRUFBQXJDLEtBQUFtQyxPQUFBRSxJQUFBNkgsRUFBQWxLLEtBQUFxQyxHQUFBQSxJQUFBOFQsRUFBQUMsVUFBQW5VLFFBQUEsU0FBQWlCLEdBQUEsSUFBQSxJQUFBYixLQUFBckMsS0FBQSxHQUFBQSxLQUFBcUMsSUFBQWEsRUFBQSxPQUFBYixFQUFBLE9BQUEsR0FBQThULEVBQUFDLFVBQUF6USxTQUFBLFNBQUF6QyxHQUFBLE9BQUEsR0FBQWxELEtBQUFpQyxRQUFBaUIsSUFBQWlULEVBQUFDLFVBQUEyQyxhQUFBLFNBQUF2QyxFQUFBQyxHQUFBLElBQUF1QyxFQUFBLEdBQUEsSUFBQSxJQUFBK0YsS0FBQS9lLE1BQUErZSxHQUFBdkksR0FBQXVJLEdBQUF0SSxHQUFBc0ksRUFBQXhILFdBQUFmLElBQUF1SSxFQUFBeEgsV0FBQWQsS0FBQXVDLEVBQUEvVixLQUFBOGIsR0FBQSxPQUFBL0YsS0NBQSxJQUFBZ0csRUFBQSxjQUFBckosRUFBQTVWLFlBQUFrUSxFQUFBLFNBQUF2QyxNQUFBdUMsR0FBQWxRLFVBQUF1RSxFQUFBLENBQUEyYSxPQUFBLEtBQUEsSUFBQUMsRUFBQWxmLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLEtBQUFvTixXQUFBLENBQUFnSSxNQUFBLFNBQUEsSUFBQSxJQUFBalcsS0FBQWlDLEVBQUE2YSxLQUFBMU8sT0FBQXlPLEdBQUE1YSxFQUFBMmEsUUFBQUMsRUFBQXpPLE9BQUF6USxLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxLQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxhQUFBclUsS0FBQTVCLEtBQUE2YyxFQUFBcFQsUUFBQSxNQUFBbU0sUUFBQTRFLElBQUFBLEVBQUEvRixpQkFBQSxRQUFBekIsSUFBQSxJQUFBblEsRUFBQWxGLEtBQUFtRixZQUFBNkQsU0FBQW9ILE1BQUFsTCxFQUFBRSxLQUFBZ2EsSUFBQXZDLEVBQUFuTCxZQUFBM04sY0FBQXNiLE9BQUF6RixPQUFBLENBQUExVSxJQUFBLElBQUFsRixLQUFBbUYsWUFBQW5GLEtBQUF1RixVQUFBTCxFQUFBLFFBQUEyRCxjQUFBOUksS0FBQXVFLEVBQUEsQ0FBQXBCLFFBQUEsUUFBQW9OLFdBQUEsR0FBQTFNLEtBQUEsR0FBQTBiLGVBQUEsR0FBQTdkLE1BQUEsR0FBQXdDLEtBQUEsR0FBQTBOLEtBQUEsR0FBQTROLEtBQUEsS0FBQSxJQUFBQyxFQUFBbkgsRUFBQXJZLEtBQUEwRCxjQUFBWSxFQUFBVixLQUFBLElBQUEsS0FBQSxRQUFBNmIsRUFBQXpmLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLFFBQUFvTixXQUFBLENBQUFnSSxNQUFBLGNBQUFyVSxLQUFBSyxFQUFBVixPQUFBLElBQUFpRyxFQUFBdkYsRUFBQWdNLFdBQUF0USxLQUFBa0UsTUFBQUksRUFBQWdNLFlBQUFoTSxFQUFBZ00sV0FBQSxHQUFBaE0sRUFBQWdiLGVBQUF0ZixLQUFBa0UsTUFBQUksRUFBQWdiLGdCQUFBaGIsRUFBQWdiLGVBQUEsR0FBQWhiLEVBQUFnYixlQUFBakgsR0FBQUEsRUFBQW1ILEVBQUEsVUFBQWxiLEVBQUFwQixRQUFBLENBQUFBLFFBQUFvQixFQUFBcEIsUUFBQW9OLFdBQUFoTSxFQUFBZ2IsZUFBQXpPLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxTQUFBb04sV0FBQSxDQUFBb1AsU0FBQSxHQUFBdE4sU0FBQSxJQUFBbk8sS0FBQSxVQUFBSyxFQUFBVixLQUFBbkMsTUFBQSxNQUFBLENBQUF5QixRQUFBb0IsRUFBQXBCLFFBQUFvTixXQUFBaE0sRUFBQWdiLGVBQUFyYixLQUFBSyxFQUFBN0MsT0FBQXpCLEtBQUFrRSxNQUFBSSxFQUFBN0MsU0FBQStkLEVBQUFsUCxXQUFBN08sTUFBQTZDLEVBQUE3QyxPQUFBekIsS0FBQWtFLE1BQUFJLEVBQUE0TixXQUFBc04sRUFBQXROLFFBQUE1TixFQUFBNE4sVUFBQXJJLEVBQUF2RixFQUFBcEIsbUJBQUFnTixRQUFBNUwsRUFBQXBCLFFBQUFsRCxLQUFBcVEsY0FBQW1QLElBQUE5RyxVQUFBc0UsSUFBQSxhQUFBaGQsS0FBQWtFLE1BQUFJLEVBQUE3QyxTQUFBb0ksRUFBQXBJLE1BQUE2QyxFQUFBN0MsT0FBQSxJQUFBOGQsRUFBQUksRUFBQTNmLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLE1BQUFvTixXQUFBaE0sRUFBQWdNLFdBQUFPLFNBQUEsQ0FBQTRPLEVBQUE1VixLQUFBLE9BQUE4VixFQUFBakgsVUFBQXNFLElBQUEsUUFBQWhkLEtBQUFrRSxNQUFBSSxFQUFBTCxRQUFBNEYsRUFBQTZILFlBQUFwTixFQUFBTCxNQUFBakUsS0FBQWtFLE1BQUFJLEVBQUFxTixRQUFBOUgsRUFBQStILFVBQUF0TixFQUFBcU4sTUFBQTNSLEtBQUFrRSxNQUFBSSxFQUFBNk8sUUFBQXdNLEVBQUExTixZQUFBLENBQUEvTyxRQUFBLFdBQUFvTixXQUFBLENBQUErSCxHQUFBQSxFQUFBLFNBQUFuRyxRQUFBNU4sRUFBQTZPLEtBQUFyUyxTQUFBK0ksRUFBQTRILGFBQUEsT0FBQTRHLEVBQUEsVUFBQXJZLEtBQUFrRSxNQUFBSSxFQUFBaWIsUUFBQUEsRUFBQUksRUFBQTFOLFlBQUEsQ0FBQS9PLFFBQUEsSUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsR0FBQWhVLEVBQUFpYixLQUFBSyxZQUFBLGNBQUF2YyxNQUFBLENBQUF3YyxPQUFBLFVBQUFDLGdCQUFBLHVCQUFBQyxNQUFBLE1BQUFDLE9BQUEsT0FBQXRhLFNBQUEsV0FBQWlZLElBQUEsTUFBQXNDLE1BQUEsTUFBQUMsUUFBQSxZQUFBUCxFQUFBdmMsSUFBQSxDQUFBc0MsU0FBQSxjQUFBaWEsRUFBQTVmLFFBQUF1RSxFQUFBLENBQUE2YixLQUFBLEdBQUFsYyxLQUFBLEdBQUErUyxLQUFBLElBQUEsSUFBQTFDLEVBQUF0VSxLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxTQUFBekgsU0FBQSxDQUFBN1EsS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsSUFBQWUsS0FBQUssRUFBQUwsS0FBQXFNLFdBQUEsQ0FBQWdJLE1BQUEsT0FBQWxJLEtBQUE5TCxFQUFBNmIsUUFBQW5nQixLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxjQUFBLEdBQUF0WSxLQUFBa0UsTUFBQUksRUFBQTBTLE1BQUEsSUFBQWxKLEVBQUFzUyxXQUFBLEtBQUE5TCxFQUFBa0YsU0FBQTZHLGFBQUF2UyxJQUFBLElBQUF4SixFQUFBMFMsS0FBQSxJQUFBMVMsRUFBQXdKLEtBQUEsS0FBQXdHLEVBQUF6SSxLQUFBLFVBQUFpTCxpQkFBQSxRQUFBekIsSUFBQWYsRUFBQWtGLFdBQUE3RyxLQUFBOUcsS0FBQSx1QkFBQTRFLE9BQUE2RCxHQUFBdlUsWUFBQXVFLEVBQUEsQ0FBQWdjLE1BQUEsR0FBQTNXLFNBQUEsR0FBQTRXLFdBQUEsR0FBQUMsT0FBQSxHQUFBMWYsTUFBQSxFQUFBc1gsUUFBQSxFQUFBcUksT0FBQSxLQUFBLElBQUFwZSxFQUFBcWUsRUFBQSxHQUFBQyxFQUFBLEdBQUFDLEVBQUEsRUFBQXhXLEVBQUFwSyxLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxNQUFBb04sV0FBQWhNLEVBQUFnTSxhQUFBbEcsRUFBQXNPLFVBQUFzRSxJQUFBLGVBQUEsSUFBQSxJQUFBNkQsS0FBQXZjLEVBQUFxRixTQUFBLENBQUF0SCxFQUFBaUMsRUFBQXFGLFNBQUExSCxRQUFBNGUsR0FBQSxJQUFBLElBQUFqZCxLQUFBaWQsR0FBQSxHQUFBSCxFQUFBemUsUUFBQTJCLEtBQUE4YyxFQUFBemQsS0FBQVcsR0FBQStjLEVBQUEvYyxHQUFBd0csRUFBQTZILFlBQUEsQ0FBQS9PLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEscUJBQUF3SSxZQUFBbGQsR0FBQWlOLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSwyQkFBQXdJLFlBQUFsZCxHQUFBaU4sU0FBQSxDQUFBLENBQUEzTixRQUFBLElBQUFvTixXQUFBLENBQUFnSSxNQUFBLGlDQUFBclUsS0FBQUwsS0FBQSxDQUFBVixRQUFBLE1BQUFvTixXQUFBLENBQUFnSSxNQUFBLG1DQUFBdFksS0FBQWtFLE1BQUFJLEVBQUF4RCxPQUFBNmYsRUFBQS9jLEdBQUFpSSxLQUFBLDZCQUFBb0csWUFBQSxDQUFBL08sUUFBQSxJQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxnQ0FBQXNILFlBQUEseUJBQUF0YixFQUFBaWMsV0FBQWpjLEVBQUFpYyxZQUFBLEdBQUEsSUFBQXBDLEVBQUFyWCxPQUFBaUYsT0FBQXpILEVBQUFpYyxZQUFBNWEsU0FBQSxHQUFBLElBQUEsSUFBQS9CLEtBQUE4YyxFQUFBLENBQUEsSUFBQSxJQUFBRyxLQUFBdmMsRUFBQXFGLFNBQUF0SCxFQUFBaUMsRUFBQXFGLFNBQUExSCxRQUFBNGUsR0FBQUYsRUFBQS9jLEdBQUFpSSxLQUFBLGdDQUFBb0csWUFBQSxDQUFBL08sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSwwQkFBQXdJLFlBQUFsZCxFQUFBbWQsYUFBQUYsRUFBQWpkLElBQUEsR0FBQW9kLFdBQUEzZSxHQUFBc1AsS0FBQWtQLEVBQUFqZCxJQUFBLE1BQUEsR0FBQVUsRUFBQWljLFdBQUEzYyxJQUFBdWEsSUFBQW5lLEtBQUFrRSxNQUFBSSxFQUFBaWMsV0FBQTNjLElBQUErYyxFQUFBL2MsR0FBQVIsSUFBQSxDQUFBNGEsUUFBQSxTQUFBNEMsSUFBQXhXLEVBQUFoSCxJQUFBLENBQUE2ZCxvQkFBQSxVQUFBTCxZQUFBLElBQUFNLEVBQUFsaEIsS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEseUJBQUF6SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsK0JBQUFsTyxLQUFBK1csRUFBQSxFQUFBLE9BQUFuaEIsS0FBQWtFLE1BQUFJLEVBQUFnYyxTQUFBWSxFQUFBclYsS0FBQSwrQkFBQW9HLFlBQUEsQ0FBQS9PLFFBQUEsS0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEscUJBQUFyVSxLQUFBSyxFQUFBZ2MsUUFBQWEsS0FBQW5oQixLQUFBa0UsTUFBQUksRUFBQXhELFFBQUFzSixFQUFBaUksUUFBQXZSLE1BQUEsR0FBQWQsS0FBQWtFLE1BQUFJLEVBQUE4VCxVQUFBOEksRUFBQXJWLEtBQUEsK0JBQUFvRyxZQUFBLENBQUEvTyxRQUFBLFFBQUFvTixXQUFBLENBQUFnSSxNQUFBLHFCQUFBOEksWUFBQSxxQkFBQUQsS0FBQW5oQixLQUFBa0UsTUFBQUksRUFBQW1jLFVBQUFTLEVBQUFyVixLQUFBLCtCQUFBb0csWUFBQSxDQUFBL08sUUFBQSxTQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxzQkFBQXBHLFFBQUE1TixFQUFBbWMsU0FBQVUsS0FBQSxHQUFBN2MsRUFBQXFGLFNBQUF4SCxTQUFBaUksRUFBQXNILFlBQUEsZUFBQXdQLEVBQUFqUCxZQUFBLENBQUEvTyxRQUFBLFFBQUFlLEtBQUEsNElBQUFrZCwyREFBQUQsRUFBQW5oQixhQUFBcUssR0FBQSxJQUFBUCxFQUFBLEdBQUF3WCxFQUFBalgsRUFBQTBCLFFBQUEsNEJBQUEsSUFBQSxJQUFBekosRUFBQSxFQUFBQSxFQUFBZ2YsRUFBQWxmLE9BQUFFLElBQUEsQ0FBQSxJQUFBdUIsS0FBQUEsRUFBQW5DLE1BQUFBLEVBQUErSSxJQUFBQSxHQUFBNlcsRUFBQWhmLEdBQUFnUSxRQUFBeEksRUFBQVcsR0FBQVgsRUFBQVcsSUFBQSxHQUFBWCxFQUFBVyxHQUFBNUcsR0FBQW5DLEVBQUEsT0FBQW9JLEVBQUE5SixVQUFBcUssRUFBQWtYLEVBQUEsR0FBQUMsRUFBQSxHQUFBLElBQUExWCxFQUFBN0osS0FBQXdoQixhQUFBcFgsR0FBQSxPQUFBUCxFQUFBL0ksS0FBQSxDQUFBa0YsRUFBQUMsS0FBQUQsRUFBQUEsRUFBQXNiLEdBQUFyYixFQUFBQSxFQUFBcWIsR0FBQXRoQixLQUFBaVUsU0FBQWpPLElBQUFoRyxLQUFBaVUsU0FBQWhPLEtBQUFELEdBQUEsRUFBQUMsR0FBQSxHQUFBc2IsR0FBQSxFQUFBdmIsRUFBQUMsRUFBQSxHQUFBLEVBQUFELEVBQUFDLEdBQUEsRUFBQSxJQUFBNEQsRUFBQTlKLFlBQUF1RSxFQUFBLENBQUE4RixNQUFBLEdBQUE4SCxRQUFBLElBQUF1UCxFQUFBLENBQUFDLE1BQUEsT0FBQWpCLE9BQUEsU0FBQW5jLEVBQUE0TixRQUFBNU4sRUFBQTROLFNBQUEsR0FBQXVQLEVBQUFBLEdBQUEsR0FBQSxJQUFBRSxFQUFBdlgsRUFBQTlGLEVBQUE4RixNQUFBeUIsS0FBQSxnQkFBQXFHLEVBQUFsUyxLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSx5QkFBQW5GLEVBQUEsQ0FBQWdNLEtBQUEsYUFBQWQsT0FBQSxlQUFBa0IsS0FBQSxhQUFBcUMsT0FBQSxrQkFBQSxJQUFBLElBQUF6UCxLQUFBN04sRUFBQTROLFFBQUF5UCxFQUFBeE8sRUFBQWhCLElBQUEsVUFBQUEsRUFBQUQsRUFBQUQsWUFBQSxDQUFBL08sUUFBQSxJQUFBb04sV0FBQSxDQUFBZ0ksTUFBQXFKLEVBQUEsc0JBQUF0SixHQUFBLHNCQUFBbEcsS0FBQSxJQUFBMFAsRUFBQUMsRUFBQTFYLEVBQUEwQixRQUFBLDZCQUFBaVcsRUFBQTNYLEVBQUEwQixRQUFBLHVCQUFBckMsRUFBQSxHQUFBdVksRUFBQUQsRUFBQSxHQUFBLEdBQUEvaEIsS0FBQXlILE9BQUF1YSxHQUFBLE9BQUEsSUFBQSxJQUFBM2YsRUFBQSxFQUFBQSxFQUFBMGYsRUFBQTVmLE9BQUFFLElBQUEsR0FBQSxRQUFBMGYsRUFBQTFmLEdBQUFlLE1BQUE0YSxRQUFBLENBQUE2RCxFQUFBRSxFQUFBMWYsR0FBQSxNQUFBLElBQUE0ZixFQUFBQyxFQUFBQyxFQUFBQyxFQUFBSixFQUFBbFcsUUFBQSw0QkFBQXVXLEVBQUFSLEVBQUEvVixRQUFBLDRCQUFBLElBQUEsSUFBQXpKLEVBQUEsRUFBQUEsRUFBQStmLEVBQUFqZ0IsT0FBQUUsSUFBQW9ILEVBQUF4RyxLQUFBbWYsRUFBQS9mLEdBQUFnUSxRQUFBN0gsS0FBQSxHQUFBLFFBQUFsRyxFQUFBOEYsTUFBQXlCLEtBQUEsZ0JBQUF3RyxRQUFBdlIsS0FBQSxJQUFBLElBQUF1QixFQUFBLEVBQUFBLEVBQUF5ZixFQUFBM2YsT0FBQUUsSUFBQXlmLEVBQUF6ZixHQUFBeVUsaUJBQUEsYUFBQXpCLElBQUF5TSxFQUFBemYsR0FBQXdKLEtBQUEsa0NBQUF6SSxJQUFBLENBQUE0YSxRQUFBLFlBQUE4RCxFQUFBemYsR0FBQXlVLGlCQUFBLGFBQUF6QixJQUFBeU0sRUFBQXpmLEdBQUF3SixLQUFBLGtDQUFBekksSUFBQSxDQUFBNGEsUUFBQSxXQUFBOEQsRUFBQXpmLEdBQUF3SixLQUFBLGtDQUFBaUwsaUJBQUEsUUFBQXpCLElBQUEsSUFBQWtNLEVBQUFPLEVBQUF6ZixHQUFBd0osS0FBQSxrQ0FBQW9SLGNBQUEsb0JBQUE2RSxFQUFBemYsR0FBQXdKLEtBQUEsa0NBQUFvUixjQUFBLHNCQUFBLE1BQUE2RSxFQUFBemYsR0FBQXdKLEtBQUEsa0NBQUF3RyxRQUFBa1AsV0FBQU8sRUFBQXpmLEdBQUF3SixLQUFBLGtDQUFBd0csUUFBQWtQLFVBQUEsT0FBQUEsRUFBQSxJQUFBTyxFQUFBemYsR0FBQXdKLEtBQUEsa0NBQUF3RyxRQUFBa1AsVUFBQSxLQUFBQSxHQUFBLEdBQUEsSUFBQXRkLEVBQUE2ZCxFQUFBemYsR0FBQXdKLEtBQUEsa0NBQUE2RixZQUFBN0gsRUFBQTdKLEtBQUFzaUIsVUFBQWhlLEVBQUE4RixNQUFBeUIsS0FBQSxnQkFBQTVILEVBQUFzZCxHQUFBZ0IsRUFBQXZpQixLQUFBd2lCLFlBQUEsQ0FBQTdZLFNBQUFFLElBQUFpQyxRQUFBLHVCQUFBLElBQUEsSUFBQXhFLEVBQUEsRUFBQUEsRUFBQWliLEVBQUFwZ0IsT0FBQW1GLElBQUF5YSxFQUFBemEsR0FBQXVFLEtBQUEsZ0NBQUErRixVQUFBMlEsRUFBQWpiLEdBQUF1RSxLQUFBLGdDQUFBK0YsVUFBQW1RLEVBQUEzWCxFQUFBMEIsUUFBQSx1QkFBQTJVLE1BQUF6Z0IsS0FBQXlILE9BQUFuRCxFQUFBOEYsTUFBQXlCLEtBQUEseUJBQUF2SCxFQUFBOEYsTUFBQXlCLEtBQUEsdUJBQUEyUCxVQUFBL1osSUFBQWdmLE1BQUF6Z0IsS0FBQXlILE9BQUFuRCxFQUFBOEYsTUFBQXlCLEtBQUEseUJBQUF2SCxFQUFBOEYsTUFBQXlCLEtBQUEsdUJBQUEyUCxVQUFBL1osSUFBQWdmLE1BQUEsSUFBQUEsRUFBQSxLQUFBemdCLEtBQUF5SCxPQUFBbkQsRUFBQThGLE1BQUF5QixLQUFBLDBCQUFBcVcsRUFBQTVkLEVBQUE4RixNQUFBeUIsS0FBQSx1QkFBQXBLLE9BQUF6QixLQUFBeUgsT0FBQW5ELEVBQUE4RixNQUFBeUIsS0FBQSwwQkFBQXNXLEVBQUE3ZCxFQUFBOEYsTUFBQXlCLEtBQUEsdUJBQUFwSyxPQUFBLElBQUEsSUFBQVksRUFBQSxFQUFBQSxFQUFBb0gsRUFBQXRILE9BQUFFLElBQUEsQ0FBQSxJQUFBOGIsR0FBQSxFQUFBOEQsRUFBQTdYLEVBQUEwQixRQUFBLHNDQUFBekosT0FBQSxJQUFBLElBQUFpRixFQUFBLEVBQUFBLEVBQUEyYSxFQUFBOWYsT0FBQW1GLElBQUEyYSxFQUFBM2EsR0FBQXlRLFVBQUEsQ0FBQSxZQUFBLEdBQUEvWCxLQUFBa0UsTUFBQWllLElBQUEsR0FBQWhFLEdBQUFuZSxLQUFBa0UsTUFBQXVkLEVBQUFoQixVQUFBdEMsRUFBQXNELEVBQUFoQixPQUFBMEIsRUFBQUYsSUFBQWppQixLQUFBa0UsTUFBQWdlLElBQUEsR0FBQS9ELEVBQUEsQ0FBQUEsR0FBQSxFQUFBLElBQUEsSUFBQTdXLEVBQUEsRUFBQUEsRUFBQTJhLEVBQUE5ZixPQUFBbUYsSUFBQSxHQUFBMmEsRUFBQTNhLEdBQUFvSyxZQUFBM04sY0FBQTRCLFNBQUF1YyxFQUFBbmUsZUFBQSxDQUFBb2EsR0FBQSxFQUFBLE9BQUEsR0FBQUEsRUFBQSxJQUFBLElBQUE3VyxFQUFBLEVBQUFBLEVBQUEyYSxFQUFBOWYsT0FBQW1GLElBQUEyYSxFQUFBM2EsR0FBQWxFLElBQUEsQ0FBQTRhLFFBQUEsV0FBQWhlLEtBQUFrRSxNQUFBdWQsRUFBQUMsU0FBQXRYLEVBQUFvTix5QkFBQSx3QkFBQW5DLElBQUEsSUFBQUUsRUFBQUYsRUFBQUUsT0FBQSxHQUFBQSxFQUFBbUQsVUFBQS9NLFNBQUEsc0JBQUEzTCxLQUFBa0UsTUFBQXVkLEVBQUFDLFFBQUFELEVBQUFDLE1BQUFyTSxRQUFBLEdBQUFFLEVBQUFtRCxVQUFBL00sU0FBQSw2QkFBQTNMLEtBQUF5SCxPQUFBOE4sRUFBQWpDLFdBQUEsNkJBQUEsQ0FBQWlDLEVBQUFtRCxVQUFBL00sU0FBQSw2QkFBQTRKLEVBQUFBLEVBQUFqQyxXQUFBLDZCQUFBLElBQUE1TixFQUFBNlAsRUFBQWxELFFBQUE3SCxJQUFBLEdBQUEwSCxFQUFBc0gsU0FBQTZJLEVBQUEzYyxHQUFBdEMsSUFBQSxDQUFBc0MsU0FBQSxhQUFBMmMsRUFBQTNjLEdBQUErSyxPQUFBeUIsR0FBQTVOLEVBQUE4RixNQUFBc08sVUFBQS9NLFNBQUEsb0JBQUEsQ0FBQSxJQUFBbkIsRUFBQUosRUFBQTBCLFFBQUEsc0NBQUFwRyxPQUFBLElBQUEsSUFBQXJELEVBQUEsRUFBQUEsRUFBQW1JLEVBQUFySSxPQUFBRSxJQUFBbUksRUFBQW5JLEdBQUFxVyxVQUFBd0UsT0FBQSw0QkFBQWhMLEVBQUFzSCxTQUFBakUsRUFBQW1ELFVBQUEvTSxTQUFBLDZCQUFBLEdBQUFxVyxFQUFBbFcsUUFBQSw2QkFBQTNKLFFBQUFtQyxFQUFBOEYsTUFBQXNPLFVBQUFjLE9BQUEsd0JBQUFwUCxFQUFBb1UsUUFBQW5KLElBQUEsSUFBQUUsRUFBQUYsRUFBQUUsT0FBQSxHQUFBRixFQUFBdUosU0FBQSxNQUFBckosRUFBQW1ELFVBQUEvTSxTQUFBLDZCQUFBM0wsS0FBQXlILE9BQUE4TixFQUFBakMsV0FBQSw4QkFBQSxDQUFBaUMsRUFBQW1ELFVBQUEvTSxTQUFBLDZCQUFBNEosRUFBQUEsRUFBQWpDLFdBQUEsNkJBQUEsSUFBQTVOLEVBQUE2UCxFQUFBbEQsUUFBQTdILElBQUEsR0FBQSxHQUFBd1gsRUFBQWxXLFFBQUEsNkJBQUEzSixTQUFBbUMsRUFBQThGLE1BQUFzTyxVQUFBL00sU0FBQSxvQkFBQSxDQUFBckgsRUFBQThGLE1BQUFzTyxVQUFBc0UsSUFBQSxvQkFBQSxJQUFBeFMsRUFBQUosRUFBQTBCLFFBQUEsc0NBQUFwRyxPQUFBLElBQUEsSUFBQXJELEVBQUEsRUFBQUEsRUFBQW1JLEVBQUFySSxPQUFBRSxJQUFBbUksRUFBQW5JLEdBQUFxVyxVQUFBc0UsSUFBQSw0QkFBQTlLLEVBQUFzSCxjQUFBelosV0FBQXVFLEVBQUEsQ0FBQXBCLFFBQUEsR0FBQW9kLE1BQUEsR0FBQUssUUFBQSxFQUFBaFgsU0FBQSxHQUFBOFksU0FBQSxHQUFBQyxRQUFBLEtBQUEsSUFBQUMsRUFBQWpTLEVBQUExUSxLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQW9CLEVBQUFwQixTQUFBLE9BQUFvTixXQUFBaE0sRUFBQWdNLFdBQUFPLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxLQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxvQkFBQXJVLEtBQUFLLEVBQUFnYyxPQUFBLENBQUFwZCxRQUFBLFVBQUFvTixXQUFBLENBQUFnSSxNQUFBLHNCQUFBalYsTUFBQSxDQUFBNGQsb0JBQUEsVUFBQTNjLEVBQUFxYyxtQkFBQSxDQUFBemQsUUFBQSxVQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSwwQkFBQTVILEVBQUFnSSxVQUFBc0UsSUFBQSxjQUFBaGQsS0FBQWtFLE1BQUFJLEVBQUFtUCxTQUFBblAsRUFBQW1QLE9BQUFoRCxPQUFBQyxHQUFBLElBQUFrUyxFQUFBbFMsRUFBQTdFLEtBQUEsd0JBQUEsSUFBQSxJQUFBMUksS0FBQW1CLEVBQUFxRixTQUFBLENBQUFnWixFQUFBM2lCLEtBQUFrRSxNQUFBSSxFQUFBcUYsU0FBQXhHLEdBQUF3ZixNQUFBLElBQUFyZSxFQUFBcUYsU0FBQXhHLEdBQUF3ZixRQUFBLEdBQUEsSUFBQUUsRUFBQXZlLEVBQUFxRixTQUFBeEcsR0FBQXNjLE9BQUF6ZixLQUFBOGlCLGlCQUFBM2YsR0FBQVksY0FBQWdmLEVBQUFILEVBQUEzUSxZQUFBLENBQUEvTyxRQUFBLE1BQUFvTixXQUFBLENBQUFnSSxNQUFBLDZCQUFBekgsU0FBQSxDQUFBLENBQUEzTixRQUFBLFFBQUF5TyxLQUFBa1IsRUFBQXZTLFdBQUEsQ0FBQWdJLE1BQUEsbUJBQUEwSyxJQUFBN2YsRUFBQVksbUJBQUE4RixFQUFBa1osRUFBQTlRLFlBQUEzTixFQUFBcUYsU0FBQXhHLElBQUEwRyxFQUFBNk8sVUFBQXNFLElBQUEsbUJBQUFoZCxLQUFBa0UsTUFBQUksRUFBQXFGLFNBQUF4RyxHQUFBd2YsT0FBQUksRUFBQTlRLFlBQUEsQ0FBQS9PLFFBQUEsT0FBQWUsS0FBQUssRUFBQXFGLFNBQUF4RyxHQUFBd2YsS0FBQXJTLFdBQUEsQ0FBQWdJLE1BQUEscUJBQUF0WSxLQUFBa0UsTUFBQUksRUFBQW1lLFdBQUFuZSxFQUFBbWUsU0FBQTljLFNBQUF4QyxLQUFBMEcsRUFBQTRZLFVBQUEsR0FBQSxJQUFBLElBQUF0ZixLQUFBbUIsRUFBQW9lLFFBQUFoUyxFQUFBN0UsS0FBQSx1QkFBQW9HLFlBQUEzTixFQUFBb2UsUUFBQXZmLElBQUEsT0FBQXVOLEVBQUF1QixZQUFBLENBQUEvTyxRQUFBLE9BQUFvTixXQUFBLENBQUFnSSxNQUFBLG9CQUFBbEYsTUFBQSxDQUFBeFAsS0FBQSxRQUFBeVAsTUFBQSxJQUFBM0MsRUFBQTJILE1BQUEzSCxFQUFBM1EsT0FBQXVFLEVBQUEsQ0FBQWdjLE1BQUEsR0FBQTNXLFNBQUEsSUFBQU8sRUFBQSxDQUFBbUwsUUFBQSxJQUFBNE4sRUFBQWpqQixLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxNQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxnQkFBQXpILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxLQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxzQkFBQXJVLEtBQUFLLEVBQUFnYyxPQUFBLElBQUEsQ0FBQXBkLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsNkJBQUEsSUFBQSxJQUFBdUksS0FBQXZjLEVBQUFxRixTQUFBc1osRUFBQXBYLEtBQUEsMEJBQUFvRyxZQUFBLENBQUEvTyxRQUFBLE9BQUFvTixXQUFBLENBQUFnSSxNQUFBLHNCQUFBd0ksWUFBQUQsR0FBQTVjLEtBQUE0YyxJQUFBLE9BQUFvQyxFQUFBbk0saUJBQUEsV0FBQXpCLElBQUFBLEVBQUFFLE9BQUFtRCxVQUFBL00sU0FBQSx3QkFBQXpCLEVBQUFtTCxFQUFBRSxPQUFBbEQsUUFBQXpPLFFBQUFxZixFQUFBbGpCLE1BQUE4Z0IsRUFBQXZjLEVBQUEsQ0FBQWdjLE1BQUEsR0FBQWhRLFdBQUEsS0FBQSxJQUFBNFMsRUFBQTVlLEVBQUE0ZSxXQUFBL1MsU0FBQXdDLEtBQUEyTixFQUFBaGMsRUFBQWdjLE9BQUEsR0FBQWhjLEVBQUFnTSxXQUFBaE0sRUFBQWdNLFlBQUEsR0FBQWhNLEVBQUFnTSxXQUFBak4sTUFBQWlCLEVBQUFnTSxXQUFBak4sT0FBQSxHQUFBaUIsRUFBQWdNLFdBQUFqTixNQUFBMGMsTUFBQXpiLEVBQUFnTSxXQUFBak4sTUFBQTBjLE9BQUEsT0FBQXpiLEVBQUFnTSxXQUFBak4sTUFBQTJjLE9BQUExYixFQUFBZ00sV0FBQWpOLE1BQUEyYyxRQUFBLE9BQUEsSUFBQW1ELEVBQUFuakIsS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsZ0JBQUF6SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQStILEdBQUEsZ0JBQUFDLE1BQUEsdUJBQUF6SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQStILEdBQUEsY0FBQUMsTUFBQSxxQkFBQXpILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxJQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxHQUFBaFYsTUFBQSxDQUFBK2YsTUFBQSxVQUFBbEQsUUFBQSxRQUFBamMsS0FBQXFjLEdBQUEsQ0FBQXBkLFFBQUEsSUFBQW9OLFdBQUEsQ0FBQStILEdBQUEsZ0JBQUFDLE1BQUEsMkNBQUEsQ0FBQXBWLFFBQUEsSUFBQW9OLFdBQUEsQ0FBQStILEdBQUEsZUFBQUMsTUFBQSx3Q0FBQSxDQUFBcFYsUUFBQSxNQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxpQkFBQUMsTUFBQSx3QkFBQXpILFNBQUEsQ0FBQWdRLFNBQUEsT0FBQXNDLEVBQUF0WCxLQUFBLGtCQUFBZ08sY0FBQXZWLEVBQUFnTSxZQUFBNlMsRUFBQXRYLEtBQUEsa0JBQUFpTCxpQkFBQSxRQUFBekIsSUFBQThOLEVBQUF0WCxLQUFBLGtCQUFBNk0sVUFBQXdFLE9BQUEsaUJBQUFpRyxFQUFBdFgsS0FBQSxrQkFBQTZNLFVBQUF3RSxPQUFBLG1CQUFBaUcsRUFBQXRYLEtBQUEsa0JBQUE2TSxVQUFBL00sU0FBQSxpQkFBQXdYLEVBQUF0WCxLQUFBLGtCQUFBekksSUFBQSxDQUFBNGMsT0FBQTFiLEVBQUFnTSxXQUFBak4sTUFBQTJjLE9BQUFELE1BQUF6YixFQUFBZ00sV0FBQWpOLE1BQUEwYyxRQUFBb0QsRUFBQXRYLEtBQUEsa0JBQUF6SSxJQUFBLENBQUE0YyxPQUFBLHFCQUFBRCxNQUFBLHlCQUFBb0QsRUFBQXRYLEtBQUEsaUJBQUFpTCxpQkFBQSxRQUFBekIsSUFBQThOLEVBQUEzSixXQUFBMEosRUFBQXpTLE9BQUEwUyxHQUFBQSxFQUFBcGpCLGFBQUF1RSxFQUFBLENBQUE3QyxNQUFBLEdBQUFrSSxTQUFBLEdBQUEwWixVQUFBLElBQUEsSUFBQUMsRUFBQWxSLEVBQUEsR0FBQW1SLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxFQUFBempCLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLE1BQUFvTixXQUFBaE0sRUFBQWdNLFdBQUFPLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSx3QkFBQXpILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxRQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxxQkFBQTdXLE1BQUE2QyxFQUFBN0MsT0FBQSxHQUFBaWlCLFFBQUEsSUFBQSxDQUFBeGdCLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsMEJBQUEsQ0FBQXBWLFFBQUEsUUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsc0JBQUE4SSxZQUFBLGVBQUFzQyxRQUFBLElBQUEsQ0FBQXhnQixRQUFBLE9BQUFvTixXQUFBLENBQUFnSSxNQUFBLDZCQUFBbUwsRUFBQS9LLFVBQUFzRSxJQUFBLGdCQUFBLElBQUEyRyxFQUFBRixFQUFBMVMsYUFBQSxTQUFBMFMsRUFBQWhpQixNQUFBLEdBQUF6QixLQUFBeUgsT0FBQWtjLEtBQUFGLEVBQUFoaUIsTUFBQXpCLEtBQUEySyxNQUFBbUIsUUFBQTZYLEVBQUF6aEIsTUFBQSxLQUFBMGhCLEdBQUEsSUFBQUEsRUFBQXhNLFNBQUFxTSxFQUFBcFIsUUFBQWlSLE9BQUEsUUFBQSxJQUFBM1osRUFBQThaLEVBQUE1WCxLQUFBLDBCQUFBZ0osRUFBQTRPLEVBQUE1WCxLQUFBLHVCQUFBdU0sRUFBQXFMLEVBQUE1WCxLQUFBLHdCQUFBcVIsRUFBQXVHLEVBQUE1WCxLQUFBLHdCQUFBLEdBQUF2SCxFQUFBcUYsU0FBQXJGLEVBQUFxRixVQUFBLEdBQUEvQixNQUFBb0YsUUFBQTFJLEVBQUFxRixVQUFBLENBQUEsSUFBQWthLEVBQUF2ZixFQUFBcUYsU0FBQXJGLEVBQUFxRixTQUFBLEdBQUEsSUFBQSxJQUFBdEgsRUFBQSxFQUFBQSxFQUFBd2hCLEVBQUExaEIsT0FBQUUsSUFBQWlDLEVBQUFxRixTQUFBa2EsRUFBQXhoQixJQUFBd2hCLEVBQUF4aEIsR0FBQSxJQUFBLElBQUFBLEtBQUFpQyxFQUFBcUYsU0FBQSxDQUFBLElBQUF3SSxFQUFBeEksRUFBQXNJLFlBQUEsQ0FBQS9PLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsc0JBQUE3VyxNQUFBWSxLQUFBOFAsRUFBQVAsVUFBQXROLEVBQUFxRixTQUFBdEgsR0FBQThQLEVBQUExUSxNQUFBWSxFQUFBLElBQUEsSUFBQXVoQixLQUFBSCxFQUFBaGlCLE1BQUFvVCxFQUFBcFQsT0FBQTZDLEVBQUFxRixTQUFBaWEsR0FBQS9PLEVBQUF1RyxjQUFBLElBQUFDLFlBQUEsV0FBQSxJQUFBbE8sR0FBQW5OLEtBQUFrRSxNQUFBSSxFQUFBK2UsV0FBQSxHQUFBL2UsRUFBQStlLFNBQUFuUixFQUFBdVIsRUFBQTNYLFFBQUEsd0JBQUFzTSxFQUFBb0QsVUFBQS9aLElBQUEsSUFBQSxJQUFBWSxFQUFBLEVBQUFBLEVBQUE2UCxFQUFBL1AsT0FBQUUsSUFBQTZQLEVBQUE3UCxHQUFBcVAsWUFBQTNOLGNBQUE0QixTQUFBbEUsRUFBQXNDLGVBQUFtTyxFQUFBN1AsR0FBQTBWLFVBQUEsQ0FBQSxZQUFBN0YsRUFBQTdQLEdBQUFlLElBQUEsQ0FBQTRhLFFBQUEsV0FBQSxJQUFBTCxFQUFBbUcsRUFBQUMsRUFBQTFPLElBQUFrTyxHQUFBLEVBQUEsYUFBQWxPLEVBQUFsUyxLQUFBcWdCLEVBQUF0UixFQUFBL1AsT0FBQSxHQUFBcWhCLElBQUFELEdBQUEsR0FBQSxXQUFBbE8sRUFBQWxTLEtBQUFxZ0IsRUFBQSxHQUFBQSxJQUFBRCxHQUFBLEdBQUFsTyxFQUFBbFMsSUFBQW9nQixJQUFBRCxFQUFBM1osRUFBQWtDLEtBQUEsK0JBQUE3TCxLQUFBeUgsT0FBQTZiLElBQUFBLEVBQUE1SyxVQUFBYyxPQUFBLDhCQUFBdEgsRUFBQXNSLEdBQUE5SyxVQUFBc0UsSUFBQSxnQ0FBQUUsRUFBQXBHLGlCQUFBLFFBQUF6QixJQUFBLElBQUFpTyxFQUFBLFFBQUFHLEVBQUFwUixRQUFBaVIsT0FBQUEsRUFBQVUsRUFBQVYsR0FBQVcsRUFBQVgsS0FBQW5ULFNBQUF3QyxLQUFBdlAsSUFBQSxDQUFBOGdCLFNBQUEsU0FBQSxJQUFBQyxFQUFBLEtBQUF4RyxFQUFBOEYsRUFBQS9kLFdBQUFpWSxJQUFBbUcsRUFBQTNULFNBQUF3QyxLQUFBaUwsYUFBQTZGLEVBQUEvZCxXQUFBaVksSUFBQUEsRUFBQW1HLEVBQUFuYSxFQUFBdkcsSUFBQSxDQUFBdWEsS0FBQWhVLEVBQUFqRSxXQUFBc2EsT0FBQSxPQUFBclcsRUFBQXZHLElBQUEsQ0FBQXVhLElBQUE4RixFQUFBL2QsV0FBQXNhLE9BQUEsUUFBQWlFLEVBQUEsS0FBQVIsRUFBQWhHLE9BQUEsVUFBQTVJLEVBQUFpQyxpQkFBQSxVQUFBaU4sR0FBQSxHQUFBM0wsRUFBQWhWLElBQUEsQ0FBQTRhLFFBQUEsU0FBQXJVLEVBQUF2RyxJQUFBLENBQUE0YSxRQUFBLFNBQUFtRyxJQUFBVixFQUFBcFIsUUFBQWlSLE9BQUEsU0FBQVUsRUFBQSxLQUFBblAsRUFBQXVQLG9CQUFBLFVBQUFMLEdBQUEsR0FBQTNMLEVBQUFMLFVBQUEsQ0FBQSxZQUFBcE8sRUFBQW9PLFVBQUEsQ0FBQSxZQUFBMEwsRUFBQXBSLFFBQUFpUixPQUFBLFNBQUEsT0FBQUcsRUFBQXRNLGFBQUEsUUFBQTlCLElBQUEsR0FBQUEsRUFBQUUsUUFBQTJILEdBQUEsU0FBQXVHLEVBQUFwUixRQUFBaVIsUUFBQVcsSUFBQTVPLEVBQUFFLE9BQUFtRCxVQUFBL00sU0FBQSx1QkFBQSxDQUFBLElBQUExSCxFQUFBSyxFQUFBcUYsU0FBQTBMLEVBQUFFLE9BQUE5VCxPQUFBLFVBQUE2QyxFQUFBK2UsVUFBQXhPLEVBQUFwVCxNQUFBa0UsU0FBQTFCLEdBQUE0USxFQUFBcFQsTUFBQW9ULEVBQUFwVCxNQUFBNGlCLFFBQUFwZ0IsRUFBQSxJQUFBNFEsRUFBQXBULE9BQUEsS0FBQXdDLEVBQUE0USxFQUFBdUcsY0FBQSxJQUFBQyxZQUFBLFdBQUFsTyxHQUFBNlcsT0FBQVAsRUFBQW5NLGdCQUFBLFFBQUFqQyxJQUFBLFFBQUFvTyxFQUFBcFIsUUFBQWlSLFFBQUFVLE1BQUFuUCxFQUFBaUMsaUJBQUEsU0FBQXpCLElBQUEsSUFBQXRKLEVBQUE4SSxFQUFBcFQsTUFBQVMsTUFBQSxLQUFBNkosRUFBQS9MLEtBQUEySyxNQUFBbUIsUUFBQUMsRUFBQXRLLEdBQUEsSUFBQUEsRUFBQTJWLFFBQUFyTCxFQUFBL0wsS0FBQTJLLE1BQUFKLEtBQUF3QixFQUFBdEssR0FBQUEsRUFBQTJWLFFBQUFqSyxHQUFBLFVBQUE3SSxFQUFBK2UsV0FBQXRYLEVBQUEvTCxLQUFBMkssTUFBQXVDLE1BQUFuQixJQUFBLENBQUFBLElBQUFxRyxFQUFBLEdBQUFyRyxFQUFBQSxFQUFBN0osTUFBQSxLQUFBLElBQUEsSUFBQVQsS0FBQXNLLEVBQUEsQ0FBQXRLLEVBQUFBLEVBQUEyVixPQUFBLElBQUEsSUFBQS9VLEtBQUFpQyxFQUFBcUYsU0FBQXJGLEVBQUFxRixTQUFBdEgsSUFBQVosSUFBQUEsRUFBQVksR0FBQStQLEVBQUFuUCxLQUFBeEIsR0FBQWdpQixFQUFBaGlCLE1BQUEyUSxFQUFBeUMsRUFBQXBULE1BQUFzSyxHQUFBLENBQUFBLEVBQUFBLEVBQUFsRyxLQUFBLFNBQUF5ZSxPQUFBeE4saUJBQUEsU0FBQXpCLElBQUFvTyxFQUFBaEcsT0FBQSxTQUFBMEcsTUFBQVYsRUFBQTFqQixPQUFBdUUsRUFBQSxDQUFBcWUsS0FBQSxHQUFBelEsUUFBQSxLQUFBLElBQUFxUyxFQUFBdmtCLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLE9BQUFvTixXQUFBLENBQUFnSSxNQUFBLGlCQUFBekgsU0FBQSxDQUFBLENBQUEzTixRQUFBLElBQUFvTixXQUFBLENBQUFnSSxNQUFBLHNCQUFBclUsS0FBQUssRUFBQXFlLE1BQUEsQ0FBQXpmLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsMEJBQUEsQ0FBQXBWLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsc0JBQUFDLE1BQUEsT0FBQXJVLEtBQUEsWUFBQXVnQixFQUFBRCxFQUFBcE0sY0FBQSwwQkFBQW9NLEVBQUFwTSxjQUFBLHdCQUFBckIsaUJBQUEsUUFBQXpCLElBQUFrUCxFQUFBL0ssV0FBQSxJQUFBLElBQUFySCxLQUFBN04sRUFBQTROLFFBQUFzUyxFQUFBdlMsWUFBQSxDQUFBL08sUUFBQSxTQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxxQkFBQXJVLEtBQUFrTyxJQUFBLE1BQUEsQ0FBQTZMLFFBQUF1RyxFQUFBRSxPQUFBLElBQUFDLFFBQUEsQ0FBQUMsRUFBQUMsS0FBQUosRUFBQTFOLGlCQUFBLFFBQUF6QixJQUFBQSxFQUFBRSxPQUFBbUQsVUFBQS9NLFNBQUEsbUJBQUFnWixFQUFBdFAsRUFBQUUsT0FBQTdELGFBQUE2UyxFQUFBL0ssZUFBQXpaLFdBQUF1RSxFQUFBLENBQUErVCxHQUFBLEdBQUEwSCxNQUFBLGVBQUF6YixFQUFBQSxHQUFBLElBQUErVCxHQUFBL1QsRUFBQStULElBQUEsY0FBQSxJQUFBd00sRUFBQTdrQixLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxNQUFBb04sV0FBQSxDQUFBK0gsR0FBQS9ULEVBQUErVCxJQUFBeEgsU0FBQSxDQUFBLENBQUEzTixRQUFBLFFBQUFlLEtBQUEsb0tBQUFLLEVBQUF5YixPQUFBLHkrREFBQSxDQUFBN2MsUUFBQSxNQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxxQkFBQXhILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxPQUFBMk4sU0FBQSxDQUFBLENBQUEzTixRQUFBLFNBQUFvTixXQUFBLENBQUErSCxHQUFBLGFBQUFpSSxNQUFBLFFBQUFyYyxLQUFBLFVBQUEsQ0FBQWYsUUFBQSxTQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxhQUFBaUksTUFBQSxRQUFBcmMsS0FBQSxVQUFBLENBQUFmLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsZUFBQW5HLFFBQUFsUyxLQUFBZ0IsWUFBQSxDQUFBa0MsUUFBQSxTQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxtQkFBQW5HLFFBQUFsUyxLQUFBd0UsTUFBQSxFQUFBLEtBQUEsQ0FBQXRCLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsb0JBQUFpSSxNQUFBLGlCQUFBcmMsS0FBQSxPQUFBLENBQUFmLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsc0JBQUFpSSxNQUFBLGtCQUFBcmMsS0FBQSxVQUFBLENBQUFmLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsYUFBQWlJLE1BQUEsZUFBQXJjLEtBQUEsUUFBQSxDQUFBZixRQUFBLFNBQUFvTixXQUFBLENBQUErSCxHQUFBLGVBQUFpSSxNQUFBLGVBQUFyYyxLQUFBLFlBQUEsQ0FBQWYsUUFBQSxPQUFBMk4sU0FBQSxDQUFBLENBQUEzTixRQUFBLFNBQUFvTixXQUFBLENBQUErSCxHQUFBLGFBQUFpSSxNQUFBLFFBQUF6UCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsSUFBQWUsS0FBQSxPQUFBLENBQUFmLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsZUFBQWlJLE1BQUEsVUFBQXpQLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxLQUFBZSxLQUFBLE9BQUEsQ0FBQWYsUUFBQSxTQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxrQkFBQWlJLE1BQUEsYUFBQXpQLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxJQUFBZSxLQUFBLE9BQUEsQ0FBQWYsUUFBQSxTQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxZQUFBaUksTUFBQSxlQUFBelAsU0FBQSxDQUFBLENBQUEzTixRQUFBLE1BQUFlLEtBQUEsT0FBQSxDQUFBZixRQUFBLFNBQUFvTixXQUFBLENBQUErSCxHQUFBLFlBQUFpSSxNQUFBLGFBQUF6UCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsTUFBQWUsS0FBQSxPQUFBLENBQUFmLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsZUFBQWlJLE1BQUEsaUJBQUF6UCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsSUFBQWUsS0FBQSxTQUFBLENBQUFmLFFBQUEsUUFBQW9OLFdBQUEsQ0FBQWhELEtBQUEsUUFBQStLLEdBQUEsa0JBQUFpSSxNQUFBLG9CQUFBN2UsTUFBQSxZQUFBLENBQUF5QixRQUFBLFFBQUFvTixXQUFBLENBQUFoRCxLQUFBLFFBQUErSyxHQUFBLGtCQUFBaUksTUFBQSxrQkFBQTdlLE1BQUEsWUFBQSxDQUFBeUIsUUFBQSxRQUFBb04sV0FBQSxDQUFBaEQsS0FBQSxRQUFBK0ssR0FBQSxtQkFBQWlJLE1BQUEsb0JBQUE3ZSxNQUFBLFlBQUEsQ0FBQXlCLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsa0JBQUFpSSxNQUFBLGNBQUF6UCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsSUFBQWUsS0FBQSxPQUFBLENBQUFmLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsb0JBQUFpSSxNQUFBLGdCQUFBelAsU0FBQSxDQUFBLENBQUEzTixRQUFBLElBQUFlLEtBQUEsT0FBQSxDQUFBZixRQUFBLFNBQUFvTixXQUFBLENBQUErSCxHQUFBLHFCQUFBaUksTUFBQSxpQkFBQXpQLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxJQUFBZSxLQUFBLE9BQUEsQ0FBQWYsUUFBQSxTQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxtQkFBQWlJLE1BQUEsZUFBQXpQLFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxJQUFBZSxLQUFBLFdBQUEsQ0FBQWYsUUFBQSxNQUFBb04sV0FBQSxDQUFBK0gsR0FBQSx5QkFBQXhILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxTQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxxQkFBQXlNLFlBQUEsRUFBQWxoQixLQUFBLG9CQUFBaWhCLEVBQUEvWSxRQUFBLGdDQUFBbU0sUUFBQThNLElBQUFBLEVBQUEzaEIsSUFBQSxDQUFBNGhCLFdBQUFELEVBQUF0akIsVUFBQW9qQixFQUFBaFosS0FBQSx3QkFBQStGLFVBQUEsU0FBQWlULEVBQUFoWixLQUFBLGVBQUErRixVQUFBLFNBQUFpVCxFQUFBaFosS0FBQSxlQUFBK0YsVUFBQSxTQUFBLElBQUFsRyxFQUFBMUwsS0FBQWlsQixFQUFBSixFQUFBaFosS0FBQSx1QkFBQSxPQUFBb1osRUFBQXBPLFFBQUEsS0FBQSxJQUFBcU8sRUFBQUQsRUFBQUUsY0FBQWhWLFNBQUErVSxFQUFBdlMsS0FBQWYsVUFBQSxHQUFBbEcsRUFBQXhILE1BQUFJLEVBQUF1YyxXQUFBcUUsRUFBQXZTLEtBQUFmLFVBQUF0TixFQUFBdWMsUUFBQWpQLFdBQUFzVCxFQUFBRSxXQUFBLEtBQUFQLEVBQUFoWixLQUFBLGVBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLFFBQUEsRUFBQSxRQUFBLEdBQUFSLEVBQUFoWixLQUFBLGlCQUFBaUwsaUJBQUEsUUFBQSxLQUFBb08sRUFBQUcsWUFBQSxVQUFBLEVBQUEsUUFBQSxHQUFBUixFQUFBaFosS0FBQSxvQkFBQWlMLGlCQUFBLFFBQUEsS0FBQW9PLEVBQUFHLFlBQUEsYUFBQSxFQUFBLFFBQUEsR0FBQVIsRUFBQWhaLEtBQUEsY0FBQWlMLGlCQUFBLFFBQUEsS0FBQW9PLEVBQUFHLFlBQUEsZUFBQSxFQUFBLFFBQUEsR0FBQVIsRUFBQWhaLEtBQUEsY0FBQWlMLGlCQUFBLFFBQUEsS0FBQW9PLEVBQUFHLFlBQUEsYUFBQSxFQUFBLFFBQUEsR0FBQVIsRUFBQWhaLEtBQUEsaUJBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLGlCQUFBLEVBQUEsUUFBQSxHQUFBUixFQUFBaFosS0FBQSxzQkFBQWlMLGlCQUFBLFFBQUEsS0FBQW9PLEVBQUFHLFlBQUEscUJBQUEsRUFBQSxRQUFBM1osRUFBQWpILFlBQUEsR0FBQW9nQixFQUFBaFosS0FBQSx3QkFBQWlMLGlCQUFBLFFBQUEsS0FBQW9PLEVBQUFHLFlBQUEsdUJBQUEsRUFBQSxRQUFBM1osRUFBQWpILFlBQUEsR0FBQW9nQixFQUFBaFosS0FBQSxvQkFBQTJQLFVBQUEvWixJQUFBeWpCLEVBQUFHLFlBQUEsYUFBQSxFQUFBNWpCLEtBQUFvakIsRUFBQWhaLEtBQUEsb0JBQUEyUCxVQUFBL1osSUFBQXlqQixFQUFBRyxZQUFBLGFBQUEsRUFBQTVqQixLQUFBb2pCLEVBQUFoWixLQUFBLHFCQUFBMlAsVUFBQS9aLElBQUF5akIsRUFBQXZTLEtBQUF0UCxNQUFBaWlCLFdBQUE3akIsSUFBQW9qQixFQUFBaFosS0FBQSxnQkFBQTJQLFVBQUEvWixJQUFBeWpCLEVBQUFHLFlBQUEsWUFBQSxFQUFBNWpCLEtBQUFvakIsRUFBQWhaLEtBQUEsb0JBQUEyUCxVQUFBL1osSUFBQXlqQixFQUFBRyxZQUFBLFlBQUEsRUFBQTVqQixLQUFBb2pCLEVBQUFoWixLQUFBLGVBQUFpTCxpQkFBQSxRQUFBLEtBQUEsSUFBQTVSLEVBQUFxZ0IsT0FBQSxjQUFBLFdBQUE3WixFQUFBakUsT0FBQXZDLElBQUFnZ0IsRUFBQUcsWUFBQSxjQUFBLEVBQUFuZ0IsS0FBQSxHQUFBMmYsRUFBQWhaLEtBQUEsaUJBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLFVBQUEsRUFBQSxRQUFBLEdBQUFSLEVBQUFoWixLQUFBLGVBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLFFBQUEsRUFBQSxRQUFBLEdBQUFSLEVBQUFoWixLQUFBLGVBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLFFBQUEsRUFBQSxRQUFBLEdBQUFSLEVBQUFoWixLQUFBLG9CQUFBaUwsaUJBQUEsUUFBQSxLQUFBb08sRUFBQUcsWUFBQSxlQUFBLEVBQUEsUUFBQVIsRUFBQWhaLEtBQUEsc0JBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLGlCQUFBLEVBQUEsUUFBQVIsRUFBQWhaLEtBQUEsdUJBQUFpTCxpQkFBQSxRQUFBLEtBQUFvTyxFQUFBRyxZQUFBLGVBQUEsRUFBQSxRQUFBUixFQUFBaFosS0FBQSxxQkFBQWlMLGlCQUFBLFFBQUEsS0FBQW9PLEVBQUFHLFlBQUEsZ0JBQUEsRUFBQSxVQUFBLEdBQUFSLEVBQUE5a0IsWUFBQThKLEVBQUEsR0FBQXFaLEdBQUEsSUFBQXNDLEVBQUEsR0FBQUMsRUFBQWhrQixHQUFBekIsS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsa0JBQUFyVSxLQUFBLElBQUF4QyxPQUFBaWtCLEVBQUFqa0IsR0FBQXpCLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLE9BQUFvTixXQUFBLENBQUFnSSxNQUFBLGtCQUFBclUsS0FBQSxHQUFBeEMsSUFBQWtrQixFQUFBbGtCLEdBQUF6QixLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxrQkFBQXJVLEtBQUEsR0FBQXhDLElBQUFta0IsRUFBQSxDQUFBbmtCLEVBQUE2QyxLQUFBQSxFQUFBQSxHQUFBLEdBQUEsSUFBQXdhLEVBQUE5ZSxLQUFBcVEsY0FBQSxDQUFBbk4sUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxxQkFBQSxPQUFBa04sRUFBQXZpQixLQUFBNmIsR0FBQTllLEtBQUFrRSxNQUFBSSxFQUFBbkIsS0FBQTJiLEVBQUE3TSxZQUFBLENBQUF3VCxFQUFBbmhCLEVBQUFuQixLQUFBd2lCLEVBQUEsT0FBQUUsRUFBQXBrQixLQUFBcWQsRUFBQTdNLFlBQUEsQ0FBQTRULEVBQUFwa0IsS0FBQXFkLEdBQUFnSCxFQUFBcmtCLElBQUEsSUFBQXFkLEVBQUFuVSxFQUFBM0ssS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsc0JBQUFrTixFQUFBdmlCLEtBQUEwSCxHQUFBQSxFQUFBc0gsWUFBQTBULEVBQUEsTUFBQSxJQUFBLElBQUF0akIsRUFBQSxFQUFBQSxFQUFBWixFQUFBVSxPQUFBRSxJQUFBeWMsRUFBQW5VLEVBQUFzSCxZQUFBMlQsRUFBQW5rQixFQUFBWSxLQUFBQSxHQUFBWixFQUFBVSxPQUFBLEdBQUEyYyxFQUFBN00sWUFBQTBULEVBQUEsTUFBQSxPQUFBaGIsRUFBQXNILFlBQUEwVCxFQUFBLE1BQUFoYixHQUFBb2IsRUFBQXRrQixJQUFBLElBQUFxZCxFQUFBalksRUFBQTdHLEtBQUFxUSxjQUFBLENBQUFuTixRQUFBLE9BQUFvTixXQUFBLENBQUFnSSxNQUFBLHNCQUFBa04sRUFBQXZpQixLQUFBNEQsR0FBQUEsRUFBQW9MLFlBQUEwVCxFQUFBLE1BQUEsSUFBQXRqQixFQUFBLEVBQUEsSUFBQSxJQUFBYyxLQUFBMUIsRUFBQXFkLEVBQUFqWSxFQUFBb0wsWUFBQTJULEVBQUFua0IsRUFBQTBCLEdBQUEsQ0FBQUEsSUFBQUEsS0FBQWQsR0FBQXlFLE9BQUFDLEtBQUF0RixHQUFBVSxPQUFBLEdBQUEyYyxFQUFBN00sWUFBQTBULEVBQUEsTUFBQXRqQixJQUFBLE9BQUF3RSxFQUFBb0wsWUFBQTBULEVBQUEsTUFBQTllLEdBQUFnZixFQUFBcGtCLEdBQUEsaUJBQUFBLEVBQUFna0IsRUFBQWhrQixHQUFBbUcsTUFBQW9GLFFBQUF2TCxHQUFBcWtCLEVBQUFya0IsR0FBQSxpQkFBQUEsRUFBQXNrQixFQUFBdGtCLEdBQUFpa0IsRUFBQWprQixHQUFBdWtCLEVBQUFobUIsS0FBQXFRLGNBQUEsQ0FBQW5OLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEscUJBQUF6SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsa0JBQUFqVixNQUFBLENBQUE0aUIsV0FBQSxVQUFBLENBQUEvaUIsUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSx1QkFBQSxDQUFBcFYsUUFBQSxPQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxrQkFBQWpWLE1BQUEsQ0FBQTRpQixXQUFBLFNBQUFwVixTQUFBLENBQUFnVixFQUFBaGMsUUFBQTdKLEtBQUFrRSxNQUFBZ2YsSUFBQUEsRUFBQXpTLE9BQUF1VixHQUFBLElBQUFFLEVBQUFDLEVBQUFDLEVBQUFKLEVBQUFuYSxLQUFBLG9CQUFBd2EsR0FBQUQsRUFBQTFnQixXQUFBc2EsT0FBQWdHLEVBQUFuYSxLQUFBLHFCQUFBeWEsRUFBQU4sRUFBQW5hLEtBQUEsdUJBQUEwYSxHQUFBQyxTQUFBLFFBQUFKLEVBQUF0YSxRQUFBLG9CQUFBc2EsRUFBQXRhLFFBQUEsc0JBQUEyYSxFQUFBMUQsSUFBQSxJQUFBcmdCLEVBQUFpQyxLQUFBRyxPQUFBaWUsRUFBQXJkLFdBQUFpWSxJQUFBeUksRUFBQTFnQixXQUFBaVksS0FBQTZJLFNBQUEsU0FBQSxFQUFBNWpCLEVBQUErQixLQUFBRyxPQUFBaWUsRUFBQXJkLFdBQUFvZSxPQUFBc0MsRUFBQTFnQixXQUFBaVksS0FBQTZJLFNBQUEsU0FBQSxFQUFBekQsRUFBQXZlLE1BQUF4RSxLQUFBd0UsTUFBQTVCLEVBQUFGLElBQUFna0IsRUFBQTNELElBQUEsSUFBQSxJQUFBMWdCLEVBQUEsRUFBQUEsRUFBQTBnQixFQUFBdmUsTUFBQXJDLE9BQUFFLElBQUFyQyxLQUFBa0UsTUFBQWdpQixFQUFBbkQsRUFBQXZlLE1BQUFuQyxJQUFBc2tCLGNBQUFULEVBQUFuRCxFQUFBdmUsTUFBQW5DLElBQUFlLElBQUEsQ0FBQTRhLFFBQUEsU0FBQWtJLEVBQUFuRCxFQUFBdmUsTUFBQW5DLElBQUFza0IsV0FBQTVELElBQUE2RCxFQUFBN0QsSUFBQSxJQUFBOEQsRUFBQTlELEVBQUFsUyxTQUFBLElBQUEsSUFBQXhPLEVBQUEsRUFBQUEsRUFBQXdrQixFQUFBMWtCLE9BQUFFLElBQUF3a0IsRUFBQXhrQixHQUFBcVcsVUFBQS9NLFNBQUEscUJBQUFrYixFQUFBeGtCLEdBQUFlLElBQUEsQ0FBQTRhLFFBQUEsU0FBQTZJLEVBQUF4a0IsR0FBQXlKLFFBQUEscUJBQUFtTSxRQUFBaFMsSUFBQWpHLEtBQUFrRSxNQUFBK0IsRUFBQWlYLE9BQUF5SixjQUFBMWdCLEVBQUFpWCxPQUFBeUosV0FBQTVELEVBQUE5YyxFQUFBaVgsT0FBQTlaLElBQUEsQ0FBQTRhLFFBQUEsY0FBQSxPQUFBd0gsRUFBQXZpQixVQUFBLEdBQUEraUIsRUFBQW5QLFFBQUF4QixJQUFBLE1BQUEsSUFBQSxJQUFBaFQsRUFBQSxFQUFBQSxFQUFBbWpCLEVBQUFyakIsT0FBQUUsSUFBQWdrQixFQUFBcFUsWUFBQSxDQUFBLENBQUEvTyxRQUFBLElBQUF5TyxLQUFBLElBQUF0UCxFQUFBLEVBQUEsR0FBQWlPLFdBQUEsQ0FBQWdJLE1BQUEsOEJBQUEsR0FBQSxNQUFBLElBQUEsSUFBQWpXLEVBQUEsRUFBQUEsRUFBQWtrQixFQUFBcGtCLE9BQUFFLElBQUEsQ0FBQSxJQUFBc2IsRUFBQTRJLEVBQUFsa0IsR0FBQXFELFdBQUFpWSxJQUFBeUksRUFBQTFnQixXQUFBaVksSUFBQSxFQUFBLEtBQUFULEVBQUFvSixFQUFBclUsWUFBQSxDQUFBL08sUUFBQSxJQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSw4Q0FBQWpWLE1BQUEsQ0FBQXNhLElBQUFBLE1BQUFULEVBQUE2RixNQUFBd0QsRUFBQWxrQixHQUFBa2tCLEVBQUFsa0IsR0FBQTZhLE9BQUFBLElBQUEsR0FBQWdKLEVBQUFHLEVBQUF2YSxRQUFBLDJCQUFBcWEsRUFBQUcsRUFBQXhhLFFBQUEsOEJBQUFrYSxFQUFBbFAsaUJBQUEsUUFBQXpCLElBQUEsSUFBQUUsRUFBQUYsRUFBQUUsT0FBQUEsRUFBQW1ELFVBQUEvTSxTQUFBLCtCQUFBM0wsS0FBQWtFLE1BQUFxUixFQUFBd04sTUFBQXZlLFFBQUFpaUIsRUFBQWxSLEVBQUF3TixPQUFBeE4sRUFBQW1ELFVBQUEvTSxTQUFBLGtCQUFBK2EsRUFBQW5SLEVBQUF3TixPQUFBNkQsRUFBQXJSLEVBQUF3TixTQUFBLENBQUFBLElBQUEsSUFBQSxJQUFBMWdCLEVBQUEsRUFBQUEsRUFBQTBnQixFQUFBdmUsTUFBQXJDLE9BQUFFLElBQUE2akIsRUFBQW5ELEVBQUF2ZSxNQUFBbkMsSUFBQXNrQixZQUFBNUQsSUFBQW1ELEVBQUFuRCxFQUFBdmUsTUFBQW5DLElBQUEwVixVQUFBLENBQUEsbUJBQUFtTyxFQUFBbkQsRUFBQXZlLE1BQUFuQyxJQUFBc2tCLGFBQUEsQ0FBQXBSLEVBQUF3TixPQUFBLENBQUFBLElBQUEsSUFBQThELEVBQUE5RCxFQUFBbFMsU0FBQSxJQUFBLElBQUF4TyxFQUFBLEVBQUFBLEVBQUF3a0IsRUFBQTFrQixPQUFBRSxJQUFBd2tCLEVBQUF4a0IsR0FBQXFXLFVBQUEvTSxTQUFBLHFCQUFBa2IsRUFBQXhrQixHQUFBMFYsVUFBQSxDQUFBLFlBQUE4TyxFQUFBeGtCLEdBQUF5SixRQUFBLHFCQUFBbU0sUUFBQWhTLElBQUFBLEVBQUFpWCxPQUFBeUosWUFBQTVELFdBQUE5YyxFQUFBaVgsT0FBQXlKLFdBQUExZ0IsRUFBQWlYLE9BQUFuRixVQUFBLENBQUEsaUJBQUEsQ0FBQXhDLEVBQUF3TixRQUFBeE4sRUFBQW1ELFVBQUF3RSxPQUFBLGVBQUEzSCxFQUFBbUQsVUFBQXdFLE9BQUEsaUJBQUEsTUFBQSxJQUFBLElBQUE3YSxFQUFBLEVBQUFBLEVBQUE4akIsRUFBQWhrQixPQUFBRSxJQUFBOGpCLEVBQUE5akIsR0FBQWUsSUFBQSxDQUFBdWEsSUFBQXdJLEVBQUE5akIsR0FBQTBnQixNQUFBcmQsV0FBQWlZLElBQUF5SSxFQUFBMWdCLFdBQUFpWSxJQUFBLEVBQUEsUUFBQSxRQUFBcUksSUNBQWMsRUFBQSxXQUFBLElBQUFwYixFQUFBLEdBQUEsT0FBQUEsRUFBQW5DLEtBQUEsSUFBQXpKLEVBQUE0TCxFQUFBcWIsZ0JBQUEsSUFBQXBSLEVBQUFqSyxFQUFBcWIsZ0JBQUFsUixpQkFBQW5LLEVBQUFzYix1QkFBQSxDQUFBbGhCLEVBQUEsRUFBQW1oQixFQUFBLEdBQUF2YixFQUFBd2IseUJBQUEsQ0FBQXBoQixFQUFBLEVBQUFtaEIsRUFBQSxHQUFBdmIsRUFBQXliLFVBQUEsTUFBQXpiLEVBQUEwYixLQUFBOWlCLElBQUFvSCxFQUFBdVgsT0FBQXZYLEVBQUFxYixnQkFBQTFXLGNBQUEsQ0FBQW5OLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQWdJLE1BQUEsZ0JBQUF6SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsd0JBQUF4SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsOEJBQUF4SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsd0JBQUEsQ0FBQW5WLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsbUNBQUEsQ0FBQW5WLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsaUNBQUF4SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsMkJBQUEsQ0FBQW5WLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsdUNBQUEsQ0FBQW5WLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQStILEdBQUEsdUJBQUF4SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsaUJBQUEsQ0FBQW5WLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsdUJBQUF4SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsdUJBQUFuRyxRQUFBLENBQUEsTUFBQSxNQUFBLFFBQUEsQ0FBQWhQLFFBQUEsT0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsOEJBQUEzTSxFQUFBMmIsWUFBQTNiLEVBQUF1WCxPQUFBcFgsS0FBQSwrQkFBQUgsRUFBQTRiLGNBQUE1YixFQUFBdVgsT0FBQXBYLEtBQUEsa0NBQUFILEVBQUE2YixZQUFBN2IsRUFBQXVYLE9BQUFwWCxLQUFBLHdCQUFBSCxFQUFBOGIsY0FBQTliLEVBQUF1WCxPQUFBcFgsS0FBQSwyQkFBQUgsRUFBQStiLFlBQUEvYixFQUFBdVgsT0FBQXBYLEtBQUEsaUNBQUFILEVBQUFnYyxjQUFBaGMsRUFBQXVYLE9BQUFwWCxLQUFBLG1DQUFBSCxFQUFBcVUsTUFBQXpiLEVBQUF5YixNQUFBclUsRUFBQXNVLE9BQUExYixFQUFBMGIsT0FBQXRVLEVBQUFpYyxZQUFBcmpCLEVBQUE4ZSxPQUFBLGVBQUExWCxFQUFBMmIsWUFBQWprQixJQUFBLENBQUE0YyxPQUFBdFUsRUFBQXNVLE9BQUEsT0FBQXRVLEVBQUE2YixZQUFBeEgsTUFBQXJVLEVBQUFxVSxNQUFBclUsRUFBQTZiLFlBQUF2SCxPQUFBdFUsRUFBQXNVLE9BQUF0VSxFQUFBNGIsY0FBQWxrQixJQUFBLENBQUE0YyxPQUFBdFUsRUFBQXNVLE9BQUEsT0FBQXRVLEVBQUE4YixjQUFBeEgsT0FBQXRVLEVBQUFzVSxPQUFBdFUsRUFBQThiLGNBQUF6SCxNQUFBLEdBQUFyVSxFQUFBa2MsYUFBQWxjLEVBQUE2YixZQUFBTSxXQUFBLE1BQUFuYyxFQUFBb2MsZUFBQXBjLEVBQUE4YixjQUFBSyxXQUFBLE1BQUFuYyxFQUFBdVgsT0FBQXBYLEtBQUEsdUJBQUFrYyxVQUFBcmMsRUFBQWljLFlBQUFqYyxFQUFBdVgsT0FBQXBYLEtBQUEsd0JBQUEyUCxVQUFBL1osSUFBQWlLLEVBQUF5YixVQUFBMWxCLEVBQUFpSyxFQUFBc2MsVUFBQXRjLEVBQUF1YyxTQUFBdmMsRUFBQXVYLFFBQUF2WCxFQUFBd2MsZUFBQSxLQUFBLElBQUFDLEVBQUF6YyxFQUFBa2MsYUFBQVEscUJBQUEsRUFBQSxFQUFBMWMsRUFBQXFVLE1BQUEsR0FBQW9JLEVBQUFFLGFBQUEsRUFBQSxrQkFBQUYsRUFBQUUsYUFBQSxJQUFBLG9CQUFBRixFQUFBRSxhQUFBLElBQUEsa0JBQUFGLEVBQUFFLGFBQUEsSUFBQSxvQkFBQUYsRUFBQUUsYUFBQSxJQUFBLGtCQUFBRixFQUFBRSxhQUFBLElBQUEsb0JBQUFGLEVBQUFFLGFBQUEsRUFBQSxrQkFBQTNjLEVBQUFrYyxhQUFBVSxVQUFBSCxFQUFBemMsRUFBQWtjLGFBQUFXLFNBQUEsRUFBQSxFQUFBN2MsRUFBQXFVLE1BQUFyVSxFQUFBc1UsU0FBQW1JLEVBQUF6YyxFQUFBa2MsYUFBQVEscUJBQUEsRUFBQSxFQUFBLEVBQUExYyxFQUFBc1UsU0FBQXFJLGFBQUEsRUFBQSwwQkFBQUYsRUFBQUUsYUFBQSxHQUFBLDBCQUFBRixFQUFBRSxhQUFBLEdBQUEsb0JBQUFGLEVBQUFFLGFBQUEsRUFBQSxvQkFBQTNjLEVBQUFrYyxhQUFBVSxVQUFBSCxFQUFBemMsRUFBQWtjLGFBQUFXLFNBQUEsRUFBQSxFQUFBN2MsRUFBQXFVLE1BQUFyVSxFQUFBc1UsU0FBQXRVLEVBQUE4YyxpQkFBQSxLQUFBLElBQUFDLEVBQUEvYyxFQUFBb2MsZUFBQVksVUFBQSxFQUFBLEVBQUFoZCxFQUFBOGIsY0FBQXpILE1BQUFyVSxFQUFBc1UsUUFBQSxJQUFBMkksRUFBQWpkLEVBQUFvYyxlQUFBTSxxQkFBQSxFQUFBLEVBQUEsRUFBQTFjLEVBQUE4YixjQUFBeEgsUUFBQSxJQUFBLElBQUEzZCxFQUFBLElBQUFBLEdBQUEsRUFBQUEsSUFBQW9tQixFQUFBL2MsRUFBQWtkLFdBQUFsZCxFQUFBaWMsWUFBQXRsQixFQUFBLEtBQUFzbUIsRUFBQU4sYUFBQWhtQixFQUFBLElBQUFvbUIsR0FBQS9jLEVBQUFvYyxlQUFBUSxVQUFBSyxFQUFBamQsRUFBQW9jLGVBQUFZLFVBQUEsRUFBQSxFQUFBaGQsRUFBQThiLGNBQUF6SCxNQUFBclUsRUFBQThiLGNBQUF4SCxRQUFBdFUsRUFBQW9jLGVBQUFTLFNBQUEsRUFBQSxFQUFBN2MsRUFBQThiLGNBQUF6SCxNQUFBclUsRUFBQThiLGNBQUF4SCxTQUFBdFUsRUFBQXVjLE9BQUEsS0FBQSxJQUFBWSxHQUFBLEVBQUFDLEdBQUEsRUFBQXBkLEVBQUF1WCxPQUFBM0wsZ0JBQUEsUUFBQWpDLEtBQUEzSixFQUFBcWQsT0FBQUYsR0FBQUMsR0FBQXBkLEVBQUFzZCxZQUFBdGQsRUFBQTZiLFlBQUF6USxpQkFBQSxZQUFBekIsSUFBQSxJQUFBNFQsRUFBQTVULEVBQUE2VCxRQUFBeGQsRUFBQTZiLFlBQUEvSix3QkFBQTJMLEtBQUFDLEVBQUEvVCxFQUFBZ1UsUUFBQTNkLEVBQUE2YixZQUFBL0osd0JBQUFHLElBQUFrTCxFQUFBSSxFQUFBLEdBQUFBLEVBQUF2ZCxFQUFBNmIsWUFBQS9KLHdCQUFBdUMsT0FBQXFKLEVBQUEsR0FBQUEsRUFBQTFkLEVBQUE2YixZQUFBL0osd0JBQUF3QyxTQUFBdFUsRUFBQTZiLFlBQUF6USxpQkFBQSxZQUFBekIsSUFBQSxHQUFBd1QsRUFBQSxDQUFBbmQsRUFBQXNiLHVCQUFBbGhCLEVBQUF1UCxFQUFBNlQsUUFBQXhkLEVBQUE2YixZQUFBL0osd0JBQUEyTCxLQUFBemQsRUFBQXNiLHVCQUFBQyxFQUFBNVIsRUFBQWdVLFFBQUEzZCxFQUFBNmIsWUFBQS9KLHdCQUFBRyxJQUFBalMsRUFBQStiLFlBQUFya0IsSUFBQSxDQUFBdWEsSUFBQWpTLEVBQUFzYix1QkFBQUMsRUFBQSxLQUFBa0MsS0FBQXpkLEVBQUFzYix1QkFBQWxoQixFQUFBLE9BQUEsSUFBQXdqQixFQUFBNWQsRUFBQTZkLGlCQUFBN2QsRUFBQWljLFlBQUEsT0FBQTJCLEVBQUE3ZSxNQUFBNmUsRUFBQUUsTUFBQUYsRUFBQXJqQixLQUFBeUYsRUFBQXNjLFdBQUF0YyxFQUFBNmIsWUFBQXpRLGlCQUFBLFVBQUF6QixJQUFBd1QsR0FBQSxFQUFBbmQsRUFBQThjLHFCQUFBOWMsRUFBQThiLGNBQUExUSxpQkFBQSxZQUFBekIsSUFBQSxJQUFBNFQsRUFBQTVULEVBQUE2VCxRQUFBeGQsRUFBQThiLGNBQUFoSyx3QkFBQTJMLEtBQUFDLEVBQUEvVCxFQUFBZ1UsUUFBQTNkLEVBQUE4YixjQUFBaEssd0JBQUFHLElBQUFtTCxFQUFBRyxFQUFBLEdBQUFBLEVBQUF2ZCxFQUFBOGIsY0FBQWhLLHdCQUFBdUMsT0FBQXFKLEVBQUEsR0FBQUEsRUFBQTFkLEVBQUE4YixjQUFBaEssd0JBQUF3QyxTQUFBdFUsRUFBQThiLGNBQUExUSxpQkFBQSxZQUFBekIsSUFBQSxHQUFBeVQsRUFBQSxDQUFBcGQsRUFBQXdiLHlCQUFBcGhCLEVBQUF1UCxFQUFBNlQsUUFBQXhkLEVBQUE4YixjQUFBaEssd0JBQUEyTCxLQUFBemQsRUFBQXdiLHlCQUFBRCxFQUFBNVIsRUFBQWdVLFFBQUEzZCxFQUFBOGIsY0FBQWhLLHdCQUFBRyxJQUFBalMsRUFBQWdjLGNBQUF0a0IsSUFBQSxDQUFBdWEsSUFBQWpTLEVBQUF3Yix5QkFBQUQsRUFBQSxPQUFBLElBQUFxQyxFQUFBNWQsRUFBQStkLG1CQUFBL2QsRUFBQWljLFlBQUEsT0FBQTJCLEVBQUE3ZSxNQUFBNmUsRUFBQUUsTUFBQUYsRUFBQXJqQixNQUFBcWpCLEVBQUF0akIsS0FBQTBGLEVBQUFzYyxXQUFBdGMsRUFBQThiLGNBQUExUSxpQkFBQSxVQUFBekIsSUFBQXlULEdBQUEsS0FBQXBkLEVBQUFzYyxNQUFBLEtBQUF0YyxFQUFBZ2UsY0FBQWhlLEVBQUF1WCxPQUFBN0gsY0FBQSxJQUFBQyxZQUFBLGlCQUFBM1AsRUFBQXVYLE9BQUFwWCxLQUFBLGlCQUFBekksSUFBQSxDQUFBMGMsZ0JBQUFwVSxFQUFBaWUsaUJBQUFqZSxFQUFBdVgsT0FBQXBYLEtBQUEsdUJBQUFrYyxVQUFBcmMsRUFBQWllLGdCQUFBamUsRUFBQWdlLFlBQUEsS0FBQSxPQUFBaGUsRUFBQXliLFVBQUF6YixFQUFBaWUsZUFBQWplLEVBQUFrZSxTQUFBbGUsRUFBQWljLGFBQUEsT0FBQWpjLEVBQUF5YixVQUFBemIsRUFBQWllLGVBQUFqZSxFQUFBbWUsU0FBQW5lLEVBQUFpYyxhQUFBLE9BQUFqYyxFQUFBeWIsWUFBQXpiLEVBQUFpZSxlQUFBamUsRUFBQWljLGNBQUFqYyxFQUFBOFAsVUFBQXhULElBQUEwRCxFQUFBdVgsT0FBQW5NLGlCQUFBLGVBQUF6QixJQUFBck4sRUFBQTBELEVBQUFpZSxtQkFBQWplLEVBQUE2ZCxlQUFBLEtBQUEsSUFBQU8sRUFBQXBlLEVBQUFrYyxhQUFBbUMsYUFBQXJlLEVBQUFzYix1QkFBQWxoQixFQUFBNEYsRUFBQXNiLHVCQUFBQyxFQUFBLEVBQUEsR0FBQSxNQUFBLENBQUF4YyxFQUFBcWYsRUFBQWpnQixLQUFBLEdBQUEyZixFQUFBTSxFQUFBamdCLEtBQUEsR0FBQTVELEVBQUE2akIsRUFBQWpnQixLQUFBLEtBQUE2QixFQUFBK2QsaUJBQUEsS0FBQSxJQUFBSyxFQUFBcGUsRUFBQW9jLGVBQUFpQyxhQUFBcmUsRUFBQXdiLHlCQUFBcGhCLEVBQUE0RixFQUFBd2IseUJBQUFELEVBQUEsRUFBQSxHQUFBK0MsRUFBQXJsQixLQUFBc2xCLEtBQUFILEVBQUFqZ0IsS0FBQSxHQUFBLElBQUEsS0FBQSxJQUFBLE1BQUEsQ0FBQVksRUFBQXFmLEVBQUFqZ0IsS0FBQSxHQUFBMmYsRUFBQU0sRUFBQWpnQixLQUFBLEdBQUE1RCxFQUFBNmpCLEVBQUFqZ0IsS0FBQSxHQUFBN0QsRUFBQWdrQixJQUFBdGUsRUFBQXdlLEtBQUE1bEIsSUFBQW9ILEVBQUEwYixLQUFBOWlCLEdBQUFvSCxFQUFBd2MsaUJBQUF4YyxFQUFBOGMsbUJBQUEsSUFBQTJCLEVBQUEvSixXQUFBLEtBQUExVSxFQUFBcWQsT0FBQSxFQUFBMUksYUFBQThKLElBQUEsS0FBQSxPQUFBemUsRUFBQXVYLFFBQUF2WCxFQUFBc2QsUUFBQSxLQUFBb0IsY0FBQTFlLEVBQUF5ZSxVQUFBemUsRUFBQXVYLE9BQUF6SixVQUFBOU4sRUFBQTJlLFVBQUEsQ0FBQWpILEVBQUEsYUFBQSxJQUFBOVYsRUFBQSxTQUFBLEdBQUEsR0FBQThWLEVBQUFuaEIsUUFBQSxPQUFBbWhCLEVBQUFqaEIsT0FBQSxHQUFBLEdBQUEsRUFBQW1MLEVBQUEsV0FBQSxHQUFBLEdBQUE4VixFQUFBbmhCLFFBQUEsUUFBQSxDQUFBLElBQUE4SixFQUFBTCxFQUFBbkMsS0FBQTdILFVBQUEwaEIsRUFBQSxRQUFBLE1BQUEsR0FBQXJYLEdBQUEsR0FBQUEsRUFBQTdKLE1BQUEsS0FBQUMsU0FBQW1MLEVBQUEsYUFBQSxHQUFBLEdBQUE4VixFQUFBbmhCLFFBQUEsT0FBQSxDQUFBLElBQUE4SixFQUFBTCxFQUFBbkMsS0FBQTdILFVBQUEwaEIsRUFBQSxPQUFBLE1BQUEsR0FBQXJYLEdBQUEsR0FBQUEsRUFBQTdKLE1BQUEsS0FBQUMsU0FBQW1MLEVBQUEsWUFBQSxHQUFBLEdBQUE4VixFQUFBbmhCLFFBQUEsUUFBQSxDQUFBLElBQUE4SixFQUFBTCxFQUFBbkMsS0FBQTdILFVBQUEwaEIsRUFBQSxRQUFBLE1BQUEsR0FBQXJYLEdBQUEsR0FBQUEsRUFBQTdKLE1BQUEsS0FBQUMsU0FBQW1MLEVBQUEsYUFBQSxHQUFBLEdBQUE4VixFQUFBbmhCLFFBQUEsT0FBQSxDQUFBLElBQUE4SixFQUFBTCxFQUFBbkMsS0FBQTdILFVBQUEwaEIsRUFBQSxPQUFBLE1BQUEsR0FBQXJYLEdBQUEsR0FBQUEsRUFBQTdKLE1BQUEsS0FBQUMsU0FBQW1MLEVBQUEsT0FBQSxPQUFBQSxHQUFBNUIsRUFBQTRlLFNBQUEsQ0FBQUMsRUFBQSxVQUFBUCxHQUFBLEtBQUEsSUFBQXZmLEVBQUEsRUFBQStlLEVBQUEsRUFBQXZqQixFQUFBLEVBQUFELEVBQUEsSUFBQSxPQUFBLEdBQUF1a0IsRUFBQXBvQixRQUFBc0ksRUFBQSxLQUFBOGYsRUFBQSxHQUFBQSxFQUFBLEdBQUFmLEVBQUEsS0FBQWUsRUFBQSxHQUFBQSxFQUFBLEdBQUF0a0IsRUFBQSxLQUFBc2tCLEVBQUEsR0FBQUEsRUFBQSxJQUFBLEdBQUFBLEVBQUFwb0IsUUFBQXNJLEVBQUEsS0FBQThmLEVBQUEsR0FBQUEsRUFBQSxHQUFBZixFQUFBLEtBQUFlLEVBQUEsR0FBQUEsRUFBQSxHQUFBdGtCLEVBQUEsS0FBQXNrQixFQUFBLEdBQUFBLEVBQUEsR0FBQXZrQixFQUFBLEtBQUF1a0IsRUFBQSxHQUFBQSxFQUFBLElBQUEsR0FBQUEsRUFBQXBvQixRQUFBc0ksRUFBQSxLQUFBOGYsRUFBQSxHQUFBQSxFQUFBLEdBQUFmLEVBQUEsS0FBQWUsRUFBQSxHQUFBQSxFQUFBLEdBQUF0a0IsRUFBQSxLQUFBc2tCLEVBQUEsR0FBQUEsRUFBQSxJQUFBLEdBQUFBLEVBQUFwb0IsU0FBQXNJLEVBQUEsS0FBQThmLEVBQUEsR0FBQUEsRUFBQSxHQUFBZixFQUFBLEtBQUFlLEVBQUEsR0FBQUEsRUFBQSxHQUFBdGtCLEVBQUEsS0FBQXNrQixFQUFBLEdBQUFBLEVBQUEsR0FBQXZrQixFQUFBLEtBQUF1a0IsRUFBQSxHQUFBQSxFQUFBLElBQUF2a0IsSUFBQUEsRUFBQSxLQUFBd2tCLFFBQUEsR0FBQSxHQUFBUixFQUFBLFFBQUF2ZixPQUFBK2UsT0FBQXZqQixLQUFBLFFBQUF3RSxPQUFBK2UsT0FBQXZqQixNQUFBRCxNQUFBMEYsRUFBQStlLFNBQUEsQ0FBQUYsRUFBQSxVQUFBUCxHQUFBLEtBQUEsSUFBQTVHLEVBQUExWCxFQUFBNGUsU0FBQUMsRUFBQVAsR0FBQSxPQUFBdGUsRUFBQW1lLFNBQUF6RyxFQUFBNEcsSUFBQXRlLEVBQUFrZSxTQUFBLENBQUFjLEVBQUEsZUFBQVYsR0FBQSxLQUFBLElBQUF0bkIsRUFBQWdvQixFQUFBem9CLFFBQUEsS0FBQSxFQUFBVyxFQUFBOG5CLEVBQUF6b0IsUUFBQSxNQUFBd0ksRUFBQStlLEVBQUF2akIsRUFBQUQsR0FBQTBrQixFQUFBN25CLE1BQUFILEVBQUFFLEdBQUFWLE1BQUEsS0FBQSxPQUFBd0osRUFBQW5DLEtBQUFyRixNQUFBOEIsS0FBQUEsRUFBQSxHQUFBeUUsSUFBQUEsR0FBQXhGLFNBQUEsSUFBQXVrQixJQUFBQSxHQUFBdmtCLFNBQUEsSUFBQWdCLElBQUFBLEdBQUFoQixTQUFBLElBQUFlLEVBQUFyQixLQUFBZ21CLE1BQUEsSUFBQTNrQixHQUFBZixTQUFBLElBQUEsR0FBQXdGLEVBQUF0SSxTQUFBc0ksRUFBQSxJQUFBQSxHQUFBLEdBQUErZSxFQUFBcm5CLFNBQUFxbkIsRUFBQSxJQUFBQSxHQUFBLEdBQUF2akIsRUFBQTlELFNBQUE4RCxFQUFBLElBQUFBLEdBQUEsR0FBQUQsRUFBQTdELFNBQUE2RCxFQUFBLElBQUFBLEdBQUEsS0FBQSxHQUFBZ2tCLEVBQUEsR0FBQXZmLElBQUErZSxJQUFBdmpCLElBQUFELElBQUEsR0FBQXlFLElBQUErZSxJQUFBdmpCLE1BQUF5RixFQUFBbWUsU0FBQSxDQUFBYSxFQUFBLGVBQUFWLEdBQUEsS0FBQSxJQUFBdG5CLEVBQUFnb0IsRUFBQXpvQixRQUFBLEtBQUEsRUFBQVcsRUFBQThuQixFQUFBem9CLFFBQUEsTUFBQXdJLEVBQUErZSxFQUFBdmpCLEVBQUFELEdBQUEwa0IsRUFBQTduQixNQUFBSCxFQUFBRSxHQUFBVixNQUFBLEtBQUFpSSxRQUFBRSxJQUFBSSxFQUFBK2UsRUFBQXZqQixHQUFBeUYsRUFBQW5DLEtBQUFyRixNQUFBOEIsS0FBQUEsRUFBQSxHQUFBeUUsR0FBQSxJQUFBK2UsR0FBQSxJQUFBdmpCLEdBQUEsSUFBQSxJQUFBMmtCLEVBQUFqbUIsS0FBQWttQixJQUFBcGdCLEVBQUErZSxFQUFBdmpCLEdBQUE2a0IsRUFBQW5tQixLQUFBb21CLElBQUF0Z0IsRUFBQStlLEVBQUF2akIsR0FBQStrQixFQUFBRixFQUFBRixFQUFBSyxFQUFBLEVBQUFDLEVBQUEsRUFBQUMsRUFBQSxFQUFBLE9BQUEsR0FBQUgsRUFBQUMsRUFBQSxFQUFBSCxHQUFBcmdCLEVBQUF3Z0IsR0FBQXpCLEVBQUF2akIsR0FBQStrQixFQUFBLEVBQUFGLEdBQUF0QixFQUFBeUIsR0FBQWhsQixFQUFBd0UsR0FBQXVnQixFQUFBLEVBQUFGLEdBQUF0QixJQUFBeUIsR0FBQXhnQixFQUFBK2UsR0FBQXdCLEVBQUEsSUFBQUMsRUFBQXRtQixLQUFBZ21CLE1BQUEsR0FBQU0sSUFBQSxJQUFBQSxHQUFBLEtBQUFFLEdBQUFMLEVBQUFGLEdBQUEsRUFBQU0sRUFBQSxHQUFBRixFQUFBLEVBQUFBLEdBQUEsRUFBQXJtQixLQUFBeW1CLElBQUEsRUFBQUQsRUFBQSxJQUFBQSxJQUFBLElBQUFBLEdBQUFYLFFBQUEsR0FBQVUsSUFBQSxJQUFBQSxHQUFBVixRQUFBLEdBQUEsT0FBQSxHQUFBUixFQUFBLElBQUFpQixNQUFBQyxPQUFBQyxNQUFBLElBQUFGLE1BQUFDLE9BQUFDLE9BQUFubEIsT0FBQTBGLEVBQUEyZixTQUFBLENBQUFDLEVBQUEsaUJBQUF0QixHQUFBLEtBQUEsSUFBQVUsRUFBQSxNQUFBaG9CLEVBQUE0b0IsRUFBQXJwQixRQUFBLEtBQUEsRUFBQVcsRUFBQTBvQixFQUFBcnBCLFFBQUEsTUFBQWdwQixFQUFBQyxFQUFBQyxFQUFBbmxCLEdBQUFzbEIsRUFBQXpvQixNQUFBSCxFQUFBRSxHQUFBVixNQUFBLEtBQUF3SixFQUFBbkMsS0FBQXJGLE1BQUE4QixLQUFBQSxFQUFBLEdBQUFtRSxRQUFBRSxJQUFBNGdCLEVBQUFDLEVBQUFDLEdBQUFGLEVBQUFocEIsUUFBQSxRQUFBLEVBQUFncEIsRUFBQUEsRUFBQU0sT0FBQSxFQUFBTixFQUFBOW9CLE9BQUEsR0FBQThvQixFQUFBaHBCLFFBQUEsUUFBQSxFQUFBZ3BCLEVBQUF0bUIsS0FBQWdtQixNQUFBTSxFQUFBTSxPQUFBLEVBQUFOLEVBQUE5b0IsT0FBQSxJQUFBLElBQUF3QyxLQUFBNm1CLEtBQUFQLEVBQUFocEIsUUFBQSxTQUFBLElBQUFncEIsRUFBQXRtQixLQUFBZ21CLE1BQUEsSUFBQU0sRUFBQU0sT0FBQSxFQUFBTixFQUFBOW9CLE9BQUEsS0FBQThvQixHQUFBLE1BQUFBLEdBQUEsS0FBQUMsRUFBQUEsRUFBQTdHLFFBQUEsSUFBQSxJQUFBLElBQUE4RyxFQUFBQSxFQUFBOUcsUUFBQSxJQUFBLElBQUEsSUFBQSxJQUFBbGUsR0FBQSxFQUFBeEIsS0FBQXltQixJQUFBLEVBQUFELEVBQUEsSUFBQUQsRUFBQXBsQixFQUFBSyxHQUFBLEVBQUF4QixLQUFBeW1CLElBQUFILEVBQUEsR0FBQSxFQUFBLElBQUFRLEVBQUFOLEVBQUFobEIsRUFBQSxFQUFBc0UsRUFBQSxFQUFBK2UsRUFBQSxFQUFBdmpCLEVBQUEsRUFBQSxPQUFBLEdBQUFnbEIsR0FBQUEsRUFBQSxJQUFBeGdCLEVBQUF0RSxFQUFBcWpCLEVBQUExakIsRUFBQUcsRUFBQSxHQUFBLElBQUFnbEIsR0FBQUEsRUFBQSxLQUFBeGdCLEVBQUEzRSxFQUFBMGpCLEVBQUFyakIsRUFBQUYsRUFBQSxHQUFBLEtBQUFnbEIsR0FBQUEsRUFBQSxLQUFBeGdCLEVBQUEsRUFBQStlLEVBQUFyakIsRUFBQUYsRUFBQUgsR0FBQSxLQUFBbWxCLEdBQUFBLEVBQUEsS0FBQXhnQixFQUFBLEVBQUErZSxFQUFBMWpCLEVBQUFHLEVBQUFFLEdBQUEsS0FBQThrQixHQUFBQSxFQUFBLEtBQUF4Z0IsRUFBQTNFLEVBQUEwakIsRUFBQSxFQUFBdmpCLEVBQUFFLEdBQUEsS0FBQThrQixHQUFBQSxFQUFBLE1BQUF4Z0IsRUFBQXRFLEVBQUFxakIsRUFBQSxFQUFBdmpCLEVBQUFILEdBQUEyRSxFQUFBOUYsS0FBQWdtQixNQUFBLEtBQUFsZ0IsRUFBQWdoQixJQUFBakMsRUFBQTdrQixLQUFBZ21CLE1BQUEsS0FBQW5CLEVBQUFpQyxJQUFBeGxCLEVBQUF0QixLQUFBZ21CLE1BQUEsS0FBQTFrQixFQUFBd2xCLElBQUFmLEdBQUEsR0FBQVYsRUFBQSxJQUFBdmYsTUFBQStlLE1BQUF2akIsS0FBQSxJQUFBd0UsTUFBQStlLE1BQUF2akIsTUFBQUQsT0FBQTBGLEVBQUFnZ0IsU0FBQSxDQUFBSixFQUFBLEdBQUF0QixHQUFBLEtBQUEsSUFBQTVHLEVBQUExWCxFQUFBMmYsU0FBQUMsRUFBQXRCLEdBQUEsT0FBQXRlLEVBQUFrZSxTQUFBeEcsRUFBQTRHLElBQUF0ZSxFQUFBa2QsV0FBQSxDQUFBeEYsRUFBQSxlQUFBdUksRUFBQSxNQUFBLElBQUFqcEIsRUFBQTBnQixFQUFBbmhCLFFBQUEsS0FBQSxFQUFBVyxFQUFBd2dCLEVBQUFuaEIsUUFBQSxLQUFBMnBCLEVBQUF4SSxFQUFBdmdCLE1BQUFILEVBQUFFLEdBQUFWLE1BQUEsS0FBQSxPQUFBMHBCLEVBQUEsR0FBQUQsRUFBQSxRQUFBQyxFQUFBL2xCLEtBQUEsU0FBQTZGLEVBQUFtZ0IsV0FBQSxDQUFBekksRUFBQSxrQkFBQUEsRUFBQTFYLEVBQUFuQyxLQUFBN0gsVUFBQTBoQixFQUFBLElBQUEsS0FBQSxJQUFBM1ksRUFBQStlLEVBQUF2akIsRUFBQUQsR0FBQW9kLEVBQUFsaEIsTUFBQSxLQUFBLE9BQUE4RCxFQUFBb1IsUUFBQTFMLEVBQUFvZ0IsWUFBQSxDQUFBMUksRUFBQSxhQUFBLElBQUEySSxFQUFBemUsRUFBQTVCLEVBQUEyZSxVQUFBakgsR0FBQSxHQUFBLE9BQUE5VixFQUFBOFYsRUFBQUEsRUFBQWlCLFFBQUEsSUFBQSxJQUFBMEgsRUFBQSxJQUFBcmdCLEVBQUFzZ0IsVUFBQTVJLFFBQUEsR0FBQSxPQUFBOVYsRUFBQThWLEVBQUExWCxFQUFBa2UsU0FBQXhHLEdBQUFpQixRQUFBLElBQUEsSUFBQTBILEVBQUFyZ0IsRUFBQXNnQixVQUFBNUksR0FBQTJJLEVBQUFyZ0IsRUFBQTRlLFNBQUF5QixRQUFBLEdBQUEsUUFBQXplLEVBQUEsQ0FBQSxJQUFBcWUsRUFBQWpnQixFQUFBbWdCLFdBQUF6SSxHQUFBQSxFQUFBMVgsRUFBQWtlLFNBQUF4RyxHQUFBaUIsUUFBQSxJQUFBLElBQUEwSCxFQUFBcmdCLEVBQUFzZ0IsVUFBQTVJLEdBQUEySSxFQUFBcmdCLEVBQUE0ZSxTQUFBeUIsR0FBQUEsRUFBQXJnQixFQUFBa2QsV0FBQW1ELEVBQUFKLEdBQUEsT0FBQUksR0FBQXJnQixFQUFBc2dCLFVBQUEsQ0FBQXpCLEVBQUEsWUFBQSxTQUFBMWlCLE9BQUEsTUFBQTBpQixJQUFBdGxCLFNBQUEsSUFBQXNtQixPQUFBLEdBQUF6bkIsY0FBQTRILEdDQUEsSUFBQXVnQixFQUFBLENBQUFDLGVBQUEsdUJBQUFDLE9BQUEsaUJBQUFDLFVBQUEsb0JBQUFDLFFBQUEsa0JBQUFDLE1BQUEsZ0JBQUFDLFNBQUEsbUJBQUFDLEdBQUEsYUFBQUMsU0FBQSxtQkFBQUMsS0FBQSxlQUFBQyxRQUFBLGtCQUFBQyxJQUFBLGNBQUFDLEtBQUEsZUFBQUMsUUFBQSxrQkFBQUMsZ0JBQUEsd0JBQUFDLFVBQUEsb0JBQUFDLFFBQUEsa0JBQUFDLFVBQUEsb0JBQUFDLEtBQUEsZUFBQUMsS0FBQSxlQUFBQyxJQUFBLGNBQUFDLElBQUEsY0FBQUMsV0FBQSxxQkFBQUMsT0FBQSxpQkFBQUMsSUFBQSxjQUFBQyxZQUFBLHNCQUFBelUsTUFBQSxnQkFBQTBVLE9BQUEsaUJBQUFDLE1BQUEsZ0JBQUFDLE9BQUEsaUJBQUFDLFFBQUEsa0JBQUFDLFFBQUEsa0JBQUFDLEtBQUEsZUFBQUMsVUFBQSxvQkFBQUMsTUFBQSxnQkFBQUMsY0FBQSxzQkFBQUMsS0FBQSxlQUFBQyxRQUFBLGtCQUFBQyxRQUFBLGtCQUFBQyxTQUFBLG1CQUFBQyxrQkFBQSwwQkFBQUMsUUFBQSxrQkFBQUMsT0FBQSxpQkFBQUMsS0FBQSxlQUFBcFAsS0FBQSxlQUFBcVAsTUFBQSxnQkFBQUMsYUFBQSxxQkFBQUMsU0FBQSxtQkFBQUMsT0FBQSxpQkFBQUMsU0FBQSxtQkFBQUMsWUFBQSxzQkFBQUMsT0FBQSxpQkFBQUMsSUFBQSxjQUFBQyxZQUFBLG9CQUFBQyxJQUFBLGNBQUFDLE9BQUEsaUJBQUF0YSxLQUFBLGVBQUF1YSxLQUFBLGVBQUFDLEtBQUEsZUFBQTluQixLQUFBLGVBQUErbkIsT0FBQSxpQkFBQUMsT0FBQSxpQkFBQUMsUUFBQSxrQkFBQUMsV0FBQSxxQkFBQUMsS0FBQSxlQUFBQyxNQUFBLGdCQUFBQyxNQUFBLGdCQUFBQyxPQUFBLGlCQUFBQyxpQkFBQSx5QkFBQUMsTUFBQSxnQkFBQUMsUUFBQSxrQkFBQUMsV0FBQSxxQkFBQUMsTUFBQSxnQkFBQUMsUUFBQSxrQkFBQUMsS0FBQSxlQUFBQyxNQUFBLGdCQUFBQyxVQUFBLG9CQUFBQyxNQUFBLGdCQUFBQyxLQUFBLGVBQUFDLE1BQUEsZ0JBQUFDLFNBQUEsbUJBQUFDLEtBQUEsZUFBQUMsVUFBQSxvQkFBQTV0QixJQUFBLGNBQUE2dEIsU0FBQSxtQkFBQUMsT0FBQSxpQkFBQUMsS0FBQSxlQUFBQyxNQUFBLGdCQUFBQyxZQUFBLG9CQUFBQyxTQUFBLG1CQUFBQyxNQUFBLGdCQUFBQyxLQUFBLGVBQUFDLE1BQUEsZ0JBQUFDLE9BQUEsaUJBQUFDLEtBQUEsZUFBQTNvQixJQUFBLGNBQUE0b0IsV0FBQSxxQkFBQUMsT0FBQSxpQkFBQXBzQixNQUFBLGdCQUFBcXNCLFdBQUEscUJBQUFDLE1BQUEsZ0JBQUFDLE1BQUEsZ0JBQUFDLGNBQUEsc0JBQUFDLGNBQUEsc0JBQUFDLE1BQUEsZ0JBQUFDLElBQUEsY0FBQUMsT0FBQSxpQkFBQUMsSUFBQSxjQUFBQyxPQUFBLGlCQUFBQyxNQUFBLGdCQUFBQyxNQUFBLGdCQUFBQyxVQUFBLG9CQUFBQyxNQUFBLGdCQUFBQyxLQUFBLGVBQUFDLEtBQUEsZUFBQUMsS0FBQSxlQUFBQyxRQUFBLGtCQUFBQyxTQUFBLG1CQUFBQyxNQUFBLGdCQUFBQyxRQUFBLGtCQUFBQyxPQUFBLGlCQUFBQyxLQUFBLGVBQUFDLFFBQUEsa0JBQUFwTCxNQUFBLGdCQUFBcUwsV0FBQSxxQkFBQUMsUUFBQSxrQkFBQUMsS0FBQSxlQUFBQyxPQUFBLGlCQUFBQyxJQUFBLGNBQUFDLE9BQUEsaUJBQUFDLE9BQUEsaUJBQUF2YixPQUFBLGlCQUFBd2IsS0FBQSxlQUFBQyxPQUFBLGlCQUFBQyxLQUFBLGVBQUFDLFVBQUEsa0JBQUFDLFFBQUEsa0JBQUFDLFNBQUEsbUJBQUFDLE1BQUEsZ0JBQUFDLFdBQUEscUJBQUFDLFNBQUEsbUJBQUF0ekIsS0FBQSxlQUFBdXpCLFdBQUEscUJBQUFDLE1BQUEsZ0JBQUFDLFFBQUEsa0JBQUF4cEIsT0FBQSxpQkFBQXlwQixpQkFBQSx5QkFBQUMsS0FBQSxlQUFBQyxNQUFBLGdCQUFBQyxjQUFBLHNCQUFBQyxLQUFBLGVBQUFDLGNBQUEsc0JBQUFDLE9BQUEsaUJBQUFDLFNBQUEsbUJBQUFDLFFBQUEsa0JBQUFDLE1BQUEsZ0JBQUFDLEtBQUEsZUFBQUMsU0FBQSxtQkFBQUMsV0FBQSxxQkFBQUMsU0FBQSxtQkFBQUMsWUFBQSxzQkFBQUMsT0FBQSxpQkFBQUMsTUFBQSxnQkFBQUMsTUFBQSxnQkFBQUMsTUFBQSxnQkFBQUMsS0FBQSxlQUFBQyxPQUFBLGlCQUFBQyxNQUFBLGdCQUFBQyxPQUFBLGlCQUFBQyxHQUFBLGFBQUFDLFFBQUEsa0JBQUFDLFNBQUEsbUJBQUFDLFdBQUEscUJBQUFDLE9BQUEsaUJBQUFDLE9BQUEsaUJBQUFDLElBQUEsY0FBQUMsS0FBQSxlQUFBQyxlQUFBLHVCQUFBQyxNQUFBLGdCQUFBQyxRQUFBLGtCQUFBQyxPQUFBLGlCQUFBQyxNQUFBLGdCQUFBQyxTQUFBLG1CQUFBQyxXQUFBLHFCQUFBQyxLQUFBLGVBQUFDLGNBQUEsc0JBQUFDLFVBQUEsb0JBQUFDLEtBQUEsZUFBQUMsTUFBQSxnQkFBQUMsUUFBQSxrQkFBQUMsS0FBQSxnQkNBQSxJQUFBLEVDQUEsSUFBQUMsRUFBQTVyQixJQUFBLElBQUE2ckIsRUFBQSxXQUFBLElBQUE1ckIsRUFBQSxDQUFBVixLQUFBbkUsSUFBQSxJQUFBMHdCLEVBQUEsRUFBQSxHQUFBLGlCQUFBMXdCLEVBQUEwd0IsR0FBQSxFQUFBMXdCLEVBQUExRSxZQUFBLEdBQUEsaUJBQUEwRSxFQUFBMHdCLEdBQUEsT0FBQSxHQUFBLGtCQUFBMXdCLEVBQUEwd0IsR0FBQSxPQUFBLEdBQUEsaUJBQUExd0IsRUFBQSxJQUFBLElBQUF4RSxLQUFBd0UsRUFBQTB3QixHQUFBQyxnQkFBQTN3QixFQUFBeEUsSUFBQSxPQUFBazFCLEdBQUFFLHFCQUFBLENBQUFDLEVBQUFsMkIsS0FBQSxJQUFBdUYsRUFBQUQsT0FBQUMsS0FBQTJ3QixHQUFBM3JCLEVBQUFqRixPQUFBaUYsT0FBQTJyQixHQUFBQyxFQUFBLEdBQUEsR0FBQSxNQUFBbjJCLEVBQUEsSUFBQSxJQUFBNEMsS0FBQTVDLEVBQUEsQ0FBQSxJQUFBcUYsRUFBQSxHQUFBLElBQUEsSUFBQXhFLEtBQUEwRSxFQUFBc3dCLEVBQUExckIsU0FBQTdFLE9BQUFDLEtBQUEzQyxHQUFBMkgsRUFBQTFKLE1BQUF3RSxFQUFBRSxFQUFBMUUsSUFBQStCLEVBQUEySCxFQUFBMUosS0FBQXMxQixFQUFBMTBCLEtBQUE0RCxHQUFBLE9BQUE4d0IsR0FBQTlyQixLQUFBLENBQUF6SCxFQUFBOEYsS0FBQSxJQUFBLElBQUE3SCxLQUFBK0IsRUFBQSxHQUFBLEdBQUE4RixFQUFBOUYsRUFBQS9CLElBQUEsT0FBQStCLEVBQUEvQixJQUFBeUosUUFBQSxDQUFBMUgsRUFBQThGLEtBQUEsSUFBQTZCLEVBQUEsR0FBQSxJQUFBLElBQUExSixLQUFBK0IsRUFBQSxHQUFBOEYsRUFBQTlGLEVBQUEvQixNQUFBMEosRUFBQTFKLEdBQUErQixFQUFBL0IsSUFBQSxPQUFBMEosSUFBQSxPQUFBTCxFQUFBa3NCLGFBQUF4ekIsSUFBQUEsRUFBQXl6QixPQUFBQyxVQUFBLFlBQUEsSUFBQTViLEVBQUFwVixPQUFBQyxLQUFBM0MsR0FBQSxJQUFBLElBQUE4VCxLQUFBZ0UsUUFBQWxjLEtBQUFrWSxJQUFBOVQsR0FBQXNILEVBQUFxZixJQUFBbGtCLElBQUFBLEVBQUE2RSxFQUFBNUssS0FBQStGLEVBQUEsQ0FBQXBGLE9BQUEsSUFBQWlLLEVBQUFxc0IsU0FBQWx4QixJQUFBNkUsRUFBQW1mLElBQUFoa0IsSUFBQUEsRUFBQTZFLEVBQUE1SyxLQUFBK0YsRUFBQSxDQUFBcEYsT0FBQSxJQUFBaUssRUFBQXFzQixTQUFBbHhCLElBQUE2RSxFQUFBOFAsVUFBQSxDQUFBcFgsRUFBQThGLEtBQUEsTUFBQTh0QixFQUFBLENBQUFqNEIsSUFBQXdWLEVBQUE2RyxFQUFBNmIsR0FBQSxJQUFBLE9BQUEsSUFBQUMsTUFBQTNpQixFQUFBNkcsR0FBQTRiLEdBQUEsTUFBQUcsR0FBQSxPQUFBQyxRQUFBQyxJQUFBOWlCLEVBQUE2RyxFQUFBNmIsS0FBQUssZUFBQSxDQUFBL2lCLEVBQUE2RyxFQUFBbWMsS0FBQXJ1QixFQUFBcUwsRUFBQTZHLEdBQUFnYyxRQUFBRSxlQUFBL2lCLEVBQUE2RyxFQUFBbWMsSUFBQUMsZUFBQSxDQUFBampCLEVBQUE2RyxLQUFBbFMsRUFBQXFMLEVBQUE2RyxHQUFBZ2MsUUFBQUksZUFBQWpqQixFQUFBNkcsS0FBQSxPQUFBLElBQUE4YixNQUFBOXpCLEVBQUE0ekIsSUFBQXRzQixFQUFBcEIsUUFBQSxDQUFBekQsRUFBQTR4QixLQUFBLElBQUE5dEIsRUFBQSxHQUFBLE9BQUE3RCxPQUFBQyxLQUFBRixHQUFBa0MsSUFBQTVGLElBQUEsR0FBQXMxQixFQUFBOXRCLEVBQUF4SCxHQUFBMEQsRUFBQTFELEdBQUF3SCxFQUFBMUgsS0FBQTRELEVBQUExRCxNQUFBd0gsR0FBQWUsRUFBQWd0QixtQkFBQSxDQUFBL3RCLEVBQUEvRyxLQUFBLElBQUFzSSxFQUFBLEdBQUEsSUFBQSxJQUFBN0osS0FBQXNJLEVBQUF1QixFQUFBakosS0FBQTBILEVBQUF0SSxHQUFBdUIsSUFBQSxPQUFBc0ksR0FBQVIsRUFBQWl0QixrQkFBQSxDQUFBaHVCLEVBQUEsTUFBQSxJQUFBdUIsRUFBQSxHQUFBLElBQUEsSUFBQTdKLEtBQUFzSSxFQUFBdUIsRUFBQUEsRUFBQTBzQixPQUFBOXhCLE9BQUFDLEtBQUE0RCxFQUFBdEksS0FBQSxPQUFBZzFCLEVBQUFucUIsTUFBQWhCLElBQUFSLEVBQUFtdEIsb0JBQUEsQ0FBQWx1QixFQUFBLEdBQUEwTixFQUFBelUsS0FBQSxJQUFBaUQsRUFBQSxHQUFBLElBQUEsSUFBQXhFLEtBQUFzSSxFQUFBOUQsRUFBQThELEVBQUF0SSxHQUFBZ1csSUFBQTFOLEVBQUF0SSxHQUFBdUIsR0FBQSxPQUFBaUQsR0FBQTZFLEVBQUFzaUIsS0FBQSxDQUFBOW1CLEVBQUFDLEtBQUFMLE9BQUFDLEtBQUFHLEdBQUE2QixJQUFBNUYsSUFBQWdFLEVBQUFoRSxHQUFBK0QsRUFBQS9ELE1BQUF1SSxFQUFBdU0sUUFBQSxDQUFBcFIsRUFBQXFELEtBQUEsSUFBQSxJQUFBL0csS0FBQTBELEVBQUFxRCxFQUFBckQsRUFBQTFELEdBQUFBLElBQUF1SSxFQUFBbkIsS0FBQSxTQUFBMUQsRUFBQXFELEdBQUEsSUFBQTR1QixFQUFBLEdBQUEsSUFBQSxJQUFBMzFCLEtBQUEwRCxFQUFBaXlCLEVBQUEzMUIsR0FBQStHLEVBQUFyRCxFQUFBMUQsR0FBQUEsR0FBQSxPQUFBMjFCLEdBQUFwdEIsRUFBQXF0QixZQUFBLENBQUFsdkIsRUFBQW12QixLQUFBLElBQUF0eEIsRUFBQSxJQUFBLElBQUE5RCxLQUFBbzFCLEVBQUEsS0FBQXR4QixFQUFBL0YsS0FBQTBDLFVBQUEyMEIsRUFBQXAxQixLQUFBakMsS0FBQTBDLFVBQUF3RixFQUFBakcsS0FBQSxNQUFBLE9BQUE4RCxHQUFBZ0UsRUFBQXV0QixhQUFBLENBQUFwdkIsRUFBQSxHQUFBbXZCLEVBQUEsTUFBQSxJQUFBRSxFQUFBLEdBQUF4eEIsR0FBQSxFQUFBLElBQUEsSUFBQXJGLEtBQUF3SCxHQUFBbkMsRUFBQWdFLEVBQUFxdEIsWUFBQWx2QixFQUFBeEgsR0FBQTIyQixLQUFBRSxFQUFBajJCLEtBQUE0RyxFQUFBeEgsSUFBQSxPQUFBNjJCLEdBQUF4dEIsRUFBQTVLLEtBQUEsQ0FBQStJLEVBQUEsR0FBQXZGLEVBQUEsQ0FBQXVmLE1BQUEsR0FBQXNWLFNBQUEsRUFBQWgyQixLQUFBLEVBQUExQixPQUFBLE1BQUE2QyxFQUFBd2EsS0FBQXhhLEVBQUF3YSxNQUFBLEdBQUF4YSxFQUFBNjBCLFFBQUE3MEIsRUFBQTYwQixVQUFBLEVBQUEsSUFBQUMsRUFBQSxHQUFBQyxFQUFBLEdBQUEsSUFBQSxJQUFBbDJCLEVBQUExQixLQUFBcUYsT0FBQXd5QixRQUFBenZCLEdBQUF1dkIsRUFBQW4yQixLQUFBLENBQUFFLElBQUFBLEVBQUExQixNQUFBQSxJQUFBLE1BQUE2QyxFQUFBbkIsTUFBQWdILFFBQUFFLElBQUEsU0FBQSt1QixFQUFBdDRCLEtBQUEsQ0FBQWtGLEVBQUFDLEtBQUEsSUFBQXhFLEVBQUF1RSxFQUFBN0MsS0FBQThDLEVBQUE5QyxJQUFBLE9BQUEsR0FBQW1CLEVBQUFuQixNQUFBMUIsR0FBQUEsR0FBQUEsS0FBQSxNQUFBNkMsRUFBQTdDLE9BQUEyM0IsRUFBQXQ0QixLQUFBLENBQUFrRixFQUFBQyxLQUFBLElBQUF4RSxFQUFBdUUsRUFBQXZFLE9BQUF3RSxFQUFBeEUsTUFBQSxPQUFBLEdBQUE2QyxFQUFBN0MsUUFBQUEsR0FBQUEsR0FBQUEsSUFBQSxNQUFBNkMsRUFBQXVmLE9BQUF1VixFQUFBdDRCLEtBQUEsQ0FBQWtGLEVBQUFDLEtBQUEsSUFBQXN6QixFQUFBLEVBQUFDLEVBQUEsRUFBQSxJQUFBLElBQUExYSxLQUFBeGEsRUFBQXVmLE1BQUE3ZCxFQUFBdkUsTUFBQXFkLElBQUE3WSxFQUFBeEUsTUFBQXFkLEdBQUF5YSxJQUFBQyxJQUFBLElBQUEvM0IsRUFBQTgzQixHQUFBQyxFQUFBLE9BQUEsR0FBQWwxQixFQUFBNjBCLFVBQUExM0IsR0FBQUEsR0FBQUEsSUFBQSxJQUFBLElBQUEwQixJQUFBQSxFQUFBMUIsTUFBQUEsS0FBQTIzQixFQUFBQyxFQUFBbDJCLEdBQUExQixFQUFBLE9BQUE0M0IsR0FBQTN0QixFQUFBOUYsUUFBQSxDQUFBaUUsRUFBQSxNQUFBLElBQUE5QyxFQUFBRCxPQUFBQyxLQUFBOEMsR0FBQWpFLFVBQUFrekIsRUFBQSxHQUFBLElBQUEsSUFBQXoyQixLQUFBMEUsRUFBQSt4QixFQUFBejJCLEdBQUF3SCxFQUFBeEgsR0FBQSxPQUFBeTJCLEdBQUFwdEIsRUFBQXFzQixTQUFBLENBQUFsdUIsRUFBQSxNQUFBLElBQUExRyxFQUFBMkQsT0FBQUMsS0FBQThDLEdBQUFDLFFBQUEsTUFBQSxDQUFBM0csSUFBQUEsRUFBQTFCLE1BQUFvSSxFQUFBMUcsS0FBQXVJLEVBQUErdEIsUUFBQSxDQUFBNXZCLEVBQUEsTUFBQSxJQUFBMUcsRUFBQTJELE9BQUFDLEtBQUE4QyxHQUFBbEcsTUFBQSxNQUFBLENBQUFSLElBQUFBLEVBQUExQixNQUFBb0ksRUFBQTFHLEtBQUF1SSxFQUFBZ3VCLE1BQUEsQ0FBQTd2QixFQUFBLEdBQUF6SCxLQUFBLElBQUFlLEVBQUEyRCxPQUFBQyxLQUFBOEMsR0FBQXpILEdBQUEsTUFBQSxDQUFBZSxJQUFBQSxFQUFBMUIsTUFBQW9JLEVBQUExRyxLQUFBdUksRUFBQWl1QixNQUFBLENBQUE5dkIsRUFBQSxHQUFBaVYsS0FBQSxJQUFBLElBQUF6YyxLQUFBd0gsRUFBQSxHQUFBbEksS0FBQTBDLFVBQUF3RixFQUFBeEgsS0FBQVYsS0FBQTBDLFVBQUF5YSxHQUFBLE9BQUF6YyxFQUFBLE9BQUEsR0FBQXFKLEVBQUFrdUIsVUFBQSxDQUFBL3ZCLEVBQUEsR0FBQWlWLEtBQUEsSUFBQTFjLEdBQUEsRUFBQSxJQUFBLElBQUFDLEtBQUF3SCxFQUFBbEksS0FBQTBDLFVBQUF3RixFQUFBeEgsS0FBQVYsS0FBQTBDLFVBQUF5YSxLQUFBMWMsRUFBQUMsR0FBQSxPQUFBRCxHQUFBc0osRUFBQS9GLFNBQUEsQ0FBQWtFLEVBQUEsR0FBQWlWLEtBQUEsR0FBQXBULEVBQUFpdUIsTUFBQTl2QixFQUFBaVYsR0FBQXBULEdDQUEsSUFBQW11QixFQUFBcHVCLElBQUEsSUFBQXF1QixFQUFBLFdBQUEsSUFBQXB1QixFQUFBLENBQUFxdUIsVUFBQSxDQUFBQyxFQUFBdjRCLEVBQUFtSyxLQUFBb3VCLEVBQUFyMUIsS0FBQUcsTUFBQWsxQixHQUFBLzBCLFdBQUF4RCxFQUFBQSxHQUFBdTRCLEVBQUEsR0FBQXB1QixFQUFBQSxHQUFBLEVBQUEsSUFBQTVKLEdBQUEsRUFBQSxJQUFBLElBQUFLLEVBQUEsRUFBQUEsRUFBQTIzQixFQUFBNzNCLE9BQUFFLElBQUEyM0IsRUFBQTMzQixJQUFBWixJQUFBLEdBQUFtSyxJQUFBNUosRUFBQUssR0FBQXVKLEtBQUEsT0FBQSxHQUFBNUosSUFBQUEsRUFBQSxLQUFBZzRCLEVBQUE3M0IsT0FBQUgsRUFBQSxJQUFBQSxHQUFBMm9CLE1BQUFybUIsSUFBQUEsRUFBQTIxQixJQUFBMzFCLEVBQUEyMUIsS0FBQSxRQUFBMzFCLEVBQUE2QyxHQUFBN0MsRUFBQTZDLElBQUEsRUFBQXhDLEtBQUFMLEVBQUEyMUIsS0FBQTMxQixFQUFBMDFCLElBQUExMUIsRUFBQTZDLElBQUE3QyxFQUFBNkMsSUFBQSt5QixTQUFBcndCLElBQUEsSUFBQXN3QixFQUFBenVCLEVBQUF5dUIsS0FBQXR3QixHQUFBcXdCLEVBQUEsRUFBQSxJQUFBLElBQUE3M0IsRUFBQSxFQUFBQSxFQUFBd0gsRUFBQTFILE9BQUFFLElBQUE2M0IsSUFBQXJ3QixFQUFBeEgsR0FBQTgzQixJQUFBLEVBQUEsT0FBQUQsRUFBQXJ3QixFQUFBMUgsUUFBQWk0QixrQkFBQXZ3QixJQUFBLElBQUFxd0IsRUFBQXh1QixFQUFBd3VCLFNBQUFyd0IsR0FBQSxPQUFBbEYsS0FBQTAxQixLQUFBSCxJQUFBMTFCLE1BQUFxRixJQUFBLElBQUFnaEIsRUFBQWxtQixLQUFBa21CLE9BQUFoaEIsR0FBQSxPQUFBbEYsS0FBQW9tQixPQUFBbGhCLEdBQUFnaEIsR0FBQXNQLEtBQUF0d0IsR0FBQTZCLEVBQUFkLElBQUFmLEdBQUFBLEVBQUExSCxPQUFBbTRCLE9BQUF6d0IsSUFBQSxJQUFBMUgsRUFBQTBILEVBQUExSCxPQUFBLE9BQUFBLEVBQUEsR0FBQSxHQUFBMEgsRUFBQTFILEVBQUEsRUFBQSxHQUFBMEgsRUFBQTFILEVBQUEsSUFBQSxFQUFBMEgsRUFBQWxGLEtBQUFHLE1BQUEzQyxFQUFBLEtBQUFvNEIsS0FBQTF3QixJQUFBLElBQUEyd0IsRUFBQSxHQUFBLElBQUEsSUFBQW40QixFQUFBLEVBQUFBLEVBQUF3SCxFQUFBMUgsT0FBQUUsSUFBQSxNQUFBbTRCLEVBQUEzd0IsRUFBQXhILElBQUFtNEIsRUFBQTN3QixFQUFBeEgsTUFBQW00QixFQUFBM3dCLEVBQUF4SCxJQUFBQSxFQUFBLElBQUFrNEIsRUFBQXhQLEVBQUFwbUIsS0FBQW9tQixPQUFBamtCLE9BQUFyRixNQUFBKzRCLElBQUEsSUFBQSxJQUFBbjRCLEtBQUFtNEIsRUFBQSxHQUFBQSxFQUFBbjRCLElBQUEwb0IsRUFBQSxDQUFBd1AsRUFBQWw0QixFQUFBLE1BQUEsT0FBQWs0QixHQUFBRSxjQUFBNXdCLElBQUFBLEVBQUEvSSxLQUFBLENBQUFrRixFQUFBQyxJQUFBRCxFQUFBQyxHQUFBLElBQUEsSUFBQThrQixFQUFBbGhCLEVBQUFBLEVBQUExSCxPQUFBLEdBQUEwb0IsRUFBQWhoQixFQUFBLEdBQUE2d0IsRUFBQSxHQUFBcjRCLEVBQUEsRUFBQUEsRUFBQXdILEVBQUExSCxPQUFBRSxJQUFBcTRCLEVBQUF6M0IsTUFBQTRHLEVBQUF4SCxHQUFBd29CLElBQUFFLEVBQUFGLElBQUEsT0FBQTZQLEdBQUFDLGNBQUEsQ0FBQUMsRUFBQUMsS0FBQSxJQUFBQyxFQUFBLEVBQUFDLEVBQUEsR0FBQUMsRUFBQSxFQUFBQyxFQUFBLElBQUFMLEdBQUE5NUIsS0FBQSxDQUFBa0YsRUFBQUMsSUFBQUQsRUFBQUMsSUFBQSxHQUFBNDBCLElBQUFJLEVBQUFBLEVBQUFyMUIsV0FBQSxJQUFBLElBQUF2RCxFQUFBLEVBQUFBLEVBQUF1NEIsRUFBQXo0QixPQUFBRSxJQUFBLENBQUEsSUFBQWEsRUFBQTAzQixFQUFBdjRCLEdBQUEsR0FBQUEsR0FBQWEsSUFBQTYzQixFQUFBMTRCLEdBQUEsQ0FBQSxJQUFBMjRCLEVBQUEsRUFBQSxHQUFBSixFQUFBLEtBQUExM0IsRUFBQWIsSUFBQTA0QixFQUFBMTRCLElBQUEwNEIsRUFBQTE0QixJQUFBLEVBQUFhLEVBQUEwM0IsRUFBQXY0QixFQUFBNDRCLEVBQUFoNUIsUUFBQWlCLElBQUE4M0IsSUFBQSxHQUFBQSxJQUFBRixHQUFBRSxFQUFBLElBQUEsT0FBQUYsR0FBQUksZUFBQUMsSUFBQSxHQUFBLGlCQUFBQSxFQUFBLE1BQUEsR0FBQSxHQUFBLElBQUFBLEVBQUF4MkIsS0FBQXltQixJQUFBNUUsU0FBQTJVLE1BQUEsR0FBQUEsRUFBQSxNQUFBLEdBQUEsSUFBQSxJQUFBQyxFQUFBQyxFQUFBLEVBQUFDLEVBQUEsR0FBQSxHQUFBSCxJQUFBLElBQUFDLEVBQUFELEVBQUFFLEdBQUFwMkIsV0FBQWhELFFBQUEsTUFBQWs1QixFQUFBQyxFQUFBRSxFQUFBcjRCLEtBQUFvNEIsSUFBQUEsSUFBQSxPQUFBQyxHQUFBQyxJQUFBclYsSUFBQSxJQUFBdGUsTUFBQW9GLFFBQUFrWixHQUFBLE1BQUEsR0FBQSxJQUFBb1YsRUFBQSxHQUFBRSxFQUFBLEdBQUEvNUIsRUFBQSxFQUFBLElBQUEsSUFBQTA1QixLQUFBalYsRUFBQSxDQUFBLEdBQUEsaUJBQUFpVixFQUFBLE1BQUEsR0FBQUcsRUFBQXI0QixLQUFBeUksRUFBQXd2QixlQUFBQyxJQUFBTSxFQUFBLElBQUEsSUFBQUMsS0FBQUosRUFBQSxHQUFBLElBQUEsR0FBQUUsRUFBQXY1QixRQUFBeTVCLEdBQUEsQ0FBQSxJQUFBLElBQUFyNUIsS0FBQWk1QixFQUFBLElBQUEsR0FBQWo1QixFQUFBSixRQUFBeTVCLEdBQUEsU0FBQUQsRUFBQUQsRUFBQXY0QixLQUFBeTRCLEdBQUFqNkIsR0FBQWk2QixFQUFBLE9BQUFqNkIsR0FBQWs2QixhQUFBUixJQUFBLElBQUFBLEVBQUFBLEVBQUFsMkIsWUFBQWhELFFBQUEsS0FBQWs1QixFQUFBQSxFQUFBdDRCLE1BQUEsRUFBQXM0QixFQUFBbDVCLFFBQUEsTUFBQTI1QixjQUFBVCxJQUFBLElBQUFBLEVBQUFBLEVBQUFsMkIsWUFBQWhELFFBQUEsS0FBQSxJQUFBazVCLEVBQUF0NEIsTUFBQXM0QixFQUFBbDVCLFFBQUEsS0FBQSxHQUFBNDVCLFdBQUEsQ0FBQVYsRUFBQWowQixFQUFBQyxJQUFBMjBCLFdBQUFYLEVBQUFqMEIsR0FBQWpDLFNBQUFrQyxHQUFBNGpCLElBQUFwZ0IsSUFBQSxJQUFBb2dCLEVBQUFwZ0IsRUFBQSxHQUFBLE9BQUFrdkIsRUFBQXR2QixLQUFBSSxFQUFBbEosSUFBQXNwQixFQUFBdHBCLElBQUFzcEIsRUFBQXRwQixLQUFBc3BCLEdBQUFGLElBQUFsZ0IsSUFBQSxJQUFBb2dCLEVBQUFwZ0IsRUFBQSxHQUFBLE9BQUFrdkIsRUFBQXR2QixLQUFBSSxFQUFBbEosSUFBQXNwQixFQUFBdHBCLElBQUFzcEIsRUFBQXRwQixLQUFBc3BCLEdBQUFuZ0IsSUFBQUQsSUFBQSxJQUFBQyxFQUFBLEVBQUEsSUFBQSxJQUFBdkksRUFBQSxFQUFBQSxFQUFBc0ksRUFBQXhJLE9BQUFFLElBQUEsQ0FBQSxHQUFBa0ssTUFBQTVILEtBQUFHLE1BQUE2RixFQUFBdEksS0FBQSxDQUFBdUksR0FBQSxFQUFBLE1BQUFBLEdBQUFELEVBQUF0SSxHQUFBLEVBQUEsT0FBQXVJLEdBQUFteEIsUUFBQXB4QixJQUFBLElBQUFveEIsRUFBQSxFQUFBLElBQUEsSUFBQTE1QixFQUFBLEVBQUFBLEVBQUFzSSxFQUFBeEksT0FBQUUsSUFBQSxDQUFBLEdBQUFrSyxNQUFBNUgsS0FBQUcsTUFBQTZGLEVBQUF0SSxLQUFBLENBQUEwNUIsR0FBQSxFQUFBLE1BQUFBLEdBQUFweEIsRUFBQXRJLEdBQUEsT0FBQTA1QixHQUFBL2UsSUFBQSxJQUFBZ2YsS0FBQSxJQUFBOXZCLEVBQUEsR0FBQSxPQUFBOHZCLEVBQUEsR0FBQS9qQixRQUFBLENBQUF4VyxFQUFBaUUsS0FBQXMyQixFQUFBL2pCLFFBQUEsQ0FBQXROLEVBQUEzQixLQUFBLEdBQUEsR0FBQUEsRUFBQSxDQUFBLElBQUE5RixFQUFBMEUsTUFBQW9GLFFBQUFyQyxHQUFBQSxFQUFBakYsR0FBQWlGLEVBQUFsSixHQUFBLEdBQUE4SyxNQUFBckosR0FBQSxFQUFBQSxLQUFBZ0osRUFBQWpKLEtBQUF4QixLQUFBeUssR0FBQSt2QixJQUFBLElBQUFELEtBQUEsSUFBQTl2QixFQUFBLEdBQUEsT0FBQTh2QixFQUFBLEdBQUEvakIsUUFBQSxDQUFBeFcsRUFBQWlFLEtBQUFzMkIsRUFBQS9qQixRQUFBLENBQUF0TixFQUFBM0IsS0FBQSxHQUFBLEdBQUFBLEVBQUEsQ0FBQSxJQUFBOUYsRUFBQTBFLE1BQUFvRixRQUFBckMsR0FBQUEsRUFBQWpGLEdBQUFpRixFQUFBbEosR0FBQSxHQUFBOEssTUFBQXJKLEdBQUEsRUFBQUEsS0FBQWdKLEVBQUFqSixLQUFBeEIsS0FBQXlLLEdBQUFnd0IsSUFBQSxJQUFBRixLQUFBLElBQUE5dkIsRUFBQSxHQUFBLE9BQUE4dkIsRUFBQSxHQUFBL2pCLFFBQUEsQ0FBQXhXLEVBQUFpRSxLQUFBczJCLEVBQUEvakIsUUFBQSxDQUFBdE4sRUFBQTNCLEtBQUEsR0FBQSxHQUFBQSxFQUFBLENBQUEsSUFBQTlGLEVBQUEwRSxNQUFBb0YsUUFBQXJDLEdBQUFBLEVBQUFqRixHQUFBaUYsRUFBQWxKLEdBQUEsR0FBQThLLE1BQUFySixHQUFBLEVBQUFBLEtBQUFnSixFQUFBakosS0FBQXhCLEtBQUF5SyxHQUFBaXdCLE9BQUEsSUFBQUgsS0FBQSxJQUFBOXZCLEVBQUEsR0FBQSxPQUFBOHZCLEVBQUEsR0FBQS9qQixRQUFBLENBQUF4VyxFQUFBaUUsS0FBQXMyQixFQUFBL2pCLFFBQUEsQ0FBQXROLEVBQUEzQixLQUFBLEdBQUEsR0FBQUEsRUFBQSxDQUFBLElBQUE5RixFQUFBMEUsTUFBQW9GLFFBQUFyQyxHQUFBQSxFQUFBakYsR0FBQWlGLEVBQUFsSixHQUFBLEdBQUE4SyxNQUFBckosR0FBQSxFQUFBQSxLQUFBZ0osRUFBQWpKLEtBQUF4QixLQUFBeUssR0FBQWtmLElBQUF6Z0IsR0FBQWt2QixFQUFBdHZCLEtBQUFJLEVBQUFsSixJQUFBQSxFQUFBLEdBQUE4SyxNQUFBOUssR0FBQSxFQUFBQSxFQUFBa0QsS0FBQXltQixJQUFBM3BCLE1BQUEsT0FBQWlLLEdDQUEsSUFBQTB3QixFQUFBdEMsSUFBQXVDLEVBQUEvRSxJQ0VBLElBQUlnRixFQUFjeEMsSUFDZHlDLEVBQWdCakYsSUFDaEJrRixFQUFlL3dCLElDTm5CLElBQUFneEIsRUFBQSxDQUFBQyxLQUFBLGNBQUExZCxFQUFBamYsWUFBQWtRLEVBQUEsU0FBQXZDLE1BQUF1QyxHQUFBalEsS0FBQTI4QixhQUFBLElBQUE3VixFQUFBOW1CLEtBQUEySyxNQUFBYyxJQUFBekwsS0FBQTZHLE9BQUF5d0IsSUFBQXQzQixLQUFBNDhCLEtBQUE5QyxJQUFBOTVCLEtBQUE2OEIsVUZFQSxXQUFBLElBQUFueEIsRUFBQSxDQUFBb3hCLFFBQUFqekIsSUFBQSxJQUFBaXpCLEVBQUEsRUFBQS93QixFQUFBakYsT0FBQWlGLE9BQUFsQyxHQUFBZSxFQUFBd3hCLEVBQUF4eEIsSUFBQW1CLEdBQUEsSUFBQSxJQUFBdEssS0FBQXNLLEVBQUErd0IsR0FBQXI3QixFQUFBbUosRUFBQWpHLEtBQUFvNEIsS0FBQXQ3QixFQUFBbUosR0FBQSxPQUFBa3lCLEdBQUFFLGdCQUFBLENBQUFDLEVBQUFDLEtBQUEsSUFBQUMsRUFBQWhxQixJQUFBLElBQUF0SixFQUFBLEdBQUEsSUFBQSxJQUFBaVYsS0FBQTNMLEVBQUF0SixFQUFBaVYsR0FBQWpWLEVBQUFpVixJQUFBLEVBQUFqVixFQUFBaVYsS0FBQSxPQUFBalYsR0FBQXV6QixFQUFBRCxFQUFBRixHQUFBSSxFQUFBM3hCLEVBQUFveEIsUUFBQU0sR0FBQUUsRUFBQSxFQUFBQyxFQUFBejJCLE9BQUFpRixPQUFBbXhCLEdBQUFNLEVBQUEsRUFBQSxJQUFBLElBQUFuN0IsRUFBQSxFQUFBQSxFQUFBazdCLEVBQUFwN0IsT0FBQUUsSUFBQW03QixHQUFBRCxFQUFBbDdCLEdBQUFGLE9BQUFvN0IsRUFBQWw3QixHQUFBODZCLEVBQUFJLEVBQUFsN0IsSUFBQSxJQUFBLElBQUF1aEIsS0FBQTJaLEVBQUFELEdBQUFsQixFQUFBeHhCLElBQUE5RCxPQUFBaUYsT0FBQTZYLElBQUE0WixFQUFBOXhCLEVBQUFveEIsUUFBQWxaLEdBQUEsT0FBQXlaLEVBQUFDLEdBQUFHLDJCQUFBLENBQUE1ekIsRUFBQTZ6QixLQUFBLElBQUFDLEVBQUEsR0FBQSxJQUFBLElBQUF0N0IsS0FBQXE3QixFQUFBQyxFQUFBdDdCLEdBQUFxSixFQUFBc3hCLGdCQUFBbnpCLEVBQUE2ekIsRUFBQXI3QixJQUFBLE9BQUFnNkIsRUFBQXRSLElBQUE0UyxJQUFBQyxjQUFBL3pCLElBQUEsSUFBQWcwQixFQUFBQyxHQUFBQSxFQUFBMzdCLE9BQUEsR0FBQSxFQUFBLENBQUF3QyxLQUFBc2xCLEtBQUE2VCxFQUFBMzdCLE9BQUEsR0FBQSxFQUFBd0MsS0FBQXNsQixLQUFBNlQsRUFBQTM3QixPQUFBLElBQUEsQ0FBQXdDLEtBQUFzbEIsS0FBQTZULEVBQUEzN0IsT0FBQSxHQUFBLEdBQUE0N0IsRUFBQUQsSUFBQSxJQUFBRSxFQUFBQyxHQUFBSixFQUFBQyxHQUFBSSxFQUFBLEdBQUEsT0FBQUEsRUFBQWo3QixLQUFBNjZCLEVBQUFFLElBQUEsTUFBQUMsR0FBQUMsRUFBQWo3QixLQUFBNjZCLEVBQUFHLElBQUFDLEdBQUFDLEVBQUFMLElBQUEsSUFBQUUsRUFBQUMsR0FBQUosRUFBQUMsR0FBQSxPQUFBLE1BQUFHLElBQUFBLEVBQUFELEdBQUEsQ0FBQUYsRUFBQWo3QixNQUFBLEVBQUFtN0IsR0FBQUYsRUFBQWo3QixNQUFBbzdCLEVBQUEsS0FBQUcsRUFBQUQsRUFBQXQwQixJQUFBdzBCLEVBQUFDLEdBQUFILEVBQUFDLEVBQUEsS0FBQUcsRUFBQUMsR0FBQUwsRUFBQUMsRUFBQSxJQUFBSixFQUFBRCxFQUFBSyxFQUFBLElBQUFLLEVBQUFWLEVBQUFLLEVBQUEsSUFBQU0sRUFBQXRDLEVBQUE5QixPQUFBMEQsR0FBQSxPQUFBNUIsRUFBQTlCLE9BQUFtRSxHQUFBQyxHQUFBakUsY0FBQTV3QixJQUFBQSxFQUFBL0ksS0FBQSxDQUFBa0YsRUFBQUMsSUFBQUQsRUFBQUMsR0FBQSxJQUFBLElBQUE4a0IsRUFBQWxoQixFQUFBQSxFQUFBMUgsT0FBQSxHQUFBMG9CLEVBQUFoaEIsRUFBQSxHQUFBNndCLEVBQUEsR0FBQXI0QixFQUFBLEVBQUFBLEVBQUF3SCxFQUFBMUgsT0FBQUUsSUFBQXE0QixFQUFBejNCLE1BQUE0RyxFQUFBeEgsR0FBQXdvQixJQUFBRSxFQUFBRixJQUFBLE9BQUE2UCxJQUFBLE9BQUFodkIsRUVGQWl6QixHQUFBMytCLEtBQUE0K0IsTUFBQTNTLEVBQUFqc0IsS0FBQXdjLE9BQUEsQ0FBQSxnREFBQSwrQ0FBQSwrQ0FBQSxpREFBQSxpREFBQSwrQ0FBQSxpREFBQSxJQUFBLElBQUFuWixLQUFBckQsS0FBQXdjLE9BQUF4YyxLQUFBNitCLFFBQUF4N0IsS0FBQXk3QixZQUFBaFksRUFBQXRkLE9BQUFnQyxFQUFBdXpCLEtBQUFqL0IsRUFBQWsvQixXQUFBaGdCLEVBQUFpZ0IsU0FBQXRwQixFQUFBdXBCLGNaRUEsTUFBQW4vQixZQUFBdUUsR0FBQWlKLEVBQUExRyxPQUFBbW5CLEtBQUExcEIsRUFBQXRFLE1BQUFBLEtBQUFtL0IsVUFBQSxJQUFBM3pCLEVBQUEsQ0FBQS9CLEtBQUF6SixLQUFBby9CLE9BQUExMUIsS0FBQTFKLEtBQUFxL0IsU0FBQXIvQixLQUFBbS9CLFVBQUFHLFlBQUF0L0IsS0FBQXUvQixPQUFBLElBQUEvekIsRUFBQSxDQUFBL0IsS0FBQXpKLEtBQUFvL0IsT0FBQTExQixLQUFBLElBQUExSixLQUFBdS9CLE9BQUFELFlBQUF0L0IsS0FBQXcvQixVQUFBLElBQUFoMEIsRUFBQSxDQUFBL0IsS0FBQXpKLEtBQUF5L0IsT0FBQS8xQixLQUFBMUosS0FBQW8vQixTQUFBcC9CLEtBQUF3L0IsVUFBQUYsWUFBQXQvQixLQUFBMC9CLE9BQUEsSUFBQWwwQixFQUFBLENBQUEvQixLQUFBekosS0FBQXkvQixPQUFBLzFCLEtBQUEsSUFBQTFKLEtBQUEwL0IsT0FBQUosWUFBQXQvQixLQUFBMi9CLEdBQUEzL0IsS0FBQTIvQixJQUFBLEdBQUE1L0IsV0FBQTYvQixFQUFBLElBQUEsSUFBQUMsRUFBQUQsYUFBQXAwQixFQUFBbzBCLEVBQUE1L0IsS0FBQTgvQixjQUFBRixHQUFBRyxFQUFBdjBCLEVBQUF3MEIsU0FBQWhnQyxLQUFBbS9CLFVBQUFVLEdBQUFFLEVBQUEvaUIsSUFBQWhkLEtBQUF1L0IsUUFBQVEsRUFBQWgzQixJQUFBazNCLFNBQUEsSUFBQUMsRUFBQTEwQixFQUFBdzBCLFNBQUFoZ0MsS0FBQXcvQixVQUFBTyxHQUFBLE9BQUFHLEVBQUFsakIsSUFBQWhkLEtBQUEwL0IsUUFBQVEsRUFBQW4zQixJQUFBazNCLFNBQUEsQ0FBQUosT0FBQUEsRUFBQUUsUUFBQUEsRUFBQUcsUUFBQUEsR0FBQW5nQyxVQUFBb2dDLEVBQUEsS0FBQXBnQyxRQUFBNi9CLEVBQUEsSUFBQSxPQUFBNS9CLEtBQUFvZ0MsV0FBQVIsR0FBQU0sUUFBQW5nQyxpQkFBQTgvQixFQUFBLElBQUFyMEIsRUFBQTAwQixFQUFBLElBQUExMEIsRUFBQTYwQixFQUFBLEdBQUEsSUFBQUMsRUFBQTkwQixFQUFBekMsSUFBQW0zQixFQUFBSyxVQUFBRCxFQUFBTixTQUFBSyxHQUFBQyxFQUFBTixTQUFBaGdDLEtBQUEyL0IsSUFBQSxJQUFBYSxFQUFBaDFCLEVBQUFMLFVBQUEwMEIsR0FBQSxNQUFBLENBQUFZLE9BQUFqMUIsRUFBQXcwQixTQUFBTSxFQUFBRSxHQUFBRixVQUFBQSxHQUFBdmdDLGNBQUE4L0IsRUFBQSxHQUFBYSxFQUFBLElBQUFsMUIsR0FBQSxJQUFBdTBCLFFBQUFBLEVBQUFHLFFBQUFBLEdBQUFsZ0MsS0FBQW9nQyxXQUFBUCxHQUFBYyxFQUFBbjFCLEVBQUFvMUIsU0FBQUYsRUFBQVIsR0FBQVcsRUFBQTdnQyxLQUFBOGdDLGlCQUFBZixFQUFBRyxFQUFBUyxHQUFBM2dDLEtBQUF3L0IsVUFBQXhpQixJQUFBNmpCLEVBQUFKLFFBQUF6Z0MsS0FBQTAvQixPQUFBMWlCLElBQUE2akIsRUFBQVAsV0FBQSxJQUFBUyxFQUFBdjFCLEVBQUFMLFVBQUFuTCxLQUFBdy9CLFdBQUF3QixFQUFBeDFCLEVBQUF3MEIsU0FBQWUsRUFBQUosR0FBQU0sRUFBQWpoQyxLQUFBOGdDLGlCQUFBakIsRUFBQUUsRUFBQWlCLEdBQUFoaEMsS0FBQW0vQixVQUFBbmlCLElBQUFpa0IsRUFBQVIsUUFBQXpnQyxLQUFBdS9CLE9BQUF2aUIsSUFBQWlrQixFQUFBWCxXQUFBdmdDLE1BQUF1RSxFQUFBLENBQUE0OEIsYUFBQSxHQUFBQyxPQUFBLEVBQUFDLE1BQUEsSUFBQSxJQUFBeEIsRUFBQSxHQUFBTyxFQUFBLEdBQUEsSUFBQSxJQUFBdDJCLEtBQUF2RixFQUFBNDhCLGFBQUF0QixFQUFBMzhCLEtBQUE0RyxFQUFBZzJCLFFBQUFNLEVBQUFsOUIsS0FBQTRHLEVBQUE2MkIsU0FBQSxJQUFBYixFQUFBcnlCLEVBQUFqRCxLQUFBcTFCLEVBQUFuK0IsR0FBQXpCLEtBQUE4L0IsY0FBQXIrQixJQUFBaS9CLEVBQUFsekIsRUFBQWpELEtBQUE0MUIsRUFBQTErQixHQUFBekIsS0FBQXFoQyxlQUFBNS9CLElBQUE2L0IsRUFBQSxLQUFBLElBQUEsSUFBQWovQixFQUFBLEVBQUFBLEVBQUFpQyxFQUFBNjhCLE9BQUE5K0IsSUFBQSxJQUFBLElBQUFpRixLQUFBdTRCLEVBQUE3L0IsS0FBQXVoQyxjQUFBMUIsRUFBQXY0QixHQUFBbzVCLEVBQUFwNUIsS0FBQSxHQUFBaUcsRUFBQXJKLE1BQUFJLEVBQUE4OEIsT0FBQSxJQUFBLElBQUFscEIsRUFBQSxFQUFBQSxFQUFBNVQsRUFBQTg4QixNQUFBbHBCLElBQUFvcEIsU0FBQUEsSUFBQXZoQyxnQkFBQTQvQixFQUFBLElBQUEzL0IsS0FBQTIvQixHQUFBQSxFQUFBNS9CLGNBQUE2L0IsRUFBQSxJQUFBLElBQUFDLEVBQUFyMEIsRUFBQWcyQixVQUFBNzhCLEtBQUFtRyxVQUFBODBCLElBQUEsT0FBQUMsRUFBQUcsU0FBQSxLQUFBSCxFQUFBN2lCLElBQUEsS0FBQTZpQixFQUFBOS9CLGVBQUFvZ0MsRUFBQSxJQUFBLElBQUFPLEVBQUFsMUIsRUFBQWcyQixVQUFBckIsR0FBQSxPQUFBTyxFQUFBMWpCLElBQUEsS0FBQTBqQixFQUFBVixTQUFBLEtBQUFVLElZRkFlLGVBQUFuSyxFQUFBb0ssWURVQSxXQUNJLE1BQU1oMkIsRUFBTyxDQUViaTJCLGFBQW9CLENBQUM5M0IsRUFBTyxNQUN4QixNQUFNKzNCLEVBQVksR0FDbEIsSUFBSyxJQUFJeDdCLEtBQUt5RCxFQUNnQixNQUF0QiszQixFQUFVLzNCLEVBQUt6RCxJQUNmdzdCLEVBQVUvM0IsRUFBS3pELElBQU0sRUFHckJ3N0IsRUFBVS8zQixFQUFLekQsTUFJdkIsT0FBT3c3QixHQUdYQyxpQkFBd0IsQ0FBQ2g0QixFQUFPLE1BQzVCLElBQUlpNEIsRUFBUXAyQixFQUFLaTJCLGFBQWE5M0IsR0FFOUIsSUFBSyxJQUFJeEgsS0FBS3kvQixFQUNWQSxFQUFNei9CLEdBQUt5L0IsRUFBTXovQixHQUFLd0gsRUFBSzFILE9BRS9CLE9BQU8yL0IsR0FHWGhGLFFBQWUsQ0FBQ2p6QixFQUFPLE1BQ25CLElBRUlrNEIsRUFGQW4zQixFQUFNLEVBQ055QyxFQUFXbXZCLEVBQWFudkIsU0FBU3hELEdBRXJCLFVBQVp3RCxFQUNBMDBCLEVBQWdCbDRCLEVBRUMsVUFBWndELElBQ0wwMEIsRUFBZ0JqN0IsT0FBT2lGLE9BQU9MLEVBQUttMkIsaUJBQWlCaDRCLEtBSXhELElBQUssSUFBSW00QixLQUFRRCxFQUNibjNCLElBQVNvM0IsRUFBT3I5QixLQUFLbzRCLEtBQUtpRixHQUc5QixPQUFPcDNCLEdBR1hxM0IsTUFBYSxDQUFDcDRCLEVBQU8sTUFDakIsSUFBaUJxNEIsRUFBYng2QixHQUFBLEVBQXVCeTZCLEdBQUEsRUFFdkJDLEVBQWFDLElBRWIsR0FBSXg0QixFQUFLbEUsU0FBUzA4QixHQUdkLE9BRkEzNkIsR0FBQSxPQUNBeTZCLEdBQUEsR0FJSnQ0QixFQUFLNUcsS0FBS28vQixJQUdWQyxFQUFldGdDLElBQ2ZrZ0MsR0FBQSxFQUNBLElBQUssSUFBSTcvQixFQUFJLEVBQUdBLEVBQUl3SCxFQUFLMUgsU0FDakJFLEdBQUtMLElBSUE2SCxFQUFLeEgsSUFBTXdILEVBQUs3SCxJQUVyQjBGLEdBQUEsRUFDQXk2QixHQUFBLEdBRW1DLEdBQTlCdDRCLEVBQUt4SCxHQUFHSixRQUFRNEgsRUFBSzdILEtBRTFCb2dDLEVBQVV2NEIsRUFBS3hILEdBQUdnaUIsUUFBUXhhLEVBQUs3SCxHQUFNLEtBSXBDbWdDLElBaEJ3QjkvQixPQW9CckMsS0FBTzgvQixHQUFhLENBQ2hCLElBQUssSUFBSTkvQixFQUFJLEVBQUdBLEVBQUl3SCxFQUFLMUgsU0FDckJtZ0MsRUFBWWpnQyxHQUNPLEdBQWY4L0IsR0FGeUI5L0IsS0FLakIsR0FBWjYvQixJQUVBQyxHQUFBLEdBSVIsT0FBT3o2QixHQUdYNjZCLFlBQW1CLENBQUMxNEIsRUFBTyxNQUN2QixJQUFJKzNCLEVBQVlsMkIsRUFBS2kyQixhQUFhOTNCLEdBQzlCdXZCLEVBQVNtRCxFQUFjejdCLEtBQUs4Z0MsRUFBVyxDQUFFbmdDLE9BQUEsSUFDekMrZ0MsRUFBVyxHQUVYN00sRUFBTyxDQUFFdnVCLEtBQU0sR0FBSTRELEtBQU1zeEIsRUFBWTF4QixJQUFJOUQsT0FBT2lGLE9BQU9xdEIsSUFBVTMzQixNQUFPRSxLQUFLQyxNQUFNRCxLQUFLMEMsVUFBVSswQixLQUNsR2h2QixFQUFRekksS0FBS0MsTUFBTUQsS0FBSzBDLFVBQVUrMEIsSUFFdEMsSUFBSyxJQUFJLzJCLEtBQUsrSCxFQUNWQSxFQUFNL0gsR0FBSyxDQUFFdS9CLFVBQVd4M0IsRUFBTS9ILElBR2xDLElBYUlvZ0MsRUFBYUMsSUFDYixJQUFJN2xCLEVBQU8sQ0FBQyxDQUFFelYsS0FBTXM3QixFQUFXdDdCLEtBQU8sSUFBSzRELEtBQU0sRUFBR3ZKLE1BQU8sSUFBTSxDQUFFMkYsS0FBTXM3QixFQUFXdDdCLEtBQU8sSUFBSzRELEtBQU0sRUFBR3ZKLE1BQU8sS0FDaEgsSUFBSyxJQUFJWSxLQUFLcWdDLEVBQVdqaEMsTUFDakJvYixFQUFLLEdBQUc3UixLQUFPNlIsRUFBSyxHQUFHN1IsTUFDdkI2UixFQUFLLEdBQUdwYixNQUFNWSxHQUFLcWdDLEVBQVdqaEMsTUFBTVksR0FDcEN3YSxFQUFLLEdBQUc3UixNQUFRMDNCLEVBQVdqaEMsTUFBTVksS0FHakN3YSxFQUFLLEdBQUdwYixNQUFNWSxHQUFLcWdDLEVBQVdqaEMsTUFBTVksR0FDcEN3YSxFQUFLLEdBQUc3UixNQUFRMDNCLEVBQVdqaEMsTUFBTVksSUFJekN3YSxFQTFCZ0IsQ0FBQUEsSUFDaEIsR0FBSUEsRUFBSyxHQUFHN1IsS0FBTzZSLEVBQUssR0FBRzdSLEtBQU0sQ0FDN0IsSUFBSWdNLEVBQU82RixFQUFLLEdBQ2hCQSxFQUFLLEdBQUtBLEVBQUssR0FDZkEsRUFBSyxHQUFLN0YsRUFFVkEsRUFBTzZGLEVBQUssR0FBR3pWLEtBQ2Z5VixFQUFLLEdBQUd6VixLQUFPeVYsRUFBSyxHQUFHelYsS0FDdkJ5VixFQUFLLEdBQUd6VixLQUFPNFAsRUFFbkIsT0FBTzZGLEdBVlMsQ0EwQklBLEdBRXBCLElBQUssSUFBSXhhLEtBQUt3YSxFQUNWLEdBQUkvVixPQUFPaUYsT0FBTzhRLEVBQUt4YSxHQUFHWixPQUFPVSxPQUFTLEVBQ3RDMGEsRUFBS3hhLEdBQUdaLE1BQVFnaEMsRUFBVTVsQixFQUFLeGEsUUFFOUIsQ0FDRCxJQUFJYyxFQUFNMkQsT0FBT0MsS0FBSzhWLEVBQUt4YSxHQUFHWixPQUFPLEdBQ3JDMkksRUFBTWpILEdBQUtpakIsS0FBT3ZKLEVBQUt4YSxHQUFHK0UsS0FDMUJnRCxFQUFNakgsR0FBS2hCLE9BQVMwYSxFQUFLeGEsR0FBRytFLEtBQUtqRixPQUNqQ2lJLEVBQU1qSCxHQUFLdy9CLFlBQWM5bEIsRUFBS3hhLEdBQUcySSxLQUFPbkIsRUFBSzFILE9BQzdDaUksRUFBTWpILEdBQUtrSCxJQUFNMUYsS0FBS280QixLQUFLLEVBQUkzeUIsRUFBTWpILEdBQUt3L0IsYUFHbEQsT0FBTzlsQixHQUdYOFksRUFBTzhNLEVBQVU5TSxHQUVqQixJQUFLLElBQUl2dkIsS0FBS3lELEVBQ1YyNEIsR0FBWXA0QixFQUFNaEUsR0FBR2dnQixLQUd6QixNQUFPLENBQUVvYyxTQUFBQSxFQUFVcDRCLE1BQUFBLEVBQU9QLEtBQUFBLEVBQU04ckIsS0FBQUEsSUFHcENpTixjQUFxQixDQUFDLzRCLEVBQU8sTUFDekIsSUFBSSszQixFQUFZbDJCLEVBQUttMkIsaUJBQWlCaDRCLEdBQ2xDdXZCLEVBQVNtRCxFQUFjejdCLEtBQUs4Z0MsRUFBVyxDQUFFbmdDLE9BQUEsSUFFekNrMEIsRUFBTyxHQUNQdnJCLEVBQVEsR0FFWixJQUFLLElBQUkvSCxLQUFLKzJCLEVBQ1ZodkIsRUFBTS9ILEdBQUssQ0FBRXNnQyxZQUFhdkosRUFBTy8yQixHQUFJK0UsS0FBTSxHQUFJakYsT0FBUSxFQUFHMGdDLEtBQU0sR0FDaEVsTixFQUFLMXlCLEtBQUssQ0FBRXhCLE1BQU8yM0IsRUFBTy8yQixHQUFJeWdDLFFBQVN6Z0MsSUFHM0MsSUFBSTBnQyxFQUFNLENBQUNDLEVBQVMsTUFDaEIsSUFBSTdnQyxFQUFTNmdDLEVBQU83Z0MsT0FDaEIwYSxFQUFPLEdBQ1gsR0FBSTFhLEVBQVMsRUFBRyxDQUNaLElBQUk4Z0MsRUFBTzlnQyxFQUFTLEVBQ2hCK2dDLEVBQUsvZ0MsRUFBUyxFQUNkeUksRUFBTW80QixFQUFPRSxHQUFJemhDLE1BQVF1aEMsRUFBT0MsR0FBTXhoQyxNQUN0Q3NuQixHQUFBLEVBQ0osSUFBSyxJQUFJMW1CLEVBQUksRUFBR0EsRUFBSTJnQyxFQUFPN2dDLE9BQVFFLElBQy9CLEdBQUlBLEdBQUs2Z0MsR0FBTTdnQyxHQUFLNGdDLEVBQXBCLENBUUssR0FBSUQsRUFBTzNnQyxHQUFHWixPQUFTbUosSUFBUW1lLEVBQU8sQ0FDdkMsSUFBSW9hLEVBQVUsQ0FBRTFoQyxNQUFPbUosRUFBS2s0QixRQUFTLENBQUNFLEVBQU9FLEdBQUlKLFFBQVNFLEVBQU9DLEdBQU1ILFVBQ3ZFam1CLEVBQUs1WixLQUFLa2dDLEdBQ1ZwYSxHQUFBLEVBR0psTSxFQUFLNVosS0FBSysvQixFQUFPM2dDLFNBYmIsR0FBYyxHQUFWRixFQUFhLENBQ2IsSUFBSWdoQyxFQUFVLENBQUUxaEMsTUFBT21KLEVBQUtrNEIsUUFBUyxDQUFDRSxFQUFPRSxHQUFJSixRQUFTRSxFQUFPQyxHQUFNSCxVQUN2RWptQixFQUFLNVosS0FBS2tnQyxHQUNWLE1BYVJoaEMsRUFBUyxJQUNUMGEsRUFBT2ttQixFQUFJbG1CLElBSW5CLE9BQU9BLEdBR1g4WSxFQUFPb04sRUFBSXBOLEdBR1gsSUFBSXlOLEVBQVksQ0FBQ04sRUFBUzE3QixLQUN0QixJQUFLLElBQUkvRSxLQUFLeWdDLEVBQ05sN0IsTUFBTW9GLFFBQVE4MUIsRUFBUXpnQyxJQUN0QitnQyxFQUFVTixFQUFRemdDLEdBQUkrRSxFQUFPL0UsSUFHN0IrSCxFQUFNMDRCLEVBQVF6Z0MsSUFBSStFLEtBQU9BLEVBQU8vRSxFQUNoQytILEVBQU0wNEIsRUFBUXpnQyxJQUFJRixPQUFTaUYsRUFBS2pGLE9BQ2hDaUksRUFBTTA0QixFQUFRemdDLElBQUl3Z0MsS0FBT3o3QixFQUFLakYsT0FBU2lJLEVBQU0wNEIsRUFBUXpnQyxJQUFJc2dDLGNBS3JFUyxFQUFVek4sRUFBSyxHQUFHbU4sUUFBUyxJQUczQixJQUFJTyxFQUFZL0csRUFBWTF4QixJQUFJMnhCLEVBQWM3RCxtQkFBbUJ0dUIsRUFBTyxTQUd4RSxPQURBdzNCLEVBQVl4SSxPQUFBLEVBQ0wsQ0FBRWh2QixNQUFBQSxFQUFPUCxLQUFBQSxFQUFNdzVCLFVBQUFBLEVBQVcxTixLQUFBQSxJQThMckMyTixPQUFjLENBQUN0NUIsRUFBR3loQixLQUNkLElBQUk4WCxFQUFJNStCLEtBQUtHLE1BQU1rRixFQUFJeWhCLEdBQ25CK1gsRUFBUTU3QixNQUFNMjdCLEdBQUdFLEtBQUssR0FBRzU5QixLQUFLLElBQU0sSUFFcENnRixFQUFJbEcsS0FBS3NsQixLQUFLdGxCLEtBQUtvNEIsS0FBS3RSLElBQ3hCdGxCLEVBQUksR0FBSzBFLEVBQUk0Z0IsRUFDYmhoQixFQUFJVCxFQUFJeWhCLEVBZVosT0FEVytYLEVBYkYsTUFDTCxJQUFJL2hDLEVBQVFnSixFQUFFeEYsV0FTZCxPQVJJd0YsRUFBSXRFLEdBQ0oxRSxFQUFRZ0osRUFBRXhGLFdBQ1Z4RCxFQUFRbUcsTUFBT2lELEVBQUksRUFBS3BKLEVBQU1VLFFBQVFzaEMsS0FBSyxHQUFHNTlCLEtBQUssSUFBTXBFLElBR3pEQSxHQUFTZ0osRUFBSXRFLEdBQUdsQixXQUNoQnhELEVBQVFtRyxNQUFNaUQsRUFBSXBKLEVBQU1VLFFBQVFzaEMsS0FBSyxHQUFHNTlCLEtBQUssSUFBTXBFLEdBRWhEQSxHQVZGLElBaUJiaWlDLGlCQUF3QixDQUFDNzVCLEVBQU1rNEIsS0FDM0IsSUFBSTRCLEVBQVEzNUIsSUFDUixJQUFJdkksRUFBUSxFQUNaLElBQUssSUFBSVksS0FBSzAvQixFQUFlLENBQ3pCLEdBQUkvM0IsR0FBSzNILEVBQUcsTUFDWlosRUFBK0MsS0FBdENBLEVBQVEsR0FBS3NnQyxFQUFjMS9CLEdBQUssSUFBWSxHQUV6RCxPQUFPWixHQUlQbWlDLEVBQVMsQ0FBQyxDQUFFelksRUFBRyxFQUFHMFksRUFBRyxJQUVyQkMsRUFBVTk1QixJQUNWLElBQUkrNUIsRUFBUUgsRUFBTzU1QixHQUVuQixPQURRKzVCLEVBQU01WSxHQUFNNFksRUFBTUYsRUFBSUUsRUFBTTVZLEdBQUt3WSxFQUFLOTVCLEVBQUtHLEdBQUssSUFJeERnNkIsRUFBVWg2QixJQUNWLElBQUkrNUIsRUFBUUgsRUFBTzU1QixHQUVuQixPQURRKzVCLEVBQU01WSxHQUFNNFksRUFBTUYsRUFBSUUsRUFBTTVZLEdBQUt3WSxFQUFLOTVCLEVBQUtHLEtBSXZELElBQUssSUFBSTNILEVBQUksRUFBR0EsRUFBSXdILEVBQUsxSCxPQUFRRSxJQUM3QnVoQyxFQUFPM2dDLEtBQUssQ0FBRWtvQixFQUFHMlksRUFBT3poQyxHQUFJd2hDLEVBQUdHLEVBQU8zaEMsS0FHMUMsSUFBSTJILEVBQUk0NUIsRUFBT2pnQyxNQUNmLE9BQVFxRyxFQUFFbWhCLEVBQUluaEIsRUFBRTY1QixHQUFLLEdBR3pCSSxpQkFBd0IsQ0FBQ0MsRUFBTSxFQUFHbkMsS0FDOUIsSUFBSWw0QixFQUFPLEdBQ1A4NUIsRUFBUTM1QixJQUNSLElBQUl2SSxFQUFRLEVBQ1osSUFBSyxJQUFJWSxLQUFLMC9CLEVBQWUsQ0FDekIsR0FBSS8zQixHQUFLM0gsRUFBRyxNQUNaWixFQUErQyxLQUF0Q0EsRUFBUSxHQUFLc2dDLEVBQWMxL0IsR0FBSyxJQUFZLEdBRXpELE9BQU9aLEdBSVBtaUMsRUFBUyxDQUFDLENBQUV6WSxFQUFHLEVBQUcwWSxFQUFHLElBRXJCQyxFQUFVOTVCLElBQ1YsSUFBSSs1QixFQUFRSCxFQUFPNTVCLEdBRW5CLE9BRFErNUIsRUFBTTVZLEdBQU00WSxFQUFNRixFQUFJRSxFQUFNNVksR0FBS3dZLEVBQUs5NUIsRUFBS0csR0FBSyxJQUl4RGc2QixFQUFVaDZCLElBQ1YsSUFBSSs1QixFQUFRSCxFQUFPNTVCLEdBRW5CLE9BRFErNUIsRUFBTTVZLEdBQU00WSxFQUFNRixFQUFJRSxFQUFNNVksR0FBS3dZLEVBQUs5NUIsRUFBS0csS0FJbkQ0QixFQUFRLEVBQUd1NEIsR0FBQSxFQUVmLE1BQVFBLEdBQVUsQ0FDZCxJQUFJcmhDLEdBQUEsRUFBZWdELEVBQUksRUFBR2tFLEVBQUksR0FFOUIsTUFBUWxILEdBQU8sQ0FDWCxJQUFJcW9CLEVBQUkyWSxFQUFPbDRCLEdBQ1hpNEIsRUFBSUcsRUFBT3A0QixHQUdmLEdBREF1NEIsRUFBWWhaLEdBQUsrWSxHQUFPQSxHQUFPTCxFQUNqQixNQUVkL2dDLEVBQVNxb0IsRUFBSStZLEdBQU9BLEVBQU1MLEVBQzFCNzVCLEVBQUksQ0FBRW1oQixFQUFBQSxFQUFHMFksRUFBQUEsRUFBRy85QixFQUFBQSxHQUNaQSxJQUVKLEdBQUlxK0IsRUFBVSxNQUNkdjRCLElBRUFnNEIsRUFBTzNnQyxLQUFLK0csR0FDWkgsR0FBUUcsRUFBRWxFLEVBRWQsT0FBTytELEdBR1h1NkIsY0FBcUIsQ0FBQ3Y2QixFQUFPLEdBQUl3NkIsRUFBYSxNQUMxQyxJQUFJaGlDLEVBQ0FtZ0MsRUFBVyxHQUNYOEIsRUFBUyxLQUNULElBSUlsZSxFQUpBOWpCLEVBQVF1SCxFQUFLeEgsR0FFYmtpQyxFQUFTamlDLEVBREF1SCxFQUFLeEgsRUFBSSxHQVl0QixPQVIwQixNQUF0QmdpQyxFQUFXRSxJQUNYbmUsRUFBT2llLEVBQVdFLEdBQ2xCbGlDLEtBR0ErakIsRUFBT2llLEVBQVcvaEMsR0FHZjhqQixHQUdYLElBQUsvakIsRUFBSSxFQUFHQSxFQUFJd0gsRUFBSzFILE9BQVFFLElBQ3pCbWdDLEdBQVk4QixJQUdoQixPQUFPOUIsR0FHWGdDLFVBQWlCLENBQUMzNkIsRUFBTyxHQUFJdkYsRUFBUyxDQUFFbWdDLFdBQVksRUFBR0MsV0FBWSxFQUFHQyxjQUFlLE1BQ3hELE1BQXJCcmdDLEVBQU9tZ0MsYUFBeUJuZ0MsRUFBT21nQyxXQUFhbmdDLEVBQU9vZ0MsV0FBYXBnQyxFQUFPcWdDLGVBQzFELE1BQXJCcmdDLEVBQU9vZ0MsYUFBeUJwZ0MsRUFBT29nQyxXQUFhcGdDLEVBQU9tZ0MsV0FBYW5nQyxFQUFPcWdDLGVBQ3ZELE1BQXhCcmdDLEVBQU9xZ0MsZ0JBQTRCcmdDLEVBQU9xZ0MsY0FBZ0JyZ0MsRUFBT21nQyxXQUFhbmdDLEVBQU9vZ0MsWUFHekYsSUFBV0UsRUFBZUMsRUFBWUMsRUFBaUJDLEVBQW5EMWlDLEVBQUksRUFFSjJpQyxFQUFhLEtBQ2IsSUFBSWwvQixFQUFJZy9CLEVBQWdCLEdBQ3BCeGIsRUFBUyxDQUFFMmIsRUFBRyxFQUFHOVosRUFBRyxFQUFHaGxCLEVBQUdMLEdBRTlCLEdBQUlpL0IsRUFBYXAvQixTQUFTRyxHQUFJLENBQzFCLElBQUlvL0IsRUFBZSxHQUNuQixJQUFLLElBQUk3aUMsS0FBSzBpQyxFQUNWLEdBQUlBLEVBQWExaUMsSUFBTWluQixFQUFPbmpCLEVBQUcsQ0FFN0IsSUFBSWcvQixHQUFlTixJQUFjeGlDLEVBQzdCK2lDLEVBQW1CLEVBQ25CeDVCLEVBQVEsRUFDUnk1QixHQUFBLEVBQ0FuTSxFQUFVLEdBQ2QsS0FBT21NLEdBQ0huTSxFQUFRajJCLEtBQUs0RyxFQUFLczdCLElBRWxCRSxFQUFXUCxFQUFnQk0sS0FEM0J4NUIsS0FDeUQvQixFQUFLczdCLEVBQWN2NUIsR0FFaEZzNUIsRUFBYWppQyxLQUFLLENBQUVnaUMsRUFBR0YsRUFBYTVpQyxPQUFTRSxFQUFHOG9CLEVBQUcrTixFQUFRLzJCLE9BQVFnRSxFQUFHMitCLEVBQWdCNUwsRUFBUS8yQixVQUl0R21uQixFQUFTNGIsRUFBYSxHQUN0QixJQUFLLElBQUlqZSxLQUFLaWUsR0FDTjViLEVBQU82QixFQUFJbEUsRUFBRWtFLEdBR1I3QixFQUFPNkIsR0FBS2xFLEVBQUVrRSxHQUFLN0IsRUFBTzJiLEVBQUloZSxFQUFFZ2UsS0FGckMzYixFQUFTckMsR0FTckIsT0FEQTVrQixHQUFLaW5CLEVBQU82QixFQUNMN0IsR0FHUG5XLEVBQU8sR0FDWCxJQUFLOVEsRUFBSSxFQUFHQSxFQUFJd0gsRUFBSzFILE9BQVFFLEtBQ3pCd2lDLEVBQWF4aUMsRUFBSWlDLEVBQU9vZ0MsWUFDUCxJQUFHRyxFQUFhLEdBQ2pDRCxFQUFnQnZpQyxFQUFJaUMsRUFBT3FnQyxjQUMzQkksRUFBZWw3QixFQUFLaEgsTUFBTWdpQyxFQUFZeGlDLEdBQUdILE1BQU0sSUFDL0M0aUMsRUFBa0JqN0IsRUFBS2hILE1BQU1SLEVBQUd1aUMsR0FBZTFpQyxNQUFNLElBQ3JEaVIsRUFBS2xRLEtBQUsraEMsS0FHZCxPQUFPN3hCLEdBR1hteUIsVUFBaUIsQ0FBQ0MsRUFBVyxDQUFDLENBQUVOLEVBQUcsRUFBRzlaLEVBQUcsRUFBR2hsQixFQUFHLEtBQU83QixFQUFTLENBQUVtZ0MsV0FBWSxFQUFHQyxXQUFZLEVBQUdDLGNBQWUsTUFDMUcsSUFBSTE5QixFQUFPLEdBRWMsTUFBckIzQyxFQUFPbWdDLGFBQXlCbmdDLEVBQU9tZ0MsV0FBYW5nQyxFQUFPb2dDLFdBQWFwZ0MsRUFBT3FnQyxlQUMxRCxNQUFyQnJnQyxFQUFPb2dDLGFBQXlCcGdDLEVBQU9vZ0MsV0FBYXBnQyxFQUFPbWdDLFdBQWFuZ0MsRUFBT3FnQyxlQUN2RCxNQUF4QnJnQyxFQUFPcWdDLGdCQUE0QnJnQyxFQUFPcWdDLGNBQWdCcmdDLEVBQU9tZ0MsV0FBYW5nQyxFQUFPb2dDLFlBRXpGLElBQUssSUFBSWMsS0FBS0QsRUFBVSxDQUNwQixJQUFLLElBQUlsakMsRUFBSSxFQUFHQSxFQUFJbWpDLEVBQUVyYSxFQUFHOW9CLElBQ3JCNEUsR0FBU0EsRUFBS0EsRUFBSzlFLE9BQVNxakMsRUFBRVAsR0FFbENoK0IsR0FBU3UrQixFQUFFci9CLEVBR2YsT0FBT2MsR0FHWHcrQixVQUFLLENBQWE1N0IsRUFBTyxNQUNyQixJQUVJeEgsRUFBR3FqQyxFQUZIQyxFQUFVLEdBQ1ZyTSxFQUFVLEdBV1ZnTCxFQUFVOS9CLElBQ1YsSUFBSWlULEVBVFEsQ0FBQWpULElBQ1osSUFBSS9DLEVBQVEsR0FDWixJQUFLLElBQUlnSixLQUFLakcsRUFDVi9DLEdBQVNvSSxFQUFLWSxHQUVsQixPQUFPaEosR0FMSyxDQVNLK0MsR0FDYnBDLEVBQVFrM0IsRUFBUXIzQixRQUFRd1YsR0FFeEJyUixFQUFJLENBQUUvRCxFQUFHcWpDLEVBQVd2L0IsRUFBR3NSLEVBQUVBLEVBQUV0VixPQUFTLElBVXhDLE9BVGMsR0FBVkMsRUFDQWszQixFQUFRcjJCLEtBQUt3VSxJQUdialQsRUFBTXZCLE9BQU9aLEdBQ2JxakMsRUFBWXRqQyxFQUFRLEVBQ3BCZ0UsRUFBSWsrQixFQUFPOS9CLElBR1I0QixHQUdYLElBQUsvRCxFQUFJLEVBQUdBLEVBQUl3SCxFQUFLMUgsT0FBUUUsSUFDekJxakMsRUFBWSxFQUNaQyxFQUFRMWlDLEtBQUtxaEMsRUFBTyxDQUFDamlDLEtBR3pCLE9BQU9zakMsR0FHWEMsVUFBSyxDQUFhRCxFQUFVLENBQUMsQ0FBRXRqQyxFQUFHLEVBQUc4RCxFQUFHLFFBQ3BDLElBQ0lBLEVBREFtekIsRUFBVSxHQUdkLElBQUssSUFBSWx6QixLQUFLdS9CLEVBQ1Z4L0IsRUFBSSxHQUNPLEdBQVBDLEVBQUUvRCxJQUNGOEQsRUFBSW16QixFQUFRbHpCLEVBQUUvRCxFQUFJLElBRXRCOEQsR0FBS0MsRUFBRUQsRUFDUG16QixFQUFRcjJCLEtBQUtrRCxHQUdqQixPQUFPbXpCLEVBQVF6ekIsS0FBSyxLQUd4QmdnQyxVQUFLLENBQWFoOEIsRUFBTyxHQUFJaThCLEVBQWlCLE1BQzFDLElBQW1CSixFQUFXcmpDLEVBQTFCbWdDLEVBQVcsR0FDWGxKLEVBQVUxeEIsTUFBTVYsS0FBSzQrQixHQVVyQnhCLEVBQVU5L0IsSUFDVixJQUFJaVQsRUFUUSxDQUFBalQsSUFDWixJQUFJL0MsRUFBUSxHQUNaLElBQUssSUFBSWdKLEtBQUtqRyxFQUNWL0MsR0FBU29JLEVBQUtZLEdBRWxCLE9BQU9oSixHQUxLLENBU0srQyxHQUNicEMsRUFBUWszQixFQUFRcjNCLFFBQVF3VixHQVk1QixPQVhjLEdBQVZyVixHQUNBazNCLEVBQVFyMkIsS0FBS3dVLEdBQ2JyVixFQUFRLEVBQ1JDLE1BR0FBLElBQ0FtQyxFQUFNdkIsS0FBS1osR0FDWHFqQyxFQUFZdGpDLEdBQVMsRUFDckJxVixFQUFJNnNCLEVBQU85L0IsSUFFUmtoQyxHQUdYLElBQUtyakMsRUFBSSxFQUFHQSxFQUFJd0gsRUFBSzFILE9BQVFFLElBQUssQ0FDOUJxakMsRUFBWSxFQUNaLElBQUl0ZixFQUFPa2UsRUFBTyxDQUFDamlDLElBQ1AsTUFBUitqQixHQUNBb2MsRUFBU3YvQixLQUFLbWpCLEdBSXRCLE9BQU9vYyxHQUdYdUQsVUFBSyxDQUFhQyxFQUFZLEdBQUlGLEVBQWlCLE1BQy9DLElBQWlGempDLEVBQTdFNEUsRUFBTyxHQUFJdTdCLEVBQVcsR0FBVzUyQixFQUFRLEVBQUdxNkIsR0FBQSxFQUFpQkMsRUFBWSxHQUFPeGpDLEVBQVEsRUFDeEY0MkIsRUFBVTF4QixNQUFNVixLQUFLNCtCLEdBbUJyQkssRUFBUyxDQUFDM2hDLEVBQVEsTUFDbEIsSUFBSWlULEVBbEJPLENBQUFqVCxJQUNYLElBQUkvQyxFQUFRLEdBQ1ptSyxFQUFRLEVBQ1JzNkIsRUFBWSxHQUNaLElBQUssSUFBSXo3QixLQUFLakcsRUFDSyxNQUFYeUMsRUFBS3dELElBQ0xtQixJQUNBcTZCLEdBQUEsR0FHQUMsR0FBYWovQixFQUFLd0QsR0FFdEJoSixHQUFTd0YsRUFBS3dELEdBRWxCLE9BQU9oSixHQWRJLENBa0JLK0MsR0FXaEIsT0FUYyxHQURGODBCLEVBQVFyM0IsUUFBUXdWLElBRXhCNmhCLEVBQVFyMkIsS0FBS3dVLEdBQ2JwVixRQUdFQSxFQUNGbUMsRUFBTXZCLEtBQUtaLEdBQ1g4akMsRUFBTzNoQyxJQUVKaVQsR0FHUDJ1QixFQUFTaHpCLElBQ1QsSUFBSy9RLEVBQUlLLEVBQU9MLEVBQUk0RSxFQUFLOUUsT0FBUUUsSUFFN0IsR0FEUThqQyxFQUFPLENBQUM5akMsSUFDWmkzQixFQUFRbjNCLFFBQVVpUixFQUFPLENBQ3pCMVEsRUFBUUwsRUFBSSxFQUFJdUosRUFDaEIsUUFLWixJQUFLLElBQUlzZixLQUFLOGEsRUFBVyxDQUNyQixJQUFJdnVCLEVBQUk2aEIsRUFBUXBPLEVBQUksR0FTcEIsR0FSUyxNQUFMelQsSUFDQTJ1QixFQUFNbGIsR0FDTnpULEVBQUk2aEIsRUFBUXBPLEVBQUksSUFHcEJzWCxFQUFTdi9CLEtBQUt3VSxHQUNkeFEsRUFBT3U3QixFQUFTMzhCLEtBQUssSUFFakJvZ0MsRUFBUyxDQUNUQSxHQUFBLEVBQ0EsSUFBSyxJQUFJNWpDLEVBQUksRUFBR0EsRUFBSXVKLEVBQU92SixJQUN2QjZqQyxHQUFhQSxFQUFVN2pDLEdBRTNCbWdDLEVBQVM3K0IsTUFDVDYrQixFQUFTdi9CLEtBQUtpakMsR0FDZDVNLEVBQVEzMUIsTUFDUjIxQixFQUFRcjJCLEtBQUtpakMsR0FDYnhqQyxHQUFTa0osR0FJakIsT0FBTzNFLElBR1gsT0FBT3lFLElDbnlCWCxNQUFBcXpCLEtBQUFzSCxHQUFBNUosRUFBQSxJQUFBNkosRUFBQSxJQUFBRCxFQ0FBLE1BQUE1RSxlQUFBOEUsR0FBQTlKLEVBQUE4SixJQ0FBLE1BQUE3SixLQUFBQSxFQUFBcUMsS0FBQXlILEVBQUF0SCxjQUFBdUgsRUFBQWo5QixPQUFBazlCLEVBQUF6SCxTQUFBMEgsRUFBQTNILFdBQUE0SCxFQUFBbEYsWUFBQW1GLEVBQUEvSCxZQUFBZ0ksR0FBQXJLLEVBQUEsSUFBQXNLLEVBQUEsQ0FBQXJLLEtBQUFBLEVBQUF1QyxTQUFBMEgsRUFBQWpGLFlBQUFtRixFQUFBRyxXRkFBLFdBQUEsSUFBQXQ3QixFQUFBLENBQUF1N0IsV0FBQSxDQUFBLzhCLEVBQUEsWUFBQWlHLFNBQUEyRyxpQkFBQSxRQUFBekIsSUFBQSxJQUFBNnhCLEVBQUE3eEIsRUFBQUUsT0FBQTR4QixFQUFBOXhCLEVBQUFFLE9BQUFqQyxXQUFBLEtBQUFwTyxFQUFBZ2lDLEVBQUFuMkIsYUFBQSxRQUFBLEtBQUFtMkIsRUFBQWgyQixTQUFBbk4sZUFBQXVpQyxFQUFBNytCLE9BQUEwL0IsS0FBQUQsRUFBQUMsR0FBQWIsRUFBQTcrQixPQUFBdkMsS0FBQW9oQyxFQUFBNytCLE9BQUEwL0IsS0FBQUQsRUFBQUMsR0FBQWppQyxFQUFBZ2lDLEVBQUFuMkIsYUFBQSxRQUFBLFVBQUFtMkIsRUFBQW4yQixhQUFBLFVBQUF1VCxPQUFBOGlCLEtBQUFkLEVBQUFlLFdBQUFuaUMsSUFBQW9oQyxFQUFBNytCLE9BQUF2QyxLQUFBbVEsRUFBQWl5QixpQkFBQWhCLEVBQUFlLFdBQUFuaUMsSUFBQThELFNBQUFvSCxNQUFBa1UsT0FBQWdNLFFBQUFpWCxVQUFBLE9BQUEsUUFBQXJpQyxHQUFBZ0YsT0FBQW9hLE9BQUFrakIsV0FBQXQ5QixHQUFBbTlCLFdBQUEsQ0FBQW5pQyxFQUFBLE1BQUFBLEVBQUFTLFNBQUFxRCxTQUFBeStCLFFBQUF2aUMsRUFBQVMsU0FBQXFELFNBQUEwK0IsWUFBQXhpQyxFQUFBOEQsU0FBQTArQixTQUFBLEtBQUF4aUMsR0FBQW9oQyxFQUFBbmhDLFlBQUFELEdBQUE4RCxVQUFBQSxTQUFBeStCLFNBQUF2aUMsRUFBQThELFNBQUF5K0IsT0FBQSxJQUFBdmlDLEdBQUFBLElBQUEsT0FBQXdHLEVBQUFpOEIsS0FBQSxDQUFBcmpDLEVBQUEsQ0FBQTBWLE9BQUEsRUFBQW5RLEtBQUEsR0FBQTNFLElBQUEsR0FBQTBpQyxPQUFBLEdBQUFDLFNBQUEsTUFBQXZqQyxFQUFBMFYsTUFBQTFWLEVBQUEwVixRQUFBLEVBQUExVixFQUFBdUYsS0FBQXZGLEVBQUF1RixNQUFBLEdBQUF2RixFQUFBWSxJQUFBWixFQUFBWSxLQUFBLEtBQUFaLEVBQUFzakMsT0FBQXRqQyxFQUFBc2pDLFFBQUEsT0FBQXRqQyxFQUFBdWpDLFFBQUF2akMsRUFBQXVqQyxVQUFBLEVBQUF2akMsRUFBQXVqQyxVQUFBdmpDLEVBQUFZLElBQUEsdUNBQUFaLEVBQUFZLEtBQUEsSUFBQTJFLEVBQUEsSUFBQWkrQixTQUFBLEdBQUF4akMsRUFBQXVGLGdCQUFBaStCLFNBQUFqK0IsRUFBQXZGLEVBQUF1RixVQUFBLElBQUEsSUFBQXhILEtBQUFpQyxFQUFBdUYsS0FBQUEsRUFBQTRHLE9BQUFwTyxFQUFBaUMsRUFBQXVGLEtBQUF4SCxJQUFBLE9BQUEsSUFBQXFpQixRQUFBLENBQUFDLEVBQUFDLEtBQUEsSUFBQW1qQixFQUFBLElBQUFDLGVBQUFELEVBQUFFLG1CQUFBLFNBQUE1eUIsR0FBQSxHQUFBclYsS0FBQWtvQyxZQUFBLEtBQUFsb0MsS0FBQW1vQyxRQUFBeGpCLEVBQUFvakIsRUFBQUssZUFBQTlCLEVBQUFwaUMsTUFBQUksRUFBQStqQyxjQUFBTixFQUFBM1IsT0FBQWlTLFdBQUFoekIsSUFBQS9RLEVBQUErakMsV0FBQWh6QixFQUFBaXpCLE9BQUFqekIsRUFBQWt6QixNQUFBLEtBQUFSLEVBQUFNLFdBQUFoekIsSUFBQS9RLEVBQUErakMsV0FBQWh6QixFQUFBaXpCLE9BQUFqekIsRUFBQWt6QixNQUFBLE9BQUFSLEVBQUFTLFFBQUEzbUMsSUFBQStpQixFQUFBL2lCLElBQUFrbUMsRUFBQVgsS0FBQTlpQyxFQUFBc2pDLE9BQUF0akMsRUFBQVksSUFBQVosRUFBQTBWLE9BQUErdEIsRUFBQW5VLEtBQUEvcEIsTUFBQTZCLElHQUErOEIsRUFBQSw2RENGTyxXQTZCSCxNQTVCWSxDQUNaQyxRQUFjLENBQUNwa0MsRUFBUyxDQUFFZ2dDLFFBQUEsRUFBY3o2QixLQUFNLE9BRzFDLEdBRnFCLE1BQWpCdkYsRUFBT2dnQyxTQUFxQmhnQyxFQUFPZ2dDLFFBQUEsR0FFbEIsR0FBakJoZ0MsRUFBT2dnQyxPQUFnQixDQUN2QixJQUFJcUUsRUFBV2huQyxLQUFLMEMsVUFBVUMsRUFBT3VGLE1BQ2pDdzZCLEVBQWF1RSxNQUFNaitCLE1BQU11QyxNQUFNeTdCLEVBQVN6bUMsTUFBTSxLQUFLMkQsS0FBSyxJQUN4RHVnQixFQUFPeWlCLFdBQVdoRCxVQUFVOEMsRUFBVXRFLEdBQzFDLy9CLEVBQU91RixLQUFPLENBQUV1YyxLQUFBQSxFQUFNaWUsV0FBQUEsRUFBWXlFLFNBQUEsR0FFdEMsT0FBTyxJQUFJcGtCLFFBQVEsQ0FBQ0MsRUFBU0MsS0FDekJta0IsV0FBV3BCLEtBQUtyakMsR0FDWDBrQyxLQUFLQyxJQUNGLElBQ0lBLEVBQVd0bkMsS0FBS0MsTUFBTXFuQyxHQUN4QixNQUFPcG5DLElBRlQsUUFJNEIsR0FBcEJvbkMsRUFBU0gsVUFDVEcsRUFBV3RuQyxLQUFLQyxNQUFNaW5DLFdBQVc5QyxVQUFVa0QsRUFBUzdpQixLQUFNNmlCLEVBQVM1RSxjQUV2RTFmLEVBQVFza0IsTUFHZkMsTUFBTS9RLElBQ0h2VCxFQUFPdVQsNkVDdEJwQixXQUNILE1BQU16c0IsRUFBTyxDQUFFeTlCLFdBQUEsRUFBa0JDLGlCQUFrQixHQUFJaG5DLE1BQU8sRUFBR2luQyxZQUFhLElBeU85RSxPQXZPQTM5QixFQUFLMjlCLFlBQVlDLE1BQUEsS0FDYjU5QixFQUFLeTlCLE1BQU12M0IsVUFBWSxJQUczQmxHLEVBQUsyOUIsWUFBWWgvQixJQUFPUixJQUNwQixJQUFJMC9CLEVBQVVYLE1BQU12NEIsY0FBYyxDQUM5Qm5OLFFBQVMsTUFBT29OLFdBQVksQ0FBRWdJLE1BQU8sY0FFekMsR0FBSXpPLGFBQWdCcUcsUUFDaEJxNUIsRUFBUTk0QixPQUFPNUcsUUFHZixJQUNJMC9CLEVBQVEzM0IsVUFBWS9ILEVBQ3RCLE1BQU9oSSxHQUNMMG5DLEVBQVEzM0IsVUFBWSwyQkFHNUJsRyxFQUFLeTlCLE1BQU0xNEIsT0FBTzg0QixJQUd0Qjc5QixFQUFLMjlCLFlBQVlHLE1BQVMzL0IsTUFJMUI2QixFQUFLMjlCLFlBQVl0QixRQUFXbCtCLElBQ3hCLElBQUk0L0IsRUFBUS85QixFQUFLZytCLGdCQUFnQjcvQixFQUFNLEtBQ3ZDLEdBQWlCLE1BQWI0L0IsRUFBTXZrQyxJQUtWLEdBQW9CLE1BQWhCdWtDLEVBQU03QixPQUtWLElBQ0k2QixFQUFNNS9CLEtBQU9sSSxLQUFLQyxNQUFNNm5DLEVBQU01L0IsTUFDOUI2QixFQUFLaStCLGVBQ0xqK0IsRUFBS2srQixNQUFBLGlCQUF1QkgsRUFBTXZrQyxLQUNsQzJrQyxFQUFPbkIsUUFBUWUsR0FBT1QsS0FBS3h6QixJQUN2QjlKLEVBQUtrK0IsTUFBTSxhQUNYbCtCLEVBQUtrK0IsTUFBTXAwQixLQUNaMHpCLE1BQU1ybkMsSUFDTHNJLFFBQVFFLElBQUl4SSxLQUNiaW9DLFFBQVFwK0IsRUFBS3ErQixlQUNsQixNQUFPbG9DLEdBQ0w2SixFQUFLaytCLE1BQU0sOEJBZlhsK0IsRUFBSzI5QixZQUFZaC9CLElBQUksMkJBTHJCcUIsRUFBSzI5QixZQUFZaC9CLElBQUksb0JBd0I3QnFCLEVBQUtnK0IsZ0JBQUEsQ0FBbUI3L0IsRUFBTW5ILEtBQzFCLElBRUlzbkMsRUFGQUMsRUFBVyxHQUNYQyxFQUFPcmdDLEVBQUszSCxNQUFNLEtBRXRCLElBQUssSUFBSUcsRUFBSSxFQUFHQSxFQUFJNm5DLEVBQUsvbkMsT0FBUUUsS0FDN0IybkMsRUFBTUUsRUFBSzduQyxJQUNILElBQU1LLElBQ1Z1bkMsRUFBU0QsRUFBSTNsQixRQUFRM2hCLEVBQU8sS0FBT3duQyxFQUFLN25DLEVBQUksSUFJcEQsT0FBTzRuQyxHQUdYditCLEVBQUt5K0IsYUFBQSxLQUNELElBQUlDLEVBQWlCeEIsTUFBTXY0QixjQUFjLENBQ3JDbk4sUUFBUyxNQUFPb04sV0FBWSxDQUFFK0gsR0FBSSxtQkFBcUJ4SCxTQUFVLENBQzdELENBQ0kzTixRQUFTLE9BQVFvTixXQUFZLENBQUUrSCxHQUFJLDRCQUE4QnhILFNBQVUsQ0FDdkUsQ0FBRTNOLFFBQVMsUUFBU29OLFdBQVksQ0FBRStILEdBQUksMkJBQ3RDLENBQUVuVixRQUFTLElBQUtvTixXQUFZLENBQUUrSCxHQUFJLHdCQUF5QkMsTUFBTyx3QkFDbEUsQ0FBRXBWLFFBQVMsSUFBS29OLFdBQVksQ0FBRStILEdBQUkseUJBQTBCQyxNQUFPLHNCQUczRSxDQUNJcFYsUUFBUyxPQUFRb04sV0FBWSxDQUFFK0gsR0FBSSx1QkFBeUJ4SCxTQUFVLENBQ2xFLENBQUUzTixRQUFTLE9BQVFvTixXQUFZLENBQUUrSCxHQUFJLDBCQUNyQyxDQUNJblYsUUFBUyxPQUFRb04sV0FBWSxDQUFFK0gsR0FBSSwyQkFBNkJ4SCxTQUFVLENBQ3RFLENBQUUzTixRQUFTLFFBQVNlLEtBQU0sU0FDMUIsQ0FBRWYsUUFBUyxRQUFTb04sV0FBWSxDQUFFK0gsR0FBSSx3QkFBeUJneUIsYUFBYyxlQU9yRzMrQixFQUFLNCtCLGFBQWVGLEVBQWV2K0IsS0FBSywwQkFDeENILEVBQUt5OUIsTUFBUWlCLEVBQWV2K0IsS0FBSywwQkFDakMsSUFBSTArQixFQUFZSCxFQUFlditCLEtBQUssd0JBa0RwQyxPQWpEQXUrQixFQUFldHpCLGlCQUFpQixRQUFTekIsS0FDakNBLEVBQU1FLFFBQVVnMUIsR0FBYUEsRUFBVWh6QixXQUFXbEMsRUFBTUUsV0FDeEQ3SixFQUFLNCtCLGFBQWFFLFFBQ2xCOStCLEVBQUs0K0IsYUFBYUcsa0JBQWtCLytCLEVBQUs0K0IsYUFBYTdvQyxNQUFNVSxPQUFRdUosRUFBSzQrQixhQUFhN29DLE1BQU1VLE9BQVEsY0FLNUd1SixFQUFLNCtCLGFBQWF4ekIsaUJBQWlCLFVBQVd6QixJQUMxQyxJQUFJNVQsRUFDSixHQUFpQixXQUFiNFQsRUFBTWxTLEtBQWlDLGFBQWJrUyxFQUFNbFMsSUFDZixXQUFia1MsRUFBTWxTLElBQ051SSxFQUFLdEosUUFFYSxhQUFiaVQsRUFBTWxTLEtBQ1h1SSxFQUFLdEosUUFHMkIsR0FBaENzSixFQUFLMDlCLGlCQUFpQmpuQyxRQUNqQnVKLEVBQUt0SixNQUFRLEVBRGlCc0osRUFBS3RKLE1BQVEsRUFFM0NzSixFQUFLdEosT0FBU3NKLEVBQUswOUIsaUJBQWlCam5DLFNBQVF1SixFQUFLdEosTUFBUXNKLEVBQUswOUIsaUJBQWlCam5DLE9BQVMsR0FFakdWLEVBQVFpSyxFQUFLMDlCLGlCQUFpQjE5QixFQUFLdEosT0FDbkNzSixFQUFLNCtCLGFBQWE3b0MsTUFBUUEsR0FBUyxHQUNuQ2lLLEVBQUs0K0IsYUFBYUcsa0JBQWtCLytCLEVBQUs0K0IsYUFBYTdvQyxNQUFNVSxPQUFRdUosRUFBSzQrQixhQUFhN29DLE1BQU1VLE9BQVEsZ0JBRW5HLEdBQWlCLFNBQWJrVCxFQUFNbFMsSUFBZ0IsQ0FDM0IsSUFBSXVuQyxFQUFVaC9CLEVBQUs0K0IsYUFBYTdvQyxNQUNoQ2lLLEVBQUs0K0IsYUFBYTdvQyxNQUFRLEdBQzFCaUssRUFBSzI5QixZQUFZaC9CLElBQUEsUUFBWXFnQyxHQUNkLElBQVhBLEdBQ0FoL0IsRUFBSzA5QixpQkFBaUJubUMsS0FBS3luQyxHQUN2QjlCLE1BQU0xa0MsTUFBTXdILEVBQUsyOUIsWUFBWXFCLEVBQVF4b0MsTUFBTSxLQUFLLEtBQ2hEd0osRUFBSzI5QixZQUFZcUIsRUFBUXhvQyxNQUFNLEtBQUssSUFBSXdvQyxFQUFRcm1CLFFBQVFxbUIsRUFBUXhvQyxNQUFNLEtBQUssR0FBSSxJQUFJa1YsUUFHbkYxTCxFQUFLaytCLE1BQUEsSUFBVWMsRUFBUXhvQyxNQUFNLEtBQUssa0JBSXRDd0osRUFBS2srQixNQUFNYyxHQUdmaC9CLEVBQUt0SixNQUFRc0osRUFBSzA5QixpQkFBaUJqbkMsT0FBUyxLQUlwRHVKLEVBQUs0WSxPQUFTOGxCLEVBQ2QxK0IsRUFBS2kvQixTQUNFUCxHQUdYMStCLEVBQUtrK0IsTUFBUy8vQixJQUNWLElBQUlpVixFQUVBQSxFQURBalYsYUFBZ0JxRyxRQUNUckcsRUFFYSxpQkFBUkEsRUFDTCsrQixNQUFNZ0MsWUFBWS9nQyxHQUdsQisrQixNQUFNdjRCLGNBQWMsQ0FBRW5OLFFBQVMsT0FBUXlPLEtBQU05SCxJQUd4RCxJQUFJaUUsRUFBQSxJQUFXODZCLE1BQU05NkIsV0FDakJ5N0IsRUFBVVgsTUFBTXY0QixjQUFjLENBQzlCbk4sUUFBUyxNQUFPb04sV0FBWSxDQUFFak4sTUFBTyxDQUFFMmEsUUFBUyxPQUFRaUQsb0JBQXFCLG9CQUF1QnBRLFNBQVUsQ0FDMUcsQ0FBRTNOLFFBQVMsUUFBU2UsS0FBTTZKLEdBQzFCZ1IsS0FJUnBULEVBQUsyOUIsWUFBWWgvQixJQUFJay9CLElBR3pCNzlCLEVBQUttL0IsTUFBQSxLQUNEbi9CLEVBQUsyOUIsWUFBWUMsU0FHckI1OUIsRUFBS2krQixhQUFBLEtBQ0RqK0IsRUFBSzQrQixhQUFhbG5DLElBQUksQ0FBRTRhLFFBQVMsVUFHckN0UyxFQUFLcStCLFlBQUEsS0FDRHIrQixFQUFLNCtCLGFBQWF2eUIsVUFBVSxDQUFDLGFBR2pDck0sRUFBS2kvQixPQUFBLEtBQ0RqL0IsRUFBSzRZLE9BQU96TixRQUFRLEtBQ2hCLElBQUlwRCxFQUFTL0gsRUFBSzRZLE9BQU9uTCxXQUNyQjJ4QixHQUFBLEVBQ0FwbEMsRUFBV2dHLEVBQUs0WSxPQUFPNWUsV0FvQzNCZ0csRUFBSzRZLE9BQU94TixpQkFBaUIsWUFuQ2pCekIsSUFDUixJQUFJMUYsRUFBTzBGLEVBQU00UixFQUFJdmIsRUFBSzRZLE9BQU81ZSxXQUFXaVksSUFDeENoTyxFQUFPLElBQU1BLEdBQVEsR0FDckJqRSxFQUFLNFksT0FBT2xoQixJQUFJLENBQUV5YyxPQUFRLGNBRXBCaXJCLEdBQ05wL0IsRUFBSzRZLE9BQU92TSxVQUFVLENBQUMsYUE4Qi9Cck0sRUFBSzRZLE9BQU94TixpQkFBaUIsWUExQmJ6QixJQUNaLElBQUkxRixFQUFPMEYsRUFBTTRSLEVBQUl2YixFQUFLNFksT0FBTzVlLFdBQVdpWSxJQUN4Q2hPLEVBQU8sSUFBTUEsR0FBUSxLQUNyQmpFLEVBQUs0WSxPQUFPbGhCLElBQUksQ0FBRXljLE9BQVEsY0FDMUJpckIsR0FBQSxLQXVCUnIzQixFQUFPcUQsaUJBQWlCLFlBbkJiekIsSUFDUCxJQUFJMkssRUFBU3RhLEVBQVNvZSxPQUFTek8sRUFBTTRSLEVBQ2pDOGpCLEVBQVcvcUIsRUFBUyxJQUNwQmdyQixFQUFTMzFCLEVBQU00UixFQUFJeFQsRUFBTy9OLFdBQVdpWSxJQUNyQ210QixHQUFXRSxHQUFVRCxHQUNyQnIvQixFQUFLNFksT0FBT2xoQixJQUFJLENBQUU0YyxPQUFXQSxFQUFYLFNBZTFCdFUsRUFBSzRZLE9BQU94TixpQkFBaUIsVUFYZnpCLElBQ1Z5MUIsR0FBQSxJQVdKcjNCLEVBQU9xRCxpQkFBaUIsVUFSUHpCLElBQ2J5MUIsR0FBQSxPQVdacC9CLEVBQUs0OUIsTUFBQSxLQUNENTlCLEVBQUsyOUIsWUFBWUMsU0FHZDU5QixHQTVPWCxJQUFJbStCLEVBQVMsSUFEYnBCLEVBQ2lCLE9DQWpCLE1BQUEvTCxLQUFBdU8sRUFBQXZKLFlBQUF3SixFQUFBbEUsV0FBQW1FLEVBQUFsTSxTQUFBbU0sR0FBQXJFLEVBQUF6aUIsT0FBQXNrQixNQUFBLElBQUFxQyxFQUFBM21CLFFBQUEsSUFBQThtQixFQUFBOW1CLFFBQUEsTUFBQSttQixPQUFBQSxHQUFBQyxHQUFBQyxPQUFBQSxHQUFBOUMsRUFBQW5rQixPQUFBa25CLElBQUEsR0FBQWxuQixPQUFBdWtCLFdBQUFxQyxJQUFBNW1CLE9BQUF5a0IsV0FBQW9DLElBQUEsSUFBQU0sRUFBQSxJQUFBSixFQUFBSyxFQUFBLElBQUFILEVBQUFDLElBQUFHLHVCQUFBLENBQUFybkMsRUFBQSxDQUFBVixLQUFBLEdBQUFzTyxRQUFBLE9BQUEsSUFBQXVOLEVBQUFtcEIsTUFBQTlsQixpQkFBQXhlLEVBQUFWLE1BQUFzTixFQUFBLFFBQUF0SixNQUFBb0YsUUFBQTFJLEVBQUE0TixXQUFBaEIsRUFBQSxVQUFBLElBQUEyUCxFQUFBK25CLE1BQUF2NEIsY0FBQSxDQUFBbk4sUUFBQSxNQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSwwQkFBQXpILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxRQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSwrQkFBQUQsR0FBQXpVLE1BQUFLLEtBQUF3YixHQUFBLENBQUF2YyxRQUFBZ08sRUFBQVosV0FBQSxDQUFBZ0ksTUFBQSw4QkFBQTFVLEtBQUFVLEVBQUFWLFVBQUEsR0FBQWdFLE1BQUFvRixRQUFBMUksRUFBQTROLFNBQUEsQ0FBQTJPLEVBQUFoVixLQUFBLGdDQUFBb0csWUFBQSxDQUFBL08sUUFBQSxTQUFBb04sV0FBQSxDQUFBOEIsVUFBQSxFQUFBc04sVUFBQSxFQUFBamUsTUFBQSxNQUFBd0MsS0FBQSxVQUFBd2IsSUFBQSxJQUFBLElBQUF0TixLQUFBN04sRUFBQTROLFFBQUEyTyxFQUFBaFYsS0FBQSxnQ0FBQW9HLFlBQUEsQ0FBQS9PLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQTdPLE1BQUEwUSxHQUFBbE8sS0FBQWtPLElBQUEsT0FBQTBPLEdBQUEycUIsSUFBQUksYUFBQSxJQUFBaEQsTUFBQXY0QixjQUFBLENBQUFuTixRQUFBLE1BQUFvTixXQUFBLENBQUFnSSxNQUFBLHVCQUFBekgsU0FBQSxDQUFBLENBQUEzTixRQUFBLFFBQUFvTixXQUFBLENBQUFnSSxNQUFBLDJCQUFBOEksWUFBQSxTQUFBLENBQUFsZSxRQUFBLFFBQUFlLEtBQUEsTUFBQSxDQUFBZixRQUFBLFFBQUFvTixXQUFBLENBQUFnSSxNQUFBLDRCQUFBOEksWUFBQSxVQUFBLENBQUFsZSxRQUFBLFNBQUFvTixXQUFBLENBQUFnSSxNQUFBLDRCQUFBcEcsUUFBQSxDQUFBLFNBQUEsUUFBQSxTQUFBLENBQUFoUCxRQUFBLElBQUFvTixXQUFBLENBQUFnSSxNQUFBLCtDQUFBa3pCLElBQUFLLGdCQUFBLEtBQUEsSUFBQUMsRUFBQTM3QixTQUFBd0MsS0FBQTlHLEtBQUEscUJBQUFrZ0MsRUFBQW5ELE1BQUFtRCxhQUFBRCxHQUFBLFFBQUFDLEVBQUFya0MsT0FBQStqQyxFQUFBN0IsTUFBQWhCLE1BQUE5bEIsaUJBQUFpcEIsRUFBQTMzQixhQUFBLGlCQUFBLElBQUFvM0IsSUFBQVEsWUFBQSxLQUFBLElBQUFGLEVBQUEzN0IsU0FBQXdDLEtBQUE5RyxLQUFBLHFCQUFBLEdBQUEyL0IsSUFBQUssa0JBQUEsQ0FBQSxJQUFBcHFDLEVBQUE2TCxFQUFBaEosRUFBQXNrQyxNQUFBcUQsU0FBQUgsR0FBQUksRUFBQS83QixTQUFBd0MsS0FBQTlHLEtBQUEsaUJBQUFDLFFBQUEsd0JBQUF4SCxFQUFBdUYsS0FBQSxHQUFBLElBQUEsSUFBQXhILEVBQUEsRUFBQUEsRUFBQTZwQyxFQUFBL3BDLE9BQUFFLElBQUFaLEVBQUF5cUMsRUFBQTdwQyxHQUFBd0osS0FBQSw4QkFBQXBLLE1BQUE2TCxFQUFBNCtCLEVBQUE3cEMsR0FBQXdKLEtBQUEsNkJBQUFwSyxNQUFBNkMsRUFBQXVGLEtBQUFxaUMsRUFBQTdwQyxHQUFBd0osS0FBQSw2QkFBQXBLLE9BQUEsUUFBQTZMLEVBQUEzTCxLQUFBQyxNQUFBSCxHQUFBLFNBQUE2TCxFQUFBLElBQUE3TCxFQUFBLEdBQUFBLEVBQUFTLE1BQUEsS0FBQVQsRUFBQWdxQyxFQUFBOUIsZUFBQThCLEVBQUE3QixNQUFBLGlCQUFBdGxDLEVBQUFZLEtBQUF3bUMsRUFBQWhELFFBQUFwa0MsR0FBQTBrQyxLQUFBeHpCLElBQUFpMkIsRUFBQTdCLE1BQUEsYUFBQTZCLEVBQUE3QixNQUFBcDBCLEtBQUEwekIsTUFBQXJuQyxJQUFBc0ksUUFBQUUsSUFBQXhJLEtBQUFpb0MsUUFBQTJCLEVBQUExQixpQkFBQXlCLElBQUE1eEIsT0FBQSxLQUFBekosU0FBQXdDLEtBQUFWLFlBQUEsQ0FBQS9PLFFBQUEsU0FBQW9OLFdBQUEsQ0FBQStILEdBQUEsbUJBQUEsSUFBQW9qQixFQUFBdHJCLFNBQUF3QyxLQUFBVixZQUFBLENBQUEvTyxRQUFBLE9BQUFvTixXQUFBLENBQUErSCxHQUFBLGVBQUF4SCxTQUFBLENBQUEsQ0FBQTNOLFFBQUEsTUFBQW9OLFdBQUEsQ0FBQStILEdBQUEsY0FBQSxDQUFBblYsUUFBQSxVQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxrQkFBQXhILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxNQUFBb04sV0FBQSxDQUFBK0gsR0FBQSxvQkFBQXhILFNBQUEsQ0FBQTI2QixJQUFBRyx1QkFBQSxDQUFBL25DLEtBQUEsUUFBQTRuQyxJQUFBRyx1QkFBQSxDQUFBL25DLEtBQUEsU0FBQXNPLFFBQUEsQ0FBQSxPQUFBLE1BQUEsWUFBQSxDQUFBaFAsUUFBQSxNQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSwwQkFBQXpILFNBQUEsQ0FBQSxDQUFBM04sUUFBQSxRQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxnQ0FBQXJVLEtBQUEsZ0JBQUEsQ0FBQWYsUUFBQSxJQUFBb04sV0FBQSxDQUFBZ0ksTUFBQSxjQUFBRCxHQUFBLGlCQUFBLENBQUFuVixRQUFBLE1BQUFvTixXQUFBLENBQUErSCxHQUFBLGlCQUFBLENBQUFuVixRQUFBLE1BQUFvTixXQUFBLENBQUErSCxHQUFBLG9CQUFBeEgsU0FBQSxDQUFBLENBQUEzTixRQUFBLFNBQUFvTixXQUFBLENBQUErSCxHQUFBLGtCQUFBcFUsS0FBQSxzQkFBQXduQyxFQUFBdEIsa0JBQUFnQyxFQUFBMVEsRUFBQTV2QixLQUFBLGFBQUF1Z0MsRUFBQTNRLEVBQUE1dkIsS0FBQSxtQkFBQXdnQyxFQUFBNVEsRUFBQTV2QixLQUFBLGlCQUFBdStCLEVBQUEzTyxFQUFBNXZCLEtBQUEsb0JBQUF5Z0MsRUFBQTdRLEVBQUE1dkIsS0FBQSwwQkFBQTBnQyxFQUFBOVEsRUFBQTV2QixLQUFBLDJCQUFBc2dDLEVBQUFyMUIsaUJBQUEsUUFBQXpCLElBQUFnM0IsRUFBQXA2QixZQUFBdTVCLElBQUFJLGtCQUFBUyxFQUFBdjFCLGlCQUFBLFFBQUF6QixJQUFBQSxFQUFBRSxPQUFBbUQsVUFBQS9NLFNBQUEsK0JBQUEwSixFQUFBRSxPQUFBNEQsV0FBQUssV0FBQTR5QixFQUFBdDFCLGlCQUFBLFFBQUF6QixJQUFBbTJCLElBQUFRLGdCQUFBTyxFQUFBejFCLGlCQUFBLFFBQUF6QixJQUFBKzBCLEVBQUE3c0IsWUFBQSx3QkFBQWd2QixFQUFBaHZCLFlBQUEsaUJBQUFndkIsRUFBQWh2QixZQUFBLGlCQUFBK3VCLEVBQUF4MUIsaUJBQUEsUUFBQXpCLElBQUFvMkIsRUFBQW5DLFdBQUFuNUIsU0FBQTJHLGlCQUFBLG1CQUFBekIsSUFBQWxGLFNBQUF3QyxLQUFBZixVQUFBLEdBQUE0NUIsSUFBQTV4QixXckJEQSIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe1xuIiwidmFyIF8kRnVuY183PWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5jYXBpdGFscz1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCIsdGhpcy5zbWFsbHM9XCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5elwiLHRoaXMuZGlnaXRzPVwiMTIzNDU2Nzg5MFwiLHRoaXMuc3ltYm9scz1cIiwuLz8nIUAjJCVeJiooKS1fKz1gflxcXFx8IFwiLHRoaXMubW9udGhzPVtcIkphbnVhcnlcIixcIkZlYnVhcnlcIixcIk1hcmNoXCIsXCJBcHJpbFwiLFwiTWF5XCIsXCJKdW5lXCIsXCJKdWx5XCIsXCJBdWd1c3RcIixcIlNlcHRlbWJlclwiLFwiT2N0b2JlclwiLFwiTm92ZW1iZXJcIixcIkRlY2VtYmVyXCJdLHRoaXMuZGF5cz1bXCJTdW5kYXlcIixcIk1vbmRheVwiLFwiVHVlc2RheVwiLFwiV2VkbmVzZGF5XCIsXCJUaHVyc2RheVwiLFwiRnJpZGF5XCIsXCJTYXR1cmRheVwiXSx0aGlzLmdlbmRlcnM9W1wiTWFsZVwiLFwiRmVtYWxlXCIsXCJEbyBub3QgZGlzY2xvc2VcIl0sdGhpcy5tYXJpdGFscz1bXCJNYXJyaWVkXCIsXCJTaW5nbGVcIixcIkRpdm9yY2VkXCIsXCJXaWRvd2VkXCJdLHRoaXMucmVsaWdpb25zPVtcIkNocmlzdGFpbml0eVwiLFwiSXNsYW1cIixcIkp1ZGFpc21cIixcIlBhZ2FuaXNtXCIsXCJCdWRpc21cIl0sdGhpcy51c2VyVHlwZXM9W1wic3R1ZGVudFwiLFwic3RhZmZcIixcImFkbWluXCIsXCJjZW9cIl0sdGhpcy5zdGFmZlJlcXVlc3RzPVtcImxlYXZlXCIsXCJhbGxvd2FuY2VcIl0sdGhpcy5zdHVkZW50c1JlcXVlc3RzPVtcImFic2VuY2VcIixcImFjYWRlbWljXCJdLHRoaXMuc3ViamVjdExpc3Q9W1wiTWF0aGVtYXRpY3NcIixcIkVuZ2xpc2hcIixcIlBoeXNpY3NcIixcIkNoZW1pc3RyeVwiLFwiQmlvbG9neVwiLFwiQWdyaWN1bHR1cmVcIixcIkxpdGVyYXR1cmVcIixcIkhpc3RvcnlcIl0uc29ydCgpLHRoaXMuc3ViamVjdExldmVscz1bXCJHZW5lcmFsXCIsXCJTZW5pb3JcIixcIlNjaWVuY2VcIixcIkFydHNcIixcIkp1bmlvclwiXSx0aGlzLmZvbnRTdHlsZXM9W1wiQXJpYWxcIixcIlRpbWVzIE5ldyBSb21hblwiLFwiSGVsdmV0aWNhXCIsXCJUaW1lc1wiLFwiQ291cmllciBOZXdcIixcIlZlcmRhbmFcIixcIkNvdXJpZXJcIixcIkFyaWFsIE5hcnJvd1wiLFwiQ2FuZGFyYVwiLFwiR2VuZXZhXCIsXCJDYWxpYnJpXCIsXCJPcHRpbWFcIixcIkNhbWJyaWFcIixcIkdhcmFtb25kXCIsXCJQZXJwZXR1YVwiLFwiTW9uYWNvXCIsXCJEaWRvdFwiLFwiQnJ1c2ggU2NyaXB0IE1UXCIsXCJMdWNpZGEgQnJpZ2h0XCIsXCJDb3BwZXJwbGF0ZVwiLFwiU2VyaWZcIixcIlNhbi1TZXJpZlwiLFwiR2VvcmdpYVwiLFwiU2Vnb2UgVUlcIl0sdGhpcy5waXhlbFNpemVzPVtcIjBweFwiLFwiMXB4XCIsXCIycHhcIixcIjNweFwiLFwiNHB4XCIsXCI1cHhcIixcIjZweFwiLFwiN3B4XCIsXCI4cHhcIixcIjlweFwiLFwiMTBweFwiLFwiMjBweFwiLFwiMzBweFwiLFwiNDBweFwiLFwiNTBweFwiLFwiNjBweFwiLFwiNzBweFwiLFwiODBweFwiLFwiOTBweFwiLFwiMTAwcHhcIixcIk5vbmVcIixcIlVuc2V0XCIsXCJhdXRvXCIsXCItd2Via2l0LWZpbGwtYXZhaWxhYmxlXCJdLHRoaXMuY29sb3JzPVtcIlJlZFwiLFwiR3JlZW5cIixcIkJsdWVcIixcIlllbGxvd1wiLFwiQmxhY2tcIixcIldoaXRlXCIsXCJQdXJwbGVcIixcIlZpb2xldFwiLFwiSW5kaWdvXCIsXCJPcmFuZ2VcIixcIlRyYW5zcGFyZW50XCIsXCJOb25lXCIsXCJVbnNldFwiXSx0aGlzLmJvbGRuZXNzPVsxMDAsMjAwLDMwMCw0MDAsNTAwLDYwMCw3MDAsODAwLDkwMCwxZTMsXCJsaWdodGVyXCIsXCJib2xkXCIsXCJib2xkZXJcIixcIm5vcm1hbFwiLFwidW5zZXRcIl0sdGhpcy5ib3JkZXJUeXBlcz1bXCJTb2xpZFwiLFwiRG90dGVkXCIsXCJEb3VibGVcIixcIkdyb292ZVwiLFwiRGFzaGVkXCIsXCJJbnNldFwiLFwiTm9uZVwiLFwiVW5zZXRcIixcIk91dHNldFwiLFwiUmlnZ2VkXCIsXCJJbmhlcml0XCIsXCJJbml0aWFsXCJdLHRoaXMuc2hhZG93cz1bXCIycHggMnB4IDVweCAycHggcmVkXCIsXCIycHggMnB4IDVweCBncmVlblwiLFwiMnB4IDJweCB5ZWxsb3dcIixcIjJweCBibGFja1wiLFwiTm9uZVwiLFwiVW5zZXRcIl0sdGhpcy5ib3JkZXJzPVtcIjFweCBzb2xpZCBibGFja1wiLFwiMnB4IGRvdHRlZCBncmVlblwiLFwiM3B4IGRhc2hlZCB5ZWxsb3dcIixcIjFweCBkb3VibGUgcmVkXCIsXCJOb25lXCIsXCJVbnNldFwiXSx0aGlzLmFsaWdubWVudD1bXCJMZWZ0XCIsXCJKdXN0aWZpZWRcIixcIlJpZ2h0XCIsXCJDZW50ZXJcIl19ZXh0cmFjdFNvdXJjZShzb3VyY2Upe2xldCB2YWx1ZT10aGlzLmluQmV0d2Vlbihzb3VyY2UsXCIkIyZ7XCIsXCJ9JiMkXCIpO3RyeXt2YWx1ZT1KU09OLnBhcnNlKHZhbHVlKX1jYXRjaChlcnJvcil7dmFsdWU9e319cmV0dXJuIHZhbHVlfWluZGV4QXQoaGF5c3RhY2s9XCJcIixuZWVkbGU9XCJcIixwb3M9MCl7aWYocG9zPXBvc3x8MCwtMT09aGF5c3RhY2suaW5kZXhPZihuZWVkbGUpKXJldHVybi0xO2lmKHBvcz49KGhheXN0YWNrPWhheXN0YWNrLnNwbGl0KG5lZWRsZSkpLmxlbmd0aClyZXR1cm4tMTtsZXQgaW5kZXg9MDtmb3IobGV0IGk9MDtpPGhheXN0YWNrLmxlbmd0aDtpKyspaTw9cG9zJiYoaW5kZXgrPWhheXN0YWNrW2ldLmxlbmd0aCk7cmV0dXJuIGluZGV4Kz1uZWVkbGUubGVuZ3RoKnBvc31jb21iaW5lKGhheXN0YWNrPVwiXCIsZmlyc3Q9XCJcIixzZWNvbmQ9XCJcIixwb3M9MCl7bGV0IGF0MT1wb3M9cG9zfHwwLGF0Mj1maXJzdD09PXNlY29uZD9wb3MrMTpwb3Msc3RhcnQ9dGhpcy5pbmRleEF0KGhheXN0YWNrLGZpcnN0LGF0MSksZW5kPXRoaXMuaW5kZXhBdChoYXlzdGFjayxzZWNvbmQsYXQyKTtyZXR1cm4tMT09c3RhcnR8fHN0YXJ0K2ZpcnN0Lmxlbmd0aD49aGF5c3RhY2subGVuZ3RofHwtMT09ZW5kPy0xOmhheXN0YWNrLnNsaWNlKHN0YXJ0LGVuZCtzZWNvbmQubGVuZ3RoKX1hbGxDb21iaW5lKGhheXN0YWNrPVwiXCIsZmlyc3Q9XCJcIixzZWNvbmQ9XCJcIil7bGV0IGZvdW5kLHBvcz0wLGFsbD1bXTtmb3IoOy0xIT1mb3VuZDspZm91bmQ9dGhpcy5jb21iaW5lKGhheXN0YWNrLGZpcnN0LHNlY29uZCxwb3MpLHBvcysrLC0xIT1mb3VuZCYmYWxsLnB1c2goZm91bmQpO3JldHVybiBhbGx9aW5CZXR3ZWVuKGhheXN0YWNrPVwiXCIsZmlyc3Q9XCJcIixzZWNvbmQ9XCJcIixwb3M9MCl7bGV0IGF0MT1wb3M9cG9zfHwwLGF0Mj1maXJzdD09PXNlY29uZD9wb3MrMTpwb3Msc3RhcnQ9dGhpcy5pbmRleEF0KGhheXN0YWNrLGZpcnN0LGF0MSksZW5kPXRoaXMuaW5kZXhBdChoYXlzdGFjayxzZWNvbmQsYXQyKTtyZXR1cm4tMT09c3RhcnR8fHN0YXJ0K2ZpcnN0Lmxlbmd0aD49aGF5c3RhY2subGVuZ3RofHwtMT09ZW5kPy0xOmhheXN0YWNrLnNsaWNlKHN0YXJ0K2ZpcnN0Lmxlbmd0aCxlbmQpfWFsbEluQmV0d2VlbihoYXlzdGFjaz1cIlwiLGZpcnN0PVwiXCIsc2Vjb25kPVwiXCIpe2xldCBmb3VuZCxwb3M9MCxhbGw9W107Zm9yKDstMSE9Zm91bmQ7KWZvdW5kPXRoaXMuaW5CZXR3ZWVuKGhheXN0YWNrLGZpcnN0LHNlY29uZCxwb3MpLHBvcysrLC0xIT1mb3VuZCYmYWxsLnB1c2goZm91bmQpO3JldHVybiBhbGx9ZXh0cmFjdENTUyhlbGVtZW50KXtsZXQga2V5LHZhbHVlLGNzcz1lbGVtZW50LnN0eWxlLmNzc1RleHQsc3R5bGU9e307aWYoXCJcIiE9Y3NzKXtsZXQgcGFpcjtjc3M9Y3NzLnNwbGl0KFwiOyBcIik7Zm9yKGxldCBpIG9mIGNzcylwYWlyPXRoaXMudHJlbShpKSxrZXk9dGhpcy5qc1N0eWxlTmFtZShwYWlyLnNwbGl0KFwiOlwiKVswXSksdmFsdWU9dGhpcy5zdHJpbmdSZXBsYWNlKHBhaXIuc3BsaXQoXCI6XCIpLnBvcCgpLFwiO1wiLFwiXCIpLFwiXCIhPWtleSYmKHN0eWxlW2tleV09dGhpcy50cmVtKHZhbHVlKSl9cmV0dXJuIHN0eWxlfXRyaW1Nb250aEFycmF5KCl7bGV0IG1vbnRocz1bXTtmb3IobGV0IGk9MDtpPHRoaXMubW9udGhzLmxlbmd0aDtpKyspbW9udGhzLnB1c2godGhpcy5tb250aHNbaV0uc2xpY2UoMCwzKSk7cmV0dXJuIG1vbnRoc31qc1N0eWxlTmFtZShuYW1lPVwiXCIpe2xldCBuZXdOYW1lPVwiXCI7Zm9yKGxldCBpPTA7aTxuYW1lLmxlbmd0aDtpKyspXCItXCI9PW5hbWVbaV0/bmV3TmFtZSs9bmFtZVsrK2ldLnRvVXBwZXJDYXNlKCk6bmV3TmFtZSs9bmFtZVtpXS50b0xvd2VyQ2FzZSgpO3JldHVybiBuZXdOYW1lfWNzc1N0eWxlTmFtZShuYW1lPVwiXCIpe2xldCBuZXdOYW1lPVwiXCI7Zm9yKGxldCBpPTA7aTxuYW1lLmxlbmd0aDtpKyspdGhpcy5pc0NhcGl0YWwobmFtZVtpXSkmJihuZXdOYW1lKz1cIi1cIiksbmV3TmFtZSs9bmFtZVtpXS50b0xvd2VyQ2FzZSgpO3JldHVybiBuZXdOYW1lfXRleHRUb0NhbWVsQ2FzZWQodGV4dD1cIlwiKXtsZXQgdmFsdWU9XCJcIjtmb3IobGV0IGkgaW4gdGV4dClcIiBcIiE9dGV4dFtpXSYmKDA9PWk/dmFsdWUrPXRleHRbaV0udG9Mb3dlckNhc2UoKTp0aGlzLmlzc2V0KHRleHRbaS0xXSkmJlwiIFwiPT10ZXh0W2ktMV0/dmFsdWUrPXRleHRbaV0udG9VcHBlckNhc2UoKTp2YWx1ZSs9dGV4dFtpXSk7cmV0dXJuIHZhbHVlfWNhbWVsQ2FzZWRUb1RleHQoY2FtZWxDYXNlPVwiXCIpe2xldCB2YWx1ZT1cIlwiO2ZvcihsZXQgaSBpbiBjYW1lbENhc2UpMCE9aSYmdGhpcy5pc0NhcGl0YWwoY2FtZWxDYXNlW2ldKT92YWx1ZSs9YCAke2NhbWVsQ2FzZVtpXS50b0xvd2VyQ2FzZSgpfWA6dmFsdWUrPWNhbWVsQ2FzZVtpXTtyZXR1cm4gdmFsdWV9ZW1wdHlPYmplY3Qob2JqKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqKT09SlNPTi5zdHJpbmdpZnkoe30pfXJhbmRvbShwYXJhbXM9e2xpbWl0OjEscmFuZ2U6MX0pe2xldCByYW5kb207cmV0dXJuIHRoaXMuZW1wdHlPYmplY3QocGFyYW1zKT9yYW5kb209MipNYXRoLnJhbmRvbSgpLTE6dGhpcy5pc3NldChwYXJhbXMubGltaXQpP3JhbmRvbT1NYXRoLnJhbmRvbSgpKnBhcmFtcy5saW1pdDp0aGlzLmlzc2V0KHBhcmFtcy5yYW5nZSkscmFuZG9tfXJhbmdlKGVuZD0xLHN0YXJ0PTEpe2xldCB2YWx1ZT1bXTtmb3IobGV0IGk9c3RhcnR8fDA7aTxlbmQ7aSsrKXZhbHVlLnB1c2goaSk7cmV0dXJuIHZhbHVlfWdlbmVyYXRlUmFuZG9tKGxlbmd0aD01KXtmb3IodmFyIHN0cmluZz10aGlzLmNhcGl0YWxzK3RoaXMuc21hbGxzK3RoaXMuZGlnaXRzLGFscGhhbnVtZXJpYz1cIlwiLGk9MDtpPGxlbmd0aDtpKyspYWxwaGFudW1lcmljKz1zdHJpbmdbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnN0cmluZy5sZW5ndGgpXTtyZXR1cm4gYWxwaGFudW1lcmljfWdlbmVyYXRlUmFuZG9tSGV4KGxlbmd0aD01KXtmb3IodmFyIHN0cmluZz10aGlzLmNhcGl0YWxzLnNsaWNlKDAsMykrdGhpcy5zbWFsbHMuc2xpY2UoMCwzKSt0aGlzLmRpZ2l0cyxhbHBoYW51bWVyaWM9XCJcIixpPTA7aTxsZW5ndGg7aSsrKWFscGhhbnVtZXJpYys9c3RyaW5nW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSpzdHJpbmcubGVuZ3RoKV07cmV0dXJuIGFscGhhbnVtZXJpY31nZW5lcmF0ZUtleShsZW5ndGg9NSl7cmV0dXJuIERhdGUubm93KCkudG9TdHJpbmcobGVuZ3RoKStNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKGxlbmd0aCkuc2xpY2UoMil9ZWRpdHRlZFVybChwYXJhbXMpe3ZhciB1cmw9dGhpcy51cmxTcGxpdHRlcihwYXJhbXMudXJsKTtyZXR1cm4gdXJsLnZhcnNbcGFyYW1zLnRvQWRkXT1wYXJhbXMuYWRkVmFsdWUudG9Mb3dlckNhc2UoKSx0aGlzLnVybE1lcmdlcih1cmwscGFyYW1zLnRvQWRkKX1hZGRDb21tYVRvTW9uZXkobW9uZXk9XCJcIil7Zm9yKHZhciBpbnZlcnNlPVwiXCIsaT1tb25leS5sZW5ndGgtMTtpPj0wO2ktLSlpbnZlcnNlKz1tb25leVtpXTtmb3IobW9uZXk9XCJcIixpPTA7aTxpbnZlcnNlLmxlbmd0aDtpKyspe2xldCBwb3NpdGlvbj0oaSsxKSUzO21vbmV5Kz1pbnZlcnNlW2ldLDA9PXBvc2l0aW9uJiZpIT1pbnZlcnNlLmxlbmd0aC0xJiYobW9uZXkrPVwiLFwiKX1mb3IoaW52ZXJzZT1cIlwiLGk9bW9uZXkubGVuZ3RoLTE7aT49MDtpLS0paW52ZXJzZSs9bW9uZXlbaV07cmV0dXJuIGludmVyc2V9aXNDYXBpdGFsKHZhbHVlPVwiXCIpe2lmKDE9PXZhbHVlLmxlbmd0aClyZXR1cm4gdGhpcy5jYXBpdGFscy5pbmNsdWRlcyh2YWx1ZSl9Y2FwaXRhbGl6ZSh2YWx1ZT1cIlwiKXtyZXR1cm4gdGhpcy5pc0NhcGl0YWwodmFsdWVbMF0pP3ZhbHVlOigodmFsdWU9dmFsdWUuc3BsaXQoXCJcIikpWzBdPXRoaXMuY2FwaXRhbHNbdGhpcy5zbWFsbHMuaW5kZXhPZih2YWx1ZVswXSldLHRoaXMuc3RyaW5nUmVwbGFjZSh2YWx1ZS50b1N0cmluZygpLFwiLFwiLFwiXCIpKX1mbGlwKGhheXN0YWNrPVwiXCIpe3JldHVybiBoYXlzdGFjay5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKX1pc1NtYWxsKHZhbHVlPVwiXCIpe2lmKDE9PXZhbHVlLmxlbmd0aClyZXR1cm4gdGhpcy5zbWFsbHMuaW5jbHVkZXModmFsdWUpfWlzU3ltYm9sKHZhbHVlPVwiXCIpe2lmKDE9PXZhbHVlLmxlbmd0aClyZXR1cm4gdGhpcy5zeW1ib2xzLmluY2x1ZGVzKHZhbHVlKX1pc05hbWUodmFsdWU9XCJcIil7Zm9yKHZhciB4IGluIHZhbHVlKWlmKHRoaXMuaXNEaWdpdCh2YWx1ZVt4XSkpcmV0dXJuITE7cmV0dXJuITB9aXNQYXNzd29yZFZhbGlkKHZhbHVlPVwiXCIpe2lmKHZhbHVlLmxlbmd0aD43KWZvcih2YXIgYSBpbiB2YWx1ZSlpZih0aGlzLmlzQ2FwaXRhbCh2YWx1ZVthXSkpZm9yKHZhciBiIGluIHZhbHVlKWlmKHRoaXMuaXNTbWFsbCh2YWx1ZVtiXSkpZm9yKHZhciBjIGluIHZhbHVlKWlmKHRoaXMuaXNEaWdpdCh2YWx1ZVtjXSkpZm9yKHZhciBkIGluIHZhbHVlKWlmKHRoaXMuaXNTeW1ib2wodmFsdWVbZF0pKXJldHVybiEwO3JldHVybiExfWlzU3ViU3RyaW5nKGhheXN0YWNrPVwiXCIsdmFsdWU9XCJcIil7cmV0dXJuLTEhPWhheXN0YWNrLmluZGV4T2YodmFsdWUpfWlzRGlnaXQodmFsdWU9XCJcIil7cmV0dXJuIDE9PSh2YWx1ZT1uZXcgU3RyaW5nKHZhbHVlKSkubGVuZ3RoJiZ0aGlzLmRpZ2l0cy5pbmNsdWRlcyh2YWx1ZSl9aXNFbWFpbCh2YWx1ZT1cIlwiKXt2YXIgZW1haWxfcGFydHM9dmFsdWUuc3BsaXQoXCJAXCIpO2lmKDIhPWVtYWlsX3BhcnRzLmxlbmd0aClyZXR1cm4hMTtpZih0aGlzLmlzU3BhY2VTdHJpbmcoZW1haWxfcGFydHNbMF0pKXJldHVybiExO3ZhciBkb3RfcGFydHM9ZW1haWxfcGFydHNbMV0uc3BsaXQoXCIuXCIpO3JldHVybiAyPT1kb3RfcGFydHMubGVuZ3RoJiYhdGhpcy5pc1NwYWNlU3RyaW5nKGRvdF9wYXJ0c1swXSkmJiF0aGlzLmlzU3BhY2VTdHJpbmcoZG90X3BhcnRzWzFdKX1pc1RydXRoeSh2YWx1ZSl7bGV0IHRydXRoeTtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHZhbHVlP3RydXRoeT12YWx1ZTpcInN0cmluZ1wiPT10eXBlb2YgdmFsdWU/dHJ1dGh5PVwidHJ1ZVwiPT12YWx1ZS50b0xvY2FsZUxvd2VyQ2FzZSgpfHxcIjFcIj09dmFsdWUudG9Mb2NhbGVMb3dlckNhc2UoKTpcIm51bWJlclwiPT10eXBlb2YgdmFsdWUmJih0cnV0aHk9MT09dmFsdWUpLHRydXRoeX1pc0ZhbHN5KHZhbHVlKXtsZXQgZmFsc3k7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB2YWx1ZT9mYWxzeT12YWx1ZTpcInN0cmluZ1wiPT10eXBlb2YgdmFsdWU/ZmFsc3k9XCJmYWxzZVwiPT12YWx1ZS50b0xvY2FsZUxvd2VyQ2FzZSgpfHxcIjBcIj09dmFsdWUudG9Mb2NhbGVMb3dlckNhc2UoKTpcIm51bWJlclwiPT10eXBlb2YgdmFsdWUmJihmYWxzeT0wPT12YWx1ZSksZmFsc3l9b2JqZWN0TGVuZ3RoKG9iamVjdD17fSl7cmV0dXJuIE9iamVjdC5rZXlzKG9iamVjdCkubGVuZ3RofWlzU3BhY2VTdHJpbmcodmFsdWU9XCJcIil7aWYoXCJcIj09dmFsdWUpcmV0dXJuITA7Zm9yKHZhciB4IGluIHZhbHVlKWlmKFwiIFwiIT12YWx1ZVt4XSlyZXR1cm4hMTtyZXR1cm4hMH1oYXNTdHJpbmcoaGF5c3RhY2s9XCJcIixuZWVkbGU9XCJcIil7Zm9yKHZhciB4IGluIGhheXN0YWNrKWlmKG5lZWRsZT09aGF5c3RhY2tbeF0pcmV0dXJuITA7cmV0dXJuITF9dHJlbShuZWVkbGU9XCJcIil7aWYoXCIgXCI9PW5lZWRsZVswXSl7Zm9yKHZhciBuZXdfbmVlZGxlPVwiXCIsaT0wO2k8bmVlZGxlLmxlbmd0aDtpKyspMCE9aSYmKG5ld19uZWVkbGUrPW5lZWRsZVtpXSk7bmVlZGxlPXRoaXMudHJlbShuZXdfbmVlZGxlKX1pZihcIiBcIj09bmVlZGxlW25lZWRsZS5sZW5ndGgtMV0pe2ZvcihuZXdfbmVlZGxlPVwiXCIsaT0wO2k8bmVlZGxlLmxlbmd0aDtpKyspaSE9bmVlZGxlLmxlbmd0aC0xJiYobmV3X25lZWRsZSs9bmVlZGxlW2ldKTtuZWVkbGU9dGhpcy50cmVtKG5ld19uZWVkbGUpfXJldHVybiBuZWVkbGV9c3RyaW5nUmVwbGFjZSh3b3JkPVwiXCIsZnJvbT1cIlwiLHRvPVwiXCIpe3ZhciB2YWx1ZT1cIlwiO2ZvcihsZXQgaT0wO2k8d29yZC5sZW5ndGg7aSsrKXdvcmRbaV09PWZyb20/dmFsdWUrPXRvOnZhbHVlKz13b3JkW2ldO3JldHVybiB2YWx1ZX1jb252ZXJUb1JlYWxQYXRoKHBhdGg9XCJcIil7cmV0dXJuXCIvXCIhPXBhdGhbcGF0aC5sZW5ndGgtMV0mJihwYXRoKz1cIi9cIikscGF0aH1pc1NwYWNpYWxDaGFyYWN0ZXIoY2hhcj1cIlwiKXtmb3IodmFyIGk9MDtpPFwiJ1xcXFwvOj8qPD58IS5cIi5sZW5ndGg7aSsrKWlmKFwiJ1xcXFwvOj8qPD58IS5cIltpXT09Y2hhcilyZXR1cm4hMDtyZXR1cm4hMX1jb3VudENoYXIoaGF5c3RhY2s9XCJcIixuZWVkbGU9XCJcIil7Zm9yKHZhciBqPTAsaT0wO2k8aGF5c3RhY2subGVuZ3RoO2krKyloYXlzdGFja1tpXT09bmVlZGxlJiZqKys7cmV0dXJuIGp9b2NjdXJhbmNlc09mKGhheXN0YWNrPVwiXCIsbmVlZGxlPVwiXCIpe2xldCBvY2N1cmFuY2VzPVtdO2ZvcihsZXQgaT0wO2k8aGF5c3RhY2subGVuZ3RoO2krKyloYXlzdGFja1tpXT09PW5lZWRsZSYmb2NjdXJhbmNlcy5wdXNoKGkpO3JldHVybiBvY2N1cmFuY2VzfWlzc2V0KHZhcmlhYmxlKXtyZXR1cm4gdm9pZCAwIT09dmFyaWFibGV9aXNudWxsKHZhcmlhYmxlKXtyZXR1cm4gbnVsbD09dmFyaWFibGV9bm90TnVsbCh2YXJpYWJsZSl7cmV0dXJuIHRoaXMuaXNzZXQodmFyaWFibGUpJiYhdGhpcy5pc251bGwodmFyaWFibGUpfWlzQXJyYXkodmFyaWFibGUpe2xldCBmbGFnPSExO3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiB2YXJpYWJsZSYmKGZsYWc9dmFyaWFibGUuY29uc3RydWN0b3I9PT1BcnJheSksZmxhZ31pc09iamVjdCh2YXJpYWJsZSl7bGV0IGZsYWc9ITE7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHZhcmlhYmxlJiYoZmxhZz12YXJpYWJsZS5jb25zdHJ1Y3Rvcj09PU9iamVjdCksZmxhZ31pc1N0cmluZyh2YXJpYWJsZSl7bGV0IGZsYWc9ITE7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHZhcmlhYmxlJiYoZmxhZz12YXJpYWJsZS5jb25zdHJ1Y3Rvcj09PVN0cmluZyksZmxhZ31pc051bWJlcih2YXJpYWJsZSl7bGV0IGZsYWc9ITE7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHZhcmlhYmxlJiYoZmxhZz12YXJpYWJsZS5jb25zdHJ1Y3Rvcj09PU51bWJlciksZmxhZ31pc0Jvb2wodmFyaWFibGUpe2xldCBmbGFnPSExO3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdmFyaWFibGUmJihmbGFnPXZhcmlhYmxlLmNvbnN0cnVjdG9yPT09Qm9vbGVhbiksZmxhZ31pc2Z1bmN0aW9uKHZhcmlhYmxlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB2YXJpYWJsZX1hc3luYyBydW5QYXJhbGxlbChmdW5jdGlvbnM9W10sY2FsbEJhY2s9KCgpPT57fSkpe3ZhciByZXN1bHRzPXt9O2Zvcih2YXIgZiBpbiBmdW5jdGlvbnMpcmVzdWx0c1tmXT1hd2FpdCBmdW5jdGlvbnNbZl07Y2FsbEJhY2socmVzdWx0cyl9aXNNb2JpbGUoKXtyZXR1cm4vQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCl9dXJsTWVyZ2VyKHNwbGl0VXJsPVwiXCIsbGFzdFF1ZXJ5PVwiXCIpe3ZhciBob3N0VHlwZT10aGlzLmlzc2V0KHNwbGl0VXJsLmhvc3RUeXBlKT9zcGxpdFVybC5ob3N0VHlwZTpcImh0dHBcIixob3N0TmFtZT10aGlzLmlzc2V0KHNwbGl0VXJsLmhvc3ROYW1lKT9zcGxpdFVybC5ob3N0TmFtZTpcIlwiLHBvcnQ9dGhpcy5pc3NldChzcGxpdFVybC5ob3N0KT9zcGxpdFVybC5wb3J0OlwiXCIscGF0aE5hbWU9dGhpcy5pc3NldChzcGxpdFVybC5wYXRoTmFtZSk/c3BsaXRVcmwucGF0aE5hbWU6XCJcIixxdWVyaWVzPVwiP1wiLGtlZXBNYXBwaW5nPSEwO3RoaXMuaXNzZXQoc3BsaXRVcmwudmFycykmJk9iamVjdC5rZXlzKHNwbGl0VXJsLnZhcnMpLm1hcChrZXk9PntrZWVwTWFwcGluZyYmKHF1ZXJpZXMrPWtleStcIj1cIitzcGxpdFVybC52YXJzW2tleV0rXCImXCIpLGtleT09bGFzdFF1ZXJ5JiYoa2VlcE1hcHBpbmc9ITEpfSk7dmFyIGxvY2F0aW9uPWhvc3RUeXBlK1wiOjovXCIraG9zdE5hbWUrXCI6XCIrcG9ydCtcIi9cIitwYXRoTmFtZStxdWVyaWVzO3JldHVybiBsb2NhdGlvbj0obG9jYXRpb249bG9jYXRpb24ubGFzdEluZGV4T2YoXCImXCIpPT1sb2NhdGlvbi5sZW5ndGgtMT9sb2NhdGlvbi5zbGljZSgwLGxvY2F0aW9uLmxlbmd0aC0xKTpsb2NhdGlvbikubGFzdEluZGV4T2YoXCI9XCIpPT1sb2NhdGlvbi5sZW5ndGgtMT9sb2NhdGlvbi5zbGljZSgwLGxvY2F0aW9uLmxlbmd0aC0xKTpsb2NhdGlvbn11cmxTcGxpdHRlcihsb2NhdGlvbj1cIlwiKXtpZih0aGlzLmlzc2V0KGxvY2F0aW9uKSl7dmFyIGh0dHBUeXBlPS0xPT09KGxvY2F0aW9uPWxvY2F0aW9uLnRvU3RyaW5nKCkpLmluZGV4T2YoXCI6Ly9cIik/bnVsbDpsb2NhdGlvbi5zcGxpdChcIjovL1wiKVswXSxmdWxsUGF0aD1sb2NhdGlvbi5zcGxpdChcIjovL1wiKS5wb3AoMCksaG9zdD1mdWxsUGF0aC5zcGxpdChcIi9cIilbMF0saG9zdE5hbWU9aG9zdC5zcGxpdChcIjpcIilbMF0scG9ydD1ob3N0LnNwbGl0KFwiOlwiKS5wb3AoMCkscGF0aD1cIi9cIitmdWxsUGF0aC5zcGxpdChcIi9cIikucG9wKDApLHBhdGhOYW1lPXBhdGguc3BsaXQoXCI/XCIpWzBdLHF1ZXJpZXM9LTE9PT1wYXRoLmluZGV4T2YoXCI/XCIpP251bGw6cGF0aC5zcGxpdChcIj9cIikucG9wKDApLHZhcnM9e307aWYobnVsbCE9cXVlcmllcyl7dmFyIHF1ZXJ5PXF1ZXJpZXMuc3BsaXQoXCImXCIpO2Zvcih2YXIgeCBpbiBxdWVyeSl7dmFyIHBhcnRzPXF1ZXJ5W3hdLnNwbGl0KFwiPVwiKTtwYXJ0c1sxXT92YXJzW3RoaXMuc3RyaW5nUmVwbGFjZShwYXJ0c1swXSxcIi1cIixcIiBcIildPXRoaXMuc3RyaW5nUmVwbGFjZShwYXJ0c1sxXSxcIi1cIixcIiBcIik6dmFyc1t0aGlzLnN0cmluZ1JlcGxhY2UocGFydHNbMF0sXCItXCIsXCIgXCIpXT1cIlwifX1yZXR1cm57bG9jYXRpb246bG9jYXRpb24saHR0cFR5cGU6aHR0cFR5cGUsZnVsbFBhdGg6ZnVsbFBhdGgsaG9zdDpob3N0LGh0dHBob3N0Omh0dHBUeXBlK1wiOi8vXCIraG9zdCxob3N0TmFtZTpob3N0TmFtZSxwb3J0OnBvcnQscGF0aDpwYXRoLHBhdGhOYW1lOnBhdGhOYW1lLHF1ZXJpZXM6cXVlcmllcyx2YXJzOnZhcnN9fX1nZXRVcmxWYXJzKGxvY2F0aW9uPVwiXCIpe3ZhciBxdWVyaWVzPS0xPT09KGxvY2F0aW9uPWxvY2F0aW9uLnRvU3RyaW5nKCkpLmluZGV4T2YoXCI/XCIpP251bGw6bG9jYXRpb24uc3BsaXQoXCI/XCIpLnBvcCgwKSx2YXJzPXt9O2lmKG51bGwhPXF1ZXJpZXMpe3ZhciBxdWVyeT1xdWVyaWVzLnNwbGl0KFwiJlwiKTtmb3IodmFyIHggaW4gcXVlcnkpe3ZhciBwYXJ0cz1xdWVyeVt4XS5zcGxpdChcIj1cIik7cGFydHNbMV0/dmFyc1t0aGlzLnN0cmluZ1JlcGxhY2UocGFydHNbMF0sXCItXCIsXCIgXCIpXT10aGlzLnN0cmluZ1JlcGxhY2UocGFydHNbMV0sXCItXCIsXCIgXCIpOnZhcnNbdGhpcy5zdHJpbmdSZXBsYWNlKHBhcnRzWzBdLFwiLVwiLFwiIFwiKV09XCJcIn19cmV0dXJuIHZhcnN9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtaMWJtTXVhbk1pWFN3aWJtRnRaWE1pT2xzaWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0lsdHZZbXBsWTNRZ1QySnFaV04wWFNJc0luUm9hWE1pTENKallYQnBkR0ZzY3lJc0luTnRZV3hzY3lJc0ltUnBaMmwwY3lJc0luTjViV0p2YkhNaUxDSnRiMjUwYUhNaUxDSmtZWGx6SWl3aVoyVnVaR1Z5Y3lJc0ltMWhjbWwwWVd4eklpd2ljbVZzYVdkcGIyNXpJaXdpZFhObGNsUjVjR1Z6SWl3aWMzUmhabVpTWlhGMVpYTjBjeUlzSW5OMGRXUmxiblJ6VW1WeGRXVnpkSE1pTENKemRXSnFaV04wVEdsemRDSXNJbk52Y25RaUxDSnpkV0pxWldOMFRHVjJaV3h6SWl3aVptOXVkRk4wZVd4bGN5SXNJbkJwZUdWc1UybDZaWE1pTENKamIyeHZjbk1pTENKaWIyeGtibVZ6Y3lJc0ltSnZjbVJsY2xSNWNHVnpJaXdpYzJoaFpHOTNjeUlzSW1KdmNtUmxjbk1pTENKaGJHbG5ibTFsYm5RaUxDSnpiM1Z5WTJVaUxDSjJZV3gxWlNJc0ltbHVRbVYwZDJWbGJpSXNJa3BUVDA0aUxDSndZWEp6WlNJc0ltVnljbTl5SWl3aWFHRjVjM1JoWTJzaUxDSnVaV1ZrYkdVaUxDSndiM01pTENKcGJtUmxlRTltSWl3aWMzQnNhWFFpTENKc1pXNW5kR2dpTENKcGJtUmxlQ0lzSW1raUxDSm1hWEp6ZENJc0luTmxZMjl1WkNJc0ltRjBNU0lzSW1GME1pSXNJbk4wWVhKMElpd2lhVzVrWlhoQmRDSXNJbVZ1WkNJc0luTnNhV05sSWl3aVptOTFibVFpTENKaGJHd2lMQ0pqYjIxaWFXNWxJaXdpY0hWemFDSXNJbVZzWlcxbGJuUWlMQ0pyWlhraUxDSmpjM01pTENKemRIbHNaU0lzSW1OemMxUmxlSFFpTENKd1lXbHlJaXdpZEhKbGJTSXNJbXB6VTNSNWJHVk9ZVzFsSWl3aWMzUnlhVzVuVW1Wd2JHRmpaU0lzSW5CdmNDSXNJbTVoYldVaUxDSnVaWGRPWVcxbElpd2lkRzlWY0hCbGNrTmhjMlVpTENKMGIweHZkMlZ5UTJGelpTSXNJbWx6UTJGd2FYUmhiQ0lzSW5SbGVIUWlMQ0pwYzNObGRDSXNJbU5oYldWc1EyRnpaU0lzSW05aWFpSXNJbk4wY21sdVoybG1lU0lzSW5CaGNtRnRjeUlzSW14cGJXbDBJaXdpY21GdVoyVWlMQ0p5WVc1a2IyMGlMQ0psYlhCMGVVOWlhbVZqZENJc0lrMWhkR2dpTENKemRISnBibWNpTENKaGJIQm9ZVzUxYldWeWFXTWlMQ0ptYkc5dmNpSXNJa1JoZEdVaUxDSnViM2NpTENKMGIxTjBjbWx1WnlJc0luVnliQ0lzSW5WeWJGTndiR2wwZEdWeUlpd2lkbUZ5Y3lJc0luUnZRV1JrSWl3aVlXUmtWbUZzZFdVaUxDSjFjbXhOWlhKblpYSWlMQ0p0YjI1bGVTSXNJbWx1ZG1WeWMyVWlMQ0p3YjNOcGRHbHZiaUlzSW1sdVkyeDFaR1Z6SWl3aWNtVjJaWEp6WlNJc0ltcHZhVzRpTENKNElpd2lhWE5FYVdkcGRDSXNJbUVpTENKaUlpd2lhWE5UYldGc2JDSXNJbU1pTENKa0lpd2lhWE5UZVcxaWIyd2lMQ0pUZEhKcGJtY2lMQ0psYldGcGJGOXdZWEowY3lJc0ltbHpVM0JoWTJWVGRISnBibWNpTENKa2IzUmZjR0Z5ZEhNaUxDSjBjblYwYUhraUxDSjBiMHh2WTJGc1pVeHZkMlZ5UTJGelpTSXNJbVpoYkhONUlpd2liMkpxWldOMElpd2lUMkpxWldOMElpd2lhMlY1Y3lJc0ltNWxkMTl1WldWa2JHVWlMQ0ozYjNKa0lpd2labkp2YlNJc0luUnZJaXdpY0dGMGFDSXNJbU5vWVhJaUxDSnFJaXdpYjJOamRYSmhibU5sY3lJc0luWmhjbWxoWW14bElpd2lhWE51ZFd4c0lpd2labXhoWnlJc0ltTnZibk4wY25WamRHOXlJaXdpUVhKeVlYa2lMQ0pPZFcxaVpYSWlMQ0pDYjI5c1pXRnVJaXdpWm5WdVkzUnBiMjV6SWl3aVkyRnNiRUpoWTJzaUxDSnlaWE4xYkhSeklpd2laaUlzSW5SbGMzUWlMQ0p1WVhacFoyRjBiM0lpTENKMWMyVnlRV2RsYm5RaUxDSnpjR3hwZEZWeWJDSXNJbXhoYzNSUmRXVnllU0lzSW1odmMzUlVlWEJsSWl3aWFHOXpkRTVoYldVaUxDSndiM0owSWl3aWFHOXpkQ0lzSW5CaGRHaE9ZVzFsSWl3aWNYVmxjbWxsY3lJc0ltdGxaWEJOWVhCd2FXNW5JaXdpYldGd0lpd2liRzlqWVhScGIyNGlMQ0pzWVhOMFNXNWtaWGhQWmlJc0ltaDBkSEJVZVhCbElpd2lablZzYkZCaGRHZ2lMQ0p4ZFdWeWVTSXNJbkJoY25Seklpd2lhSFIwY0dodmMzUWlYU3dpYldGd2NHbHVaM01pT2lKQlFYZHVRa0ZCTEZsQlFVOURMRU5CZUc1Q1VDeExRVUZCTEVOQlJVbERMRmRCUVVGQkxFVkJRVUZCTEVOQlEwbERMRWxCUVVGQkxFTkJRVXRETEZGQlFVRkJMRU5CUVZjc05FSkJRVUVzUTBGRGFFSkVMRWxCUVVGQkxFTkJRVXRGTEUxQlFVRkJMRU5CUVZNc05FSkJRVUVzUTBGRFpFWXNTVUZCUVVFc1EwRkJTMGNzVFVGQlFVRXNRMEZCVXl4WlFVRkJMRU5CUTJSSUxFbEJRVUZCTEVOQlFVdEpMRTlCUVVGQkxFTkJRVlVzTWtKQlFVRXNRMEZEWmtvc1NVRkJRVUVzUTBGQlMwc3NUVUZCUVVFc1EwRkJVeXhEUVVGRExGTkJRVUVzUTBGQlZ5eFRRVUZCTEVOQlFWY3NUMEZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVThzVFVGQlFTeERRVUZSTEUxQlFVRXNRMEZCVVN4UlFVRkJMRU5CUVZVc1YwRkJRU3hEUVVGaExGTkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRkJMRU5CUXpWSVRDeEpRVUZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZQTEVOQlFVTXNVVUZCUVN4RFFVRlZMRkZCUVVFc1EwRkJWU3hUUVVGQkxFTkJRVmNzVjBGQlFTeERRVUZoTEZWQlFVRXNRMEZCV1N4UlFVRkJMRU5CUVZVc1ZVRkJRU3hEUVVGQkxFTkJReTlGVGl4SlFVRkJRU3hEUVVGTFR5eFBRVUZCUVN4RFFVRlZMRU5CUVVNc1RVRkJRU3hEUVVGUkxGRkJRVUVzUTBGQlZTeHBRa0ZCUVN4RFFVRkJMRU5CUTJ4RFVDeEpRVUZCUVN4RFFVRkxVU3hSUVVGQlFTeERRVUZYTEVOQlFVTXNVMEZCUVN4RFFVRlhMRkZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRVmtzVTBGQlFTeERRVUZCTEVOQlEyeEVVaXhKUVVGQlFTeERRVUZMVXl4VFFVRkJRU3hEUVVGWkxFTkJRVU1zWTBGQlFTeERRVUZuUWl4UFFVRkJMRU5CUVZNc1UwRkJRU3hEUVVGWExGVkJRVUVzUTBGQldTeFJRVUZCTEVOQlFVRXNRMEZEYkVWVUxFbEJRVUZCTEVOQlFVdFZMRk5CUVVGQkxFTkJRVmtzUTBGQlF5eFRRVUZCTEVOQlFWY3NUMEZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVUVzUTBGREwwTldMRWxCUVVGQkxFTkJRVXRYTEdGQlFVRkJMRU5CUVdkQ0xFTkJRVU1zVDBGQlFTeERRVUZUTEZkQlFVRXNRMEZCUVN4RFFVTXZRbGdzU1VGQlFVRXNRMEZCUzFrc1owSkJRVUZCTEVOQlFXMUNMRU5CUVVNc1UwRkJRU3hEUVVGWExGVkJRVUVzUTBGQlFTeERRVU53UTFvc1NVRkJRVUVzUTBGQlMyRXNWMEZCUVVFc1EwRkJZeXhEUVVGRExHRkJRVUVzUTBGQlpTeFRRVUZCTEVOQlFWY3NVMEZCUVN4RFFVRlhMRmRCUVVFc1EwRkJZU3hUUVVGQkxFTkJRVmNzWVVGQlFTeERRVUZsTEZsQlFVRXNRMEZCWXl4VFFVRkJMRU5CUVVFc1EwRkJWME1zU1VGQlFVRXNSVUZCUVVFc1EwRkRla2hrTEVsQlFVRkJMRU5CUVV0bExHRkJRVUZCTEVOQlFXZENMRU5CUVVNc1UwRkJRU3hEUVVGWExGRkJRVUVzUTBGQlZTeFRRVUZCTEVOQlFWY3NUVUZCUVN4RFFVRlJMRkZCUVVFc1EwRkJRU3hEUVVNNVJHWXNTVUZCUVVFc1EwRkJTMmRDTEZWQlFVRkJMRU5CUVdFc1EwRkJReXhQUVVGQkxFTkJRVk1zYVVKQlFVRXNRMEZCYlVJc1YwRkJRU3hEUVVGaExFOUJRVUVzUTBGQlV5eGhRVUZCTEVOQlFXVXNVMEZCUVN4RFFVRlhMRk5CUVVFc1EwRkJWeXhqUVVGQkxFTkJRV2RDTEZOQlFVRXNRMEZCVnl4UlFVRkJMRU5CUVZVc1UwRkJRU3hEUVVGWExGRkJRVUVzUTBGQlZTeFRRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hSUVVGQkxFTkJRVlVzVDBGQlFTeERRVUZUTEdsQ1FVRkJMRU5CUVcxQ0xHVkJRVUVzUTBGQmFVSXNZVUZCUVN4RFFVRmxMRTlCUVVFc1EwRkJVeXhYUVVGQkxFTkJRV0VzVTBGQlFTeERRVUZYTEZWQlFVRXNRMEZCUVN4RFFVTTVVMmhDTEVsQlFVRkJMRU5CUVV0cFFpeFZRVUZCUVN4RFFVRmhMRU5CUVVNc1MwRkJRU3hEUVVGUExFdEJRVUVzUTBGQlR5eExRVUZCTEVOQlFVOHNTMEZCUVN4RFFVRlBMRXRCUVVFc1EwRkJUeXhMUVVGQkxFTkJRVThzUzBGQlFTeERRVUZQTEV0QlFVRXNRMEZCVHl4TFFVRkJMRU5CUVU4c1MwRkJRU3hEUVVGUExFMUJRVUVzUTBGQlVTeE5RVUZCTEVOQlFWRXNUVUZCUVN4RFFVRlJMRTFCUVVFc1EwRkJVU3hOUVVGQkxFTkJRVkVzVFVGQlFTeERRVUZSTEUxQlFVRXNRMEZCVVN4TlFVRkJMRU5CUVZFc1RVRkJRU3hEUVVGUkxFOUJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRXNUMEZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVU3gzUWtGQlFTeERRVUZCTEVOQlEyNU5ha0lzU1VGQlFVRXNRMEZCUzJ0Q0xFMUJRVUZCTEVOQlFWTXNRMEZCUXl4TFFVRkJMRU5CUVU4c1QwRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVTeFJRVUZCTEVOQlFWVXNUMEZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlVzVVVGQlFTeERRVUZWTEZGQlFVRXNRMEZCVlN4UlFVRkJMRU5CUVZVc1lVRkJRU3hEUVVGbExFMUJRVUVzUTBGQlVTeFBRVUZCTEVOQlFVRXNRMEZEYkVsc1FpeEpRVUZCUVN4RFFVRkxiVUlzVVVGQlFVRXNRMEZCVnl4RFFVRkRMRWRCUVVFc1EwRkJTeXhIUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZMTEVkQlFVRXNRMEZCU3l4SFFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGTExFZEJRVUVzUTBGQlN5eEhRVUZCTEVOQlFVc3NSMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkJUU3hUUVVGQkxFTkJRVmNzVFVGQlFTeERRVUZSTEZGQlFVRXNRMEZCVlN4UlFVRkJMRU5CUVZVc1QwRkJRU3hEUVVGQkxFTkJRek5IYmtJc1NVRkJRVUVzUTBGQlMyOUNMRmRCUVVGQkxFTkJRV01zUTBGQlF5eFBRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZMRkZCUVVFc1EwRkJWU3hSUVVGQkxFTkJRVlVzVVVGQlFTeERRVUZWTEU5QlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZFc1QwRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZTeFJRVUZCTEVOQlFWVXNVMEZCUVN4RFFVRlhMRk5CUVVFc1EwRkJRU3hEUVVNNVNIQkNMRWxCUVVGQkxFTkJRVXR4UWl4UFFVRkJRU3hEUVVGVkxFTkJRVU1zY1VKQlFVRXNRMEZCZFVJc2JVSkJRVUVzUTBGQmNVSXNaMEpCUVVFc1EwRkJhMElzVjBGQlFTeERRVUZoTEUxQlFVRXNRMEZCVVN4UFFVRkJMRU5CUVVFc1EwRkRia2R5UWl4SlFVRkJRU3hEUVVGTGMwSXNUMEZCUVVFc1EwRkJWU3hEUVVGRExHbENRVUZCTEVOQlFXMUNMR3RDUVVGQkxFTkJRVzlDTEcxQ1FVRkJMRU5CUVhGQ0xHZENRVUZCTEVOQlFXdENMRTFCUVVFc1EwRkJVU3hQUVVGQkxFTkJRVUVzUTBGRGRFZDBRaXhKUVVGQlFTeERRVUZMZFVJc1UwRkJRVUVzUTBGQldTeERRVUZETEUxQlFVRXNRMEZCVVN4WFFVRkJMRU5CUVdFc1QwRkJRU3hEUVVGVExGRkJRVUVzUTBGQlFTeERRVWR3UkhoQ0xHRkJRVUZCTEVOQlFXTjVRaXhOUVVGQlFTeERRVUZCUVN4RFFVTldMRWxCUVVsRExFdEJRVUZCTEVOQlFWRjZRaXhKUVVGQlFTeERRVUZMTUVJc1UwRkJRVUVzUTBGQlZVWXNUVUZCUVVFc1EwRkJVU3hOUVVGQkxFTkJRVkVzVFVGQlFTeERRVUZCTEVOQlF6TkRMRWRCUVVFc1EwRkRTVU1zUzBGQlFVRXNRMEZCVVVVc1NVRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJUVWdzUzBGQlFVRXNRMEZCUVVFc1EwRkRja0lzVFVGQlQwa3NTMEZCUVVFc1EwRkJRVUVzUTBGRFRFb3NTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJSVm9zVDBGQlQwRXNTMEZCUVVFc1EwRkhXREZDTEU5QlFVRkJMRU5CUVZFclFpeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJTVU1zVFVGQlFVRXNRMEZCVXl4RlFVRkJMRU5CUVVsRExFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUlhSRExFZEJSRUZCTEVkQlFVRkJMRU5CUVUxQkxFZEJRVUZCTEVWQlFVOHNRMEZCUVN4RFFVRkJMRU5CUTI5Q0xFTkJRVUVzUlVGQk4wSkdMRkZCUVVGQkxFTkJRVk5ITEU5QlFVRkJMRU5CUVZGR0xFMUJRVUZCTEVOQlFVRkJMRU5CUTJwQ0xFMUJRVUVzUTBGQlVTeERRVUZCTEVOQlNWb3NSMEZCU1VNc1IwRkJRVUVzUlVGQlFVRXNRMEZFU2tZc1VVRkJRVUVzUTBGQlYwRXNVVUZCUVVFc1EwRkJVMGtzUzBGQlFVRXNRMEZCVFVnc1RVRkJRVUVzUTBGQlFVRXNSVUZEVGtrc1RVRkJRVUVzUTBGRGFFSXNUVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkhXaXhKUVVGSlF5eExRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkRXaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpVQ3hSUVVGQlFTeERRVUZUU3l4TlFVRkJRU3hEUVVGUlJTeERRVUZCUVN4RlFVRkJRU3hEUVVNM1FrRXNRMEZCUVVFc1JVRkJTMHdzUjBGQlFVRXNSMEZEVEVrc1MwRkJRVUVzUlVGQlUwNHNVVUZCUVVFc1EwRkJVMDhzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMFlzVFVGQlFVRXNRMEZCUVVFc1EwRkxOMElzVDBGR1FVTXNTMEZCUVVFc1JVRkJVMHdzVFVGQlFVRXNRMEZCVDBrc1RVRkJRVUVzUTBGQlUwZ3NSMEZCUVVFc1EwRkxOMEpxUXl4UFFVRkJRU3hEUVVGUkswSXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVWxSTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJTVkFzUjBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkZiRVFzU1VGQlNWRXNSMEZCUVVFc1EwRkVTbElzUjBGQlFVRXNRMEZCVFVFc1IwRkJRVUVzUlVGQlR5eERRVUZCTEVOQlJWUlRMRWRCUVVGQkxFTkJRVTFJTEV0QlFVRkJMRWRCUVZWRExFMUJRVUZCTEVOQlFWTlFMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZKUVN4SFFVRkJRU3hEUVVOdVExVXNTMEZCUVVFc1EwRkJVVEZETEVsQlFVRkJMRU5CUVVzeVF5eFBRVUZCUVN4RFFVRlJZaXhSUVVGQlFTeERRVUZWVVN4TFFVRkJRU3hEUVVGUFJTeEhRVUZCUVN4RFFVRkJRU3hEUVVOMFEwa3NSMEZCUVVFc1EwRkJUVFZETEVsQlFVRkJMRU5CUVVzeVF5eFBRVUZCUVN4RFFVRlJZaXhSUVVGQlFTeERRVUZWVXl4TlFVRkJRU3hEUVVGUlJTeEhRVUZCUVN4RFFVRkJRU3hEUVVWNlF5eE5RVUZCTEVOQlFXTXNRMEZCUVN4RlFVRldReXhMUVVGQlFTeEZRVUZsUVN4TFFVRkJRU3hEUVVGUlNpeExRVUZCUVN4RFFVRk5TQ3hOUVVGQlFTeEZRVUZWVEN4UlFVRkJRU3hEUVVGVFN5eE5RVUZCUVN4RlFVRkJRU3hEUVVGclFpeERRVUZCTEVWQlFWSlRMRWRCUVVGQkxFTkJRVUZCTEVOQlEyeEVMRU5CUVVFc1EwRkhUR1FzVVVGQlFVRXNRMEZCVTJVc1MwRkJRVUVzUTBGQlRVZ3NTMEZCUVVFc1EwRkJUMFVzUjBGQlFVRXNRMEZCVFV3c1RVRkJRVUVzUTBGQlQwb3NUVUZCUVVFc1EwRkJRVUVzUTBGSE9VTndReXhWUVVGQlFTeERRVUZYSzBJc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVbFJMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVU16UXl4SlFVVkpUeXhMUVVGQlFTeERRVVpCWkN4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGRFRtVXNSMEZCUVVFc1EwRkJUU3hGUVVGQkxFTkJSVllzUzBGQlFTeERRVUZwUWl4RFFVRkJMRVZCUVZaRUxFdEJRVUZCTEVWQlEwaEJMRXRCUVVGQkxFTkJRVkU1UXl4SlFVRkJRU3hEUVVGTFowUXNUMEZCUVVFc1EwRkJVV3hDTEZGQlFVRkJMRU5CUVZWUkxFdEJRVUZCTEVOQlFVOURMRTFCUVVGQkxFTkJRVkZRTEVkQlFVRkJMRU5CUVVGQkxFTkJRemxEUVN4SFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVTmpMRU5CUVVFc1JVRkJWbU1zUzBGQlFVRXNSVUZEUVVNc1IwRkJRVUVzUTBGQlNVVXNTVUZCUVVFc1EwRkJTMGdzUzBGQlFVRXNRMEZCUVVFc1EwRkpha0lzVDBGQlQwTXNSMEZCUVVFc1EwRkhXR2hFTEZOQlFVRkJMRU5CUVZVclFpeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJTVkVzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkpVQ3hIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVVndSQ3hKUVVGSlVTeEhRVUZCUVN4RFFVUktVaXhIUVVGQlFTeERRVUZOUVN4SFFVRkJRU3hGUVVGUExFTkJRVUVzUTBGRlZGTXNSMEZCUVVFc1EwRkJUVWdzUzBGQlFVRXNSMEZCVlVNc1RVRkJRVUVzUTBGQlUxQXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWxCTEVkQlFVRkJMRU5CUTI1RFZTeExRVUZCUVN4RFFVRlJNVU1zU1VGQlFVRXNRMEZCU3pKRExFOUJRVUZCTEVOQlFWRmlMRkZCUVVGQkxFTkJRVlZSTEV0QlFVRkJMRU5CUVU5RkxFZEJRVUZCTEVOQlFVRkJMRU5CUTNSRFNTeEhRVUZCUVN4RFFVRk5OVU1zU1VGQlFVRXNRMEZCU3pKRExFOUJRVUZCTEVOQlFWRmlMRkZCUVVGQkxFTkJRVlZUTEUxQlFVRkJMRU5CUVZGRkxFZEJRVUZCTEVOQlFVRkJMRU5CUlhwRExFMUJRVUVzUTBGQll5eERRVUZCTEVWQlFWWkRMRXRCUVVGQkxFVkJRV1ZCTEV0QlFVRkJMRU5CUVZGS0xFdEJRVUZCTEVOQlFVMUlMRTFCUVVGQkxFVkJRVlZNTEZGQlFVRkJMRU5CUVZOTExFMUJRVUZCTEVWQlFVRkJMRU5CUVd0Q0xFTkJRVUVzUlVGQlVsTXNSMEZCUVVFc1EwRkJRVUVzUTBGRGJFUXNRMEZCUVN4RFFVZE1aQ3hSUVVGQlFTeERRVUZUWlN4TFFVRkJRU3hEUVVGTlNDeExRVUZCUVN4RFFVRlJTaXhMUVVGQlFTeERRVUZOU0N4TlFVRkJRU3hEUVVGUlV5eEhRVUZCUVN4RFFVRkJRU3hEUVVkb1JEZERMRmxCUVVGQkxFTkJRV0VyUWl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlNWRXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVWxETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRemRETEVsQlJVbFBMRXRCUVVGQkxFTkJSa0ZrTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVOT1pTeEhRVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkZWaXhMUVVGQkxFTkJRV2xDTEVOQlFVRXNSVUZCVmtRc1MwRkJRVUVzUlVGRFNFRXNTMEZCUVVFc1EwRkJVVGxETEVsQlFVRkJMRU5CUVVzd1FpeFRRVUZCUVN4RFFVRlZTU3hSUVVGQlFTeERRVUZWVVN4TFFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVRlJVQ3hIUVVGQlFTeERRVUZCUVN4RFFVTm9SRUVzUjBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGRFl5eERRVUZCTEVWQlFWWmpMRXRCUVVGQkxFVkJRMEZETEVkQlFVRkJMRU5CUVVsRkxFbEJRVUZCTEVOQlFVdElMRXRCUVVGQkxFTkJRVUZCTEVOQlNXcENMRTlCUVU5RExFZEJRVUZCTEVOQlIxaG9SQ3hWUVVGQlFTeERRVUZYYlVRc1QwRkJRVUVzUTBGQlFVRXNRMEZEVUN4SlFVVkpReXhIUVVGQlFTeERRVU5CTVVJc1MwRkJRVUVzUTBGSVFUSkNMRWRCUVVGQkxFTkJRVTFHTEU5QlFVRkJMRU5CUVZGSExFdEJRVUZCTEVOQlFVMURMRTlCUVVGQkxFTkJRM0JDUkN4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGSldpeEhRVUZYTEVWQlFVRXNSVUZCVUVRc1IwRkJRVUVzUTBGQlZ5eERRVVZZTEVsQlFVbEhMRWxCUVVGQkxFTkJSRXBJTEVkQlFVRkJMRU5CUVUxQkxFZEJRVUZCTEVOQlFVbHNRaXhMUVVGQlFTeERRVUZOTEVsQlFVRXNRMEZCUVN4RFFVVm9RaXhKUVVGTExFbEJRVWxITEVOQlFVRkJMRWxCUVV0bExFZEJRVUZCTEVOQlExWkhMRWxCUVVGQkxFTkJRVTkyUkN4SlFVRkJRU3hEUVVGTGQwUXNTVUZCUVVFc1EwRkJTMjVDTEVOQlFVRkJMRU5CUVVGQkxFTkJRMnBDWXl4SFFVRkJRU3hEUVVGTmJrUXNTVUZCUVVFc1EwRkJTM2xFTEZkQlFVRkJMRU5CUVZsR0xFbEJRVUZCTEVOQlFVdHlRaXhMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRM1pEVkN4TFFVRkJRU3hEUVVGUmVrSXNTVUZCUVVFc1EwRkJTekJFTEdGQlFVRkJMRU5CUVdOSUxFbEJRVUZCTEVOQlFVdHlRaXhMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxlVUlzUjBGQlFVRXNSVUZCUVVFc1EwRkJUeXhIUVVGQkxFTkJRVXNzUlVGQlFTeERRVUZCTEVOQlF6VkRMRVZCUVVFc1JVRkJVRklzUjBGQlFVRXNSMEZEUVVVc1MwRkJRVUVzUTBGQlRVWXNSMEZCUVVFc1EwRkJRVUVzUTBGQlQyNUVMRWxCUVVGQkxFTkJRVXQzUkN4SlFVRkJRU3hEUVVGTEwwSXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMYmtNc1QwRkJUelJDTEV0QlFVRkJMRU5CUjFoMFJDeGpRVUZCUVN4RlFVRkJRU3hEUVVOSkxFbEJRVWxOTEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVOaUxFbEJRVXNzU1VGQlNXZERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmNrTXNTVUZCUVVFc1EwRkJTMHNzVFVGQlFVRXNRMEZCVHpoQ0xFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlEzQkRhRU1zVFVGQlFVRXNRMEZCVHpSRExFbEJRVUZCTEVOQlFVdHFSQ3hKUVVGQlFTeERRVUZMU3l4TlFVRkJRU3hEUVVGUFowTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIxRXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGZUVNc1QwRkJUM2hETEUxQlFVRkJMRU5CUjFoT0xGZEJRVUZCTEVOQlFWazJSQ3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCUVN4RFFVTm1MRWxCUVVsRExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTmtMRWxCUVVzc1NVRkJTWGhDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpkVUlzU1VGQlFVRXNRMEZCUzNwQ0xFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlEyUXNSMEZCUVN4RlFVRllkVUlzU1VGQlFVRXNRMEZCUzNaQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUlV4M1FpeFBRVUZCUVN4RlFVRlhSQ3hKUVVGQlFTeERRVUZCUVN4RlFVUllka0lzUTBGQlFVRXNRMEZCUVVFc1EwRkRiVUo1UWl4WFFVRkJRU3hGUVVGQlFTeERRVVZzUWtRc1QwRkJRVUVzUlVGQlYwUXNTVUZCUVVFc1EwRkJTM1pDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWN3UWl4WFFVRkJRU3hGUVVGQlFTeERRVVUxUWl4UFFVRlBSaXhQUVVGQlFTeERRVWRZT1VRc1dVRkJRVUVzUTBGQllUWkVMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZCTEVOQlEyaENMRWxCUVVsRExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVTmtMRWxCUVVzc1NVRkJTWGhDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpkVUlzU1VGQlFVRXNRMEZCUzNwQ0xFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlEzcENja01zU1VGQlFVRXNRMEZCUzJkRkxGTkJRVUZCTEVOQlFWVktMRWxCUVVGQkxFTkJRVXQyUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4SFFVRkxkMElzVDBGQlFVRXNSVUZCVnl4SFFVRkJMRU5CUVVFc1EwRkRlRU5CTEU5QlFVRkJMRVZCUVZkRUxFbEJRVUZCTEVOQlFVdDJRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhNRUlzVjBGQlFVRXNSVUZCUVVFc1EwRkhka0lzVDBGQlQwWXNUMEZCUVVFc1EwRkhXRGxFTEdkQ1FVRkJRU3hEUVVGcFFtdEZMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZCTEVOQlEzQkNMRWxCUVVsNFF5eExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkRXaXhKUVVGTExFbEJRVWxaTEVOQlFVRkJMRWxCUVVzMFFpeEpRVUZCUVN4RFFVTkxMRWRCUVVFc1JVRkJXRUVzU1VGQlFVRXNRMEZCU3pWQ0xFTkJRVUZCTEVOQlFVRkJMRWRCUTBzc1EwRkJRU3hGUVVGTVFTeERRVUZCUVN4RFFVRlJXaXhMUVVGQlFTeEZRVUZUZDBNc1NVRkJRVUVzUTBGQlN6VkNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3dRaXhYUVVGQlFTeEZRVUZCUVN4RFFVTjZRaTlFTEVsQlFVRkJMRU5CUVV0clJTeExRVUZCUVN4RFFVRk5SQ3hKUVVGQlFTeERRVUZMTlVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUVN4RlFVRnpRaXhIUVVGQkxFVkJRV1kwUWl4SlFVRkJRU3hEUVVGTE5VSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlYxb3NTMEZCUVVFc1JVRkJVM2RETEVsQlFVRkJMRU5CUVVzMVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSGVVSXNWMEZCUVVFc1JVRkJRVUVzUTBGRGNFVnlReXhMUVVGQlFTeEZRVUZUZDBNc1NVRkJRVUVzUTBGQlN6VkNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhaQ0xFOUJRVTlhTEV0QlFVRkJMRU5CUjFneFFpeG5Ra0ZCUVVFc1EwRkJhVUp2UlN4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlFTeERRVU42UWl4SlFVRkpNVU1zUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUTFvc1NVRkJTeXhKUVVGSldTeERRVUZCUVN4SlFVRkxPRUlzVTBGQlFVRXNRMEZEUkN4RFFVRkJMRVZCUVV3NVFpeERRVUZCUVN4RlFVRlZja01zU1VGQlFVRXNRMEZCUzJkRkxGTkJRVUZCTEVOQlFWVkhMRk5CUVVGQkxFTkJRVlU1UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkxXaXhMUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZoTUVNc1UwRkJRVUVzUTBGQlZUbENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3dRaXhYUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU5xUlhSRExFdEJRVUZCTEVWQlFWTXdReXhUUVVGQlFTeERRVUZWT1VJc1EwRkJRVUVzUTBGQlFVRXNRMEZGTlVJc1QwRkJUMW9zUzBGQlFVRXNRMEZIV0RGQ0xGZEJRVUZCTEVOQlFWbHhSU3hIUVVGQlFTeERRVUZCUVN4RFFVTlNMRTlCUVU5NlF5eEpRVUZCUVN4RFFVRkxNRU1zVTBGQlFVRXNRMEZCVlVRc1IwRkJRVUVzUTBGQlFVRXNSVUZCVVhwRExFbEJRVUZCTEVOQlFVc3dReXhUUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZCUVN4RFFVZHFSSFJGTEUxQlFVRkJMRU5CUVU5MVJTeE5RVUZCUVN4RFFVRlRMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkhReXhMUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUXk5Q0xFbEJRVWxETEUxQlFVRkJMRU5CVlVvc1QwRlVTWHBGTEVsQlFVRkJMRU5CUVVzd1JTeFhRVUZCUVN4RFFVRlpTaXhOUVVGQlFTeERRVUZCUVN4RFFVTnFRa2NzVFVGQlFVRXNRMEZCZVVJc1EwRkJRU3hEUVVGb1FrVXNTVUZCUVVFc1EwRkJTMFlzVFVGQlFVRXNSVUZCUVVFc1EwRkJaU3hEUVVGQkxFTkJSWGhDZWtVc1NVRkJRVUVzUTBGQlMydEZMRXRCUVVGQkxFTkJRVTFKTEUxQlFVRkJMRU5CUVU5RExFdEJRVUZCTEVOQlFVRkJMRU5CUTNaQ1JTeE5RVUZCUVN4RFFVRlRSU3hKUVVGQlFTeERRVUZMUml4TlFVRkJRU3hGUVVGQlFTeERRVUZYU0N4TlFVRkJRU3hEUVVGUFF5eExRVUZCUVN4RFFVVXpRblpGTEVsQlFVRkJMRU5CUVV0clJTeExRVUZCUVN4RFFVRk5TU3hOUVVGQlFTeERRVUZQUlN4TFFVRkJRU3hEUVVGQlFTeERRVWR3UWtNc1RVRkJRVUVzUTBGSFdERkZMRXRCUVVGQkxFTkJRVTAyUXl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlIwWXNTMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGRGJrSXNTVUZCU1dwQ0xFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVTmFMRWxCUVVzc1NVRkJTVmtzUTBGQlFVRXNRMEZCU1Vzc1MwRkJRVUVzUlVGQlV5eERRVUZCTEVOQlFVZE1MRU5CUVVGQkxFTkJRVWxQTEVkQlFVRkJMRU5CUVV0UUxFTkJRVUZCTEVWQlFVRkJMRU5CUXpsQ1dpeExRVUZCUVN4RFFVRk5kMElzU1VGQlFVRXNRMEZCUzFvc1EwRkJRVUVzUTBGQlFVRXNRMEZIWml4UFFVRlBXaXhMUVVGQlFTeERRVWRZTVVJc1kwRkJRVUVzUTBGQlpXOURMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZCTEVOQlIzQkNMRWxCUmtFc1NVRkJTWGxETEUxQlFVRkJMRU5CUVZNMVJTeEpRVUZCUVN4RFFVRkxReXhSUVVGQlFTeERRVUZYUkN4SlFVRkJRU3hEUVVGTFJTeE5RVUZCUVN4RFFVRlRSaXhKUVVGQlFTeERRVUZMUnl4TlFVRkJRU3hEUVVNMVF6QkZMRmxCUVVGQkxFTkJRV1VzUlVGQlFTeERRVU5XZUVNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxHTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNoQ2QwTXNXVUZCUVVFc1JVRkJaMEpFTEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdEhMRXRCUVVGQkxFTkJRVTFJTEVsQlFVRkJMRU5CUVV0R0xFMUJRVUZCTEVWQlFVRkJMRU5CUVZkSExFMUJRVUZCTEVOQlFVOTZReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVM1JDeFBRVUZQTUVNc1dVRkJRVUVzUTBGSFdEbEZMR2xDUVVGQlFTeERRVUZyUW05RExFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUjNaQ0xFbEJSa0VzU1VGQlNYbERMRTFCUVVGQkxFTkJRVk0xUlN4SlFVRkJRU3hEUVVGTFF5eFJRVUZCUVN4RFFVRlRORU1zUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXMzUXl4SlFVRkJRU3hEUVVGTFJTeE5RVUZCUVN4RFFVRlBNa01zUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXMzUXl4SlFVRkJRU3hEUVVGTFJ5eE5RVUZCUVN4RFFVTndSVEJGTEZsQlFVRkJMRU5CUVdVc1JVRkJRU3hEUVVOV2VFTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsR0xFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlEzaENkME1zV1VGQlFVRXNSVUZCWjBKRUxFMUJRVUZCTEVOQlFVOUVMRWxCUVVGQkxFTkJRVXRITEV0QlFVRkJMRU5CUVUxSUxFbEJRVUZCTEVOQlFVdEdMRTFCUVVGQkxFVkJRVUZCTEVOQlFWZEhMRTFCUVVGQkxFTkJRVTk2UXl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVTNSQ3hQUVVGUE1FTXNXVUZCUVVFc1EwRkhXRGxGTEZkQlFVRkJMRU5CUVZsdlF5eE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVWcVFpeFBRVVJWTkVNc1NVRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1JVRkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJVemxETEUxQlFVRkJMRU5CUVVGQkxFTkJRVlYzUXl4SlFVRkJRU3hEUVVGTFJpeE5RVUZCUVN4RlFVRkJRU3hEUVVGVFVTeFJRVUZCUVN4RFFVRlRPVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkJVVlVzUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkpha1k1UXl4VlFVRkJRU3hEUVVGWGRVVXNUVUZCUVVFc1EwRkJRVUVzUTBGRFVDeEpRVUZKV1N4SFFVRkJRU3hEUVVGTmJFWXNTVUZCUVVFc1EwRkJTMjFHTEZkQlFVRkJMRU5CUVZsaUxFMUJRVUZCTEVOQlFVOVpMRWRCUVVGQkxFTkJRVUZCTEVOQlJXeERMRTlCUkVGQkxFZEJRVUZCTEVOQlFVbEZMRWxCUVVGQkxFTkJRVXRrTEUxQlFVRkJMRU5CUVU5bExFdEJRVUZCTEVOQlFVRkJMRU5CUVZObUxFMUJRVUZCTEVOQlFVOW5RaXhSUVVGQlFTeERRVUZUZGtJc1YwRkJRVUVzUlVGQlFVRXNRMEZEYkVNdlJDeEpRVUZCUVN4RFFVRkxkVVlzVTBGQlFVRXNRMEZCVlV3c1IwRkJRVUVzUTBGQlMxb3NUVUZCUVVFc1EwRkJUMlVzUzBGQlFVRXNRMEZCUVVFc1EwRkhkRU4wUml4bFFVRkJRU3hEUVVGblFubEdMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVUZCTEVOQlJYQkNMRWxCUkVFc1NVRkJTVU1zVDBGQlFVRXNRMEZCVlN4RlFVRkJMRU5CUTB4d1JDeERRVUZCUVN4RFFVRkpiVVFzUzBGQlFVRXNRMEZCVFhKRUxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkhSU3hEUVVGQlFTeEZRVUZMTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlFVRXNRMEZEYmtOdlJDeFBRVUZCUVN4RlFVRlhSQ3hMUVVGQlFTeERRVUZOYmtRc1EwRkJRVUVzUTBGQlFVRXNRMEZIY2tJc1NVRkVRVzFFTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVORGJrUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsdlJDeFBRVUZCUVN4RFFVRlJkRVFzVFVGQlFVRXNRMEZCVVVVc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTnlReXhKUVVGSmNVUXNVVUZCUVVFc1EwRkJRVUVzUTBGQldYSkVMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeEZRVUZMTEVOQlFVRXNRMEZEZWtKdFJDeExRVUZCUVN4RlFVRlRReXhQUVVGQlFTeERRVUZSY0VRc1EwRkJRVUVzUTBGQlFVRXNRMEZEUkN4RFFVRkJMRVZCUVZweFJDeFJRVUZCUVN4RlFVTkpja1FzUTBGQlFVRXNSVUZCUzI5RUxFOUJRVUZCTEVOQlFWRjBSQ3hOUVVGQlFTeERRVUZUTEVOQlFVRXNSMEZEZEVKeFJDeExRVUZCUVN4RlFVRlRMRWRCUVVFc1EwRkJRU3hEUVV0eVFpeEpRVVJCUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRFJIQkVMRU5CUVVGQkxFTkJRVWx0UkN4TFFVRkJRU3hEUVVGTmNrUXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVWRGTEVOQlFVRkJMRVZCUVVzc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RlFVRkJRU3hEUVVOdVEyOUVMRTlCUVVGQkxFVkJRVmRFTEV0QlFVRkJMRU5CUVUxdVJDeERRVUZCUVN4RFFVRkJRU3hEUVVWeVFpeFBRVUZQYjBRc1QwRkJRVUVzUTBGSFdERkdMRk5CUVVGQkxFTkJRVlV3UWl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlFTeERRVU5rTEVkQlFXOUNMRU5CUVVFc1JVRkJhRUpCTEV0QlFVRkJMRU5CUVUxVkxFMUJRVUZCTEVOQlEwNHNUMEZCVDI1RExFbEJRVUZCTEVOQlFVdERMRkZCUVVGQkxFTkJRVk13Uml4UlFVRkJRU3hEUVVGVGJFVXNTMEZCUVVFc1EwRkJRVUVzUTBGSmRFTXhRaXhWUVVGQlFTeERRVUZYTUVJc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVRXNRMEZEWml4UFFVRkxla0lzU1VGQlFVRXNRMEZCUzJkRkxGTkJRVUZCTEVOQlFWVjJReXhMUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUzI1Q1FTeExRVUZCUVN4RlFVRkJRU3hEUVVwSVFTeExRVUZCUVN4RFFVRlJRU3hMUVVGQlFTeERRVUZOVXl4TFFVRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlFTeEZRVU5rTEVOQlFVRXNRMEZCUVN4RFFVRkxiRU1zU1VGQlFVRXNRMEZCUzBNc1VVRkJRVUVzUTBGQlUwUXNTVUZCUVVFc1EwRkJTMFVzVFVGQlFVRXNRMEZCVHl0Q0xFOUJRVUZCTEVOQlFWRlNMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTFRM3BDTEVsQlFVRkJMRU5CUVVzd1JDeGhRVUZCUVN4RFFVRmpha01zUzBGQlFVRXNRMEZCVFhkRUxGRkJRVUZCTEVWQlFVRkJMRU5CUVZrc1IwRkJRU3hEUVVGTExFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlMzcEViRVlzU1VGQlFVRXNRMEZCU3l0Q0xGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVRkJMRU5CUTFvc1QwRkJUMEVzVVVGQlFVRXNRMEZCVTBrc1MwRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVRXNRMEZCU1RCRUxFOUJRVUZCTEVWQlFVRkJMRU5CUVZWRExFbEJRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRkJMRU5CUnpkRE9VWXNUMEZCUVVFc1EwRkJVVEJDTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGQkxFTkJRMW9zUjBGQmIwSXNRMEZCUVN4RlFVRm9Ra0VzUzBGQlFVRXNRMEZCVFZVc1RVRkJRVUVzUTBGRFRpeFBRVUZQYmtNc1NVRkJRVUVzUTBGQlMwVXNUVUZCUVVFc1EwRkJUM2xHTEZGQlFVRkJMRU5CUVZOc1JTeExRVUZCUVN4RFFVRkJRU3hEUVVsd1F6RkNMRkZCUVVGQkxFTkJRVk13UWl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlFTeERRVU5pTEVkQlFXOUNMRU5CUVVFc1JVRkJhRUpCTEV0QlFVRkJMRU5CUVUxVkxFMUJRVUZCTEVOQlEwNHNUMEZCVDI1RExFbEJRVUZCTEVOQlFVdEpMRTlCUVVGQkxFTkJRVkYxUml4UlFVRkJRU3hEUVVGVGJFVXNTMEZCUVVFc1EwRkJRVUVzUTBGSmNrTXhRaXhOUVVGQlFTeERRVUZQTUVJc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVRXNRMEZEV0N4SlFVRkxMRWxCUVVseFJTeERRVUZCUVN4SlFVRkxja1VzUzBGQlFVRXNRMEZEVml4SFFVRkpla0lzU1VGQlFVRXNRMEZCU3l0R0xFOUJRVUZCTEVOQlFWRjBSU3hMUVVGQlFTeERRVUZOY1VVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRia0lzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZIWml4TlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVkWUwwWXNaVUZCUVVFc1EwRkJaMEl3UWl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlFTeERRVVZ3UWl4SFFVUlZRU3hMUVVGQlFTeERRVUZOVlN4TlFVRkJRU3hEUVVOT0xFTkJRVUVzUTBGRFRpeEpRVUZMTEVsQlFVazJSQ3hEUVVGQlFTeEpRVUZMZGtVc1MwRkJRVUVzUTBGRFZpeEhRVUZKZWtJc1NVRkJRVUVzUTBGQlMyZEZMRk5CUVVGQkxFTkJRVlYyUXl4TFFVRkJRU3hEUVVGTmRVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEY2tJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4SlFVRkxlRVVzUzBGQlFVRXNRMEZEVml4SFFVRkpla0lzU1VGQlFVRXNRMEZCUzJ0SExFOUJRVUZCTEVOQlFWRjZSU3hMUVVGQlFTeERRVUZOZDBVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRia0lzU1VGQlN5eEpRVUZKUlN4RFFVRkJRU3hKUVVGTE1VVXNTMEZCUVVFc1EwRkRWaXhIUVVGSmVrSXNTVUZCUVVFc1EwRkJTeXRHTEU5QlFVRkJMRU5CUVZGMFJTeExRVUZCUVN4RFFVRk5NRVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeEpRVUZMTTBVc1MwRkJRVUVzUTBGRFZpeEhRVUZKZWtJc1NVRkJRVUVzUTBGQlMzRkhMRkZCUVVGQkxFTkJRVk0xUlN4TFFVRkJRU3hEUVVGTk1rVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEY0VJc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGVk0wTXNUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkhXSEpITEZkQlFVRkJMRU5CUVZrclFpeFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJTVXdzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVFc1EwRkRMMElzVFVGQlFTeERRVUZuUXl4RFFVRkJMRVZCUVRWQ1N5eFJRVUZCUVN4RFFVRlRSeXhQUVVGQlFTeERRVUZSVWl4TFFVRkJRU3hEUVVGQlFTeERRVWw2UWpGQ0xFOUJRVUZCTEVOQlFWRXdRaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUVN4RFFVVmFMRTlCUVc5Q0xFTkJRVUVzUlVGQlFTeERRVVJ3UWtFc1MwRkJRVUVzUTBGQlVTeEpRVUZKTmtVc1RVRkJRVUVzUTBGQlR6ZEZMRXRCUVVGQkxFTkJRVUZCTEVWQlExUlZMRTFCUVVGQkxFVkJRME51UXl4SlFVRkJRU3hEUVVGTFJ5eE5RVUZCUVN4RFFVRlBkMFlzVVVGQlFVRXNRMEZCVTJ4RkxFdEJRVUZCTEVOQlFVRkJMRU5CUzNCRE1VSXNUMEZCUVVFc1EwRkJVVEJDTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGQkxFTkJRMW9zU1VGQlNUaEZMRmRCUVVGQkxFTkJRV001UlN4TFFVRkJRU3hEUVVGTlV5eExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVNNVFpeEhRVUV3UWl4RFFVRkJMRVZCUVhSQ2NVVXNWMEZCUVVFc1EwRkJXWEJGTEUxQlFVRkJMRU5CUTFvc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGRlVDeEhRVUZKYmtNc1NVRkJRVUVzUTBGQlMzZEhMR0ZCUVVGQkxFTkJRV05FTEZkQlFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGREwwSXNUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkZXQ3hKUVVGSlJTeFRRVUZCUVN4RFFVRlpSaXhYUVVGQlFTeERRVUZaTEVOQlFVRXNRMEZCUVN4RFFVRkhja1VzUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRja01zVDBGQmQwSXNRMEZCUVN4RlFVRndRblZGTEZOQlFVRkJMRU5CUVZWMFJTeE5RVUZCUVN4RlFVRkJRU3hEUVVkT2JrTXNTVUZCUVVFc1EwRkJTM2RITEdGQlFVRkJMRU5CUVdORExGTkJRVUZCTEVOQlFWVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1JVRkJRU3hEUVVjM1FucEhMRWxCUVVGQkxFTkJRVXQzUnl4aFFVRkJRU3hEUVVGalF5eFRRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJVVGRETVVjc1VVRkJRVUVzUTBGQlV6QkNMRXRCUVVGQkxFTkJRVUZCTEVOQlEwd3NTVUZCU1dsR0xFMUJRVUZCTEVOQlZVb3NUVUZVYjBJc1UwRkJRU3hGUVVGQkxFOUJRVlJxUml4TFFVRkJRU3hEUVVOUWFVWXNUVUZCUVVFc1EwRkJVMnBHTEV0QlFVRkJMRU5CUlZrc1VVRkJRU3hGUVVGQkxFOUJRVlJCTEV0QlFVRkJMRU5CUTFwcFJpeE5RVUZCUVN4RFFVRjFReXhOUVVGQkxFVkJRVGRDYWtZc1MwRkJRVUVzUTBGQlRXdEdMR2xDUVVGQlFTeEZRVUZCUVN4RlFVRTRSQ3hIUVVGQkxFVkJRVGRDYkVZc1MwRkJRVUVzUTBGQlRXdEdMR2xDUVVGQlFTeEZRVUZCUVN4RFFVVnNReXhSUVVGQkxFVkJRVUVzVDBGQlZHeEdMRXRCUVVGQkxFZEJRMXBwUml4TlFVRkJRU3hEUVVGdFFpeERRVUZCTEVWQlFWUnFSaXhMUVVGQlFTeERRVUZCUVN4RFFVVlFhVVlzVFVGQlFVRXNRMEZIV0ROSExFOUJRVUZCTEVOQlFWRXdRaXhMUVVGQlFTeERRVUZCUVN4RFFVTktMRWxCUVVsdFJpeExRVUZCUVN4RFFWVktMRTFCVkc5Q0xGTkJRVUVzUlVGQlFTeFBRVUZVYmtZc1MwRkJRVUVzUTBGRFVHMUdMRXRCUVVGQkxFTkJRVkZ1Uml4TFFVRkJRU3hEUVVWaExGRkJRVUVzUlVGQlFTeFBRVUZVUVN4TFFVRkJRU3hEUVVOYWJVWXNTMEZCUVVFc1EwRkJjME1zVDBGQlFTeEZRVUUzUW01R0xFdEJRVUZCTEVOQlFVMXJSaXhwUWtGQlFVRXNSVUZCUVVFc1JVRkJLMFFzUjBGQlFTeEZRVUUzUW14R0xFdEJRVUZCTEVOQlFVMXJSaXhwUWtGQlFVRXNSVUZCUVVFc1EwRkZiRU1zVVVGQlFTeEZRVUZCTEU5QlFWUnNSaXhMUVVGQlFTeEhRVU5hYlVZc1MwRkJRVUVzUTBGQmEwSXNRMEZCUVN4RlFVRlVia1lzUzBGQlFVRXNRMEZCUVVFc1EwRkZUbTFHTEV0QlFVRkJMRU5CUjFnM1J5eFpRVUZCUVN4RFFVRmhPRWNzVFVGQlFVRXNRMEZCVXl4RlFVRkJMRU5CUVVFc1EwRkRiRUlzVDBGQlQwTXNUVUZCUVVFc1EwRkJUME1zU1VGQlFVRXNRMEZCUzBZc1RVRkJRVUVzUTBGQlFVRXNRMEZCVVRGRkxFMUJRVUZCTEVOQlJ5OUNjRU1zWVVGQlFVRXNRMEZCWXpCQ0xFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVRkJMRU5CUTJ4Q0xFZEJRV0VzUlVGQlFTeEZRVUZVUVN4TFFVRkJRU3hEUVVOQkxFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlJWQXNTVUZCU3l4SlFVRkpjVVVzUTBGQlFVRXNTVUZCUzNKRkxFdEJRVUZCTEVOQlExWXNSMEZCWjBJc1IwRkJRU3hGUVVGYVFTeExRVUZCUVN4RFFVRk5jVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkRUaXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVWx1UWl4TlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVkWUwwWXNVMEZCUVVFc1EwRkJWU3RDTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJRU3hEUVVNNVFpeEpRVUZMTEVsQlFVa3JSQ3hEUVVGQlFTeEpRVUZMYUVVc1VVRkJRVUVzUTBGRFZpeEhRVUZKUXl4TlFVRkJRU3hGUVVGVlJDeFJRVUZCUVN4RFFVRlRaMFVzUTBGQlFVRXNRMEZCUVVFc1EwRkRia0lzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZIWml4TlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVkWUwwWXNTVUZCUVVFc1EwRkJTMmRETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJSVllzUjBGQmFVSXNSMEZCUVN4RlFVRmlRU3hOUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVRlhMRU5CUld4Q0xFbEJSRUVzU1VGQlNXbEdMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVU5TTTBVc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxPTEUxQlFVRkJMRU5CUVU5SkxFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlEzUkNMRU5CUVVFc1JVRkJURUVzUTBGQlFVRXNSMEZEUVRKRkxGVkJRVUZCTEVWQlFXTnFSaXhOUVVGQlFTeERRVUZQVFN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVYzNRazRzVFVGQlFVRXNRMEZCVXk5Q0xFbEJRVUZCTEVOQlFVdDNSQ3hKUVVGQlFTeERRVUZMZDBRc1ZVRkJRVUVzUTBGQlFVRXNRMEZKZGtJc1IwRkJhVU1zUjBGQlFTeEZRVUUzUW1wR0xFMUJRVUZCTEVOQlFVOUJMRTFCUVVGQkxFTkJRVTlKTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJRVmNzUTBGRmJFTXNTVUZFU1RaRkxGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVTlNNMFVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbE9MRTFCUVVGQkxFTkJRVTlKTEUxQlFVRkJMRU5CUVZGRkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ1FTeERRVUZCUVN4RlFVRkxUaXhOUVVGQlFTeERRVUZQU1N4TlFVRkJRU3hEUVVGVExFTkJRVUVzUjBGRGNrSTJSU3hWUVVGQlFTeEZRVUZqYWtZc1RVRkJRVUVzUTBGQlQwMHNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITjBKT0xFMUJRVUZCTEVOQlFWTXZRaXhKUVVGQlFTeERRVUZMZDBRc1NVRkJRVUVzUTBGQlMzZEVMRlZCUVVGQkxFTkJRVUZCTEVOQlJYWkNMRTlCUVU5cVJpeE5RVUZCUVN4RFFVZFlhRU1zWVVGQlFVRXNRMEZCWTJ0SUxFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVRkpReXhKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlN5eEZRVUZCTEVOQlFVRXNRMEZEY2tNc1NVRkJTVEZHTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVOYUxFbEJRVXNzU1VGQlNWa3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrMFJTeEpRVUZCUVN4RFFVRkxPVVVzVFVGQlFVRXNRMEZCVVVVc1EwRkJRVUVzUlVGQlFVRXNRMEZEZWtJMFJTeEpRVUZCUVN4RFFVRkxOVVVzUTBGQlFVRXNRMEZCUVVFc1JVRkJUVFpGTEVsQlFVRkJMRU5CUTFoNlJpeExRVUZCUVN4RlFVRlRNRVlzUlVGQlFVRXNRMEZIVkRGR0xFdEJRVUZCTEVWQlFWTjNSaXhKUVVGQlFTeERRVUZMTlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZIZEVJc1QwRkJUMW9zUzBGQlFVRXNRMEZIV0RGQ0xHZENRVUZCUVN4RFFVRnBRbkZJTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGQkxFTkJTWEJDTEUxQlNEWkNMRWRCUVVFc1JVRkJla0pCTEVsQlFVRkJMRU5CUVV0QkxFbEJRVUZCTEVOQlFVdHFSaXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4SFFVTnVRbWxHTEVsQlFVRkJMRVZCUVZFc1IwRkJRU3hEUVVGQkxFTkJSVXhCTEVsQlFVRkJMRU5CUjFoeVNDeHJRa0ZCUVVFc1EwRkJiVUp6U0N4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlFTeERRVVYwUWl4SlFVUkJMRWxCUTFOb1JpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZFVVN4alFVRkJMRU5CUTJOR0xFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6RkRMRWRCUm05Q0xHTkJRVUVzUTBGRlJVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRXZEdMRWxCUVVGQkxFTkJRM2hDTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUjJZc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGSFdIUklMRk5CUVVGQkxFTkJRVlVyUWl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlNVTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUTBGRk9VSXNTVUZFUVN4SlFVRkpkVVlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUTBOcVJpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1ZBc1VVRkJRVUVzUTBGQlUwc3NUVUZCUVVFc1EwRkJVVVVzUTBGQlFVRXNSVUZCUVVFc1EwRkROMEpRTEZGQlFVRkJMRU5CUVZOUExFTkJRVUZCTEVOQlFVRkJMRVZCUVUxT0xFMUJRVUZCTEVWQlEyWjFSaXhEUVVGQlFTeEZRVUZCUVN4RFFVZFNMRTlCUVU5QkxFTkJRVUZCTEVOQlIxaDJTQ3haUVVGQlFTeERRVUZoSzBJc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlEycERMRWxCUVVsM1JpeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkRha0lzU1VGQlN5eEpRVUZKYkVZc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxRTEZGQlFVRkJMRU5CUVZOTExFMUJRVUZCTEVOQlFWRkZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6ZENVQ3hSUVVGQlFTeERRVUZUVHl4RFFVRkJRU3hEUVVGQlFTeEhRVUZQVGl4TlFVRkJRU3hGUVVOb1FuZEdMRlZCUVVGQkxFTkJRVmQwUlN4SlFVRkJRU3hEUVVGTFdpeERRVUZCUVN4RFFVRkJRU3hEUVVsNFFpeFBRVUZQYTBZc1ZVRkJRVUVzUTBGSFdIaElMRXRCUVVGQkxFTkJRVTE1U0N4UlFVRkJRU3hEUVVGQlFTeERRVU5HTEU5QlFVRXNTMEZCTkVJc1EwRkJRU3hIUVVGaVFTeFJRVUZCUVN4RFFVZHVRbnBJTEUxQlFVRkJMRU5CUVU5NVNDeFJRVUZCUVN4RFFVRkJRU3hEUVVOSUxFOUJRVzFDTEVsQlFVRXNSVUZCV2tFc1VVRkJRVUVzUTBGSFdIcElMRTlCUVVGQkxFTkJRVkY1U0N4UlFVRkJRU3hEUVVGQlFTeERRVU5LTEU5QlFVOTRTQ3hKUVVGQlFTeERRVUZMYTBVc1MwRkJRVUVzUTBGQlRYTkVMRkZCUVVGQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVdONFNDeEpRVUZCUVN4RFFVRkxlVWdzVFVGQlFVRXNRMEZCVDBRc1VVRkJRVUVzUTBGQlFVRXNRMEZIYUVSNlNDeFBRVUZCUVN4RFFVRlJlVWdzVVVGQlFVRXNRMEZCUVVFc1EwRkRTaXhKUVVGSlJTeEpRVUZCUVN4RFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGSldDeE5RVWgxUWl4UlFVRkJMRVZCUVVFc1QwRkJXa1lzVVVGQlFVRXNSMEZEVUVVc1NVRkJRVUVzUTBGQlQwWXNVVUZCUVVFc1EwRkJVMGNzVjBGQlFVRXNSMEZCWjBKRExFdEJRVUZCTEVOQlFVRkJMRU5CUlRkQ1JpeEpRVUZCUVN4RFFVZFlNMGdzVVVGQlFVRXNRMEZCVTNsSUxGRkJRVUZCTEVOQlFVRkJMRU5CUTB3c1NVRkJTVVVzU1VGQlFVRXNRMEZCUVVFc1EwRkJUeXhEUVVGQkxFTkJTVmdzVFVGSWRVSXNVVUZCUVN4RlFVRkJMRTlCUVZwR0xGRkJRVUZCTEVkQlExQkZMRWxCUVVGQkxFTkJRVTlHTEZGQlFVRkJMRU5CUVZOSExGZEJRVUZCTEVkQlFXZENZaXhOUVVGQlFTeERRVUZCUVN4RFFVVTNRbGtzU1VGQlFVRXNRMEZIV0ROSUxGRkJRVUZCTEVOQlFWTjVTQ3hSUVVGQlFTeERRVUZCUVN4RFFVTk1MRWxCUVVsRkxFbEJRVUZCTEVOQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVsWUxFMUJTSFZDTEZGQlFVRXNSVUZCUVN4UFFVRmFSaXhSUVVGQlFTeEhRVU5RUlN4SlFVRkJRU3hEUVVGUFJpeFJRVUZCUVN4RFFVRlRSeXhYUVVGQlFTeEhRVUZuUW5KQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUlRkQ2IwSXNTVUZCUVVFc1EwRkhXRE5JTEZGQlFVRkJMRU5CUVZONVNDeFJRVUZCUVN4RFFVRkJRU3hEUVVOTUxFbEJRVWxGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVThzUTBGQlFTeERRVWxZTEUxQlNIVkNMRkZCUVVFc1JVRkJRU3hQUVVGYVJpeFJRVUZCUVN4SFFVTlFSU3hKUVVGQlFTeERRVUZQUml4UlFVRkJRU3hEUVVGVFJ5eFhRVUZCUVN4SFFVRm5Ra1VzVFVGQlFVRXNRMEZCUVVFc1EwRkZOMEpJTEVsQlFVRkJMRU5CUjFnelNDeE5RVUZCUVN4RFFVRlBlVWdzVVVGQlFVRXNRMEZCUVVFc1EwRkRTQ3hKUVVGSlJTeEpRVUZCUVN4RFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGSldDeE5RVWgxUWl4VFFVRkJMRVZCUVVFc1QwRkJXa1lzVVVGQlFVRXNSMEZEVUVVc1NVRkJRVUVzUTBGQlQwWXNVVUZCUVVFc1EwRkJVMGNzVjBGQlFVRXNSMEZCWjBKSExFOUJRVUZCTEVOQlFVRkJMRU5CUlRkQ1NpeEpRVUZCUVN4RFFVZFlNMGdzVlVGQlFVRXNRMEZCVjNsSUxGRkJRVUZCTEVOQlFVRkJMRU5CUTFBc1RVRkJORUlzVlVGQlFTeEZRVUZCTEU5QlFXSkJMRkZCUVVGQkxFTkJSMjVDZWtnc1RVRkJRVUVzVjBGQlFVRXNRMEZCYTBKblNTeFRRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJTVU1zVVVGQlFVRXNSVUZCVnl4SlFVRkJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRM3BETEVsQlFVbERMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVU5rTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzU1VGQlMwZ3NVMEZCUVVFc1EwRkRWa1VzVDBGQlFVRXNRMEZCVVVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1RVRkJWMGdzVTBGQlFVRXNRMEZCVlVjc1EwRkJRVUVzUTBGQlFVRXNRMEZGYWtOR0xGRkJRVUZCTEVOQlFWTkRMRTlCUVVGQkxFTkJRVUZCTEVOQlIySnNTU3hSUVVGQlFTeEZRVUZCUVN4RFFVTkpMRTFCUVZFc1owVkJRVUVzUTBGQmFVVnZTU3hKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVlF5eFRRVUZCUVN4RFFVRkJRU3hEUVVjMVJuUkpMRk5CUVVGQkxFTkJRVlYxU1N4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlNVTXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGRGFrTXNTVUZCU1VNc1VVRkJRVUVzUTBGQldYaEpMRWxCUVVGQkxFTkJRVXRyUlN4TFFVRkJRU3hEUVVGTmIwVXNVVUZCUVVFc1EwRkJVMFVzVVVGQlFVRXNRMEZCUVVFc1EwRkJZVVlzVVVGQlFVRXNRMEZCVTBVc1VVRkJRVUVzUTBGQlZ5eE5RVUZCTEVOQlEycEZReXhSUVVGQlFTeERRVUZaZWtrc1NVRkJRVUVzUTBGQlMydEZMRXRCUVVGQkxFTkJRVTF2UlN4UlFVRkJRU3hEUVVGVFJ5eFJRVUZCUVN4RFFVRkJRU3hEUVVGaFNDeFJRVUZCUVN4RFFVRlRSeXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEYWtWRExFbEJRVUZCTEVOQlFWRXhTU3hKUVVGQlFTeERRVUZMYTBVc1MwRkJRVUVzUTBGQlRXOUZMRkZCUVVGQkxFTkJRVk5MTEVsQlFVRkJMRU5CUVVGQkxFTkJRVk5NTEZGQlFVRkJMRU5CUVZOSkxFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVTnlSRVVzVVVGQlFVRXNRMEZCV1RWSkxFbEJRVUZCTEVOQlFVdHJSU3hMUVVGQlFTeERRVUZOYjBVc1VVRkJRVUVzUTBGQlUwMHNVVUZCUVVFc1EwRkJRVUVzUTBGQllVNHNVVUZCUVVFc1EwRkJVMDBzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTJwRlF5eFBRVUZCUVN4RFFVRlZMRWRCUVVFc1EwRkRWa01zVjBGQlFVRXNRMEZCUVVFc1EwRkJZeXhEUVVGQkxFTkJRMnBDT1Vrc1NVRkJRVUVzUTBGQlMydEZMRXRCUVVGQkxFTkJRVTF2UlN4UlFVRkJRU3hEUVVGVGJFUXNTVUZCUVVFc1EwRkJRVUVzUlVGRGFrSXdRaXhOUVVGQlFTeERRVUZQUXl4SlFVRkJRU3hEUVVGTGRVSXNVVUZCUVVFc1EwRkJVMnhFTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTB5UkN4SFFVRkJRU3hEUVVGSk5VWXNSMEZCUVVFc1JVRkJRVUVzUTBGRGRrSXlSaXhYUVVGQlFTeEhRVUZoUkN4UFFVRkJRU3hGUVVGWE1VWXNSMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVTF0Uml4UlFVRkJRU3hEUVVGVGJFUXNTVUZCUVVFc1EwRkJTMnBETEVkQlFVRkJMRU5CUVVGQkxFTkJRVThzUjBGQlFTeERRVUZCTEVOQlEzcEVRU3hIUVVGQlFTeEZRVUZQYjBZc1UwRkJRVUVzUjBGQlYwOHNWMEZCUVVFc1EwRkJRVUVzUTBGQll5eERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUlRWRExFbEJRVWxGTEZGQlFVRkJMRU5CUVZkU0xGRkJRVUZCTEVOQlFWY3NTMEZCUVN4RFFVRlJReXhSUVVGQlFTeERRVUZYTEVkQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlR5eEhRVUZCTEVOQlFVMUZMRkZCUVVGQkxFTkJRVmRETEU5QlFVRkJMRU5CUnpORkxFOUJSRUZITEZGQlFVRkJMRU5CUVVGQkxFTkJSRUZCTEZGQlFVRkJMRU5CUVZsQkxGRkJRVUZCTEVOQlFWTkRMRmRCUVVGQkxFTkJRVmtzUjBGQlFTeERRVUZCTEVWQlFWRkVMRkZCUVVGQkxFTkJRVk0zUnl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlN6WkhMRkZCUVVGQkxFTkJRVk51Unl4TFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlIyMUhMRkZCUVVGQkxFTkJRVk0zUnl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVUZMTmtjc1VVRkJRVUVzUlVGRGNFWkRMRmRCUVVGQkxFTkJRVmtzUjBGQlFTeERRVUZCTEVWQlFWRkVMRkZCUVVGQkxFTkJRVk0zUnl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlN6WkhMRkZCUVVGQkxFTkJRVk51Unl4TFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlIyMUhMRkZCUVVGQkxFTkJRVk0zUnl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVUZMTmtjc1VVRkJRVUVzUTBGSk4wZHFTaXhYUVVGQlFTeERRVUZaYVVvc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlFVRXNRMEZEYmtJc1IwRkJTV2hLTEVsQlFVRkJMRU5CUVV0clJTeExRVUZCUVN4RFFVRk5PRVVzVVVGQlFVRXNRMEZCUVVFc1EwRkJWeXhEUVVWMFFpeEpRVUZKUlN4UlFVRkJRU3hEUVVGQlFTeERRVUY1UXl4RFFVRkJMRWRCUVVFc1EwRkVOME5HTEZGQlFVRkJMRU5CUVZkQkxGRkJRVUZCTEVOQlFWTXZSQ3hSUVVGQlFTeEZRVUZCUVN4RlFVTkxhRVFzVDBGQlFVRXNRMEZCVVN4TFFVRkJMRU5CUVVFc1EwRkJhVUlzU1VGQlFTeERRVUZQSzBjc1VVRkJRVUVzUTBGQlV6bEhMRXRCUVVGQkxFTkJRVTBzUzBGQlFTeERRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkJMRU5CUXpORmFVZ3NVVUZCUVVFc1EwRkJWMGdzVVVGQlFVRXNRMEZCVXpsSExFdEJRVUZCTEVOQlFVMHNTMEZCUVN4RFFVRkJMRU5CUVU5NVFpeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVOeVEyZEdMRWxCUVVGQkxFTkJRVTlSTEZGQlFVRkJMRU5CUVZOcVNDeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVU16UW5WSExGRkJRVUZCTEVOQlFWZEZMRWxCUVVGQkxFTkJRVXQ2Unl4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZMTEVOQlFVRXNRMEZCUVN4RFFVTXpRbmRITEVsQlFVRkJMRU5CUVU5RExFbEJRVUZCTEVOQlFVdDZSeXhMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxlVUlzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkRNMEo1UkN4SlFVRkJRU3hEUVVGUExFZEJRVUVzUTBGQlRTdENMRkZCUVVGQkxFTkJRVk5xU0N4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZMZVVJc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZEY2tOcFJpeFJRVUZCUVN4RFFVRlhlRUlzU1VGQlFVRXNRMEZCUzJ4R0xFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRek5DTWtjc1QwRkJRVUVzUTBGQlFVRXNRMEZCYTBNc1EwRkJRU3hIUVVGMlFucENMRWxCUVVGQkxFTkJRVXR1Uml4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlFTeERRVUZsTEVsQlFVRXNRMEZCVDIxR0xFbEJRVUZCTEVOQlFVdHNSaXhMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxlVUlzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkZiRVY1UWl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGRFdDeEhRVUZsTEVsQlFVRXNSVUZCV0hsRUxFOUJRVUZCTEVOQlFXbENMRU5CUTJwQ0xFbEJRVWxQTEV0QlFVRkJMRU5CUVZGUUxFOUJRVUZCTEVOQlFWRXpSeXhMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVTXhRaXhKUVVGTExFbEJRVWswUkN4RFFVRkJRU3hKUVVGTGMwUXNTMEZCUVVFc1EwRkJUeXhEUVVOcVFpeEpRVUZKUXl4TFFVRkJRU3hEUVVGUlJDeExRVUZCUVN4RFFVRk5kRVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSelZFTEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRM1pDYlVnc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZEVG1wRkxFbEJRVUZCTEVOQlFVdHdSaXhKUVVGQlFTeERRVUZMTUVRc1lVRkJRVUVzUTBGQll6SkdMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVkZ5U2l4SlFVRkJRU3hEUVVGTE1FUXNZVUZCUVVFc1EwRkJZekpHTEV0QlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZMTEVkQlFVRXNRMEZCUVN4RFFVVnFSbXBGTEVsQlFVRkJMRU5CUVV0d1JpeEpRVUZCUVN4RFFVRkxNRVFzWVVGQlFVRXNRMEZCWXpKR0xFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVGTExFZEJRVUVzUTBGQlFTeERRVUZCTEVOQlFWRXNSVUZCUVN4RFFVRkJMRU5CU3pORUxFMUJRVThzUTBGQlJVd3NVVUZCUVVFc1EwRkJWVUVzVVVGQlFVRXNRMEZCVlVVc1VVRkJRVUVzUTBGQlZVRXNVVUZCUVVFc1EwRkJWVU1zVVVGQlFVRXNRMEZCVlVFc1VVRkJRVUVzUTBGQlZWSXNTVUZCUVVFc1EwRkJUVUVzU1VGQlFVRXNRMEZCVFZjc1VVRkJRVUVzUTBGRWJFVktMRkZCUVVGQkxFTkJRVmNzUzBGQlFTeERRVUZSVUN4SlFVRkJRU3hEUVVOdFJVWXNVVUZCUVVFc1EwRkJWVUVzVVVGQlFVRXNRMEZCVlVNc1NVRkJRVUVzUTBGQlRVRXNTVUZCUVVFc1EwRkJUWFJDTEVsQlFVRkJMRU5CUVUxQkxFbEJRVUZCTEVOQlFVMTNRaXhSUVVGQlFTeERRVUZWUVN4UlFVRkJRU3hEUVVGVlF5eFBRVUZCUVN4RFFVRlRRU3hQUVVGQlFTeERRVUZUZWtRc1NVRkJRVUVzUTBGQlRVRXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKY2sxeVJpeFZRVUZCUVN4RFFVRlhhVW9zVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkZiRUlzU1VGQlNVZ3NUMEZCUVVFc1EwRkJRVUVzUTBGQmMwTXNRMEZCUVN4SFFVRkJMRU5CUkRGRFJ5eFJRVUZCUVN4RFFVRlhRU3hSUVVGQlFTeERRVUZUTDBRc1VVRkJRVUVzUlVGQlFVRXNSVUZEU1doRUxFOUJRVUZCTEVOQlFWRXNSMEZCUVN4RFFVRkJMRU5CUVdVc1NVRkJRU3hEUVVGUEswY3NVVUZCUVVFc1EwRkJVemxITEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRVXQ1UWl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU14UlhsQ0xFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVVllMRWRCUVdVc1NVRkJRU3hGUVVGWWVVUXNUMEZCUVVFc1EwRkJhVUlzUTBGRGFrSXNTVUZCU1U4c1MwRkJRVUVzUTBGQlVWQXNUMEZCUVVFc1EwRkJVVE5ITEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRekZDTEVsQlFVc3NTVUZCU1RSRUxFTkJRVUZCTEVsQlFVdHpSQ3hMUVVGQlFTeERRVUZQTEVOQlEycENMRWxCUVVsRExFdEJRVUZCTEVOQlFWRkVMRXRCUVVGQkxFTkJRVTEwUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZITlVRc1MwRkJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVRXNRMEZEZGtKdFNDeExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVOT2FrVXNTVUZCUVVFc1EwRkJTM0JHTEVsQlFVRkJMRU5CUVVzd1JDeGhRVUZCUVN4RFFVRmpNa1lzUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCVVhKS0xFbEJRVUZCTEVOQlFVc3dSQ3hoUVVGQlFTeERRVUZqTWtZc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGQkxFTkJSV3BHYWtVc1NVRkJRVUVzUTBGQlMzQkdMRWxCUVVGQkxFTkJRVXN3UkN4aFFVRkJRU3hEUVVGak1rWXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlFVc3NSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJVU3hGUVVGQkxFTkJRVUVzUTBGSk0wUXNUMEZCVDJwRkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwibGV0IGZ1bmM9bmV3KF8kRnVuY183KTtjbGFzcyBNYXRyaXh7Y29uc3RydWN0b3IocGFyYW1zPXtyb3dzOjIsY29sczoyLGNvbnRlbnRzOltdfSl7T2JqZWN0LmtleXMocGFyYW1zKS5tYXAoa2V5PT57dGhpc1trZXldPXBhcmFtc1trZXldfSksdGhpcy5yb3dzPXRoaXMucm93c3x8Mix0aGlzLmNvbHM9dGhpcy5jb2xzfHwyLHRoaXMuY29udGVudHM9dGhpcy5jb250ZW50c3x8W10sdGhpcy5zZXREYXRhKHRoaXMuY29udGVudHMpfXNldERhdGEoY29udGVudHM9W10pe3RoaXMuY29udGVudHM9Y29udGVudHMsdGhpcy5kYXRhPVtdO2ZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKyl7dGhpcy5kYXRhW2ldPVtdO2ZvcihsZXQgaj0wO2o8dGhpcy5yb3dzO2orKyl0aGlzLmRhdGFbaV1bal09Y29udGVudHMuc2hpZnQoKX19Z2V0IHN0cnVjdHVyZSgpe2xldHtyb3dzOnJvd3MsY29sczpjb2xzfT10aGlzO3JldHVybntyb3dzOnJvd3MsY29sczpjb2xzfX1hZGQobj0wKXtpZihuIGluc3RhbmNlb2YgTWF0cml4KWZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspdGhpcy5kYXRhW2ldW2pdKz1uLmRhdGFbaV1bal07ZWxzZSBpZihuIGluc3RhbmNlb2YgQXJyYXkpZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl0aGlzLmRhdGFbaV1bal0rPW5baV1bal07ZWxzZSBmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKXRoaXMuZGF0YVtpXVtqXSs9bn1zdWJ0cmFjdChuPTApe2lmKG4gaW5zdGFuY2VvZiBNYXRyaXgpZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl0aGlzLmRhdGFbaV1bal0tPW4uZGF0YVtpXVtqXTtlbHNlIGlmKG4gaW5zdGFuY2VvZiBBcnJheSlmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKXRoaXMuZGF0YVtpXVtqXS09bltpXVtqXTtlbHNlIGZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspdGhpcy5kYXRhW2ldW2pdLT1ufW11bHRpcGx5KG49MSl7aWYobiBpbnN0YW5jZW9mIE1hdHJpeClmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajxuLmNvbHM7aisrKXRoaXMuZGF0YVtpXVtqXSo9bi5kYXRhW2ldW2pdO2Vsc2UgaWYobiBpbnN0YW5jZW9mIEFycmF5KWZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspdGhpcy5kYXRhW2ldW2pdKj1uW2ldW2pdO2Vsc2UgZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyl0aGlzLmRhdGFbaV1bal0qPW59cmFuZG9taXplKCl7dGhpcy5tYXAodmFsdWU9PmZ1bmMucmFuZG9tKCkpfXRyYW5zcG9zZSgpe2xldCBuZXdNYXRyaXg9bmV3IE1hdHJpeCh7cm93czp0aGlzLmNvbHMsY29sczp0aGlzLnJvd3N9KTtmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKW5ld01hdHJpeC5kYXRhW2pdW2ldPXRoaXMuZGF0YVtpXVtqXTtPYmplY3Qua2V5cyhuZXdNYXRyaXgpLm1hcChrZXk9Pnt0aGlzW2tleV09bmV3TWF0cml4W2tleV19KX1tYXAoY2FsbGJhY2s9KCh2YWx1ZSwuLi5wb3MpPT57fSkpe2ZvcihsZXQgaT0wO2k8dGhpcy5yb3dzO2krKylmb3IobGV0IGo9MDtqPHRoaXMuY29scztqKyspe2xldCB2YWx1ZT10aGlzLmRhdGFbaV1bal07dGhpcy5kYXRhW2ldW2pdPWNhbGxiYWNrKHZhbHVlLGksail9fXByaW50KCl7Y29uc29sZS50YWJsZSh0aGlzLmRhdGEpfXNheSgpe2NvbnNvbGUubG9nKHRoaXMudG9BcnJheSgpKX10b0FycmF5KCl7cmV0dXJuIHRoaXMuY29udGVudHM9W10sTWF0cml4Lm1hcCh0aGlzLHZhbHVlPT57dGhpcy5jb250ZW50cy5wdXNoKHZhbHVlKX0pLHRoaXMuY29udGVudHN9cmVzaGFwZShwYXJhbXM9e3Jvd3M6Mixjb2xzOjJ9KXt0aGlzLnRvQXJyYXkoKSx0aGlzLnJvd3M9cGFyYW1zLnJvd3MsdGhpcy5jb2xzPXBhcmFtcy5jb2xzLHRoaXMuc2V0RGF0YSh0aGlzLmNvbnRlbnRzKX1nZXRDb2x1bW5zKC4uLmNvbHMpe2xldCB2YWx1ZT1bXTtmb3IobGV0IGkgaW4gY29scyl2YWx1ZS5wdXNoKEFycmF5LmVhY2godGhpcy5kYXRhLHJvdz0+cm93W2NvbHNbaV1dKSk7cmV0dXJuIHZhbHVlfWdldFJvd3MoLi4ucm93cyl7bGV0IHZhbHVlPVtdO2ZvcihsZXQgcj0wO3I8dGhpcy5yb3dzO3IrKylyb3dzLmluY2x1ZGVzKHIpJiZ2YWx1ZS5wdXNoKHRoaXMuZGF0YVtyXSk7cmV0dXJuIHZhbHVlfXN0YXRpYyB0b0FycmF5KG1hdHJpeCl7bGV0IGFycmF5PVtdO3JldHVybiBNYXRyaXgubWFwKG1hdHJpeCx2YWx1ZT0+e2FycmF5LnB1c2godmFsdWUpfSksYXJyYXl9c3RhdGljIHN1YnRyYWN0KGE9bmV3IE1hdHJpeCxiKXtsZXQgY29udGVudHM9W10scm93cz1hLnJvd3MsY29scz1hLmNvbHM7aWYoYiBpbnN0YW5jZW9mIE1hdHJpeClmb3IobGV0IGk9MDtpPHJvd3M7aSsrKWZvcihsZXQgaj0wO2o8Y29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0tYi5kYXRhW2ldW2pdKTtlbHNlIGlmKGIgaW5zdGFuY2VvZiBBcnJheSlmb3IobGV0IGk9MDtpPGEucm93cztpKyspZm9yKGxldCBqPTA7ajxhLmNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdLWJbaV1bal0pO2Vsc2UgZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyljb250ZW50cy5wdXNoKGEuZGF0YVtpXVtqXS1iKTtyZXR1cm4gbmV3IE1hdHJpeCh7cm93czpyb3dzLGNvbHM6Y29scyxjb250ZW50czpjb250ZW50c30pfXN0YXRpYyBhZGQoYT1uZXcgTWF0cml4LGIpe2xldCBjb250ZW50cz1bXSxyb3dzPWEucm93cyxjb2xzPWEuY29scztpZihiIGluc3RhbmNlb2YgTWF0cml4KWZvcihsZXQgaT0wO2k8cm93cztpKyspZm9yKGxldCBqPTA7ajxjb2xzO2orKyljb250ZW50cy5wdXNoKGEuZGF0YVtpXVtqXStiLmRhdGFbaV1bal0pO2Vsc2UgaWYoYiBpbnN0YW5jZW9mIEFycmF5KWZvcihsZXQgaT0wO2k8YS5yb3dzO2krKylmb3IobGV0IGo9MDtqPGEuY29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0rYltpXVtqXSk7ZWxzZSBmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdK2IpO3JldHVybiBuZXcgTWF0cml4KHtyb3dzOnJvd3MsY29sczpjb2xzLGNvbnRlbnRzOmNvbnRlbnRzfSl9c3RhdGljIG11bHRpcGx5KGE9bmV3IE1hdHJpeCxiKXtsZXQgcm93cyxjb2xzLGNvbnRlbnRzPVtdO2lmKGIgaW5zdGFuY2VvZiBNYXRyaXgpe2lmKGEuY29scyE9PWIucm93cylyZXR1cm4gdm9pZCBjb25zb2xlLmxvZyhcIkNvbHVtbnMgb2YgQSBtdXN0IGVxdWFsIHJvd3Mgb2YgQlwiKTtyb3dzPWEucm93cyxjb2xzPWIuY29scztmb3IobGV0IGk9MDtpPHJvd3M7aSsrKWZvcihsZXQgaj0wO2o8Y29scztqKyspe2xldCBzdW09MDtmb3IobGV0IGs9MDtrPGEuY29scztrKyspc3VtKz1hLmRhdGFbaV1ba10qYi5kYXRhW2tdW2pdO2NvbnRlbnRzLnB1c2goc3VtKX19ZWxzZSBpZihiIGluc3RhbmNlb2YgQXJyYXkpe3Jvd3M9YS5yb3dzLGNvbHM9YS5jb2xzO2ZvcihsZXQgaT0wO2k8YS5yb3dzO2krKylmb3IobGV0IGo9MDtqPGEuY29scztqKyspY29udGVudHMucHVzaChhLmRhdGFbaV1bal0qYltpXVtqXSl9ZWxzZSBmb3IobGV0IGk9MDtpPHRoaXMucm93cztpKyspZm9yKGxldCBqPTA7ajx0aGlzLmNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdKmIpO3JldHVybiBuZXcgTWF0cml4KHtyb3dzOnJvd3MsY29sczpjb2xzLGNvbnRlbnRzOmNvbnRlbnRzfSl9c3RhdGljIGRpdmlkZShhPW5ldyBNYXRyaXgsYil7bGV0IHJvd3MsY29scyxjb250ZW50cz1bXTtpZihiIGluc3RhbmNlb2YgTWF0cml4KXtpZihhLmNvbHMhPT1iLnJvd3MpcmV0dXJuIHZvaWQgY29uc29sZS5sb2coXCJDb2x1bW5zIG9mIEEgbXVzdCBlcXVhbCByb3dzIG9mIEJcIik7cm93cz1hLnJvd3MsY29scz1iLmNvbHM7Zm9yKGxldCBpPTA7aTxyb3dzO2krKylmb3IobGV0IGo9MDtqPGNvbHM7aisrKXtsZXQgc3VtPTA7Zm9yKGxldCBrPTA7azxhLmNvbHM7aysrKXN1bSs9YS5kYXRhW2ldW2tdL2IuZGF0YVtrXVtqXXx8MDtjb250ZW50cy5wdXNoKHN1bSl9fWVsc2UgaWYoYiBpbnN0YW5jZW9mIEFycmF5KXtyb3dzPWEucm93cyxjb2xzPWEuY29scztmb3IobGV0IGk9MDtpPGEucm93cztpKyspZm9yKGxldCBqPTA7ajxhLmNvbHM7aisrKWNvbnRlbnRzLnB1c2goYS5kYXRhW2ldW2pdL2JbaV1bal18fDApfWVsc2UgZm9yKGxldCBpPTA7aTx0aGlzLnJvd3M7aSsrKWZvcihsZXQgaj0wO2o8dGhpcy5jb2xzO2orKyljb250ZW50cy5wdXNoKGEuZGF0YVtpXVtqXS9ifHwwKTtyZXR1cm4gbmV3IE1hdHJpeCh7cm93czpyb3dzLGNvbHM6Y29scyxjb250ZW50czpjb250ZW50c30pfXN0YXRpYyByYW5kb21pemUobWF0cml4PW5ldyBNYXRyaXgpe3JldHVybiBNYXRyaXgubWFwKG1hdHJpeCx2YWx1ZT0+ZnVuYy5yYW5kb20oKSl9c3RhdGljIHRyYW5zcG9zZShtYXRyaXg9bmV3IE1hdHJpeCl7bGV0IG5ld01hdHJpeD1uZXcgTWF0cml4KHtyb3dzOm1hdHJpeC5jb2xzLGNvbHM6bWF0cml4LnJvd3N9KTtmb3IobGV0IGk9MDtpPG1hdHJpeC5yb3dzO2krKylmb3IobGV0IGo9MDtqPG1hdHJpeC5jb2xzO2orKyluZXdNYXRyaXguZGF0YVtqXVtpXT1tYXRyaXguZGF0YVtpXVtqXTtyZXR1cm4gbmV3TWF0cml4fXN0YXRpYyBtYXAobWF0cml4PW5ldyBNYXRyaXgsY2FsbGJhY2s9KCgpPT57fSkpe2xldCBuZXdNYXRyaXg9bmV3IE1hdHJpeCh7cm93czptYXRyaXgucm93cyxjb2xzOm1hdHJpeC5jb2xzfSk7Zm9yKGxldCBpPTA7aTxtYXRyaXgucm93cztpKyspZm9yKGxldCBqPTA7ajxtYXRyaXguY29scztqKyspe2xldCB2YWx1ZT1tYXRyaXguZGF0YVtpXVtqXTtuZXdNYXRyaXguZGF0YVtpXVtqXT1jYWxsYmFjayh2YWx1ZSxpLGopfXJldHVybiBuZXdNYXRyaXh9c3RhdGljIGZyb21BcnJheShjb250ZW50cz1bXSl7cmV0dXJuIG5ldyBNYXRyaXgoe3Jvd3M6Y29udGVudHMubGVuZ3RoLGNvbHM6MSxjb250ZW50czpjb250ZW50c30pfXN0YXRpYyByZXNoYXBlKHBhcmFtcz17cm93czoyLGNvbHM6MixtYXRyaXg6bmV3IE1hdHJpeH0pe3JldHVybiBwYXJhbXMuY29udGVudHM9TWF0cml4LnRvQXJyYXkocGFyYW1zLm1hdHJpeCksZGVsZXRlIHBhcmFtcy5tYXRyaXgsbmV3IE1hdHJpeChwYXJhbXMpfXN0YXRpYyBub3JtYWxpemUobWF0cml4PW5ldyBNYXRyaXgpe2xldCBjb250ZW50cz1NYXRoLm5vcm1hbGl6ZShNYXRyaXgudG9BcnJheShtYXRyaXgpKTtyZXR1cm4gbmV3IE1hdHJpeCh7cm93czptYXRyaXgucm93cyxjb2xzOm1hdHJpeC5jb2xzLGNvbnRlbnRzOmNvbnRlbnRzfSl9c3RhdGljIGRpYWdvbmFsKGFycmF5PVtdKXtsZXQgbWF0cml4PU1hdHJpeC5zcXVhcmUoYXJyYXkubGVuZ3RoKTtmb3IobGV0IGkgaW4gbWF0cml4LmRhdGEpZm9yKGxldCBqIGluIG1hdHJpeC5kYXRhW2ldKWk9PWomJihtYXRyaXguZGF0YVtpXVtqXT1hcnJheVtpXSk7cmV0dXJuIG1hdHJpeC50b0FycmF5KCksbWF0cml4fXN0YXRpYyB1bml0KHNpemU9Mil7bGV0IG1hdHJpeD1NYXRyaXguc3F1YXJlKHNpemUpO2ZvcihsZXQgaSBpbiBtYXRyaXguZGF0YSlmb3IobGV0IGogaW4gbWF0cml4LmRhdGFbaV0paT09aiYmKG1hdHJpeC5kYXRhW2ldW2pdPTEpO3JldHVybiBtYXRyaXgudG9BcnJheSgpLG1hdHJpeH1zdGF0aWMgc3F1YXJlKHNpemU9Mil7cmV0dXJuIG5ldyBNYXRyaXgoe3Jvd3M6c2l6ZSxjb2xzOnNpemV9KX1zdGF0aWMgZnJvbU1hdHJpeENvbHMobWF0cml4PW5ldyBNYXRyaXgsLi4uY29scyl7bGV0IHZhbHVlPW1hdHJpeC5nZXRDb2x1bW5zKC4uLmNvbHMpLGNvbnRlbnRzPUFycmF5LmZsYXR0ZW4odmFsdWUpLG5ld01hdHJpeD1uZXcgTWF0cml4KHtyb3dzOnZhbHVlLmxlbmd0aCxjb2xzOm1hdHJpeC5jb2xzLGNvbnRlbnRzOmNvbnRlbnRzfSk7cmV0dXJuIG5ld01hdHJpeC50cmFuc3Bvc2UoKSxuZXdNYXRyaXh9c3RhdGljIGRlZXBNYXRyaXgoZGltZW5zaW9ucz1bXSxjb250ZW50cz1bXSl7bGV0IG1hdHJpeERpbWVuc2lvbnM9W107Zm9yKGxldCBpPTA7aTxkaW1lbnNpb25zLmxlbmd0aDtpKyspbWF0cml4RGltZW5zaW9ucy5wdXNoKHtyb3dzOmRpbWVuc2lvbnNbaV0sY29sczpkaW1lbnNpb25zWysraV18fDF9KTtsZXQgbWFrZU1hdHJpeD1sYXllcj0+e2xldCBtYXRyaXg9bmV3IE1hdHJpeChtYXRyaXhEaW1lbnNpb25zW2xheWVyXSk7cmV0dXJuIGxheWVyKzE9PW1hdHJpeERpbWVuc2lvbnMubGVuZ3RoP21hdHJpeC5tYXAodmFsdWU9PmNvbnRlbnRzLnNoaWZ0KCl8fDApOm1hdHJpeC5tYXAodmFsdWU9Pm1ha2VNYXRyaXgobGF5ZXIrMSkpLG1hdHJpeH07cmV0dXJuIG1ha2VNYXRyaXgoMCl9fXZhciBfJE1hdHJpeF85PU1hdHJpeDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWsxaGRISnBlQzVxY3lKZExDSnVZVzFsY3lJNld5Sm1kVzVqSWl3aWNtVnhkV2x5WlNJc0lrMWhkSEpwZUNJc0lsdHZZbXBsWTNRZ1QySnFaV04wWFNJc0luQmhjbUZ0Y3lJc0luSnZkM01pTENKamIyeHpJaXdpWTI5dWRHVnVkSE1pTENKUFltcGxZM1FpTENKclpYbHpJaXdpYldGd0lpd2lhMlY1SWl3aWRHaHBjeUlzSW5ObGRFUmhkR0VpTENKa1lYUmhJaXdpYVNJc0ltb2lMQ0p6YUdsbWRDSXNJbk4wY25WamRIVnlaU0lzSW00aUxDSkJjbkpoZVNJc0luWmhiSFZsSWl3aWNtRnVaRzl0SWl3aWJtVjNUV0YwY21sNElpd2lZMkZzYkdKaFkyc2lMQ0p3YjNNaUxDSmpiMjV6YjJ4bElpd2lkR0ZpYkdVaUxDSnNiMmNpTENKMGIwRnljbUY1SWl3aWNIVnphQ0lzSW1WaFkyZ2lMQ0p5YjNjaUxDSnlJaXdpYVc1amJIVmtaWE1pTENKdFlYUnlhWGdpTENKaGNuSmhlU0lzSW1FaUxDSmlJaXdpYzNWdElpd2lheUlzSW14bGJtZDBhQ0lzSWsxaGRHZ2lMQ0p1YjNKdFlXeHBlbVVpTENKemNYVmhjbVVpTENKemFYcGxJaXdpWjJWMFEyOXNkVzF1Y3lJc0ltWnNZWFIwWlc0aUxDSjBjbUZ1YzNCdmMyVWlMQ0prYVcxbGJuTnBiMjV6SWl3aWJXRjBjbWw0UkdsdFpXNXphVzl1Y3lJc0ltMWhhMlZOWVhSeWFYZ2lMQ0pzWVhsbGNpSXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlYU3dpYldGd2NHbHVaM01pT2lKQlFVTkJMRWxCUVVsQkxFbEJRVUZCTEVOQlFVOHNTVUZFUlVNc1VVRkJVU3hEUVVGQkxFTkJSM0pDTEUxQlFVMURMRTFCUVVGQkxFTkJRMFpETEZkQlFVRkJMRU5CUVZsRExFMUJRVUZCTEVOQlFWTXNRMEZCUlVNc1NVRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVZERMRWxCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZIUXl4UlFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlF5OURReXhOUVVGQlFTeERRVUZQUXl4SlFVRkJRU3hEUVVGTFRDeE5RVUZCUVN4RFFVRkJRU3hEUVVGUlRTeEhRVUZCUVN4RFFVRkpReXhIUVVGQlFTeEZRVUZCUVN4RFFVTndRa01zU1VGQlFVRXNRMEZCUzBRc1IwRkJRVUVzUTBGQlFVRXNRMEZCVDFBc1RVRkJRVUVzUTBGQlQwOHNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhka0pETEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVOVBMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRVZCUVZFc1EwRkJRU3hEUVVONlFrOHNTVUZCUVVFc1EwRkJTMDRzU1VGQlFVRXNRMEZCVDAwc1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1JVRkJVU3hEUVVGQkxFTkJRM3BDVFN4SlFVRkJRU3hEUVVGTFRDeFJRVUZCUVN4RFFVRlhTeXhKUVVGQlFTeERRVUZMVEN4UlFVRkJRU3hGUVVGWkxFVkJRVUVzUTBGRGFrTkxMRWxCUVVGQkxFTkJRVXRETEU5QlFVRkJMRU5CUVZGRUxFbEJRVUZCTEVOQlFVdE1MRkZCUVVGQkxFTkJRVUZCTEVOQlIzUkNTaXhQUVVGQlFTeERRVUZSU1N4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlFTeERRVU5tU3l4SlFVRkJRU3hEUVVGTFRDeFJRVUZCUVN4RFFVRlhRU3hSUVVGQlFTeERRVU5vUWtzc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRMW9zU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVWdzU1VGQlFVRXNRMEZCUzFBc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN5eERRVU5vUTBnc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhGUVVGQkxFTkJRMllzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVW9zU1VGQlFVRXNRMEZCUzFBc1NVRkJRVUVzUTBGQlRWY3NRMEZCUVVFc1JVRkJRVUVzUTBGRE0wSktMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVV0VUxGRkJRVUZCTEVOQlFWTlZMRXRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUzNaRFF5eEpRVUZCUVN4VFFVRkJRU3hGUVVGQlFTeERRVU5KTEVkQlFVRXNRMEZCU1dJc1NVRkJRVUVzUTBGQlJVRXNTVUZCUVVFc1EwRkJTVU1zU1VGQlFVRXNRMEZCUlVFc1NVRkJRVUVzUTBGQlFVRXNRMEZCVTAwc1NVRkJRVUVzUTBGRGNrSXNUVUZCVHl4RFFVRkZVQ3hKUVVGQlFTeERRVUZCUVN4SlFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRkJRU3hKUVVGQlFTeERRVUZCUVN4RFFVZHVRa2dzUjBGQlFVRXNRMEZCU1dkQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUTBvc1IwRkJTVUVzUTBGQlFVRXNXVUZCWVdwQ0xFMUJRVUZCTEVOQlEySXNTVUZCU3l4SlFVRkpZU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVZ3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vvc1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMEpLTEVsQlFVRkJMRU5CUVV0RkxFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVWQlFVMUhMRU5CUVVGQkxFTkJRVVZNTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJSMnhETEVkQlFVbEhMRU5CUVVGQkxGbEJRV0ZETEV0QlFVRkJMRU5CUTNCQ0xFbEJRVXNzU1VGQlNVd3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsSUxFbEJRVUZCTEVOQlFVdFFMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxLTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNTaXhKUVVGQlFTeERRVUZMUlN4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hGUVVGTlJ5eERRVUZCUVN4RFFVRkZTaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVV0b1F5eEpRVUZMTEVsQlFVbEVMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNDeEpRVUZCUVN4RFFVRkxVQ3hKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU16UWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKU2l4SlFVRkJRU3hEUVVGTFRpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTXpRa29zU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRVY3NRMEZCUVVFc1EwRk5ia05vUWl4UlFVRkJRU3hEUVVGVFowSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGRFZDeEhRVUZKUVN4RFFVRkJRU3haUVVGaGFrSXNUVUZCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxoTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpTQ3hKUVVGQlFTeERRVUZMVUN4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVNelFpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNpeEpRVUZCUVN4RFFVRkxUaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU16UWtvc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1JVRkJUVWNzUTBGQlFVRXNRMEZCUlV3c1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTMEZIYkVNc1IwRkJTVWNzUTBGQlFVRXNXVUZCWVVNc1MwRkJRVUVzUTBGRGNFSXNTVUZCU3l4SlFVRkpUQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVZ3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vvc1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMEpLTEVsQlFVRkJMRU5CUVV0RkxFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVWQlFVMUhMRU5CUVVGQkxFTkJRVVZLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlMyaERMRWxCUVVzc1NVRkJTVVFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbElMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ0xFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsS0xFbEJRVUZCTEVOQlFVdE9MRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DU2l4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RlFVRk5SeXhEUVVGQlFTeERRVTF1UTJoQ0xGRkJRVUZCTEVOQlFWTm5RaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVTlVMRWRCUVVsQkxFTkJRVUZCTEZsQlFXRnFRaXhOUVVGQlFTeERRVU5pTEVsQlFVc3NTVUZCU1dFc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxJTEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbEhMRU5CUVVGQkxFTkJRVVZpTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUTNoQ1NpeEpRVUZCUVN4RFFVRkxSU3hKUVVGQlFTeERRVUZMUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeEZRVUZOUnl4RFFVRkJRU3hEUVVGRlRDeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVVkc1F5eEhRVUZKUnl4RFFVRkJRU3haUVVGaFF5eExRVUZCUVN4RFFVTndRaXhKUVVGTExFbEJRVWxNTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpTQ3hKUVVGQlFTeERRVUZMVUN4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVNelFpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNpeEpRVUZCUVN4RFFVRkxUaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU16UWtvc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1JVRkJUVWNzUTBGQlFVRXNRMEZCUlVvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1MwRkxhRU1zU1VGQlN5eEpRVUZKUkN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVWdzU1VGQlFVRXNRMEZCUzFBc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRE0wSXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVb3NTVUZCUVVFc1EwRkJTMDRzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBKS0xFbEJRVUZCTEVOQlFVdEZMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFVkJRVTFITEVOQlFVRkJMRU5CVFc1RGFFSXNVMEZCUVVFc1JVRkJRVUVzUTBGRFNWTXNTVUZCUVVFc1EwRkJTMFlzUjBGQlFVRXNRMEZCU1Zjc1MwRkJRVUVzUlVGRFJYSkNMRWxCUVVGQkxFTkJRVXR6UWl4TlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVbHdRbTVDTEZOQlFVRkJMRVZCUVVGQkxFTkJRMGtzU1VGQlNXOUNMRk5CUVVGQkxFTkJRVmtzU1VGQlNYSkNMRTFCUVVGQkxFTkJRVThzUTBGQlJVY3NTVUZCUVVFc1EwRkJUVThzU1VGQlFVRXNRMEZCUzA0c1NVRkJRVUVzUTBGQlRVRXNTVUZCUVVFc1EwRkJUVTBzU1VGQlFVRXNRMEZCUzFBc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRla1FzU1VGQlN5eEpRVUZKVlN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVWdzU1VGQlFVRXNRMEZCUzFBc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRE0wSXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVb3NTVUZCUVVFc1EwRkJTMDRzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBKUExGTkJRVUZCTEVOQlFWVlVMRWxCUVVGQkxFTkJRVXRGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRJTEVsQlFVRkJMRU5CUVV0RkxFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6VkRVaXhOUVVGQlFTeERRVUZQUXl4SlFVRkJRU3hEUVVGTFl5eFRRVUZCUVN4RFFVRkJRU3hEUVVGWFlpeEhRVUZCUVN4RFFVRkpReXhIUVVGQlFTeEZRVUZCUVN4RFFVTjJRa01zU1VGQlFVRXNRMEZCUzBRc1IwRkJRVUVzUTBGQlFVRXNRMEZCVDFrc1UwRkJRVUVzUTBGQlZWb3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpPVUpTTEVkQlFVRkJMRU5CUVVseFFpeFJRVUZCUVN4RlFVRlhMRU5CUVVOSUxFdEJRVUZCTEVOQlFVRkJMRWRCUVZWSkxFZEJRVUZCTEVkQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUTNSQ0xFbEJRVXNzU1VGQlNWWXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsSUxFbEJRVUZCTEVOQlFVdFFMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxLTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3NRMEZEYUVNc1NVRkJTVXNzUzBGQlFVRXNRMEZCVVZRc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkRla0pLTEVsQlFVRkJMRU5CUVV0RkxFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdFJMRkZCUVVGQkxFTkJRVk5JTEV0QlFVRkJMRU5CUVU5T0xFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzJwRVlpeExRVUZCUVN4RlFVRkJRU3hEUVVOSmRVSXNUMEZCUVVFc1EwRkJVVU1zUzBGQlFVRXNRMEZCVFdZc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJRVUVzUTBGSGRrSllMRWRCUVVGQkxFVkJRVUZCTEVOQlEwbDFRaXhQUVVGQlFTeERRVUZSUlN4SFFVRkJRU3hEUVVGSmFFSXNTVUZCUVVFc1EwRkJTMmxDTEU5QlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlIzSkNNVUlzVDBGQlFVRXNSVUZCUVVFc1EwRkxTU3hQUVVwQlV5eEpRVUZCUVN4RFFVRkxUQ3hSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEYUVKTUxFMUJRVUZCTEVOQlFVOVJMRWRCUVVGQkxFTkJRVWxGTEVsQlFVRkJMRU5CUVUxVExFdEJRVUZCTEVWQlFVRkJMRU5CUTJKVUxFbEJRVUZCTEVOQlFVdE1MRkZCUVVGQkxFTkJRVk4xUWl4SlFVRkJRU3hEUVVGTFZDeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVm9RbFFzU1VGQlFVRXNRMEZCUzB3c1VVRkJRVUVzUTBGSGFFSktMRTlCUVVGQkxFTkJRVkZETEUxQlFVRkJMRU5CUVZNc1EwRkJSVU1zU1VGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVkRExFbEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRPVUpOTEVsQlFVRkJMRU5CUVV0cFFpeFBRVUZCUVN4RlFVRkJRU3hEUVVOTWFrSXNTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVDBRc1RVRkJRVUVzUTBGQlQwTXNTVUZCUVVFc1EwRkRia0pQTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVOUdMRTFCUVVGQkxFTkJRVTlGTEVsQlFVRkJMRU5CUTI1Q1RTeEpRVUZCUVN4RFFVRkxReXhQUVVGQlFTeERRVUZSUkN4SlFVRkJRU3hEUVVGTFRDeFJRVUZCUVN4RFFVRkJRU3hEUVVkMFFrb3NWVUZCUVVFc1EwRkJRVUVzUjBGQlkwY3NTVUZCUVVFc1EwRkJRVUVzUTBGRFZpeEpRVUZKWlN4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGRldpeEpRVUZMTEVsQlFVbE9MRU5CUVVGQkxFbEJRVXRVTEVsQlFVRkJMRU5CUTFabExFdEJRVUZCTEVOQlFVMVRMRWxCUVVGQkxFTkJRVXRXTEV0QlFVRkJMRU5CUVUxWExFbEJRVUZCTEVOQlFVdHVRaXhKUVVGQlFTeERRVUZMUlN4SlFVRkJRU3hEUVVGTmEwSXNSMEZCUVVFc1JVRkRkRUpCTEVkQlFVRkJMRU5CUVVreFFpeEpRVUZCUVN4RFFVRkxVeXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbDRRaXhQUVVGUFRTeExRVUZCUVN4RFFVZFliRUlzVDBGQlFVRXNRMEZCUVVFc1IwRkJWMFVzU1VGQlFVRXNRMEZCUVVFc1EwRkRVQ3hKUVVGSlowSXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJSVm9zU1VGQlN5eEpRVUZKV1N4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWEpDTEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVMDBRaXhEUVVGQlFTeEZRVUZCUVN4RFFVTjJRalZDTEVsQlFVRkJMRU5CUVVzMlFpeFJRVUZCUVN4RFFVRlRSQ3hEUVVGQlFTeERRVUZCUVN4RlFVTmtXaXhMUVVGQlFTeERRVUZOVXl4SlFVRkJRU3hEUVVGTGJFSXNTVUZCUVVFc1EwRkJTMFVzU1VGQlFVRXNRMEZCUzIxQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTVGRDTEU5QlFVOWFMRXRCUVVGQkxFTkJSMWhzUWl4UFFVRkJRU3hQUVVGQlFTeERRVUZsWjBNc1RVRkJRVUVzUTBGQlFVRXNRMEZEV0N4SlFVRkpReXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZKV2l4UFFVaEJiRU1zVFVGQlFVRXNRMEZCVDFFc1IwRkJRVUVzUTBGQlNYbENMRTFCUVVGQkxFTkJRVkZrTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlpsTEV0QlFVRkJMRU5CUVUxT0xFbEJRVUZCTEVOQlFVdFVMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVkpsTEV0QlFVRkJMRU5CUjFocVF5eFBRVUZCUVN4UlFVRkJRU3hEUVVGblFtdERMRU5CUVVGQkxFTkJRVWtzU1VGQlNXNURMRTFCUVVGQkxFTkJRVlZ2UXl4RFFVRkJRU3hEUVVGQlFTeERRVU01UWl4SlFVRkpMMElzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVsR0xFbEJRVUZCTEVOQlFVOW5ReXhEUVVGQlFTeERRVUZGYUVNc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJUeXRDTEVOQlFVRkJMRU5CUVVVdlFpeEpRVUZCUVN4RFFVVXpReXhIUVVGSlowTXNRMEZCUVVFc1dVRkJZWEJETEUxQlFVRkJMRU5CUTJJc1NVRkJTeXhKUVVGSllTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1ZZc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRGRFSXNTVUZCU3l4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNWWXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRkRUpVTEZGQlFVRkJMRU5CUVZOMVFpeEpRVUZCUVN4RFFVRkxUeXhEUVVGQlFTeERRVUZGZGtJc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMzTkNMRU5CUVVGQkxFTkJRVVY0UWl4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4TFFVazVReXhIUVVGSmMwSXNRMEZCUVVFc1dVRkJZV3hDTEV0QlFVRkJMRU5CUTJ4Q0xFbEJRVXNzU1VGQlNVd3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVselFpeERRVUZCUVN4RFFVRkZhRU1zU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZEZUVJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1hGQ0xFTkJRVUZCTEVOQlFVVXZRaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU40UWxRc1VVRkJRVUVzUTBGQlUzVkNMRWxCUVVGQkxFTkJRVXRQTEVOQlFVRkJMRU5CUVVWMlFpeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVRkxjMElzUTBGQlFVRXNRMEZCUlhaQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlN6RkRMRWxCUVVzc1NVRkJTVVFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbElMRWxCUVVGQkxFTkJRVXRRTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ0xFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsS0xFbEJRVUZCTEVOQlFVdE9MRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DVkN4UlFVRkJRU3hEUVVGVGRVSXNTVUZCUVVFc1EwRkJTMDhzUTBGQlFVRXNRMEZCUlhaQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdHpRaXhEUVVGQlFTeERRVUZCUVN4RFFVdDZReXhQUVVGUExFbEJRVWx3UXl4TlFVRkJRU3hEUVVGUExFTkJRVVZITEVsQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVUxRExGRkJRVUZCTEVOQlFVRkJMRkZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNCRFNpeFBRVUZCUVN4SFFVRkJRU3hEUVVGWGEwTXNRMEZCUVVFc1EwRkJTU3hKUVVGSmJrTXNUVUZCUVVFc1EwRkJWVzlETEVOQlFVRkJMRU5CUVVGQkxFTkJRM3BDTEVsQlFVa3ZRaXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCU1VZc1NVRkJRVUVzUTBGQlQyZERMRU5CUVVGQkxFTkJRVVZvUXl4SlFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRlBLMElzUTBGQlFVRXNRMEZCUlM5Q0xFbEJRVUZCTEVOQlJUTkRMRWRCUVVsblF5eERRVUZCUVN4WlFVRmhjRU1zVFVGQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsaExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVOMFFpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjBRbFFzVVVGQlFVRXNRMEZCVTNWQ0xFbEJRVUZCTEVOQlFVdFBMRU5CUVVGQkxFTkJRVVYyUWl4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGTGMwSXNRMEZCUVVFc1EwRkJSWGhDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlNUbERMRWRCUVVselFpeERRVUZCUVN4WlFVRmhiRUlzUzBGQlFVRXNRMEZEYkVJc1NVRkJTeXhKUVVGSlRDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1hOQ0xFTkJRVUZCTEVOQlFVVm9ReXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU40UWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKY1VJc1EwRkJRVUVzUTBGQlJTOUNMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRM2hDVkN4UlFVRkJRU3hEUVVGVGRVSXNTVUZCUVVFc1EwRkJTMDhzUTBGQlFVRXNRMEZCUlhaQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdHpRaXhEUVVGQlFTeERRVUZGZGtJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGTE1VTXNTVUZCU3l4SlFVRkpSQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVZ3NTVUZCUVVFc1EwRkJTMUFzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETTBJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1Vvc1NVRkJRVUVzUTBGQlMwNHNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRNMEpVTEZGQlFVRkJMRU5CUVZOMVFpeEpRVUZCUVN4RFFVRkxUeXhEUVVGQlFTeERRVUZGZGtJc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMzTkNMRU5CUVVGQkxFTkJRVUZCTEVOQlMzcERMRTlCUVU4c1NVRkJTWEJETEUxQlFVRkJMRU5CUVU4c1EwRkJSVWNzU1VGQlFVRXNRMEZCUVVFc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJRVUVzU1VGQlFVRXNRMEZCVFVNc1VVRkJRVUVzUTBGQlFVRXNVVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY0VOS0xFOUJRVUZCTEZGQlFVRkJMRU5CUVdkQ2EwTXNRMEZCUVVFc1EwRkJTU3hKUVVGSmJrTXNUVUZCUVVFc1EwRkJWVzlETEVOQlFVRkJMRU5CUVVGQkxFTkJRemxDTEVsQlFXMUNha01zU1VGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQmNrSkRMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVVZtTEVkQlFVa3JRaXhEUVVGQlFTeFpRVUZoY0VNc1RVRkJRVUVzUTBGQlVTeERRVVZ5UWl4SFFVRkpiVU1zUTBGQlFVRXNRMEZCUlM5Q0xFbEJRVUZCTEVkQlFWTm5ReXhEUVVGQlFTeERRVUZGYWtNc1NVRkJRVUVzUTBGRllpeFBRVUZCTEV0QlJFRnhRaXhQUVVGQlFTeERRVUZSUlN4SFFVRkJRU3hEUVVGSkxHMURRVUZCTEVOQlFVRXNRMEZKYUVKMlFpeEpRVUZCUVN4RFFVRlBaME1zUTBGQlFVRXNRMEZCUldoRExFbEJRVUZCTEVOQlExUkRMRWxCUVVGQkxFTkJRVTluUXl4RFFVRkJRU3hEUVVGRmFFTXNTVUZCUVVFc1EwRkZWQ3hKUVVGTExFbEJRVWxUTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpWaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU4wUWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKVml4SlFVRkJRU3hEUVVGTlZTeERRVUZCUVN4RlFVRkJRU3hEUVVGTExFTkJRek5DTEVsQlFVbDFRaXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZEVml4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKU0N4RFFVRkJRU3hEUVVGRkwwSXNTVUZCUVVFc1EwRkJUV3RETEVOQlFVRkJMRVZCUVVGQkxFTkJRM2hDUkN4SFFVRkJRU3hGUVVGUFJpeERRVUZCUVN4RFFVRkZka0lzU1VGQlFVRXNRMEZCUzBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjNsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVV0R0xFTkJRVUZCTEVOQlFVVjRRaXhKUVVGQlFTeERRVUZMTUVJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjNoQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUlhCRFZDeFJRVUZCUVN4RFFVRlRkVUlzU1VGQlFVRXNRMEZCUzFNc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGSmNrSXNSMEZCU1VRc1EwRkJRVUVzV1VGQllXeENMRXRCUVVGQkxFTkJRVThzUTBGRmVrSm1MRWxCUVVGQkxFTkJRVTluUXl4RFFVRkJRU3hEUVVGRmFFTXNTVUZCUVVFc1EwRkRWRU1zU1VGQlFVRXNRMEZCVHl0Q0xFTkJRVUZCTEVOQlFVVXZRaXhKUVVGQlFTeERRVVZVTEVsQlFVc3NTVUZCU1ZNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWx6UWl4RFFVRkJRU3hEUVVGRmFFTXNTVUZCUVVFc1EwRkJUVlVzUTBGQlFVRXNSVUZCUVVFc1EwRkRlRUlzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWEZDTEVOQlFVRkJMRU5CUVVVdlFpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjRRbFFzVVVGQlFVRXNRMEZCVTNWQ0xFbEJRVUZCTEVOQlFVdFBMRU5CUVVGQkxFTkJRVVYyUWl4SlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGTGMwSXNRMEZCUVVFc1EwRkJSWFpDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCU3pGRExFbEJRVXNzU1VGQlNVUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsSUxFbEJRVUZCTEVOQlFVdFFMRWxCUVVGQkxFTkJRVTFWTEVOQlFVRkJMRVZCUVVGQkxFTkJRek5DTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxLTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNWQ3hSUVVGQlFTeERRVUZUZFVJc1NVRkJRVUVzUTBGQlMwOHNRMEZCUVVFc1EwRkJSWFpDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVV0elFpeERRVUZCUVN4RFFVRkJRU3hEUVV0NlF5eFBRVUZQTEVsQlFVbHdReXhOUVVGQlFTeERRVUZQTEVOQlFVVkhMRWxCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVRkJMRWxCUVVGQkxFTkJRVTFETEZGQlFVRkJMRU5CUVVGQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0JEU2l4UFFVRkJRU3hOUVVGQlFTeERRVUZqYTBNc1EwRkJRVUVzUTBGQlNTeEpRVUZKYmtNc1RVRkJRVUVzUTBGQlZXOURMRU5CUVVGQkxFTkJRVUZCTEVOQlF6VkNMRWxCUVcxQ2FrTXNTVUZCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCY2tKRExGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVVm1MRWRCUVVrclFpeERRVUZCUVN4WlFVRmhjRU1zVFVGQlFVRXNRMEZCVVN4RFFVVnlRaXhIUVVGSmJVTXNRMEZCUVVFc1EwRkJSUzlDTEVsQlFVRkJMRWRCUVZOblF5eERRVUZCUVN4RFFVRkZha01zU1VGQlFVRXNRMEZGWWl4UFFVRkJMRXRCUkVGeFFpeFBRVUZCUVN4RFFVRlJSU3hIUVVGQlFTeERRVUZKTEcxRFFVRkJMRU5CUVVFc1EwRkphRUoyUWl4SlFVRkJRU3hEUVVGUFowTXNRMEZCUVVFc1EwRkJSV2hETEVsQlFVRkJMRU5CUTFSRExFbEJRVUZCTEVOQlFVOW5ReXhEUVVGQlFTeERRVUZGYUVNc1NVRkJRVUVzUTBGRlZDeEpRVUZMTEVsQlFVbFRMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjBRaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpWaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlF6TkNMRWxCUVVsMVFpeEhRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkRWaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpTQ3hEUVVGQlFTeERRVUZGTDBJc1NVRkJRVUVzUTBGQlRXdERMRU5CUVVGQkxFVkJRVUZCTEVOQlEzaENSQ3hIUVVGQlFTeEZRVUZSUml4RFFVRkJRU3hEUVVGRmRrSXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSM2xDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRHTEVOQlFVRkJMRU5CUVVWNFFpeEpRVUZCUVN4RFFVRkxNRUlzUTBGQlFVRXNRMEZCUVVFc1EwRkJSM2hDTEVOQlFVRkJMRU5CUVVGQkxFVkJRVThzUTBGQlFTeERRVVUxUTFRc1VVRkJRVUVzUTBGQlUzVkNMRWxCUVVGQkxFTkJRVXRUTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCU1hKQ0xFZEJRVWxFTEVOQlFVRkJMRmxCUVdGc1FpeExRVUZCUVN4RFFVRlBMRU5CUlhwQ1ppeEpRVUZCUVN4RFFVRlBaME1zUTBGQlFVRXNRMEZCUldoRExFbEJRVUZCTEVOQlExUkRMRWxCUVVGQkxFTkJRVThyUWl4RFFVRkJRU3hEUVVGRkwwSXNTVUZCUVVFc1EwRkZWQ3hKUVVGTExFbEJRVWxUTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpjMElzUTBGQlFVRXNRMEZCUldoRExFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlEzaENMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHhRaXhEUVVGQlFTeERRVUZGTDBJc1NVRkJRVUVzUTBGQlRWVXNRMEZCUVVFc1JVRkJRVUVzUTBGRGVFSlVMRkZCUVVGQkxFTkJRVk4xUWl4SlFVRkJRU3hEUVVGTlR5eERRVUZCUVN4RFFVRkZka0lzU1VGQlFVRXNRMEZCUzBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNOQ0xFTkJRVUZCTEVOQlFVVjJRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RlFVRlBMRU5CUVVFc1EwRkJRU3hEUVVGQkxFdEJTMnhFTEVsQlFVc3NTVUZCU1VRc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxJTEVsQlFVRkJMRU5CUVV0UUxFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbEtMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVUxVkxFTkJRVUZCTEVWQlFVRkJMRU5CUXpOQ1ZDeFJRVUZCUVN4RFFVRlRkVUlzU1VGQlFVRXNRMEZCVFU4c1EwRkJRVUVzUTBGQlJYWkNMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXR6UWl4RFFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlFTeERRVXRvUkN4UFFVRlBMRWxCUVVsd1F5eE5RVUZCUVN4RFFVRlBMRU5CUVVWSExFbEJRVUZCTEVOQlFVRkJMRWxCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVOQlFVMURMRkZCUVVGQkxFTkJRVUZCTEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzQkRTaXhQUVVGQlFTeFRRVUZCUVN4RFFVRnBRbWRETEUxQlFVRkJMRU5CUVZNc1NVRkJTV3BETEUxQlFVRkJMRU5CUVVGQkxFTkJRekZDTEU5QlFVOUJMRTFCUVVGQkxFTkJRVTlSTEVkQlFVRkJMRU5CUVVsNVFpeE5RVUZCUVN4RFFVRlRaQ3hMUVVGQlFTeEZRVU5vUW5KQ0xFbEJRVUZCTEVOQlFVdHpRaXhOUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVsd1FtNUNMRTlCUVVGQkxGTkJRVUZCTEVOQlFXbENaME1zVFVGQlFVRXNRMEZCVXl4SlFVRkpha01zVFVGQlFVRXNRMEZCUVVFc1EwRkRNVUlzU1VGQlNYRkNMRk5CUVVGQkxFTkJRVmtzU1VGQlNYSkNMRTFCUVVGQkxFTkJRVThzUTBGQlJVY3NTVUZCUVVFc1EwRkJUVGhDTEUxQlFVRkJMRU5CUVU4M1FpeEpRVUZCUVN4RFFVRk5RU3hKUVVGQlFTeERRVUZOTmtJc1RVRkJRVUVzUTBGQlR6bENMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUXpkRUxFbEJRVXNzU1VGQlNWVXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsdlFpeE5RVUZCUVN4RFFVRlBPVUlzU1VGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUlVGQlFVRXNRMEZETjBJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1cxQ0xFMUJRVUZCTEVOQlFVODNRaXhKUVVGQlFTeERRVUZOVlN4RFFVRkJRU3hGUVVGQlFTeERRVU0zUWs4c1UwRkJRVUVzUTBGQlZWUXNTVUZCUVVFc1EwRkJTMFVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJTMjlDTEUxQlFVRkJMRU5CUVU5eVFpeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVYzVReXhQUVVGUFR5eFRRVUZCUVN4RFFVZFljRUlzVDBGQlFVRXNSMEZCUVVFc1EwRkJWMmRETEUxQlFVRkJMRU5CUVZNc1NVRkJTV3BETEUxQlFVRkJMRU5CUVZWelFpeFJRVUZCUVN4RlFVRlhMRWxCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGVrTXNTVUZCU1VRc1UwRkJRVUVzUTBGQldTeEpRVUZKY2tJc1RVRkJRVUVzUTBGQlR5eERRVUZGUnl4SlFVRkJRU3hEUVVGTk9FSXNUVUZCUVVFc1EwRkJUemxDTEVsQlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVMDJRaXhOUVVGQlFTeERRVUZQTjBJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkROMFFzU1VGQlN5eEpRVUZKVXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVzlDTEUxQlFVRkJMRU5CUVU4NVFpeEpRVUZCUVN4RFFVRk5WU3hEUVVGQlFTeEZRVUZCUVN4RFFVTTNRaXhKUVVGTExFbEJRVWxETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpiVUlzVFVGQlFVRXNRMEZCVHpkQ0xFbEJRVUZCTEVOQlFVMVZMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3NRMEZEYkVNc1NVRkJTVXNzUzBGQlFVRXNRMEZCVVdNc1RVRkJRVUVzUTBGQlQzSkNMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRek5DVHl4VFFVRkJRU3hEUVVGVlZDeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVRkxVU3hSUVVGQlFTeERRVUZUU0N4TFFVRkJRU3hEUVVGUFRpeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVZHNSQ3hQUVVGUFR5eFRRVUZCUVN4RFFVZFljRUlzVDBGQlFVRXNVMEZCUVVFc1EwRkJhVUpKTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRM2hDTEU5QlFVOHNTVUZCU1V3c1RVRkJRVUVzUTBGQlR5eERRVUZGUnl4SlFVRkJRU3hEUVVGTlJTeFJRVUZCUVN4RFFVRlRhME1zVFVGQlFVRXNRMEZCVVc1RExFbEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkhReXhSUVVGQlFTeERRVUZCUVN4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDRSRW9zVDBGQlFVRXNUMEZCUVVFc1EwRkJaVU1zVFVGQlFVRXNRMEZCVXl4RFFVRkZReXhKUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjBNc1NVRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVYzJRaXhOUVVGQlFTeERRVUZSTEVsQlFVbHFReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkd1JDeFBRVVpCUlN4TlFVRkJRU3hEUVVGUFJ5eFJRVUZCUVN4RFFVRlhUQ3hOUVVGQlFTeERRVUZQTWtJc1QwRkJRVUVzUTBGQlVYcENMRTFCUVVGQkxFTkJRVThyUWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4UFFVTnFReTlDTEUxQlFVRkJMRU5CUVU4clFpeE5RVUZCUVN4RFFVTlFMRWxCUVVscVF5eE5RVUZCUVN4RFFVRlBSU3hOUVVGQlFTeERRVUZCUVN4RFFVZDBRa1FzVDBGQlFVRXNVMEZCUVVFc1EwRkJhVUpuUXl4TlFVRkJRU3hEUVVGVExFbEJRVWxxUXl4TlFVRkJRU3hEUVVGQlFTeERRVU14UWl4SlFVRkpTeXhSUVVGQlFTeERRVUZYYlVNc1NVRkJRVUVzUTBGQlMwTXNVMEZCUVVFc1EwRkJWWHBETEUxQlFVRkJMRU5CUVU4eVFpeFBRVUZCUVN4RFFVRlJUU3hOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVNM1F5eFBRVUZQTEVsQlFVbHFReXhOUVVGQlFTeERRVUZQTEVOQlFVVkhMRWxCUVVGQkxFTkJRVTA0UWl4TlFVRkJRU3hEUVVGUE9VSXNTVUZCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCVFRaQ0xFMUJRVUZCTEVOQlFVODNRaXhKUVVGQlFTeERRVUZOUXl4UlFVRkJRU3hEUVVGQlFTeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWM1UkVvc1QwRkJRVUVzVVVGQlFVRXNRMEZCWjBKcFF5eExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJRU3hEUVVOd1FpeEpRVUZKUkN4TlFVRkJRU3hEUVVGVGFrTXNUVUZCUVVFc1EwRkJUekJETEUxQlFVRkJMRU5CUVU5U0xFdEJRVUZCTEVOQlFVMUxMRTFCUVVGQkxFTkJRVUZCTEVOQlEycERMRWxCUVVzc1NVRkJTVEZDTEVOQlFVRkJMRWxCUVV0dlFpeE5RVUZCUVN4RFFVRlBja0lzU1VGQlFVRXNRMEZEYWtJc1NVRkJTeXhKUVVGSlJTeERRVUZCUVN4SlFVRkxiVUlzVFVGQlFVRXNRMEZCVDNKQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlEyeENRU3hEUVVGQlFTeEZRVUZMUXl4RFFVRkJRU3hIUVVOTWJVSXNUVUZCUVVFc1EwRkJUM0pDTEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVV0dlFpeExRVUZCUVN4RFFVRk5ja0lzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTGRFTXNUMEZFUVc5Q0xFMUJRVUZCTEVOQlFVOU9MRTlCUVVGQkxFVkJRVUZCTEVOQlEwRk5MRTFCUVVGQkxFTkJSMWhvUXl4UFFVRkJRU3hKUVVGQlFTeERRVUZaTUVNc1NVRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVRXNRMEZEWml4SlFVRkpWaXhOUVVGQlFTeERRVUZUYWtNc1RVRkJRVUVzUTBGQlR6QkRMRTFCUVVGQkxFTkJRVTlETEVsQlFVRkJMRU5CUVVGQkxFTkJRek5DTEVsQlFVc3NTVUZCU1RsQ0xFTkJRVUZCTEVsQlFVdHZRaXhOUVVGQlFTeERRVUZQY2tJc1NVRkJRVUVzUTBGRGFrSXNTVUZCU3l4SlFVRkpSU3hEUVVGQlFTeEpRVUZMYlVJc1RVRkJRVUVzUTBGQlQzSkNMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVGQkxFTkJRMnhDUVN4RFFVRkJRU3hGUVVGTFF5eERRVUZCUVN4SFFVTk1iVUlzVFVGQlFVRXNRMEZCVDNKQ0xFbEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUzJoRExFOUJSRUZ0UWl4TlFVRkJRU3hEUVVGUFRpeFBRVUZCUVN4RlFVRkJRU3hEUVVOQlRTeE5RVUZCUVN4RFFVZFlhRU1zVDBGQlFVRXNUVUZCUVVFc1EwRkJZekJETEVsQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGQkxFTkJRMnBDTEU5QlFVOHNTVUZCU1RORExFMUJRVUZCTEVOQlFVOHNRMEZCUlVjc1NVRkJRVUVzUTBGQlRYZERMRWxCUVVGQkxFTkJRVTEyUXl4SlFVRkJRU3hEUVVGTmRVTXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITVVNeFF5eFBRVUZCUVN4alFVRkJRU3hEUVVGelFtZERMRTFCUVVGQkxFTkJRVk1zU1VGQlNXcERMRTFCUVVGQkxFTkJRVUZCTEVkQlFXRkpMRWxCUVVGQkxFTkJRVUZCTEVOQlF6VkRMRWxCUVVsbExFdEJRVUZCTEVOQlFWRmpMRTFCUVVGQkxFTkJRVTlYTEZWQlFVRkJMRU5CUVVGQkxFZEJRV040UXl4SlFVRkJRU3hEUVVGQlFTeERRVU0zUWtNc1VVRkJRVUVzUTBGQlYyRXNTMEZCUVVFc1EwRkJUVEpDTEU5QlFVRkJMRU5CUVZFeFFpeExRVUZCUVN4RFFVRkJRU3hEUVVONlFrVXNVMEZCUVVFc1EwRkJXU3hKUVVGSmNrSXNUVUZCUVVFc1EwRkJUeXhEUVVGRlJ5eEpRVUZCUVN4RFFVRk5aMElzUzBGQlFVRXNRMEZCVFc5Q0xFMUJRVUZCTEVOQlFWRnVReXhKUVVGQlFTeERRVUZOTmtJc1RVRkJRVUVzUTBGQlR6ZENMRWxCUVVGQkxFTkJRVTFETEZGQlFVRkJMRU5CUVVGQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWEJGTEU5QlJFRm5RaXhUUVVGQlFTeERRVUZWZVVJc1UwRkJRVUVzUlVGQlFVRXNRMEZEU0hwQ0xGTkJRVUZCTEVOQlIxaHdRaXhQUVVGQlFTeFZRVUZCUVN4RFFVRnJRamhETEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGSk1VTXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVUVzUTBGRk1VTXNTVUZCU1RKRExHZENRVUZCUVN4RFFVRnRRaXhGUVVGQkxFTkJRM1pDTEVsQlFVc3NTVUZCU1c1RExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKYTBNc1ZVRkJRVUVzUTBGQlYxSXNUVUZCUVVFc1EwRkJVVEZDTEVOQlFVRkJMRVZCUVVGQkxFTkJRMjVEYlVNc1owSkJRVUZCTEVOQlFXbENjRUlzU1VGQlFVRXNRMEZCU3l4RFFVRkZla0lzU1VGQlFVRXNRMEZCVFRSRExGVkJRVUZCTEVOQlFWZHNReXhEUVVGQlFTeERRVUZCUVN4RFFVRkpWQ3hKUVVGQlFTeERRVUZOTWtNc1ZVRkJRVUVzUTBGQlFVRXNSVUZCWVd4RExFTkJRVUZCTEVOQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSE1VVXNTVUZCU1c5RExGVkJRVUZCTEVOQlFXTkRMRXRCUVVGQkxFVkJRVUZCTEVOQlEyUXNTVUZCU1dwQ0xFMUJRVUZCTEVOQlFWTXNTVUZCU1dwRExFMUJRVUZCTEVOQlFVOW5SQ3huUWtGQlFVRXNRMEZCYVVKRkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJWM3BETEU5QlZFbEJMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeEZRVUZMUml4blFrRkJRVUVzUTBGQmFVSlVMRTFCUVVGQkxFTkJRemxDVGl4TlFVRkJRU3hEUVVGUGVrSXNSMEZCUVVFc1EwRkJTVmNzUzBGQlFVRXNSVUZEUVdRc1VVRkJRVUVzUTBGQlUxVXNTMEZCUVVFc1JVRkJRVUVzUlVGQlZ5eERRVUZCTEVOQlFVRXNRMEZITDBKclFpeE5RVUZCUVN4RFFVRlBla0lzUjBGQlFVRXNRMEZCU1Zjc1MwRkJRVUVzUlVGRFFUaENMRlZCUVVGQkxFTkJRVmRETEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSE0wSnFRaXhOUVVGQlFTeERRVUZCUVN4RFFVZFlMRTlCUVU5blFpeFZRVUZCUVN4RFFVRlhMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJTVEZDUlN4alFVRlBReXhEUVVGVmNFUXNUVUZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwidmFyIF8kQXJyYXlMaWJyYXJ5XzE0PWZ1bmN0aW9uKCl7bGV0IHNlbGY9e2NvbWJpbmU6KGhheXN0YWNrLGZpcnN0LHNlY29uZCxwb3MpPT57bGV0IGF0MT1wb3M9cG9zfHwwLGF0Mj1maXJzdD09PXNlY29uZD9wb3MrMTpwb3Msc3RhcnQ9c2VsZi5pbmRleEF0KGhheXN0YWNrLGZpcnN0LGF0MSksZW5kPXNlbGYuaW5kZXhBdChoYXlzdGFjayxzZWNvbmQsYXQyKSsxO3JldHVybi0xPT1zdGFydHx8MD09ZW5kP251bGw6aGF5c3RhY2suc2xpY2Uoc3RhcnQsZW5kKX0saW5CZXR3ZWVuOihoYXlzdGFjayxmaXJzdCxzZWNvbmQscG9zKT0+e2xldCBhdDE9cG9zPXBvc3x8MCxhdDI9Zmlyc3Q9PT1zZWNvbmQ/cG9zKzE6cG9zLHN0YXJ0PXNlbGYuaW5kZXhBdChoYXlzdGFjayxmaXJzdCxhdDEpKzEsZW5kPXNlbGYuaW5kZXhBdChoYXlzdGFjayxzZWNvbmQsYXQyKTtyZXR1cm4gMD09c3RhcnR8fC0xPT1lbmQ/bnVsbDpoYXlzdGFjay5zbGljZShzdGFydCxlbmQpfSxjb250YWluczooaGF5c3RhY2ssbmVlZGxlKT0+e2ZvcihsZXQgaSBpbiBoYXlzdGFjaylpZihoYXlzdGFja1tpXT09bmVlZGxlKXJldHVybiEwO3JldHVybiExfSxpbmRleEF0OihoYXlzdGFjayxuZWVkbGUscG9zKT0+e3Bvcz1wb3N8fDA7bGV0IGNvdW50PS0xO2ZvcihsZXQgaT0wO2k8aGF5c3RhY2subGVuZ3RoO2krKylpZihoYXlzdGFja1tpXT09bmVlZGxlJiYrK2NvdW50PT1wb3MpcmV0dXJuIGk7cmV0dXJuLTF9LGZpbmQ6KGhheXN0YWNrLGNhbGxiYWNrKT0+e2ZvcihsZXQgaSBpbiBoYXlzdGFjaylpZigxPT1jYWxsYmFjayhoYXlzdGFja1tpXSkpcmV0dXJuIGhheXN0YWNrW2ldfSxmaW5kQWxsOihoYXlzdGFjayxjYWxsYmFjayk9PntsZXQgdmFsdWVzPVtdO2ZvcihsZXQgaSBpbiBoYXlzdGFjaykxPT1jYWxsYmFjayhoYXlzdGFja1tpXSkmJnZhbHVlcy5wdXNoKGhheXN0YWNrW2ldKTtyZXR1cm4gdmFsdWVzfSxnZXRPYmplY3Q6KGhheXN0YWNrLGtleSx2YWx1ZSk9PntsZXQgb2JqZWN0O2ZvcihsZXQgaSBpbiBoYXlzdGFjayloYXlzdGFja1tpXVtrZXldPT12YWx1ZSYmKG9iamVjdD1oYXlzdGFja1tpXSk7cmV0dXJuIG9iamVjdH0sZ2V0QWxsT2JqZWN0czooaGF5c3RhY2ssa2V5LHZhbHVlKT0+e2xldCBuZXdBcnJheT1bXTtmb3IobGV0IGkgaW4gaGF5c3RhY2spaGF5c3RhY2tbaV1ba2V5XT09dmFsdWUmJm5ld0FycmF5LnB1c2goaGF5c3RhY2tbaV0pO3JldHVybiBuZXdBcnJheX0sZ2V0QWxsOihoYXlzdGFjayxuZWVkbGUpPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBoYXlzdGFjayloYXlzdGFja1tpXT09bmVlZGxlJiZuZXdBcnJheS5wdXNoKGkpO3JldHVybiBuZXdBcnJheX0scmVtb3ZlQWxsOihoYXlzdGFjayxuZWVkbGUpPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBvZiBoYXlzdGFjaylpIT1uZWVkbGUmJm5ld0FycmF5LnB1c2goaSk7cmV0dXJuIG5ld0FycmF5fSxwdXRBdDooaGF5c3RhY2s9W10sdmFsdWUsa2V5PTApPT57bGV0IG5ld0FycmF5PVtdO2ZvcihsZXQgaSBpbiBoYXlzdGFjaylpZihpPT1rZXkpe25ld0FycmF5W2ldPXZhbHVlO2xldCBuZXh0PU1hdGguZmxvb3Ioa2V5KTtpc05hTihuZXh0KT9uZXh0PWtleSsxOm5leHQrKyxuZXdBcnJheVtuZXh0XT1oYXlzdGFja1tpXX1lbHNlIG5ld0FycmF5W2ldPWhheXN0YWNrW2ldO3JldHVybiBuZXdBcnJheX0scHVzaEFycmF5OihoYXlzdGFjaz1bXSxuZWVkbGUsaW5zZXJ0KT0+e2xldCBwb3NpdGlvbj1zZWxmLmFycmF5SW5kZXgoaGF5c3RhY2ssbmVlZGxlKTtyZXR1cm4gc2VsZi5wdXRBdChoYXlzdGFjayxpbnNlcnQscG9zaXRpb24pfSxhcnJheUluZGV4OihoYXlzdGFjaz1bXSxuZWVkbGU9W10pPT57Zm9yKGxldCBpIGluIGhheXN0YWNrKWlmKEpTT04uc3RyaW5naWZ5KGhheXN0YWNrW2ldKT09SlNPTi5zdHJpbmdpZnkobmVlZGxlKSlyZXR1cm4gaTtyZXR1cm4tMX0saGFzQXJyYXk6KGhheXN0YWNrPVtdLG5lZWRsZT1bXSk9PihoYXlzdGFjaz1KU09OLnN0cmluZ2lmeShoYXlzdGFjayksbmVlZGxlPUpTT04uc3RyaW5naWZ5KG5lZWRsZSksLTEhPWhheXN0YWNrLmluZGV4T2YobmVlZGxlKSksdG9PYmplY3Q6KGFycmF5PVtdLGtleSk9PntsZXQgb2JqZWN0PXt9O2ZvcihsZXQgaSBpbiBhcnJheSlvYmplY3RbYXJyYXlbaV1ba2V5XV09YXJyYXlbaV0sZGVsZXRlIG9iamVjdFthcnJheVtpXVtrZXldXVtrZXldO3JldHVybiBvYmplY3R9LHJlc2hhcGU6cGFyYW1zPT57fSxyYW5kb21QaWNrOmFycmF5PT5hcnJheVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqYXJyYXkubGVuZ3RoKV0scmVtb3ZlRW1wdHk6KGFycmF5PVtdKT0+e2xldCBuZXdBcnJheT1bXTtmb3IobGV0IGkgaW4gYXJyYXkpQXJyYXkuaXNBcnJheShhcnJheVtpXSkmJmFycmF5W2ldLmxlbmd0aD4wP25ld0FycmF5LnB1c2goc2VsZi5yZW1vdmVFbXB0eShhcnJheVtpXSkpOm51bGwhPWFycmF5W2ldJiZudWxsIT1hcnJheVtpXSYmMCE9YXJyYXlbaV0mJlwiXCIhPWFycmF5W2ldJiZuZXdBcnJheS5wdXNoKGFycmF5W2ldKTtyZXR1cm4gbmV3QXJyYXl9LGVhY2g6KGFycmF5PVtdLGNhbGxiYWNrPSgoKT0+e30pKT0+e2xldCBuZXdBcnJheT1bXTtmb3IobGV0IGkgaW4gYXJyYXkpbmV3QXJyYXkucHVzaChjYWxsYmFjayhhcnJheVtpXSxpKSk7cmV0dXJuIG5ld0FycmF5fSxoYXNBcnJheUVsZW1lbnQ6KGhheXN0YWNrPVtdLG5lZWRsZT1bXSk9Pntmb3IobGV0IGkgaW4gbmVlZGxlKWlmKC0xIT1oYXlzdGFjay5pbmRleE9mKG5lZWRsZVtpXSkpcmV0dXJuITA7cmV0dXJuITF9LHRvU2V0OihoYXlzdGFjaz1bXSk9PntsZXQgc2luZ2xlPVtdO2ZvcihsZXQgaSBpbiBoYXlzdGFjayktMT09c2luZ2xlLmluZGV4T2YoaGF5c3RhY2tbaV0pJiZzaW5nbGUucHVzaChoYXlzdGFja1tpXSk7cmV0dXJuIHNpbmdsZX0scG9wSW5kZXg6KGFycmF5PVtdLGluZGV4KT0+e2xldCBuZXdBcnJheT1bXTtmb3IobGV0IGkgaW4gYXJyYXkpaSE9aW5kZXgmJm5ld0FycmF5LnB1c2goYXJyYXlbaV0pO3JldHVybiBuZXdBcnJheX0sZGF0YVR5cGU6KGFycmF5PVtdKT0+e2xldCB0eXBlPXR5cGVvZiBhcnJheVswXTtmb3IobGV0IGkgaW4gYXJyYXkpaWYodHlwZW9mIGFycmF5W2ldIT10eXBlKXJldHVyblwibWl4ZWRcIjtyZXR1cm4gdHlwZX19O3JldHVybiBzZWxmfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtGeWNtRjVUR2xpY21GeWVTNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWMyVnNaaUlzSW1OdmJXSnBibVVpTENKb1lYbHpkR0ZqYXlJc0ltWnBjbk4wSWl3aWMyVmpiMjVrSWl3aWNHOXpJaXdpWVhReElpd2lZWFF5SWl3aWMzUmhjblFpTENKcGJtUmxlRUYwSWl3aVpXNWtJaXdpYzJ4cFkyVWlMQ0pwYmtKbGRIZGxaVzRpTENKamIyNTBZV2x1Y3lJc0ltNWxaV1JzWlNJc0lta2lMQ0pqYjNWdWRDSXNJbXhsYm1kMGFDSXNJbVpwYm1RaUxDSmpZV3hzWW1GamF5SXNJbVpwYm1SQmJHd2lMQ0oyWVd4MVpYTWlMQ0p3ZFhOb0lpd2laMlYwVDJKcVpXTjBJaXdpYTJWNUlpd2lkbUZzZFdVaUxDSnZZbXBsWTNRaUxDSm5aWFJCYkd4UFltcGxZM1J6SWl3aWJtVjNRWEp5WVhraUxDSm5aWFJCYkd3aUxDSnlaVzF2ZG1WQmJHd2lMQ0p3ZFhSQmRDSXNJbTVsZUhRaUxDSk5ZWFJvSWl3aVpteHZiM0lpTENKcGMwNWhUaUlzSW5CMWMyaEJjbkpoZVNJc0ltbHVjMlZ5ZENJc0luQnZjMmwwYVc5dUlpd2lZWEp5WVhsSmJtUmxlQ0lzSWtwVFQwNGlMQ0p6ZEhKcGJtZHBabmtpTENKb1lYTkJjbkpoZVNJc0ltbHVaR1Y0VDJZaUxDSjBiMDlpYW1WamRDSXNJbUZ5Y21GNUlpd2ljbVZ6YUdGd1pTSXNJbkJoY21GdGN5SXNJbkpoYm1SdmJWQnBZMnNpTENKeVlXNWtiMjBpTENKeVpXMXZkbVZGYlhCMGVTSXNJa0Z5Y21GNUlpd2lhWE5CY25KaGVTSXNJblZ1WkdWbWFXNWxaQ0lzSW1WaFkyZ2lMQ0pvWVhOQmNuSmhlVVZzWlcxbGJuUWlMQ0owYjFObGRDSXNJbk5wYm1kc1pTSXNJbkJ2Y0VsdVpHVjRJaXdpYVc1a1pYZ2lMQ0prWVhSaFZIbHdaU0lzSW5SNWNHVWlYU3dpYldGd2NHbHVaM01pT2lKQlFUaFBRVUVzY1VKQlFVOURMRU5CT1U5UUxGVkJRVUVzUTBGRFNTeEpRVUZKUXl4SlFVRkJRU3hEUVVGUExFTkJSVmhETEU5QlFVRkJMRU5CUVdVc1EwRkJRME1zVVVGQlFVRXNRMEZCVlVNc1MwRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkJVVU1zUjBGQlFVRXNSMEZCUVVFc1EwRkZja01zU1VGQlNVTXNSMEZCUVVFc1EwRkVTa1FzUjBGQlFVRXNRMEZCVFVFc1IwRkJRVUVzUlVGQlR5eERRVUZCTEVOQlJWUkZMRWRCUVVGQkxFTkJRVTFLTEV0QlFVRkJMRWRCUVZWRExFMUJRVUZCTEVOQlFWTkRMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZKUVN4SFFVRkJRU3hEUVVOdVEwY3NTMEZCUVVFc1EwRkJVVklzU1VGQlFVRXNRMEZCUzFNc1QwRkJRVUVzUTBGQlVWQXNVVUZCUVVFc1EwRkJWVU1zUzBGQlFVRXNRMEZCVDBjc1IwRkJRVUVzUTBGQlFVRXNRMEZEZEVOSkxFZEJRVUZCTEVOQlFVMVdMRWxCUVVGQkxFTkJRVXRUTEU5QlFVRkJMRU5CUVZGUUxGRkJRVUZCTEVOQlFWVkZMRTFCUVVGQkxFTkJRVkZITEVkQlFVRkJMRU5CUVVGQkxFTkJRVThzUTBGQlFTeERRVVZvUkN4TlFVRkJMRU5CUVdNc1EwRkJRU3hGUVVGV1F5eExRVUZCUVN4RlFVRnpRaXhEUVVGQkxFVkJRVkJGTEVkQlFVRkJMRU5CUTFJc1NVRkJRU3hEUVVkS1VpeFJRVUZCUVN4RFFVRlRVeXhMUVVGQlFTeERRVUZOU0N4TFFVRkJRU3hEUVVGUFJTeEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRxUTBVc1UwRkJRVUVzUTBGQmFVSXNRMEZCUTFZc1VVRkJRVUVzUTBGQlZVTXNTMEZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZCVVVNc1IwRkJRVUVzUjBGQlFVRXNRMEZGZGtNc1NVRkJTVU1zUjBGQlFVRXNRMEZFU2tRc1IwRkJRVUVzUTBGQlRVRXNSMEZCUVVFc1JVRkJUeXhEUVVGQkxFTkJSVlJGTEVkQlFVRkJMRU5CUVUxS0xFdEJRVUZCTEVkQlFWVkRMRTFCUVVGQkxFTkJRVk5ETEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGSlFTeEhRVUZCUVN4RFFVTnVRMGNzUzBGQlFVRXNRMEZCVVZJc1NVRkJRVUVzUTBGQlMxTXNUMEZCUVVFc1EwRkJVVkFzVVVGQlFVRXNRMEZCVlVNc1MwRkJRVUVzUTBGQlQwY3NSMEZCUVVFc1EwRkJRVUVzUTBGQlR5eERRVUZCTEVOQlF6ZERTU3hIUVVGQlFTeERRVUZOVml4SlFVRkJRU3hEUVVGTFV5eFBRVUZCUVN4RFFVRlJVQ3hSUVVGQlFTeERRVUZWUlN4TlFVRkJRU3hEUVVGUlJ5eEhRVUZCUVN4RFFVRkJRU3hEUVVWNlF5eFBRVUZoTEVOQlFVRXNSVUZCVkVNc1MwRkJRVUVzUlVGQlFVRXNRMEZCYzBJc1EwRkJRU3hGUVVGU1JTeEhRVUZCUVN4RFFVTlFMRWxCUVVFc1EwRkhTbElzVVVGQlFVRXNRMEZCVTFNc1MwRkJRVUVzUTBGQlRVZ3NTMEZCUVVFc1EwRkJUMFVzUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGFrTkhMRkZCUVVGQkxFTkJRV2RDTEVOQlFVTllMRkZCUVVGQkxFTkJRVlZaTEUxQlFVRkJMRWRCUVVGQkxFTkJSWFpDTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzU1VGQlMySXNVVUZCUVVFc1EwRkRWaXhIUVVGSlFTeFJRVUZCUVN4RFFVRlRZU3hEUVVGQlFTeERRVUZCUVN4RlFVRk5SQ3hOUVVGQlFTeERRVU5tTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUjJZc1RVRkJRU3hEUVU1WExFTkJRVUVzUTBGQlFTeERRVk5tVEN4UFFVRkJRU3hEUVVGbExFTkJRVU5RTEZGQlFVRkJMRU5CUVZWWkxFMUJRVUZCTEVOQlFWRlVMRWRCUVVGQkxFZEJRVUZCTEVOQlF6bENRU3hIUVVGQlFTeERRVUZOUVN4SFFVRkJRU3hGUVVGUExFTkJRVUVzUTBGRFlpeEpRVUZKVnl4TFFVRkJRU3hEUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsRUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKWWl4UlFVRkJRU3hEUVVGVFpTeE5RVUZCUVN4RFFVRlJSaXhEUVVGQlFTeEZRVUZCUVN4RFFVTnFReXhIUVVGSllpeFJRVUZCUVN4RFFVRlRZU3hEUVVGQlFTeERRVUZCUVN4RlFVRk5SQ3hOUVVGQlFTeEZRVUZCUVN4RlFVTm1SU3hMUVVGQlFTeEZRVVZoV0N4SFFVRkJRU3hEUVVOVUxFOUJRVTlWTEVOQlFVRkJMRU5CUzI1Q0xFMUJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZIV2tjc1NVRkJRVUVzUTBGQldTeERRVUZEYUVJc1VVRkJRVUVzUTBGQlZXbENMRkZCUVVGQkxFZEJRVUZCTEVOQlEyNUNMRWxCUVVzc1NVRkJTVW9zUTBGQlFVRXNTVUZCUzJJc1VVRkJRVUVzUTBGRFZpeEhRVUUyUWl4RFFVRkJMRVZCUVhwQ2FVSXNVVUZCUVVFc1EwRkJVMnBDTEZGQlFVRkJMRU5CUVZOaExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRMnhDTEU5QlFVOWlMRkZCUVVGQkxFTkJRVk5oTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlN6VkNTeXhQUVVGQlFTeERRVUZsTEVOQlFVTnNRaXhSUVVGQlFTeERRVUZWYVVJc1VVRkJRVUVzUjBGQlFVRXNRMEZEZEVJc1NVRkJTVVVzVFVGQlFVRXNRMEZCVXl4RlFVRkJMRU5CUTJJc1NVRkJTeXhKUVVGSlRpeERRVUZCUVN4SlFVRkxZaXhSUVVGQlFTeERRVU50UWl4RFFVRkJMRVZCUVhwQ2FVSXNVVUZCUVVFc1EwRkJVMnBDTEZGQlFVRkJMRU5CUVZOaExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRMnhDVFN4TlFVRkJRU3hEUVVGUFF5eEpRVUZCUVN4RFFVRkxjRUlzVVVGQlFVRXNRMEZCVTJFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpOMElzVDBGQlQwMHNUVUZCUVVFc1EwRkJRVUVzUTBGSFdFVXNVMEZCUVVFc1EwRkJhVUlzUTBGQlEzSkNMRkZCUVVGQkxFTkJRVlZ6UWl4SFFVRkJRU3hEUVVGTFF5eExRVUZCUVN4SFFVRkJRU3hEUVVNM1FpeEpRVUZKUXl4TlFVRkJRU3hEUVVOS0xFbEJRVXNzU1VGQlNWZ3NRMEZCUVVFc1NVRkJTMklzVVVGQlFVRXNRMEZEVGtFc1VVRkJRVUVzUTBGQlUyRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIxTXNSMEZCUVVFc1EwRkJRVUVzUlVGQlVVTXNTMEZCUVVFc1IwRkJUME1zVFVGQlFVRXNRMEZCVTNoQ0xGRkJRVUZCTEVOQlFWTmhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhKRUxFOUJRVTlYTEUxQlFVRkJMRU5CUVVGQkxFTkJSMWhETEdGQlFVRkJMRU5CUVhGQ0xFTkJRVU42UWl4UlFVRkJRU3hEUVVGVmMwSXNSMEZCUVVFc1EwRkJTME1zUzBGQlFVRXNSMEZCUVVFc1EwRkRha01zU1VGQlNVY3NVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRMllzU1VGQlN5eEpRVUZKWWl4RFFVRkJRU3hKUVVGTFlpeFJRVUZCUVN4RFFVTk9RU3hSUVVGQlFTeERRVUZUWVN4RFFVRkJRU3hEUVVGQlFTeERRVUZIVXl4SFFVRkJRU3hEUVVGQlFTeEZRVUZSUXl4TFFVRkJRU3hGUVVOd1FrY3NVVUZCUVVFc1EwRkJVMDRzU1VGQlFVRXNRMEZCUzNCQ0xGRkJRVUZCTEVOQlFWTmhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnk5Q0xFOUJRVTloTEZGQlFVRkJMRU5CUVVGQkxFTkJSMWhETEUxQlFVRkJMRU5CUVdNc1EwRkJRek5DTEZGQlFVRkJMRU5CUVZWWkxFMUJRVUZCTEVkQlFVRkJMRU5CUTNKQ0xFbEJRVWxqTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNXSXNRMEZCUVVFc1NVRkJTMklzVVVGQlFVRXNRMEZEVGtFc1VVRkJRVUVzUTBGQlUyRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRVUXNUVUZCUVVFc1JVRkJVV01zVVVGQlFVRXNRMEZCVTA0c1NVRkJRVUVzUTBGQlMxQXNRMEZCUVVFc1EwRkJRVUVzUTBGRk4wTXNUMEZCVDJFc1VVRkJRVUVzUTBGQlFVRXNRMEZIV0VVc1UwRkJRVUVzUTBGQmFVSXNRMEZCUXpWQ0xGRkJRVUZCTEVOQlFWVlpMRTFCUVVGQkxFZEJRVUZCTEVOQlEzaENMRWxCUVVsakxGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVTm1MRWxCUVVzc1NVRkJTV0lzUTBGQlFVRXNTVUZCUzJJc1VVRkJRVUVzUTBGRFRtRXNRMEZCUVVFc1JVRkJTMFFzVFVGQlFVRXNSVUZEVEdNc1VVRkJRVUVzUTBGQlUwNHNTVUZCUVVFc1EwRkJTMUFzUTBGQlFVRXNRMEZCUVVFc1EwRkhkRUlzVDBGQlQyRXNVVUZCUVVFc1EwRkJRVUVzUTBGSFdFY3NTMEZCUVVFc1EwRkJZU3hEUVVGRE4wSXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVWwxUWl4TFFVRkJRU3hEUVVGUFJDeEhRVUZCUVN4RFFVRk5MRU5CUVVFc1IwRkJRU3hEUVVOMFF5eEpRVUZKU1N4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGRFppeEpRVUZMTEVsQlFVbGlMRU5CUVVGQkxFbEJRVXRpTEZGQlFVRkJMRU5CUTFZc1IwRkJTV0VzUTBGQlFVRXNSVUZCUzFNc1IwRkJRVUVzUTBGQlN5eERRVU5XU1N4UlFVRkJRU3hEUVVGVFlpeERRVUZCUVN4RFFVRkJRU3hEUVVGTFZTeExRVUZCUVN4RFFVTmtMRWxCUVVsUExFbEJRVUZCTEVOQlFVOURMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxV0xFZEJRVUZCTEVOQlFVRkJMRU5CUld4Q1Z5eExRVUZCUVN4RFFVRk5TQ3hKUVVGQlFTeERRVUZCUVN4RFFVTk9RU3hKUVVGQlFTeERRVUZQVWl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGSFlsRXNTVUZCUVVFc1JVRkJRVUVzUTBGRlNrb3NVVUZCUVVFc1EwRkJVMGtzU1VGQlFVRXNRMEZCUVVFc1EwRkJVVGxDTEZGQlFVRkJMRU5CUVZOaExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJSekZDWVN4UlFVRkJRU3hEUVVGVFlpeERRVUZCUVN4RFFVRkJRU3hEUVVGTFlpeFJRVUZCUVN4RFFVRlRZU3hEUVVGQlFTeERRVUZCUVN4RFFVa3ZRaXhQUVVGUFlTeFJRVUZCUVN4RFFVRkJRU3hEUVVkWVVTeFRRVUZCUVN4RFFVRnBRaXhEUVVGRGJFTXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVWxaTEUxQlFVRkJMRU5CUVZGMVFpeE5RVUZCUVN4SFFVRkJRU3hEUVVOeVF5eEpRVUZKUXl4UlFVRkJRU3hEUVVGWGRFTXNTVUZCUVVFc1EwRkJTM1ZETEZWQlFVRkJMRU5CUVZkeVF5eFJRVUZCUVN4RFFVRlZXU3hOUVVGQlFTeERRVUZCUVN4RFFVVjZReXhQUVVSbFpDeEpRVUZCUVN4RFFVRkxLMElzUzBGQlFVRXNRMEZCVFRkQ0xGRkJRVUZCTEVOQlFWVnRReXhOUVVGQlFTeERRVUZSUXl4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbG9SRU1zVlVGQlFVRXNRMEZCYTBJc1EwRkJRM0pETEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGSldTeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1IwRkJRU3hEUVVOMlF5eEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFbEJRVXRpTEZGQlFVRkJMRU5CUTFZc1IwRkJTWE5ETEVsQlFVRkJMRU5CUVV0RExGTkJRVUZCTEVOQlFWVjJReXhSUVVGQlFTeERRVUZUWVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlBlVUlzU1VGQlFVRXNRMEZCUzBNc1UwRkJRVUVzUTBGQlZUTkNMRTFCUVVGQkxFTkJRVUZCTEVOQlF6bERMRTlCUVU5RExFTkJRVUZCTEVOQlIyWXNUVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVkYU1rSXNVVUZCUVVFc1EwRkJaMElzUTBGQlEzaERMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVUZKV1N4TlFVRkJRU3hEUVVGVExFVkJRVUVzU1VGRGNrTmFMRkZCUVVGQkxFTkJRVmR6UXl4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlZka01zVVVGQlFVRXNRMEZCUVVFc1EwRkRNVUpaTEUxQlFVRkJMRU5CUVZNd1FpeEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZWTTBJc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZXU3hEUVVGQkxFVkJRVGRDV2l4UlFVRkJRU3hEUVVGVGVVTXNUMEZCUVVFc1EwRkJVVGRDTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6VkNPRUlzVVVGQlFVRXNRMEZCWjBJc1EwRkJRME1zUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVseVFpeEhRVUZCUVN4SFFVRkJRU3hEUVVONlFpeEpRVUZKUlN4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGRFlpeEpRVUZMTEVsQlFVbFlMRU5CUVVGQkxFbEJRVXM0UWl4TFFVRkJRU3hEUVVOV2JrSXNUVUZCUVVFc1EwRkJUMjFDTEV0QlFVRkJMRU5CUVUwNVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSFV5eEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZSY1VJc1MwRkJRVUVzUTBGQlRUbENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRTlCUTNaQ1Z5eE5RVUZCUVN4RFFVRlBiVUlzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkVExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVTFCTEVkQlFVRkJMRU5CUVVGQkxFTkJSV3BETEU5QlFVOUZMRTFCUVVGQkxFTkJRVUZCTEVOQlIxaHZRaXhQUVVGQlFTeERRVUZuUWtNc1RVRkJRVUVzUlVGQlFVRXNSVUZCUVVFc1EwRkphRUpETEZWQlFVRkJMRU5CUVcxQ1NDeExRVUZCUVN4RlFVTlNRU3hMUVVGQlFTeERRVUZOV2l4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5SQ3hKUVVGQlFTeERRVUZMWjBJc1RVRkJRVUVzUlVGQlFVRXNRMEZCVjBvc1MwRkJRVUVzUTBGQlRUVkNMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjJ4RWFVTXNWMEZCUVVFc1EwRkJiVUlzUTBGQlEwd3NTMEZCUVVFc1EwRkJVU3hGUVVGQkxFZEJRVUVzUTBGRGVFSXNTVUZCU1dwQ0xGRkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVTm1MRWxCUVVzc1NVRkJTV0lzUTBGQlFVRXNTVUZCU3poQ0xFdEJRVUZCTEVOQlEwNU5MRXRCUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVZGUUxFdEJRVUZCTEVOQlFVMDVRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGUE9FSXNTMEZCUVVFc1EwRkJUVGxDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRGTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVNM1ExY3NVVUZCUVVFc1EwRkJVMDRzU1VGQlFVRXNRMEZCUzNSQ0xFbEJRVUZCTEVOQlFVdHJSQ3hYUVVGQlFTeERRVUZaVEN4TFFVRkJRU3hEUVVGTk9VSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZjRUp6UXl4SlFVRkJRU3hGUVVGYVVpeExRVUZCUVN4RFFVRk5PVUlzUTBGQlFVRXNRMEZCUVVFc1JVRkJLMElzU1VGQlFTeEZRVUZhT0VJc1MwRkJRVUVzUTBGQlRUbENMRU5CUVVGQkxFTkJRVUZCTEVWQlFUQkNMRU5CUVVFc1JVRkJXamhDTEV0QlFVRkJMRU5CUVUwNVFpeERRVUZCUVN4RFFVRkJRU3hGUVVGMVFpeEZRVUZCTEVWQlFWbzRRaXhMUVVGQlFTeERRVUZOT1VJc1EwRkJRVUVzUTBGQlFVRXNSVUZEZWtWaExGRkJRVUZCTEVOQlFWTk9MRWxCUVVGQkxFTkJRVXQxUWl4TFFVRkJRU3hEUVVGTk9VSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITlVJc1QwRkJUMkVzVVVGQlFVRXNRMEZCUVVFc1EwRkhXREJDTEVsQlFVRkJMRU5CUVZrc1EwRkJRMVFzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVreFFpeFJRVUZCUVN4RlFVRlhMRWxCUVVFc1JVRkJRU3hEUVVGQkxFZEJRVUVzUTBGRGFFTXNTVUZCU1ZNc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpZaXhEUVVGQlFTeEpRVUZMT0VJc1MwRkJRVUVzUTBGRFZtcENMRkZCUVVGQkxFTkJRVk5PTEVsQlFVRkJMRU5CUVV0SUxGRkJRVUZCTEVOQlFWTXdRaXhMUVVGQlFTeERRVUZOT1VJc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZja01zVDBGQlQyRXNVVUZCUVVFc1EwRkJRVUVzUTBGSFdESkNMR1ZCUVVGQkxFTkJRWFZDTEVOQlFVTnlSQ3hSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCU1Zrc1RVRkJRVUVzUTBGQlV5eEZRVUZCTEVkQlFVRXNRMEZGTlVNc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4SlFVRkxSQ3hOUVVGQlFTeERRVU5XTEVkQlFVRXNRMEZCYjBNc1EwRkJRU3hGUVVGb1Exb3NVVUZCUVVFc1EwRkJVM2xETEU5QlFVRkJMRU5CUVZFM1FpeE5RVUZCUVN4RFFVRlBReXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVONFFpeE5RVUZCTEVOQlFVOHNRMEZCUVN4RFFVZG1MRTFCUVVFc1EwRk9WeXhEUVVGQkxFTkJRVUVzUTBGVFpubERMRXRCUVVGQkxFTkJRV0VzUTBGQlEzUkVMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeEhRVUZCTEVOQlEzSkNMRWxCUVVsMVJDeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWt4UXl4RFFVRkJRU3hKUVVGTFlpeFJRVUZCUVN4RFFVRkJRU3hEUVVNd1FpeERRVUZCTEVWQlFXaERkVVFzVFVGQlFVRXNRMEZCVDJRc1QwRkJRVUVzUTBGQlVYcERMRkZCUVVGQkxFTkJRVk5oTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlEzaENNRU1zVFVGQlFVRXNRMEZCVDI1RExFbEJRVUZCTEVOQlFVdHdRaXhSUVVGQlFTeERRVUZUWVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVYzNRaXhQUVVGUE1FTXNUVUZCUVVFc1EwRkJRVUVzUTBGSFdFTXNVVUZCUVVFc1EwRkJaMElzUTBGQlEySXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVWxqTEV0QlFVRkJMRWRCUVVGQkxFTkJRM3BDTEVsQlFVa3ZRaXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEWml4SlFVRkxMRWxCUVVsaUxFTkJRVUZCTEVsQlFVczRRaXhMUVVGQlFTeERRVU5PT1VJc1EwRkJRVUVzUlVGQlN6UkRMRXRCUVVGQkxFVkJRMHd2UWl4UlFVRkJRU3hEUVVGVFRpeEpRVUZCUVN4RFFVRkxkVUlzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSelZDTEU5QlFVOWhMRkZCUVVGQkxFTkJRVUZCTEVOQlIxaG5ReXhSUVVGQlFTeERRVUZuUWl4RFFVRkRaaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNSMEZCUVN4RFFVTnlRaXhKUVVGSlowSXNTVUZCUVVFc1EwRkJRVUVzVDBGQlkyaENMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlEzaENMRWxCUVVzc1NVRkJTVGxDTEVOQlFVRkJMRWxCUVVzNFFpeExRVUZCUVN4RFFVTldMRWRCUVVFc1QwRkJWMEVzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVRkJMRVZCUVUwNFF5eEpRVUZCUVN4RFFVTnVRaXhOUVVGUExFOUJRVUVzUTBGSFppeFBRVUZQUVN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFlMRTlCUVU4M1JDeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kQXJyYXlMaWJyYXJ5XzE0PXJlcXVpcmUoXCIuLy4uL2Z1bmN0aW9ucy9BcnJheUxpYnJhcnlcIik7ICovO2xldCBfX2Z1bmNfMTA9bmV3IF8kRnVuY183LGFycmF5TGlicmFyeT1fJEFycmF5TGlicmFyeV8xNCgpO3ZhciBfJE5ldXJhbE5ldHdvcmtfMTA9Y2xhc3N7Y29uc3RydWN0b3IocGFyYW1zKXtfX2Z1bmNfMTAub2JqZWN0LmNvcHkocGFyYW1zLHRoaXMpLHRoaXMuaWhXZWlnaHRzPW5ldyBfJE1hdHJpeF85KHtyb3dzOnRoaXMuaE5vZGVzLGNvbHM6dGhpcy5pTm9kZXN9KSx0aGlzLmloV2VpZ2h0cy5yYW5kb21pemUoKSx0aGlzLmloQmlhcz1uZXcgXyRNYXRyaXhfOSh7cm93czp0aGlzLmhOb2Rlcyxjb2xzOjF9KSx0aGlzLmloQmlhcy5yYW5kb21pemUoKSx0aGlzLmhvV2VpZ2h0cz1uZXcgXyRNYXRyaXhfOSh7cm93czp0aGlzLm9Ob2Rlcyxjb2xzOnRoaXMuaE5vZGVzfSksdGhpcy5ob1dlaWdodHMucmFuZG9taXplKCksdGhpcy5ob0JpYXM9bmV3IF8kTWF0cml4Xzkoe3Jvd3M6dGhpcy5vTm9kZXMsY29sczoxfSksdGhpcy5ob0JpYXMucmFuZG9taXplKCksdGhpcy5scj10aGlzLmxyfHwuMX1mZWVkRm93YXJkKGlucHV0QXJyYXk9W10pe2xldCBpbnB1dHM9aW5wdXRBcnJheSBpbnN0YW5jZW9mIF8kTWF0cml4Xzk/aW5wdXRBcnJheTp0aGlzLnByZXBhcmVJbnB1dHMoaW5wdXRBcnJheSksaGlkZGVucz1fJE1hdHJpeF85Lm11bHRpcGx5KHRoaXMuaWhXZWlnaHRzLGlucHV0cyk7aGlkZGVucy5hZGQodGhpcy5paEJpYXMpLGhpZGRlbnMubWFwKHNpZ21vaWQpO2xldCBvdXRwdXRzPV8kTWF0cml4XzkubXVsdGlwbHkodGhpcy5ob1dlaWdodHMsaGlkZGVucyk7cmV0dXJuIG91dHB1dHMuYWRkKHRoaXMuaG9CaWFzKSxvdXRwdXRzLm1hcChzaWdtb2lkKSx7aW5wdXRzOmlucHV0cyxoaWRkZW5zOmhpZGRlbnMsb3V0cHV0czpvdXRwdXRzfX1xdWVyeUJhY2sodGFyZ2V0QXJyYXk9W10pe31wcmVkaWN0KGlucHV0QXJyYXk9W10pe3JldHVybiB0aGlzLmZlZWRGb3dhcmQoaW5wdXRBcnJheSkub3V0cHV0c31nZXRXZWlnaHRzVXBkYXRlKGlucHV0cz1uZXcgXyRNYXRyaXhfOSxvdXRwdXRzPW5ldyBfJE1hdHJpeF85LGVycm9ycz0xKXtsZXQgZ3JhZGllbnRzPV8kTWF0cml4XzkubWFwKG91dHB1dHMsZFNpZ21vaWQpO2dyYWRpZW50cy5tdWx0aXBseShlcnJvcnMpLGdyYWRpZW50cy5tdWx0aXBseSh0aGlzLmxyKTtsZXQgaW5wdXRzVHJhbnNwb3NlZD1fJE1hdHJpeF85LnRyYW5zcG9zZShpbnB1dHMpO3JldHVybntjaGFuZ2U6XyRNYXRyaXhfOS5tdWx0aXBseShncmFkaWVudHMsaW5wdXRzVHJhbnNwb3NlZCksZ3JhZGllbnRzOmdyYWRpZW50c319YmFja3Byb3BhZ2F0ZShpbnB1dHM9W10sdGFyZ2V0cz1uZXcgXyRNYXRyaXhfOSl7bGV0e2hpZGRlbnM6aGlkZGVucyxvdXRwdXRzOm91dHB1dHN9PXRoaXMuZmVlZEZvd2FyZChpbnB1dHMpLGhvRXJyb3JzPV8kTWF0cml4Xzkuc3VidHJhY3QodGFyZ2V0cyxvdXRwdXRzKSxob1VwZGF0ZXM9dGhpcy5nZXRXZWlnaHRzVXBkYXRlKGhpZGRlbnMsb3V0cHV0cyxob0Vycm9ycyk7dGhpcy5ob1dlaWdodHMuYWRkKGhvVXBkYXRlcy5jaGFuZ2UpLHRoaXMuaG9CaWFzLmFkZChob1VwZGF0ZXMuZ3JhZGllbnRzKTtsZXQgaG9XZWlnaHRzVHJhbnNwb3NlZD1fJE1hdHJpeF85LnRyYW5zcG9zZSh0aGlzLmhvV2VpZ2h0cyksaWhFcnJvcnM9XyRNYXRyaXhfOS5tdWx0aXBseShob1dlaWdodHNUcmFuc3Bvc2VkLGhvRXJyb3JzKSxpaFVwZGF0ZXM9dGhpcy5nZXRXZWlnaHRzVXBkYXRlKGlucHV0cyxoaWRkZW5zLGloRXJyb3JzKTt0aGlzLmloV2VpZ2h0cy5hZGQoaWhVcGRhdGVzLmNoYW5nZSksdGhpcy5paEJpYXMuYWRkKGloVXBkYXRlcy5ncmFkaWVudHMpfXRyYWluKHBhcmFtcz17dHJhaW5pbmdEYXRhOltdLHBlcmlvZDoxLGVwb2NoOjF9KXtsZXQgaW5wdXRBcnJheT1bXSx0YXJnZXRBcnJheT1bXTtmb3IobGV0IGRhdGEgb2YgcGFyYW1zLnRyYWluaW5nRGF0YSlpbnB1dEFycmF5LnB1c2goZGF0YS5pbnB1dHMpLHRhcmdldEFycmF5LnB1c2goZGF0YS50YXJnZXRzKTtsZXQgaW5wdXRzPWFycmF5TGlicmFyeS5lYWNoKGlucHV0QXJyYXksdmFsdWU9PnRoaXMucHJlcGFyZUlucHV0cyh2YWx1ZSkpLHRhcmdldHM9YXJyYXlMaWJyYXJ5LmVhY2godGFyZ2V0QXJyYXksdmFsdWU9PnRoaXMucHJlcGFyZVRhcmdldHModmFsdWUpKSxydW49KCk9Pntmb3IobGV0IGk9MDtpPHBhcmFtcy5wZXJpb2Q7aSsrKWZvcihsZXQgaiBpbiBpbnB1dHMpdGhpcy5iYWNrcHJvcGFnYXRlKGlucHV0c1tqXSx0YXJnZXRzW2pdKX07aWYoX19mdW5jXzEwLmlzc2V0KHBhcmFtcy5lcG9jaCkpZm9yKGxldCBwPTA7cDxwYXJhbXMuZXBvY2g7cCsrKXJ1bigpO2Vsc2UgcnVuKCl9c2V0TGVhcm5pbmdSYXRlKGxyPS4xKXt0aGlzLmxyPWxyfXByZXBhcmVJbnB1dHMoaW5wdXRBcnJheT1bXSl7bGV0IGlucHV0cz1fJE1hdHJpeF85LmZyb21BcnJheShNYXRoLm5vcm1hbGl6ZShpbnB1dEFycmF5KSk7cmV0dXJuIGlucHV0cy5tdWx0aXBseSguOTkpLGlucHV0cy5hZGQoLjAxKSxpbnB1dHN9cHJlcGFyZVRhcmdldHModGFyZ2V0QXJyYXk9W10pe2xldCB0YXJnZXRzPV8kTWF0cml4XzkuZnJvbUFycmF5KHRhcmdldEFycmF5KTtyZXR1cm4gdGFyZ2V0cy5hZGQoLjAxKSx0YXJnZXRzLm11bHRpcGx5KC45OSksdGFyZ2V0c319O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJazVsZFhKaGJFNWxkSGR2Y21zdWFuTWlYU3dpYm1GdFpYTWlPbHNpWm5WdVl5SXNJa1oxYm1NaUxDSmhjbkpoZVV4cFluSmhjbmtpTENKQmNuSmhlVXhwWW5KaGNua2lMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpVzI5aWFtVmpkQ0JQWW1wbFkzUmRJaXdpY0dGeVlXMXpJaXdpYjJKcVpXTjBJaXdpWTI5d2VTSXNJblJvYVhNaUxDSnBhRmRsYVdkb2RITWlMQ0pOWVhSeWFYZ2lMQ0p5YjNkeklpd2lhRTV2WkdWeklpd2lZMjlzY3lJc0ltbE9iMlJsY3lJc0luSmhibVJ2YldsNlpTSXNJbWxvUW1saGN5SXNJbWh2VjJWcFoyaDBjeUlzSW05T2IyUmxjeUlzSW1odlFtbGhjeUlzSW14eUlpd2lhVzV3ZFhSQmNuSmhlU0lzSW1sdWNIVjBjeUlzSW5CeVpYQmhjbVZKYm5CMWRITWlMQ0pvYVdSa1pXNXpJaXdpYlhWc2RHbHdiSGtpTENKaFpHUWlMQ0p0WVhBaUxDSnphV2R0YjJsa0lpd2liM1YwY0hWMGN5SXNJblJoY21kbGRFRnljbUY1SWl3aVptVmxaRVp2ZDJGeVpDSXNJbVZ5Y205eWN5SXNJbWR5WVdScFpXNTBjeUlzSW1SVGFXZHRiMmxrSWl3aWFXNXdkWFJ6VkhKaGJuTndiM05sWkNJc0luUnlZVzV6Y0c5elpTSXNJbU5vWVc1blpTSXNJblJoY21kbGRITWlMQ0pvYjBWeWNtOXljeUlzSW5OMVluUnlZV04wSWl3aWFHOVZjR1JoZEdWeklpd2laMlYwVjJWcFoyaDBjMVZ3WkdGMFpTSXNJbWh2VjJWcFoyaDBjMVJ5WVc1emNHOXpaV1FpTENKcGFFVnljbTl5Y3lJc0ltbG9WWEJrWVhSbGN5SXNJblJ5WVdsdWFXNW5SR0YwWVNJc0luQmxjbWx2WkNJc0ltVndiMk5vSWl3aVpHRjBZU0lzSW5CMWMyZ2lMQ0psWVdOb0lpd2lkbUZzZFdVaUxDSndjbVZ3WVhKbFZHRnlaMlYwY3lJc0luSjFiaUlzSW1raUxDSnFJaXdpWW1GamEzQnliM0JoWjJGMFpTSXNJbWx6YzJWMElpd2ljQ0lzSW1aeWIyMUJjbkpoZVNJc0lrMWhkR2dpTENKdWIzSnRZV3hwZW1VaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxDdEZRVWxCTEVsQlFVbEJMRk5CUVVGQkxFTkJRVThzU1VGQlNVTXNVVUZCUVVFc1EwRkRXRU1zV1VGQlFVRXNRMEZCWlVNc2FVSkJRVUZCTEVWQlFVRkJMRU5CZFVodVFrTXNjMEpCUVU5RExFTkJja2hRTEV0QlFVRXNRMEZEU1VNc1YwRkJRVUVzUTBGQldVTXNUVUZCUVVFc1EwRkJRVUVzUTBGRFVsQXNVMEZCUVVFc1EwRkJTMUVzVFVGQlFVRXNRMEZCVDBNc1NVRkJRVUVzUTBGQlMwWXNUVUZCUVVFc1EwRkJVVWNzU1VGQlFVRXNRMEZCUVVFc1EwRkRla0pCTEVsQlFVRkJMRU5CUVV0RExGTkJRVUZCTEVOQlFWa3NTVUZCU1VNc1ZVRkJRVUVzUTBGQlR5eERRVUZGUXl4SlFVRkJRU3hEUVVGTlNDeEpRVUZCUVN4RFFVRkxTU3hOUVVGQlFTeERRVUZSUXl4SlFVRkJRU3hEUVVGTlRDeEpRVUZCUVN4RFFVRkxUU3hOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVNMVJFNHNTVUZCUVVFc1EwRkJTME1zVTBGQlFVRXNRMEZCVlUwc1UwRkJRVUVzUlVGQlFVRXNRMEZGWmxBc1NVRkJRVUVzUTBGQlMxRXNUVUZCUVVFc1EwRkJVeXhKUVVGSlRpeFZRVUZCUVN4RFFVRlBMRU5CUVVWRExFbEJRVUZCTEVOQlFVMUlMRWxCUVVGQkxFTkJRVXRKTEUxQlFVRkJMRU5CUVZGRExFbEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRjRVJNTEVsQlFVRkJMRU5CUVV0UkxFMUJRVUZCTEVOQlFVOUVMRk5CUVVGQkxFVkJRVUZCTEVOQlJWcFFMRWxCUVVGQkxFTkJRVXRUTEZOQlFVRkJMRU5CUVZrc1NVRkJTVkFzVlVGQlFVRXNRMEZCVHl4RFFVRkZReXhKUVVGQlFTeERRVUZOU0N4SlFVRkJRU3hEUVVGTFZTeE5RVUZCUVN4RFFVRlJUQ3hKUVVGQlFTeERRVUZOVEN4SlFVRkJRU3hEUVVGTFNTeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU0xUkVvc1NVRkJRVUVzUTBGQlMxTXNVMEZCUVVFc1EwRkJWVVlzVTBGQlFVRXNSVUZCUVVFc1EwRkZabEFzU1VGQlFVRXNRMEZCUzFjc1RVRkJRVUVzUTBGQlV5eEpRVUZKVkN4VlFVRkJRU3hEUVVGUExFTkJRVVZETEVsQlFVRkJMRU5CUVUxSUxFbEJRVUZCTEVOQlFVdFZMRTFCUVVGQkxFTkJRVkZNTEVsQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGNFUk1MRWxCUVVGQkxFTkJRVXRYTEUxQlFVRkJMRU5CUVU5S0xGTkJRVUZCTEVWQlFVRkJMRU5CUlZwUUxFbEJRVUZCTEVOQlFVdFpMRVZCUVVGQkxFTkJRVXRhTEVsQlFVRkJMRU5CUVV0WkxFVkJRVUZCTEVWQlFVMHNSVUZCUVN4RFFVZDZRbWhDTEZWQlFVRkJMRU5CUVZkcFFpeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJRU3hEUVVOd1FpeEpRVUZKUXl4TlFVRkJRU3hEUVVGVFJDeFZRVUZCUVN4WlFVRnpRbGdzVlVGQlFVRXNRMEZCVTFjc1ZVRkJRVUVzUTBGQllXSXNTVUZCUVVFc1EwRkJTMlVzWVVGQlFVRXNRMEZCWTBZc1ZVRkJRVUVzUTBGQlFVRXNRMEZGZUVWSExFOUJRVUZCTEVOQlFWVmtMRlZCUVVGQkxFTkJRVTlsTEZGQlFVRkJMRU5CUVZOcVFpeEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZYWVN4TlFVRkJRU3hEUVVGQlFTeERRVU01UTBVc1QwRkJRVUVzUTBGQlVVVXNSMEZCUVVFc1EwRkJTV3hDTEVsQlFVRkJMRU5CUVV0UkxFMUJRVUZCTEVOQlFVRkJMRU5CUTJwQ1VTeFBRVUZCUVN4RFFVRlJSeXhIUVVGQlFTeERRVUZKUXl4UFFVRkJRU3hEUVVGQlFTeERRVVZhTEVsQlFVbERMRTlCUVVGQkxFTkJRVlZ1UWl4VlFVRkJRU3hEUVVGUFpTeFJRVUZCUVN4RFFVRlRha0lzU1VGQlFVRXNRMEZCUzFNc1UwRkJRVUVzUTBGQlYwOHNUMEZCUVVFc1EwRkJRVUVzUTBGSk9VTXNUMEZJUVVzc1QwRkJRVUVzUTBGQlVVZ3NSMEZCUVVFc1EwRkJTV3hDTEVsQlFVRkJMRU5CUVV0WExFMUJRVUZCTEVOQlFVRkJMRU5CUTJwQ1ZTeFBRVUZCUVN4RFFVRlJSaXhIUVVGQlFTeERRVUZKUXl4UFFVRkJRU3hEUVVGQlFTeERRVVZNTEVOQlFVVk9MRTFCUVVGQkxFTkJRVUZCTEUxQlFVRkJMRU5CUVZGRkxFOUJRVUZCTEVOQlFVRkJMRTlCUVVGQkxFTkJRVk5MTEU5QlFVRkJMRU5CUVVGQkxFOUJRVUZCTEVOQlFVRkJMRU5CUnpsQ2VrSXNVMEZCUVVFc1EwRkJWVEJDTEZkQlFVRkJMRU5CUVdNc1JVRkJRU3hEUVVGQkxFVkJTWGhDTVVJc1QwRkJRVUVzUTBGQlVXbENMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVUZCTEVOQlEycENMRTlCUVU5aUxFbEJRVUZCTEVOQlFVdDFRaXhWUVVGQlFTeERRVUZYVml4VlFVRkJRU3hEUVVGQlFTeERRVUZaVVN4UFFVRkJRU3hEUVVkMlEzcENMR2RDUVVGQlFTeERRVUZwUW10Q0xFMUJRVUZCTEVOQlFWTXNTVUZCU1Zvc1ZVRkJRVUVzUTBGQlZXMUNMRTlCUVVGQkxFTkJRVlVzU1VGQlNXNUNMRlZCUVVGQkxFTkJRVlZ6UWl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVU55UlN4SlFVRkpReXhUUVVGQlFTeERRVUZaZGtJc1ZVRkJRVUVzUTBGQlQybENMRWRCUVVGQkxFTkJRVWxGTEU5QlFVRkJMRU5CUVZOTExGRkJRVUZCTEVOQlFVRkJMRU5CUTNCRFJDeFRRVUZCUVN4RFFVRlZVaXhSUVVGQlFTeERRVUZUVHl4TlFVRkJRU3hEUVVGQlFTeERRVU51UWtNc1UwRkJRVUVzUTBGQlZWSXNVVUZCUVVFc1EwRkJVMnBDTEVsQlFVRkJMRU5CUVV0WkxFVkJRVUZCTEVOQlFVRkJMRU5CUlhoQ0xFbEJRVWxsTEdkQ1FVRkJRU3hEUVVGdFFucENMRlZCUVVGQkxFTkJRVTh3UWl4VFFVRkJRU3hEUVVGVlpDeE5RVUZCUVN4RFFVRkJRU3hEUVVkNFF5eE5RVUZQTEVOQlFVVmxMRTFCUVVGQkxFTkJSa2t6UWl4VlFVRkJRU3hEUVVGUFpTeFJRVUZCUVN4RFFVRlRVU3hUUVVGQlFTeERRVUZYUlN4blFrRkJRVUVzUTBGQlFVRXNRMEZGZGtKR0xGTkJRVUZCTEVOQlFVRkJMRk5CUVVGQkxFTkJRVUZCTEVOQlIzSkNOMElzWVVGQlFVRXNRMEZCWTJ0Q0xFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkpaMElzVDBGQlFVRXNRMEZCVlN4SlFVRkpOVUlzVlVGQlFVRXNRMEZCUVVFc1EwRkRja01zUjBGQlFTeERRVUZKWXl4UFFVRkJRU3hEUVVGRlFTeFBRVUZCUVN4RFFVRlBTeXhQUVVGQlFTeERRVUZGUVN4UFFVRkJRU3hEUVVGQlFTeERRVUZaY2tJc1NVRkJRVUVzUTBGQlMzVkNMRlZCUVVGQkxFTkJRVmRVTEUxQlFVRkJMRU5CUVVGQkxFTkJSWFpEYVVJc1VVRkJRVUVzUTBGQlZ6ZENMRlZCUVVGQkxFTkJRVTg0UWl4UlFVRkJRU3hEUVVGVFJpeFBRVUZCUVN4RFFVRlRWQ3hQUVVGQlFTeERRVUZCUVN4RFFVTndRMWtzVTBGQlFVRXNRMEZCV1dwRExFbEJRVUZCTEVOQlFVdHJReXhuUWtGQlFVRXNRMEZCYVVKc1FpeFBRVUZCUVN4RFFVRlRTeXhQUVVGQlFTeERRVUZUVlN4UlFVRkJRU3hEUVVGQlFTeERRVU40UkM5Q0xFbEJRVUZCTEVOQlFVdFRMRk5CUVVGQkxFTkJRVlZUTEVkQlFVRkJMRU5CUVVsbExGTkJRVUZCTEVOQlFWVktMRTFCUVVGQkxFTkJRVUZCTEVOQlF6ZENOMElzU1VGQlFVRXNRMEZCUzFjc1RVRkJRVUVzUTBGQlQwOHNSMEZCUVVFc1EwRkJTV1VzVTBGQlFVRXNRMEZCVlZJc1UwRkJRVUVzUTBGQlFVRXNRMEZGTVVJc1NVRkJTVlVzYlVKQlFVRkJMRU5CUVhOQ2FrTXNWVUZCUVVFc1EwRkJUekJDTEZOQlFVRkJMRU5CUVZVMVFpeEpRVUZCUVN4RFFVRkxVeXhUUVVGQlFTeERRVUZCUVN4RFFVTTFRekpDTEZGQlFVRkJMRU5CUVZkc1F5eFZRVUZCUVN4RFFVRlBaU3hSUVVGQlFTeERRVUZUYTBJc2JVSkJRVUZCTEVOQlFYRkNTaXhSUVVGQlFTeERRVUZCUVN4RFFVTm9SRTBzVTBGQlFVRXNRMEZCV1hKRExFbEJRVUZCTEVOQlFVdHJReXhuUWtGQlFVRXNRMEZCYVVKd1FpeE5RVUZCUVN4RFFVRlJSU3hQUVVGQlFTeERRVUZUYjBJc1VVRkJRVUVzUTBGQlFVRXNRMEZEZGtSd1F5eEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZWYVVJc1IwRkJRVUVzUTBGQlNXMUNMRk5CUVVGQkxFTkJRVlZTTEUxQlFVRkJMRU5CUVVGQkxFTkJRemRDTjBJc1NVRkJRVUVzUTBGQlMxRXNUVUZCUVVFc1EwRkJUMVVzUjBGQlFVRXNRMEZCU1cxQ0xGTkJRVUZCTEVOQlFWVmFMRk5CUVVGQkxFTkJRVUZCTEVOQlJ6bENOMElzUzBGQlFVRXNRMEZCVFVNc1RVRkJRVUVzUTBGQlV5eERRVUZGZVVNc1dVRkJRVUVzUTBGQll5eEZRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZIUXl4TFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEycEVMRWxCUVVrelFpeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJTVk1zVjBGQlFVRXNRMEZCWXl4RlFVRkJMRU5CUTI1RExFbEJRVXNzU1VGQlNXMUNMRWxCUVVGQkxFbEJRVkUxUXl4TlFVRkJRU3hEUVVGUGVVTXNXVUZCUVVFc1EwRkRjRUo2UWl4VlFVRkJRU3hEUVVGWE5rSXNTVUZCUVVFc1EwRkJTMFFzU1VGQlFVRXNRMEZCU3pOQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUTNKQ1VTeFhRVUZCUVN4RFFVRlpiMElzU1VGQlFVRXNRMEZCUzBRc1NVRkJRVUVzUTBGQlMxZ3NUMEZCUVVFc1EwRkJRVUVzUTBGSE1VSXNTVUZCU1doQ0xFMUJRVUZCTEVOQlFWTjBRaXhaUVVGQlFTeERRVUZoYlVRc1NVRkJRVUVzUTBGQlN6bENMRlZCUVVGQkxFTkJRVmtyUWl4TFFVRkJRU3hGUVVOb1F6VkRMRWxCUVVGQkxFTkJRVXRsTEdGQlFVRkJMRU5CUVdNMlFpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWN4UW1Rc1QwRkJRVUVzUTBGQlZYUkRMRmxCUVVGQkxFTkJRV0Z0UkN4SlFVRkJRU3hEUVVGTGNrSXNWMEZCUVVFc1EwRkJZWE5DTEV0QlFVRkJMRVZCUTJ4RE5VTXNTVUZCUVVFc1EwRkJTelpETEdOQlFVRkJMRU5CUVdWRUxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSek5DUlN4SFFVRkJRU3hEUVVGTkxFbEJRVUVzUTBGRFRpeEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmJFUXNUVUZCUVVFc1EwRkJUekJETEUxQlFVRkJMRU5CUVZGUkxFTkJRVUZCTEVWQlFVRkJMRU5CUXk5Q0xFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1NVRkJTMnhETEUxQlFVRkJMRU5CUTFaa0xFbEJRVUZCTEVOQlFVdHBSQ3hoUVVGQlFTeERRVUZqYmtNc1RVRkJRVUVzUTBGQlQydERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVbHNRaXhQUVVGQlFTeERRVUZSYTBJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTGJFUXNSMEZCU1RGRUxGTkJRVUZCTEVOQlFVczBSQ3hMUVVGQlFTeERRVUZOY2tRc1RVRkJRVUVzUTBGQlR6SkRMRXRCUVVGQkxFTkJRVUZCTEVOQlEyeENMRWxCUVVzc1NVRkJTVmNzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDBSQ3hOUVVGQlFTeERRVUZQTWtNc1MwRkJRVUVzUTBGQlQxY3NRMEZCUVVFc1JVRkJRVUVzUTBGRE9VSk1MRWRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRXRCUjBwQkxFZEJRVUZCTEVWQlFVRkJMRU5CU1ZKc1JDeGxRVUZCUVN4RFFVRm5RbWRDTEVWQlFVRkJMRU5CUVVzc1JVRkJRU3hEUVVGQkxFTkJRMnBDV2l4SlFVRkJRU3hEUVVGTFdTeEZRVUZCUVN4RFFVRkxRU3hGUVVGQlFTeERRVWRrYUVJc1lVRkJRVUVzUTBGQlkybENMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVUZCTEVOQlEzWkNMRWxCUVVsRExFMUJRVUZCTEVOQlFWTmFMRlZCUVVGQkxFTkJRVTlyUkN4VFFVRkJRU3hEUVVGVlF5eEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZWZWtNc1ZVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhOME1zVDBGR1FVTXNUVUZCUVVFc1EwRkJUMGNzVVVGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVVFc1EwRkRhRUpJTEUxQlFVRkJMRU5CUVU5SkxFZEJRVUZCTEVOQlFVa3NSMEZCUVN4RFFVRkJMRU5CUTBwS0xFMUJRVUZCTEVOQlIxaHNRaXhqUVVGQlFTeERRVUZsTUVJc1YwRkJRVUVzUTBGQll5eEZRVUZCTEVOQlFVRXNRMEZEZWtJc1NVRkJTVkVzVDBGQlFVRXNRMEZCVlRWQ0xGVkJRVUZCTEVOQlFVOXJSQ3hUUVVGQlFTeERRVUZWT1VJc1YwRkJRVUVzUTBGQlFVRXNRMEZITDBJc1QwRkdRVkVzVDBGQlFVRXNRMEZCVVZvc1IwRkJRVUVzUTBGQlNTeEhRVUZCTEVOQlFVRXNRMEZEV2xrc1QwRkJRVUVzUTBGQlVXSXNVVUZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVUVzUTBGRFZtRXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kRnVuY183PXJlcXVpcmUoXCIuL0Z1bmNcIik7ICovO3ZhciBfJFBlcmlvZF8xMT1jbGFzcyBleHRlbmRzIF8kRnVuY183e2NvbnN0cnVjdG9yKCl7c3VwZXIoKX10cmltTW9udGhBcnJheSgpe2xldCBtb250aHM9W107Zm9yKGxldCBpPTA7aTx0aGlzLm1vbnRocy5sZW5ndGg7aSsrKW1vbnRocy5wdXNoKHRoaXMubW9udGhzW2ldLnNsaWNlKDAsMykpO3JldHVybiBtb250aHN9Z2V0WWVhcnMoY291bnQ9NSl7bGV0IHllYXI9KG5ldyBEYXRlKS5nZXRZZWFyKCkrMTkwMCxmZXRjaGVkPVtdO2ZvcihsZXQgaT0wO2k8Y291bnQ7aSsrKWZldGNoZWQucHVzaChgJHt5ZWFyLTF9LSR7eWVhcn1gKSx5ZWFyKys7cmV0dXJuIGZldGNoZWR9aXNUaW1lVmFsaWQodGltZSl7aWYoMj09KHRpbWU9dGltZS5zcGxpdChcIjpcIikpLmxlbmd0aHx8Mz09dGltZS5sZW5ndGgpe3ZhciBob3VyPW5ldyBOdW1iZXIodGltZVswXSksbWludXRlcz1uZXcgTnVtYmVyKHRpbWVbMV0pLHNlY29uZHM9MDtpZigzPT10aW1lLmxlbmd0aCl7aWYoc2Vjb25kcz1uZXcgTnVtYmVyKHRpbWVbMl0pLGhvdXI+MjN8fGhvdXI8MHx8bWludXRlcz41OXx8bWludXRlczwwfHxzZWNvbmRzPjU5fHxzZWNvbmRzPDApcmV0dXJuITF9ZWxzZSBpZihob3VyPjIzfHxob3VyPDB8fG1pbnV0ZXM+NTl8fG1pbnV0ZXM8MClyZXR1cm4hMTtyZXR1cm4gNjAqaG91cio2MCs2MCptaW51dGVzK3NlY29uZHN9cmV0dXJuITF9dGltZSh0aW1lKXtsZXQgZGF0ZT10aGlzLmlzc2V0KHRpbWUpP25ldyBEYXRlKE1hdGguZmxvb3IodGltZSkpOm5ldyBEYXRlLGhvdXI9ZGF0ZS5nZXRIb3VycygpLnRvU3RyaW5nKCksbWludXRlcz1kYXRlLmdldE1pbnV0ZXMoKS50b1N0cmluZygpLHNlY29uZHM9ZGF0ZS5nZXRTZWNvbmRzKCkudG9TdHJpbmcoKTtyZXR1cm5gJHtob3VyPWhvdXIubGVuZ3RoPjE/aG91cjpgMCR7aG91cn1gfToke21pbnV0ZXM9bWludXRlcy5sZW5ndGg+MT9taW51dGVzOmAwJHttaW51dGVzfWB9OiR7c2Vjb25kcz1zZWNvbmRzLmxlbmd0aD4xP3NlY29uZHM6YDAke3NlY29uZHN9YH1gfWRhdGUodGltZSl7bGV0IGRhdGU9dGhpcy5pc3NldCh0aW1lKT9uZXcgRGF0ZShNYXRoLmZsb29yKHRpbWUpKTpuZXcgRGF0ZSxkYXk9ZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKSxtb250aD0oZGF0ZS5nZXRNb250aCgpKzEpLnRvU3RyaW5nKCkseWVhcj1kYXRlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtyZXR1cm4gZGF5PWRheS5sZW5ndGg+MT9kYXk6YDAke2RheX1gLGAke3llYXJ9LSR7bW9udGg9bW9udGgubGVuZ3RoPjE/bW9udGg6YDAke21vbnRofWB9LSR7ZGF5fWB9dGltZV9kYXRlKHRpbWUpe3JldHVybmAke3RoaXMudGltZSh0aW1lKX0sICR7dGhpcy5kYXRlKHRpbWUpfWB9dGltZVRvZGF5KCl7bGV0IGRhdGU9bmV3IERhdGUsaG91cj1kYXRlLmdldEhvdXJzKCksbWludXRlcz1kYXRlLmdldE1pbnV0ZXMoKSxzZWNvbmRzPWRhdGUuZ2V0U2Vjb25kcygpLHRpbWU9dGhpcy5pc1RpbWVWYWxpZChgJHtob3VyfToke21pbnV0ZXN9OiR7c2Vjb25kc31gKTtyZXR1cm4gdGltZXx8LTF9aXNEYXRlVmFsaWQodmFsdWUpe3JldHVybiEhKHRoaXMuaXNEYXRlKHZhbHVlKSYmdGhpcy5pc1llYXJWYWxpZCh2YWx1ZSkmJnRoaXMuaXNNb250aFZhbGlkKHZhbHVlKSYmdGhpcy5pc0RheVZhbGlkKHZhbHVlKSl9aXNEYXlWYWxpZCh2YWx1ZSl7Zm9yKHZhciB2X2RheT1cIlwiLGk9MDtpPDI7aSsrKXZfZGF5Kz12YWx1ZVtpKzhdO3ZhciBsaW1pdD0wLG1vbnRoPXRoaXMuaXNNb250aFZhbGlkKHZhbHVlKTtyZXR1cm5cIjAxXCI9PW1vbnRoP2xpbWl0PTMxOlwiMDJcIj09bW9udGg/bGltaXQ9dGhpcy5pc0xlYXBZZWFyKHRoaXMuaXNZZWFyVmFsaWQodmFsdWUpKT8yOToyODpcIjAzXCI9PW1vbnRoP2xpbWl0PTMxOlwiMDRcIj09bW9udGg/bGltaXQ9MzA6XCIwNVwiPT1tb250aD9saW1pdD0zMTpcIjA2XCI9PW1vbnRoP2xpbWl0PTMwOlwiMDdcIj09bW9udGg/bGltaXQ9MzE6XCIwOFwiPT1tb250aD9saW1pdD0zMTpcIjA5XCI9PW1vbnRoP2xpbWl0PTMwOlwiMTBcIj09bW9udGg/bGltaXQ9MzE6XCIxMVwiPT1tb250aD9saW1pdD0zMDpcIjEyXCI9PW1vbnRoJiYobGltaXQ9MzEpLGxpbWl0PHZfZGF5PzA6dl9kYXl9aXNEYXRlKHZhbHVlKXtpZigxMCE9dmFsdWUubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgeCBpbiB2YWx1ZSlpZighdGhpcy5pc0RpZ2l0KHZhbHVlW3hdKSl7aWYoND09eHx8Nz09eCl7aWYoXCItXCI9PXZhbHVlW3hdKWNvbnRpbnVlO3JldHVybiExfXJldHVybiExfXJldHVybiEwfWlzTW9udGhWYWxpZCh2YWx1ZSl7Zm9yKHZhciB2X21vbnRoPVwiXCIsaT0wO2k8MjtpKyspdl9tb250aCs9dmFsdWVbaSs1XTtyZXR1cm4gdl9tb250aD4xMnx8dl9tb250aDwxPzA6dl9tb250aH1pc1llYXJWYWxpZCh2YWx1ZSl7Zm9yKHZhciB5ZWFyPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoXCJZXCIpLHZfeWVhcj1cIlwiLGk9MDtpPDQ7aSsrKXZfeWVhcis9dmFsdWVbaSswXTtyZXR1cm4gdl95ZWFyPnllYXI/MDp2X3llYXJ9Z2V0WWVhcih2YWx1ZSl7Zm9yKHZhciB2X3llYXI9XCJcIixpPTA7aTw0O2krKyl2X3llYXIrPXZhbHVlW2krMF07cmV0dXJuIHZfeWVhcn1pc0xlYXBZZWFyKHZhbHVlKXtyZXR1cm4gdmFsdWUlND09MCYmKHZhbHVlJTEwMCE9MHx8dmFsdWUlNDAwPT0wKX1kYXlzSW5Nb250aChtb250aCx5ZWFyKXt2YXIgZGF5cz0wO3JldHVyblwiMDFcIj09bW9udGg/ZGF5cz0zMTpcIjAyXCI9PW1vbnRoP2RheXM9dGhpcy5pc0xlYXBZZWFyKHllYXIpPzI5OjI4OlwiMDNcIj09bW9udGg/ZGF5cz0zMTpcIjA0XCI9PW1vbnRoP2RheXM9MzA6XCIwNVwiPT1tb250aD9kYXlzPTMxOlwiMDZcIj09bW9udGg/ZGF5cz0zMDpcIjA3XCI9PW1vbnRoP2RheXM9MzE6XCIwOFwiPT1tb250aD9kYXlzPTMxOlwiMDlcIj09bW9udGg/ZGF5cz0zMDpcIjEwXCI9PW1vbnRoP2RheXM9MzE6XCIxMVwiPT1tb250aD9kYXlzPTMwOlwiMTJcIj09bW9udGgmJihkYXlzPTMxKSxkYXlzfWRhdGVWYWx1ZShkYXRlKXtmb3IodmFyIHllYXI9MzY1KnRoaXMuZ2V0WWVhcihkYXRlKSxtb250aD0wLGk9MTtpPHRoaXMuaXNNb250aFZhbGlkKGRhdGUpO2krKyltb250aD10aGlzLmRheXNJbk1vbnRoKGksdGhpcy5nZXRZZWFyKGRhdGUpKS8xK21vbnRoLzE7cmV0dXJuIHllYXIvMSttb250aC8xK3RoaXMuaXNEYXlWYWxpZChkYXRlKS8xfXRvZGF5KCl7dmFyIHRvZGF5PW5ldyBEYXRlLG1vbnRoPXRvZGF5LmdldE1vbnRoKCkvMSsxO3JldHVybiAyIT1tb250aC5sZW5ndGgmJihtb250aD1cIjBcIittb250aCksdG9kYXk9dG9kYXkuZ2V0RnVsbFllYXIoKStcIi1cIittb250aCtcIi1cIit0b2RheS5nZXREYXRlKCl9Z2V0RGF0ZU9iamVjdCh2YWx1ZSl7bGV0IGRheXM9TWF0aC5mbG9vcih2YWx1ZS90aGlzLnNlY29uZHNJbkRheXMoMSkpO3ZhbHVlLT10aGlzLnNlY29uZHNJbkRheXMoZGF5cyk7bGV0IGhvdXJzPU1hdGguZmxvb3IodmFsdWUvdGhpcy5zZWNvbmRzSW5Ib3VycygxKSk7dmFsdWUtPXRoaXMuc2Vjb25kc0luSG91cnMoaG91cnMpO2xldCBtaW51dGVzPU1hdGguZmxvb3IodmFsdWUvdGhpcy5zZWNvbmRzSW5NaW51dGVzKDEpKTtyZXR1cm57ZGF5czpkYXlzLGhvdXJzOmhvdXJzLG1pbnV0ZXM6bWludXRlcyxzZWNvbmRzOnZhbHVlLT10aGlzLnNlY29uZHNJbk1pbnV0ZXMobWludXRlcyl9fWRhdGVXaXRoVG9kYXkoZGF0ZSl7dmFyIHRvZGF5PU1hdGguZmxvb3IodGhpcy5kYXRlVmFsdWUodGhpcy50b2RheSgpKSk7bGV0IGRhdGVWYWx1ZT1NYXRoLmZsb29yKHRoaXMuZGF0ZVZhbHVlKGRhdGUpKTt2YXIgdmFsdWU9e2RpZmY6ZGF0ZVZhbHVlLXRvZGF5LHdoZW46XCJcIn07cmV0dXJuIHZhbHVlLndoZW49ZGF0ZVZhbHVlPnRvZGF5P1wiZnV0dXJlXCI6ZGF0ZVZhbHVlPT10b2RheT9cInRvZGF5XCI6XCJwYXN0XCIsdmFsdWV9ZGF0ZVN0cmluZyhkYXRlKXt2YXIgeWVhcj1uZXcgTnVtYmVyKHRoaXMuZ2V0WWVhcihkYXRlKSksbW9udGg9bmV3IE51bWJlcih0aGlzLmlzTW9udGhWYWxpZChkYXRlKSk7cmV0dXJuIG5ldyBOdW1iZXIodGhpcy5pc0RheVZhbGlkKGRhdGUpKStcIiBcIit0aGlzLm1vbnRoc1ttb250aC0xXStcIiwgXCIreWVhcn1zZWNvbmRzSW5EYXlzKGRheXMpe3JldHVybiBNYXRoLmZsb29yKDI0KmRheXMqNjAqNjApfXNlY29uZHNJbkhvdXJzKGhvdXJzKXtyZXR1cm4gTWF0aC5mbG9vcig2MCpob3Vycyo2MCl9c2Vjb25kc0luTWludXRlcyhtaW51dGVzKXtyZXR1cm4gTWF0aC5mbG9vcig2MCptaW51dGVzKX1zZWNvbmRzVGlsbERhdGUoZGF0ZSl7cmV0dXJuIHRoaXMuc2Vjb25kc0luRGF5cyhNYXRoLmZsb29yKHRoaXMuZGF0ZVZhbHVlKGRhdGUpKSl9c2Vjb25kc1RpbGxUb2RheSgpe3JldHVybiB0aGlzLnNlY29uZHNUaWxsRGF0ZSh0aGlzLnRvZGF5KCkpfXNlY29uZHNUaWxsTm93KCl7cmV0dXJuIHRoaXMuc2Vjb25kc1RpbGxEYXRlKHRoaXMudG9kYXkoKSkrdGhpcy50aW1lVG9kYXkoKX1zZWNvbmRzVGlsbE1vbWVudChtb21lbnQpe3JldHVybiB0aGlzLnNlY29uZHNUaWxsRGF0ZSh0aGlzLmRhdGUobW9tZW50KSkrdGhpcy5pc1RpbWVWYWxpZCh0aGlzLnRpbWUobW9tZW50KSl9bG9nKC4uLmRhdGEpe2xldCB0aW1lPWBbJHt0aGlzLnRpbWUoKX1dOmA7Y29uc29sZS5sb2codGltZSwuLi5kYXRhKX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbEJsY21sdlpDNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVJuVnVZeUlzSWx0dlltcGxZM1FnVDJKcVpXTjBYU0lzSW5OMWNHVnlJaXdpYlc5dWRHaHpJaXdpYVNJc0luUm9hWE1pTENKc1pXNW5kR2dpTENKd2RYTm9JaXdpYzJ4cFkyVWlMQ0pqYjNWdWRDSXNJbmxsWVhJaUxDSkVZWFJsSWl3aVoyVjBXV1ZoY2lJc0ltWmxkR05vWldRaUxDSjBhVzFsSWl3aWMzQnNhWFFpTENKb2IzVnlJaXdpVG5WdFltVnlJaXdpYldsdWRYUmxjeUlzSW5ObFkyOXVaSE1pTENKa1lYUmxJaXdpYVhOelpYUWlMQ0pOWVhSb0lpd2labXh2YjNJaUxDSm5aWFJJYjNWeWN5SXNJblJ2VTNSeWFXNW5JaXdpWjJWMFRXbHVkWFJsY3lJc0ltZGxkRk5sWTI5dVpITWlMQ0prWVhraUxDSm5aWFJFWVhSbElpd2liVzl1ZEdnaUxDSm5aWFJOYjI1MGFDSXNJbWRsZEVaMWJHeFpaV0Z5SWl3aWFYTlVhVzFsVm1Gc2FXUWlMQ0oyWVd4MVpTSXNJbWx6UkdGMFpTSXNJbWx6V1dWaGNsWmhiR2xrSWl3aWFYTk5iMjUwYUZaaGJHbGtJaXdpYVhORVlYbFdZV3hwWkNJc0luWmZaR0Y1SWl3aWJHbHRhWFFpTENKcGMweGxZWEJaWldGeUlpd2llQ0lzSW1selJHbG5hWFFpTENKMlgyMXZiblJvSWl3aWRsOTVaV0Z5SWl3aVpHRjVjeUlzSW1SaGVYTkpiazF2Ym5Sb0lpd2lkRzlrWVhraUxDSnpaV052Ym1SelNXNUVZWGx6SWl3aWFHOTFjbk1pTENKelpXTnZibVJ6U1c1SWIzVnljeUlzSW5ObFkyOXVaSE5KYmsxcGJuVjBaWE1pTENKa1lYUmxWbUZzZFdVaUxDSmthV1ptSWl3aWQyaGxiaUlzSW5ObFkyOXVaSE5VYVd4c1JHRjBaU0lzSW5ScGJXVlViMlJoZVNJc0ltMXZiV1Z1ZENJc0ltUmhkR0VpTENKamIyNXpiMnhsSWl3aWJHOW5JbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hwUkVGNVZrRkJMR1ZCUVU5RExFTkJkbFpRTEdOQlFYRkNReXhSUVVGQlFTeERRVVZxUWtNc1YwRkJRVUVzUlVGQlFVRXNRMEZEU1VNc1MwRkJRVUVzUlVGQlFVRXNRMEZIU2tRc1kwRkJRVUVzUlVGQlFVRXNRMEZEU1N4SlFVRkpSU3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKUXl4SlFVRkJRU3hEUVVGTFJpeE5RVUZCUVN4RFFVRlBSeXhOUVVGQlFTeERRVUZSUml4RFFVRkJRU3hGUVVGQlFTeERRVU53UTBRc1RVRkJRVUVzUTBGQlQwa3NTVUZCUVVFc1EwRkJTMFlzU1VGQlFVRXNRMEZCUzBZc1RVRkJRVUVzUTBGQlQwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwa3NTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGZUVNc1QwRkJUMHdzVFVGQlFVRXNRMEZIV0VZc1VVRkJRVUVzUTBGQlUxRXNTMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGRFlpeEpRVUZKUXl4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVsQlFVbERMRWxCUVVGQkxFVkJRVTlETEU5QlFVRkJMRVZCUVVGQkxFTkJRVmtzU1VGQlFTeERRVU01UWtNc1QwRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlEyUXNTVUZCU3l4SlFVRkpWQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVc3NTMEZCUVVFc1EwRkJUMHdzUTBGQlFVRXNSVUZCUVVFc1EwRkRka0pUTEU5QlFVRkJMRU5CUVZGT0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVkZITEVsQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGQkxFTkJRVUVzUlVGQlMwRXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkROVUpCTEVsQlFVRkJMRVZCUVVGQkxFTkJSVW9zVDBGQlQwY3NUMEZCUVVFc1EwRkhXRm9zVjBGQlFVRXNRMEZCV1dFc1NVRkJRVUVzUTBGQlFVRXNRMEZGVWl4SFFVRnRRaXhEUVVGQkxFVkJRVUVzUTBGRWJrSkJMRWxCUVVGQkxFTkJRVTlCTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRVZCUTFSVUxFMUJRVUZCTEVWQlFUaENMRU5CUVVFc1JVRkJabEVzU1VGQlFVRXNRMEZCUzFJc1RVRkJRVUVzUTBGQllTeERRVU4wUXl4SlFVRkpWU3hKUVVGQlFTeERRVUZQTEVsQlFVbERMRTFCUVVGQkxFTkJRVTlJTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGRrSkpMRTlCUVVGQkxFTkJRVlVzU1VGQlNVUXNUVUZCUVVFc1EwRkJUMGdzU1VGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNeFFrc3NUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJSMlFzUjBGQmJVSXNRMEZCUVN4RlFVRm1UQ3hKUVVGQlFTeERRVUZMVWl4TlFVRkJRU3hEUVVGQlFTeERRVVZNTEVkQlJFRmhMRTlCUVVGQkxFTkJRVlVzU1VGQlNVWXNUVUZCUVVFc1EwRkJUMGdzU1VGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOMFFrVXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFVkJRVTFCTEVsQlFVRkJMRU5CUVU4c1EwRkJRU3hGUVVGTFJTeFBRVUZCUVN4RFFVRlZMRVZCUVVFc1JVRkJUVUVzVDBGQlFVRXNRMEZCVlN4RFFVRkJMRVZCUVV0RExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RlFVRk5RU3hQUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZEYkVZc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeExRVWRZTEVkQlFVbElMRWxCUVVGQkxFTkJRVThzUlVGQlFTeEZRVUZOUVN4SlFVRkJRU3hEUVVGUExFTkJRVUVzUlVGQlMwVXNUMEZCUVVFc1EwRkJWU3hGUVVGQkxFVkJRVTFCTEU5QlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVOdVJDeE5RVUZCTEVOQlFVOHNRMEZCUVN4RFFVdG1MRTlCUkc5Q0xFVkJRVUVzUTBGQlVFWXNTVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRV2xDTEVWQlFVRXNRMEZCVmtVc1QwRkJRVUVzUTBGQlowSkRMRTlCUVVGQkxFTkJSM0JFTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUjFoc1FpeEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZCUVN4RFFVTkVMRWxCUVVsTkxFbEJRVUZCTEVOQlFWRm1MRWxCUVVGQkxFTkJRVXRuUWl4TFFVRkJRU3hEUVVGTlVDeEpRVUZCUVN4RFFVRkJRU3hEUVVGVExFbEJRVWxJTEVsQlFVRkJMRU5CUVV0WExFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFVTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWTXNTVUZCU1Vnc1NVRkJRVUVzUTBGRE4wUkxMRWxCUVVGQkxFTkJRVTlKTEVsQlFVRkJMRU5CUVV0SkxGRkJRVUZCTEVWQlFVRkJMRU5CUVZkRExGRkJRVUZCTEVWQlFVRkJMRU5CUTNaQ1VDeFBRVUZCUVN4RFFVRlZSU3hKUVVGQlFTeERRVUZMVFN4VlFVRkJRU3hGUVVGQlFTeERRVUZoUkN4UlFVRkJRU3hGUVVGQlFTeERRVU0xUWs0c1QwRkJRVUVzUTBGQlZVTXNTVUZCUVVFc1EwRkJTMDhzVlVGQlFVRXNSVUZCUVVFc1EwRkJZVVlzVVVGQlFVRXNSVUZCUVVFc1EwRk5hRU1zVFVGQlFTeERRVUZCTEVWQlNrRlVMRWxCUVVGQkxFTkJRVkZCTEVsQlFVRkJMRU5CUVV0V0xFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkxWU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZYUVN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVU4wUTBVc1QwRkJRVUVzUTBGQlYwRXNUMEZCUVVFc1EwRkJVVm9zVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVV0WkxFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXTkJMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlF5OURReXhQUVVGQlFTeERRVUZYUVN4UFFVRkJRU3hEUVVGUllpeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJTMkVzVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCWTBFc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMYmtSc1FpeEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZCUVN4RFFVTkVMRWxCUVVsTkxFbEJRVUZCTEVOQlFWRm1MRWxCUVVGQkxFTkJRVXRuUWl4TFFVRkJRU3hEUVVGTlVDeEpRVUZCUVN4RFFVRkJRU3hEUVVGVExFbEJRVWxJTEVsQlFVRkJMRU5CUVV0WExFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFVTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWTXNTVUZCU1Vnc1NVRkJRVUVzUTBGRE4wUnBRaXhIUVVGQlFTeERRVUZOVWl4SlFVRkJRU3hEUVVGTFV5eFBRVUZCUVN4RlFVRkJRU3hEUVVGVlNpeFJRVUZCUVN4RlFVRkJRU3hEUVVOeVFrc3NTMEZCUVVFc1EwRkJRVUVzUTBGQlUxWXNTVUZCUVVFc1EwRkJTMWNzVVVGQlFVRXNSVUZCUVVFc1EwRkJZU3hEUVVGQkxFVkJRVWRPTEZGQlFVRkJMRVZCUVVGQkxFTkJRemxDWml4SlFVRkJRU3hEUVVGUFZTeEpRVUZCUVN4RFFVRkxXU3hYUVVGQlFTeEZRVUZCUVN4RFFVRmpVQ3hSUVVGQlFTeEZRVUZCUVN4RFFVczVRaXhQUVVoQlJ5eEhRVUZCUVN4RFFVRlBRU3hIUVVGQlFTeERRVUZKZEVJc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVdHpRaXhIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZWUVN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVWQ2UW14Q0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJSbFp2UWl4TFFVRkJRU3hEUVVGVFFTeExRVUZCUVN4RFFVRk5lRUlzVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVV0M1FpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlpRU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVVmtSaXhIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjdlFqTkNMRk5CUVVGQkxFTkJRVlZoTEVsQlFVRkJMRU5CUVVGQkxFTkJRMDRzVFVGQlFTeERRVUZCTEVWQlFWVlVMRWxCUVVGQkxFTkJRVXRUTEVsQlFVRkJMRU5CUVV0QkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFWVlVMRWxCUVVGQkxFTkJRVXRsTEVsQlFVRkJMRU5CUVV0T0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6VkRZaXhUUVVGQlFTeEZRVUZCUVN4RFFVTkpMRWxCUVVsdFFpeEpRVUZCUVN4RFFVRlBMRWxCUVVsVUxFbEJRVUZCTEVOQlExaExMRWxCUVVGQkxFTkJRVTlKTEVsQlFVRkJMRU5CUVV0SkxGRkJRVUZCTEVWQlFVRkJMRU5CUTFwT0xFOUJRVUZCTEVOQlFWVkZMRWxCUVVGQkxFTkJRVXROTEZWQlFVRkJMRVZCUVVGQkxFTkJRMlpRTEU5QlFVRkJMRU5CUVZWRExFbEJRVUZCTEVOQlFVdFBMRlZCUVVGQkxFVkJRVUZCTEVOQlJXWmlMRWxCUVVGQkxFTkJRVTlVTEVsQlFVRkJMRU5CUVVzMFFpeFhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZsYWtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJVVVVzVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlYwTXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRiRVFzVDBGQlQwd3NTVUZCUVVFc1JVRkJRVUVzUTBGQlpTeERRVUZCTEVOQlJ6RkNZaXhYUVVGQlFTeERRVUZaYVVNc1MwRkJRVUVzUTBGQlFVRXNRMEZEVWl4TlFVRkJMRU5CUVVFc1JVRkJTVGRDTEVsQlFVRkJMRU5CUVVzNFFpeE5RVUZCUVN4RFFVRlBSQ3hMUVVGQlFTeERRVUZCUVN4RlFVTlNOMElzU1VGQlFVRXNRMEZCU3l0Q0xGZEJRVUZCTEVOQlFWbEdMRXRCUVVGQkxFTkJRVUZCTEVWQlEySTNRaXhKUVVGQlFTeERRVUZMWjBNc1dVRkJRVUVzUTBGQllVZ3NTMEZCUVVFc1EwRkJRVUVzUlVGRFpEZENMRWxCUVVGQkxFTkJRVXRwUXl4VlFVRkJRU3hEUVVGWFNpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVk53UTJwRExGVkJRVUZCTEVOQlFWZHBReXhMUVVGQlFTeERRVUZCUVN4RFFVVlFMRWxCUkVFc1NVRkJTVXNzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUTBodVF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVWQlFVRkJMRU5CUTI1Q2JVTXNTMEZCUVVFc1JVRkJVMHdzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUlhaQ0xFbEJRVWx2UXl4TFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGRFVsWXNTMEZCUVVFc1EwRkJVWHBDTEVsQlFVRkJMRU5CUVV0blF5eFpRVUZCUVN4RFFVRmhTQ3hMUVVGQlFTeERRVUZCUVN4RFFXZERPVUlzVFVFNVFtRXNTVUZCUVN4RlFVRlVTaXhMUVVGQlFTeERRVU5CVlN4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGRFVTeEpRVUZCTEVWQlFWUldMRXRCUVVGQkxFTkJSVWhWTEV0QlFVRkJMRU5CUkVGdVF5eEpRVUZCUVN4RFFVRkxiME1zVlVGQlFVRXNRMEZCVjNCRExFbEJRVUZCTEVOQlFVc3JRaXhYUVVGQlFTeERRVUZaUml4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjZRaXhGUVVGQkxFTkJSVUVzUlVGQlFTeERRVVZKTEVsQlFVRXNSVUZCVkVvc1MwRkJRVUVzUTBGRFVGVXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRMUVzU1VGQlFTeEZRVUZVVml4TFFVRkJRU3hEUVVOUVZTeExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkRVU3hKUVVGQkxFVkJRVlJXTEV0QlFVRkJMRU5CUTFCVkxFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVTlJMRWxCUVVFc1JVRkJWRllzUzBGQlFVRXNRMEZEVUZVc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlExRXNTVUZCUVN4RlFVRlVWaXhMUVVGQlFTeERRVU5RVlN4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGRFVTeEpRVUZCTEVWQlFWUldMRXRCUVVGQkxFTkJRMUJWTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVOUkxFbEJRVUVzUlVGQlZGWXNTMEZCUVVFc1EwRkRVRlVzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUTFFc1NVRkJRU3hGUVVGVVZpeExRVUZCUVN4RFFVTlFWU3hMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZEVVN4SlFVRkJMRVZCUVZSV0xFdEJRVUZCTEVOQlExQlZMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVU5STEVsQlFVRXNSVUZCVkZZc1MwRkJRVUVzUjBGRFVGVXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVUVzUTBGSFVrRXNTMEZCUVVFc1EwRkJVVVFzUzBGQlFVRXNRMEZEUkN4RFFVRkJMRU5CUlVwQkxFdEJRVUZCTEVOQlIxaDBReXhOUVVGQlFTeERRVUZQYVVNc1MwRkJRVUVzUTBGQlFVRXNRMEZGU0N4SFFVRlhMRVZCUVVFc1JVRkVSRUVzUzBGQlFVRXNRMEZCVFRWQ0xFMUJRVUZCTEVOQmEwSmFMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJhRUpRTEVsQlFVc3NTVUZCU1c5RExFTkJRVUZCTEVsQlFVdFNMRXRCUVVGQkxFTkJRMVlzUjBGQlFTeERRVUZKTjBJc1NVRkJRVUVzUTBGQlMzTkRMRTlCUVVGQkxFTkJRVkZVTEV0QlFVRkJMRU5CUVUxUkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRWFpDTEVOQlIwa3NSMEZCVXl4RFFVRkJMRVZCUVV4QkxFTkJRVUZCTEVWQlFXVXNRMEZCUVN4RlFVRk1RU3hEUVVGQlFTeERRVUZSTEVOQlEyeENMRWRCUVdkQ0xFZEJRVUVzUlVGQldsSXNTMEZCUVVFc1EwRkJUVkVzUTBGQlFVRXNRMEZCUVVFc1EwRkRUaXhUUVVWQkxFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlIxZ3NUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRlBka0lzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZIV0hwRExGbEJRVUZCTEVOQlFXRnBReXhMUVVGQlFTeERRVUZCUVN4RFFVVlVMRWxCUkVFc1NVRkJTVlVzVDBGQlFVRXNRMEZCVlN4RlFVRkJMRU5CUTB4NFF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVWQlFVRkJMRU5CUTI1Q2QwTXNUMEZCUVVFc1JVRkJWMVlzUzBGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUlhwQ0xFOUJRVWwzUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUlVGQlRVRXNUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRMjVDTEVOQlFVRXNRMEZGU2tFc1QwRkJRVUVzUTBGSFdETkRMRmRCUVVGQkxFTkJRVmxwUXl4TFFVRkJRU3hEUVVGQlFTeERRVWRTTEVsQlJrRXNTVUZCU1hoQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVU4c1NVRkJTVU1zU1VGQlFVRXNSVUZCVDNGQ0xGZEJRVUZCTEVOQlFWa3NSMEZCUVN4RFFVRkJMRU5CUXpsQ1lTeE5RVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRTbnBETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNSVUZCUVVFc1EwRkRia0o1UXl4TlFVRkJRU3hGUVVGVldDeExRVUZCUVN4RFFVRk5PVUlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkZlRUlzVDBGQlNYbERMRTFCUVVGQkxFTkJRVk51UXl4SlFVRkJRU3hEUVVOR0xFTkJRVUVzUTBGRlNtMURMRTFCUVVGQkxFTkJSMWcxUXl4UFFVRkJRU3hEUVVGUmFVTXNTMEZCUVVFc1EwRkJRVUVzUTBGRlNpeEpRVVJCTEVsQlFVbFhMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVU5LZWtNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGQlFTeERRVU51UW5sRExFMUJRVUZCTEVWQlFWVllMRXRCUVVGQkxFTkJRVTA1UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVVY0UWl4UFFVRlBlVU1zVFVGQlFVRXNRMEZIV0RWRExGVkJRVUZCTEVOQlFWZHBReXhMUVVGQlFTeERRVUZCUVN4RFFVTlFMRTlCUVVsQkxFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RlFVRkxMRU5CUVVFc1IwRkRVa0VzUzBGQlFVRXNRMEZCVVN4SFFVRkJMRVZCUVU4c1EwRkJRU3hGUVVGUFFTeExRVUZCUVN4RFFVRlJMRWRCUVVFc1JVRkJUeXhEUVVGQkxFTkJRVUVzUTBGUmJFUnFReXhYUVVGQlFTeERRVUZaTmtJc1MwRkJRVUVzUTBGQlQzQkNMRWxCUVVGQkxFTkJRVUZCTEVOQlEyWXNTVUZCU1c5RExFbEJRVUZCTEVOQlFVOHNRMEZCUVN4RFFUaENXQ3hOUVRkQ1lTeEpRVUZCTEVWQlFWUm9RaXhMUVVGQlFTeERRVU5CWjBJc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlExTXNTVUZCUVN4RlFVRlVhRUlzUzBGQlFVRXNRMEZGU0dkQ0xFbEJRVUZCTEVOQlJFRjZReXhKUVVGQlFTeERRVUZMYjBNc1ZVRkJRVUVzUTBGQlZ5OUNMRWxCUVVGQkxFTkJRVUZCTEVOQlExUXNSVUZCUVN4RFFVVkJMRVZCUVVFc1EwRkZTeXhKUVVGQkxFVkJRVlJ2UWl4TFFVRkJRU3hEUVVOUVowSXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRMU1zU1VGQlFTeEZRVUZVYUVJc1MwRkJRVUVzUTBGRFVHZENMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVU5UTEVsQlFVRXNSVUZCVkdoQ0xFdEJRVUZCTEVOQlExQm5RaXhKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZEVXl4SlFVRkJMRVZCUVZSb1FpeExRVUZCUVN4RFFVTlFaMElzU1VGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUTFNc1NVRkJRU3hGUVVGVWFFSXNTMEZCUVVFc1EwRkRVR2RDTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVOVExFbEJRVUVzUlVGQlZHaENMRXRCUVVGQkxFTkJRMUJuUWl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGRFV5eEpRVUZCTEVWQlFWUm9RaXhMUVVGQlFTeERRVU5RWjBJc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlExTXNTVUZCUVN4RlFVRlVhRUlzUzBGQlFVRXNRMEZEVUdkQ0xFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVTlRMRWxCUVVFc1JVRkJWR2hDTEV0QlFVRkJMRU5CUTFCblFpeEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkRVeXhKUVVGQkxFVkJRVlJvUWl4TFFVRkJRU3hIUVVOUVowSXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVUVzUTBGRlNrRXNTVUZCUVVFc1EwRkhXRGRETEZOQlFVRkJMRU5CUVZWdFFpeEpRVUZCUVN4RFFVRkJRU3hEUVVsT0xFbEJTRUVzU1VGRFNWWXNTVUZCUVVFc1EwRkJORUlzUjBGQlFTeERRVUZ5UWt3c1NVRkJRVUVzUTBGQlMwOHNUMEZCUVVFc1EwRkJVVkVzU1VGQlFVRXNRMEZCUVVFc1EwRkRjRUpWTEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVOSU1VSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsRExFbEJRVUZCTEVOQlFVdG5ReXhaUVVGQlFTeERRVUZoYWtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCVDJoQ0xFTkJRVUZCTEVWQlFVRkJMRU5CUTNwRE1FSXNTMEZCUVVFc1EwRkJVWHBDTEVsQlFVRkJMRU5CUVVzd1F5eFhRVUZCUVN4RFFVRlpNME1zUTBGQlFVRXNRMEZCUjBNc1NVRkJRVUVzUTBGQlMwOHNUMEZCUVVFc1EwRkJVVkVzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVbFZMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVXRzUlN4UFFVWlRjRUlzU1VGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVUxdlFpeExRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkVjRUo2UWl4SlFVRkJRU3hEUVVGTGFVTXNWVUZCUVVFc1EwRkJWMnhDTEVsQlFVRkJMRU5CUVVGQkxFTkJRMmRDTEVOQlFVRXNRMEZMT1VOdVFpeExRVUZCUVN4RlFVRkJRU3hEUVVOSkxFbEJRVWtyUXl4TFFVRkJRU3hEUVVGUkxFbEJRVWx5UXl4SlFVRkJRU3hEUVVOYWJVSXNTMEZCUVVFc1EwRkJVV3RDTEV0QlFVRkJMRU5CUVUxcVFpeFJRVUZCUVN4RlFVRkJRU3hEUVVGaExFTkJRVUVzUTBGQlNTeERRVUZCTEVOQlMyNURMRTlCU205Q0xFTkJRVUVzUlVGQmFFSkVMRXRCUVVGQkxFTkJRVTE0UWl4TlFVRkJRU3hIUVVOT2QwSXNTMEZCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVTFCTEV0QlFVRkJMRU5CUVVGQkxFTkJSV3hDYTBJc1MwRkJRVUVzUTBGQlUwRXNTMEZCUVVFc1EwRkJUV2hDTEZkQlFVRkJMRVZCUVVGQkxFTkJRV2xDTEVkQlFVRXNRMEZCVFVZc1MwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVMXJRaXhMUVVGQlFTeERRVUZOYmtJc1QwRkJRVUVzUlVGQlFVRXNRMEZKT1VRMVFpeGhRVUZCUVN4RFFVRmphVU1zUzBGQlFVRXNRMEZCUVVFc1EwRkRWaXhKUVVGSldTeEpRVUZCUVN4RFFVRlBlRUlzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRWY3NTMEZCUVVFc1EwRkJVVGRDTEVsQlFVRkJMRU5CUVVzMFF5eGhRVUZCUVN4RFFVRmpMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSV3BFWml4TFFVRkJRU3hGUVVGVE4wSXNTVUZCUVVFc1EwRkJTelJETEdGQlFVRkJMRU5CUVdOSUxFbEJRVUZCTEVOQlFVRkJMRU5CUlRWQ0xFbEJRVWxKTEV0QlFVRkJMRU5CUVZFMVFpeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZOVnl4TFFVRkJRU3hEUVVGUk4wSXNTVUZCUVVFc1EwRkJTemhETEdOQlFVRkJMRU5CUVdVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGJrUnFRaXhMUVVGQlFTeEZRVUZUTjBJc1NVRkJRVUVzUTBGQlN6aERMR05CUVVGQkxFTkJRV1ZFTEV0QlFVRkJMRU5CUVVGQkxFTkJSVGRDTEVsQlFVbG9ReXhQUVVGQlFTeERRVUZWU1N4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5WeXhMUVVGQlFTeERRVUZSTjBJc1NVRkJRVUVzUTBGQlN5dERMR2RDUVVGQlFTeERRVUZwUWl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVV0MlJDeE5RVUZQTEVOQlFVVk9MRWxCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVUxSkxFdEJRVUZCTEVOQlFVRkJMRXRCUVVGQkxFTkJRVTlvUXl4UFFVRkJRU3hEUVVGQlFTeFBRVUZCUVN4RFFVRlRReXhQUVVGQlFTeERRVW92UW1Vc1MwRkJRVUVzUlVGQlV6ZENMRWxCUVVGQkxFTkJRVXNyUXl4blFrRkJRVUVzUTBGQmFVSnNReXhQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVU5dVEycENMR0ZCUVVGQkxFTkJRV050UWl4SlFVRkJRU3hEUVVGQlFTeERRVU5XTEVsQlFVazBRaXhMUVVGQlFTeERRVUZSTVVJc1NVRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJUV3hDTEVsQlFVRkJMRU5CUVV0blJDeFRRVUZCUVN4RFFVRlZhRVFzU1VGQlFVRXNRMEZCU3pKRExFdEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlF6TkRMRWxCUVVsTExGTkJRVUZCTEVOQlFWa3ZRaXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGTmJFSXNTVUZCUVVFc1EwRkJTMmRFTEZOQlFVRkJMRU5CUVZWcVF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVV4UXl4SlFVRkpZeXhMUVVGQlFTeERRVUZSTEVOQlFVVnZRaXhKUVVGQlFTeERRVUZQUkN4VFFVRkJRU3hEUVVGWlRDeExRVUZCUVN4RFFVRlJUeXhKUVVGQlFTeERRVUZOTEVWQlFVRXNRMEZCUVN4RFFWVXZReXhQUVZKSmNrSXNTMEZCUVVFc1EwRkJUWEZDTEVsQlFVRkJMRU5CUkU1R0xGTkJRVUZCTEVOQlFWbE1MRXRCUVVGQkxFTkJRME1zVVVGQlFTeERRVVZTU3l4VFFVRkJRU3hGUVVGaFRDeExRVUZCUVN4RFFVTk1MRTlCUVVFc1EwRkhRU3hOUVVGQkxFTkJSVlprTEV0QlFVRkJMRU5CUjFocVF5eFZRVUZCUVN4RFFVRlhiVUlzU1VGQlFVRXNRMEZCUVVFc1EwRkRVQ3hKUVVGSlZpeEpRVUZCUVN4RFFVRlBMRWxCUVVsUExFMUJRVUZCTEVOQlFVOWFMRWxCUVVGQkxFTkJRVXRQTEU5QlFVRkJMRU5CUVZGUkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJReTlDVlN4TFFVRkJRU3hEUVVGUkxFbEJRVWxpTEUxQlFVRkJMRU5CUVU5YUxFbEJRVUZCTEVOQlFVdG5ReXhaUVVGQlFTeERRVUZoYWtJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhla01zVDBGR1ZTeEpRVUZKU0N4TlFVRkJRU3hEUVVGUFdpeEpRVUZCUVN4RFFVRkxhVU1zVlVGQlFVRXNRMEZCVjJ4Q0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWGhDTEVkQlFVRXNRMEZCVFdZc1NVRkJRVUVzUTBGQlMwWXNUVUZCUVVFc1EwRkJUekpDTEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGQkxFTkJRVXNzU1VGQlFTeERRVUZQY0VJc1NVRkJRVUVzUTBGSGRrUlVMR0ZCUVVGQkxFTkJRV00yUXl4SlFVRkJRU3hEUVVGQlFTeERRVVZXTEU5QlJGbDRRaXhKUVVGQlFTeERRVUZMUXl4TFFVRkJRU3hEUVVGaExFVkJRVUVzUTBGQlVIVkNMRWxCUVVGQkxFTkJRVmtzUlVGQlFTeERRVUZMTEVWQlFVRXNRMEZCUVN4RFFVazFRemRETEdOQlFVRkJMRU5CUVdWcFJDeExRVUZCUVN4RFFVRkJRU3hEUVVOWUxFOUJRVTgxUWl4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRmpMRVZCUVVFc1EwRkJVakpDTEV0QlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGQkxFTkJSMjVEYWtRc1owSkJRVUZCTEVOQlFXbENhVUlzVDBGQlFVRXNRMEZCUVVFc1EwRkRZaXhQUVVGUFNTeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZuUWl4RlFVRkJMRU5CUVZaTUxFOUJRVUZCTEVOQlFVRkJMRU5CUjNSQ2FrSXNaVUZCUVVFc1EwRkJaMEp0UWl4SlFVRkJRU3hEUVVGQlFTeERRVU5hTEU5QlFVOW1MRWxCUVVGQkxFTkJRVXMwUXl4aFFVRkJRU3hEUVVGak0wSXNTVUZCUVVFc1EwRkJTME1zUzBGQlFVRXNRMEZCVFd4Q0xFbEJRVUZCTEVOQlFVdG5SQ3hUUVVGQlFTeERRVUZWYWtNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGVFUnVRaXhuUWtGQlFVRXNSVUZCUVVFc1EwRkRTU3hQUVVGUFNTeEpRVUZCUVN4RFFVRkxiVVFzWlVGQlFVRXNRMEZCWjBKdVJDeEpRVUZCUVN4RFFVRkxNa01zUzBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGSGNrTXZReXhqUVVGQlFTeEZRVUZCUVN4RFFVTkpMRTlCUVU5SkxFbEJRVUZCTEVOQlFVdHRSQ3hsUVVGQlFTeERRVUZuUW01RUxFbEJRVUZCTEVOQlFVc3lReXhMUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGWE0wTXNTVUZCUVVFc1EwRkJTMjlFTEZOQlFVRkJMRVZCUVVGQkxFTkJSM0pFZUVRc2FVSkJRVUZCTEVOQlFXdENlVVFzVFVGQlFVRXNRMEZCUVVFc1EwRkRaQ3hQUVVGUGNrUXNTVUZCUVVFc1EwRkJTMjFFTEdWQlFVRkJMRU5CUVdkQ2JrUXNTVUZCUVVFc1EwRkJTMlVzU1VGQlFVRXNRMEZCUzNORExFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVmR5UkN4SlFVRkJRU3hEUVVGTE5FSXNWMEZCUVVFc1EwRkJXVFZDTEVsQlFVRkJMRU5CUVV0VExFbEJRVUZCTEVOQlFVczBReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkb1JucEVMRWRCUVVGQkxFTkJRVUZCTEVkQlFVOHdSQ3hKUVVGQlFTeERRVUZCUVN4RFFVTklMRWxCUVVrM1F5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlhWQ3hKUVVGQlFTeERRVUZMVXl4SlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVU53UWpoRExFOUJRVUZCTEVOQlFWRkRMRWRCUVVGQkxFTkJRVWt2UXl4SlFVRkJRU3hEUVVGQlFTeEhRVUZUTmtNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCIvKiByZW1vdmVkOiBjb25zdCBfJFBlcmlvZF8xMT1yZXF1aXJlKFwiLi9QZXJpb2RcIik7ICovO2NsYXNzIEVtcHR5e312YXIgXyRKU0VsZW1lbnRzXzg9Y2xhc3MgZXh0ZW5kcyBfJFBlcmlvZF8xMXtjb25zdHJ1Y3Rvcih0aGVXaW5kb3c9RW1wdHkpe3N1cGVyKCksdGhpcy5FbGVtZW50PXRoZVdpbmRvdy5FbGVtZW50LHRoaXMuZG9jdW1lbnQ9dGhlV2luZG93LmRvY3VtZW50fWxvYWRDc3MoaHJlZj1cIlwiKXtsZXQgZWxlbWVudD10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJsaW5rXCIsYXR0cmlidXRlczp7cmVsOlwic3R5bGVzaGVldFwiLHR5cGU6XCJ0ZXh0L2Nzc1wiLGhyZWY6aHJlZn19KTt2b2lkIDAhPT10aGlzLmRvY3VtZW50JiZ2b2lkIDAhPT10aGlzLmRvY3VtZW50LmhlYWQmJnRoaXMuZG9jdW1lbnQuaGVhZC5hcHBlbmQoZWxlbWVudCl9anNvbkZvcm0oZm9ybSl7bGV0IGpzb249e30scGVyZm9ybT1lbGVtZW50PT57bGV0IGNoaWxkcmVuPWVsZW1lbnQuY2hpbGRyZW47Zm9yKGxldCBpPTA7aTxjaGlsZHJlbi5sZW5ndGg7aSsrKXBlcmZvcm0oY2hpbGRyZW5baV0pO2VsZW1lbnQuaGFzQXR0cmlidXRlKFwibmFtZVwiKSYmKFwiZmlsZVwiPT1lbGVtZW50LnR5cGU/ZWxlbWVudC5oYXNBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiKT9qc29uW2VsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKV09ZWxlbWVudC5maWxlczpqc29uW2VsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKV09ZWxlbWVudC5maWxlc1swXTpqc29uW2VsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKV09ZWxlbWVudC52YWx1ZSl9O3JldHVybiBwZXJmb3JtKGZvcm0pLGpzb259anNvbkVsZW1lbnQoX2VsZW1lbnRfKXtsZXQgZWxlbWVudD1fZWxlbWVudF8ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxhdHRyaWJ1dGVzPV9lbGVtZW50Xy5nZXRBdHRyaWJ1dGVzKCk7YXR0cmlidXRlcy5zdHlsZT1fZWxlbWVudF8uY3NzKCk7bGV0IGNoaWxkcmVuPVtdO2ZvcihsZXQgaT0wO2k8X2VsZW1lbnRfLmNoaWxkcmVuLmxlbmd0aDtpKyspY2hpbGRyZW4ucHVzaChfZWxlbWVudF8uY2hpbGRyZW5baV0udG9Kc29uKCkpO3JldHVybntlbGVtZW50OmVsZW1lbnQsYXR0cmlidXRlczphdHRyaWJ1dGVzLGNoaWxkcmVuOmNoaWxkcmVufX1pc0VsZW1lbnQob2JqZWN0KXtyZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgdGhpcy5FbGVtZW50fWNyZWF0ZUZyb21PYmplY3Qob2JqZWN0PXt9LHNpbmdsZVBhcmVudCl7bGV0IGNyZWF0ZWQsbmFtZTtpZih0aGlzLmlzRWxlbWVudChvYmplY3QpP25hbWU9KGNyZWF0ZWQ9b2JqZWN0KS5ub2RlTmFtZTp0aGlzLmlzRWxlbWVudChvYmplY3QuZWxlbWVudCk/bmFtZT0oY3JlYXRlZD1vYmplY3QuZWxlbWVudCkubm9kZU5hbWU6KG5hbWU9b2JqZWN0LmVsZW1lbnQudG9Mb3dlckNhc2UoKSxjcmVhdGVkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQob2JqZWN0LmVsZW1lbnQpKSx0aGlzLmlzc2V0KG9iamVjdC5hdHRyaWJ1dGVzKSYmIXRoaXMuaXNFbGVtZW50KG9iamVjdCkpZm9yKHZhciBhdHRyIGluIG9iamVjdC5hdHRyaWJ1dGVzKVwic3R5bGVcIj09YXR0cj9jcmVhdGVkLmNzcyhvYmplY3QuYXR0cmlidXRlc1thdHRyXSk6Y3JlYXRlZC5zZXRBdHRyaWJ1dGUoYXR0cixvYmplY3QuYXR0cmlidXRlc1thdHRyXSk7aWYodGhpcy5pc3NldChvYmplY3QudGV4dCkmJihjcmVhdGVkLnRleHRDb250ZW50PW9iamVjdC50ZXh0KSx0aGlzLmlzc2V0KG9iamVjdC5odG1sKSYmKGNyZWF0ZWQuaW5uZXJIVE1MPW9iamVjdC5odG1sKSx0aGlzLmlzc2V0KG9iamVjdC52YWx1ZSkmJihjcmVhdGVkLnZhbHVlPW9iamVjdC52YWx1ZSksbmFtZS5pbmNsdWRlcyhcIi1cIikmJihjcmVhdGVkPXRoaXMuY3JlYXRlRnJvbUhUTUwoY3JlYXRlZC5vdXRlckhUTUwpKSx0aGlzLmlzc2V0KHNpbmdsZVBhcmVudCkmJnNpbmdsZVBhcmVudC5hdHRhY2hFbGVtZW50KGNyZWF0ZWQsb2JqZWN0LmF0dGFjaG1lbnQpLHRoaXMuaXNzZXQob2JqZWN0LmNoaWxkcmVuKSYmY3JlYXRlZC5tYWtlRWxlbWVudChvYmplY3QuY2hpbGRyZW4pLHRoaXMuaXNzZXQob2JqZWN0Lm9wdGlvbnMpJiZBcnJheS5pc0FycmF5KG9iamVjdC5vcHRpb25zKSlmb3IodmFyIGkgb2Ygb2JqZWN0Lm9wdGlvbnMpe2xldCBvcHRpb249Y3JlYXRlZC5tYWtlRWxlbWVudCh7ZWxlbWVudDpcIm9wdGlvblwiLHZhbHVlOmksdGV4dDppLGF0dGFjaG1lbnQ6XCJhcHBlbmRcIn0pO3RoaXMuaXNzZXQob2JqZWN0LnNlbGVjdGVkKSYmb2JqZWN0LnNlbGVjdGVkPT1pJiZvcHRpb24uc2V0QXR0cmlidXRlKFwic2VsZWN0ZWRcIiwhMCksXCJudWxsXCI9PWkudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpJiZvcHRpb24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwhMCl9cmV0dXJuIHRoaXMuaXNzZXQoY3JlYXRlZC5kYXRhc2V0Lmljb24pJiZjcmVhdGVkLmFkZENsYXNzZXMoY3JlYXRlZC5kYXRhc2V0Lmljb24pLGNyZWF0ZWR9Y3JlYXRlRnJvbUhUTUwoaHRtbFN0cmluZz1cIlwiLHNpbmdsZVBhcmVudCl7bGV0IGh0bWw9KG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhodG1sU3RyaW5nLFwidGV4dC9odG1sXCIpLGNyZWF0ZWQ9aHRtbC5ib2R5LmZpcnN0Q2hpbGQ7cmV0dXJuIDE9PWh0bWxTdHJpbmcuaW5kZXhPZihcImh0bWxcIik/Y3JlYXRlZD1odG1sOjE9PWh0bWxTdHJpbmcuaW5kZXhPZihcImJvZHlcIikmJihjcmVhdGVkPWh0bWwuYm9keSksdGhpcy5pc3NldChzaW5nbGVQYXJlbnQpJiZzaW5nbGVQYXJlbnQuYXR0YWNoRWxlbWVudChjcmVhdGVkLHNpbmdsZVBhcmVudC5hdHRhY2htZW50KSxjcmVhdGVkfWNyZWF0ZVBlcmNlcHRvckVsZW1lbnQob2JqZWN0LHNpbmdsZVBhcmVudCl7bGV0IGNyZWF0ZWQ9dGhpc1tvYmplY3QucGVyY2VwdG9yRWxlbWVudF0ob2JqZWN0LnBhcmFtcyk7cmV0dXJuIHRoaXMuaXNzZXQoc2luZ2xlUGFyZW50KSYmc2luZ2xlUGFyZW50LmF0dGFjaEVsZW1lbnQoY3JlYXRlZCxvYmplY3QuYXR0YWNobWVudCksY3JlYXRlZH1nZXRFbGVtZW50KHNpbmdsZVBhcmFtPXtlbGVtZW50OlwiXCIsYXR0cmlidXRlczp7fX0sc2luZ2xlUGFyZW50KXt2YXIgZWxlbWVudDtpZihcInN0cmluZ1wiPT10eXBlb2Ygc2luZ2xlUGFyYW0/ZWxlbWVudD10aGlzLmNyZWF0ZUZyb21IVE1MKHNpbmdsZVBhcmFtLHNpbmdsZVBhcmVudCk6dGhpcy5pc0VsZW1lbnQoc2luZ2xlUGFyYW0pPyhlbGVtZW50PXNpbmdsZVBhcmFtLHRoaXMuaXNzZXQoc2luZ2xlUGFyZW50KSYmc2luZ2xlUGFyZW50LmF0dGFjaEVsZW1lbnQoZWxlbWVudCxzaW5nbGVQYXJhbS5hdHRhY2htZW50KSk6c2luZ2xlUGFyYW0uY29uc3RydWN0b3I9PU9iamVjdCYmKGVsZW1lbnQ9c2luZ2xlUGFyYW0ucGVyY2VwdG9yRWxlbWVudD90aGlzLmNyZWF0ZVBlcmNlcHRvckVsZW1lbnQoc2luZ2xlUGFyYW0sc2luZ2xlUGFyZW50KTp0aGlzLmNyZWF0ZUZyb21PYmplY3Qoc2luZ2xlUGFyYW0sc2luZ2xlUGFyZW50KSksdGhpcy5pc3NldChlbGVtZW50LnNldEtleSkmJiF0aGlzLmlzc2V0KGVsZW1lbnQuZGF0YXNldC5kb21LZXkpJiZlbGVtZW50LnNldEtleSgpLHRoaXMuaXNzZXQoc2luZ2xlUGFyYW0ubGlzdCkpe2xldCBsaXN0PWVsZW1lbnQubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJkYXRhbGlzdFwiLG9wdGlvbnM6c2luZ2xlUGFyYW0ubGlzdH0pO2VsZW1lbnQuc2V0QXR0cmlidXRlKFwibGlzdFwiLGVsZW1lbnQuZGF0YXNldC5kb21LZXkpLGxpc3Quc2V0QXR0cmlidXRlKFwiaWRcIixlbGVtZW50LmRhdGFzZXQuZG9tS2V5KX1pZih0aGlzLmlzc2V0KHNpbmdsZVBhcmFtLnN0YXRlKSl7bGV0IG93bmVyPWVsZW1lbnQuZ2V0UGFyZW50cyhzaW5nbGVQYXJhbS5zdGF0ZS5vd25lcixzaW5nbGVQYXJhbS5zdGF0ZS52YWx1ZSk7dGhpcy5pc251bGwob3duZXIpP2VsZW1lbnQuZGF0YXNldC5zdGF0ZVN0YXR1cz1cInBlbmRpbmdcIjoob3duZXIuYWRkU3RhdGUoe25hbWU6c2luZ2xlUGFyYW0uc3RhdGUubmFtZSxzdGF0ZTplbGVtZW50fSksZWxlbWVudC5kYXRhc2V0LnN0YXRlU3RhdHVzPVwic2V0XCIpfXJldHVybiBlbGVtZW50fWNyZWF0ZUVsZW1lbnQocGFyYW1zPXtlbGVtZW50OlwiXCIsYXR0cmlidXRlczp7fX0scGFyZW50KXtpZihBcnJheS5pc0FycmF5KHBhcmFtcykpe2xldCBlbGVtZW50cz1bXTtmb3IobGV0IHBhcmFtIG9mIHBhcmFtcyllbGVtZW50cy5wdXNoKHRoaXMuZ2V0RWxlbWVudChwYXJhbSxwYXJlbnQpKTtyZXR1cm4gZWxlbWVudHN9cmV0dXJuIHRoaXMuZ2V0RWxlbWVudChwYXJhbXMscGFyZW50KX12YWxpZGF0ZUZvcm1UZXh0YXJlYShlbGVtZW50KXtyZXR1cm5cIlwiIT1lbGVtZW50LnZhbHVlfXZhbGlkYXRlRm9ybUlucHV0KGVsZW1lbnQpe3ZhciB0eXBlPWVsZW1lbnQuZ2V0QXR0cmlidXRlKFwidHlwZVwiKSx2YWx1ZT1lbGVtZW50LnZhbHVlO3JldHVybiB0aGlzLmlzbnVsbCh0eXBlKT8hdGhpcy5pc1NwYWNlU3RyaW5nKHZhbHVlKTpcImZpbGVcIj09KHR5cGU9dHlwZS50b0xvd2VyQ2FzZSgpKT9cIlwiIT12YWx1ZTpcInRleHRcIj09dHlwZT8hdGhpcy5pc1NwYWNlU3RyaW5nKHZhbHVlKTpcImRhdGVcIj09dHlwZT90aGlzLmhhc1N0cmluZyhlbGVtZW50LmNsYXNzTmFtZSxcImZ1dHVyZVwiKT90aGlzLmlzRGF0ZSh2YWx1ZSk6dGhpcy5pc0RhdGVWYWxpZCh2YWx1ZSk6XCJlbWFpbFwiPT10eXBlP3RoaXMuaXNFbWFpbCh2YWx1ZSk6XCJudW1iZXJcIj09dHlwZT90aGlzLmlzTnVtYmVyKHZhbHVlKTpcInBhc3N3b3JkXCI9PXR5cGU/dGhpcy5pc1Bhc3N3b3JkVmFsaWQodmFsdWUpOiF0aGlzLmlzU3BhY2VTdHJpbmcodmFsdWUpfXZhbGlkYXRlRm9ybVNlbGVjdChlbGVtZW50KXtyZXR1cm4gMCE9ZWxlbWVudC52YWx1ZSYmXCJudWxsXCIhPWVsZW1lbnQudmFsdWUudG9Mb3dlckNhc2UoKX12YWxpZGF0ZUZvcm0oZm9ybSxvcHRpb25zKXsob3B0aW9ucz1vcHRpb25zfHx7fSkubm9kZU5hbWVzPW9wdGlvbnMubm9kZU5hbWVzfHxcIklOUFVULCBTRUxFQ1QsIFRFWFRBUkVBXCI7bGV0IG5vZGVOYW1lLGVsZW1lbnROYW1lLGZsYWc9ITAsZWxlbWVudHM9Zm9ybS5maW5kQWxsKG9wdGlvbnMubm9kZU5hbWVzKSx2YWxpZGF0ZU1lPW1lPT57bGV0IHZhbHVlO3JldHVybiB2YWx1ZT1cIklOUFVUXCI9PW5vZGVOYW1lP3RoaXMudmFsaWRhdGVGb3JtSW5wdXQobWUpOlwiU0VMRUNUXCI9PW5vZGVOYW1lP3RoaXMudmFsaWRhdGVGb3JtU2VsZWN0KG1lKTpcIlRFWFRBUkVBXCI9PW5vZGVOYW1lP3RoaXMudmFsaWRhdGVGb3JtVGV4dGFyZWEobWUpOnRoaXMudmFsaWRhdGVPdGhlckVsZW1lbnRzKG1lKX07Zm9yKGxldCBpPTA7aTxlbGVtZW50cy5sZW5ndGg7aSsrKWlmKG5vZGVOYW1lPWVsZW1lbnRzW2ldLm5vZGVOYW1lLGVsZW1lbnROYW1lPWVsZW1lbnRzW2ldLmdldEF0dHJpYnV0ZShcIm5hbWVcIiksXCJ0cnVlXCIhPWVsZW1lbnRzW2ldLmdldEF0dHJpYnV0ZShcImlnbm9yZVwiKSl7aWYodGhpcy5pc3NldChvcHRpb25zLm5hbWVzKSl7aWYoIW9wdGlvbnMubmFtZXMuaW5jbHVkZXMoZWxlbWVudE5hbWUpKWNvbnRpbnVlO2ZsYWc9dmFsaWRhdGVNZShlbGVtZW50c1tpXSl9ZWxzZSBmbGFnPXZhbGlkYXRlTWUoZWxlbWVudHNbaV0pO2lmKCFmbGFnKWJyZWFrfXJldHVybntmbGFnOmZsYWcsZWxlbWVudE5hbWU6ZWxlbWVudE5hbWV9fXZhbGlkYXRlT3RoZXJFbGVtZW50cyhlbGVtZW50KXtsZXQgdmFsdWU9ITE7cmV0dXJuIHRoaXMuaXNzZXQoZWxlbWVudC52YWx1ZSkmJlwiXCIhPWVsZW1lbnQudmFsdWUmJih2YWx1ZT0hMCksdmFsdWV9VmFsaWRhdGVGb3JtSW1hZ2VzKGZvcm0pe3JldHVyblwiZmlsZVwiPT10eXBlJiYhc2VsZi5pc0ltYWdlVmFsaWQodmFsdWUpfWlzSW1hZ2VWYWxpZChpbnB1dCl7dmFyIGV4dD1pbnB1dC5zdWJzdHJpbmcoaW5wdXQubGFzdEluZGV4T2YoXCIuXCIpKzEpLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJwbmdcIj09ZXh0fHxcImdpZlwiPT1leHR8fFwianBlZ1wiPT1leHR8fFwianBnXCI9PWV4dH1pbWFnZVRvSnNvbihmaWxlLGNhbGxCYWNrPSgoKT0+e30pKXtsZXQgZmlsZVJlYWRlcj1uZXcgRmlsZVJlYWRlcixteWZpbGU9e307ZmlsZVJlYWRlci5vbmxvYWQ9KGV2ZW50PT57bXlmaWxlLnNyYz1ldmVudC50YXJnZXQucmVzdWx0LGNhbGxCYWNrKG15ZmlsZSl9KSxteWZpbGUuc2l6ZT1maWxlLnNpemUsbXlmaWxlLnR5cGU9ZmlsZS50eXBlLGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa3BUUld4bGJXVnVkSE11YW5NaVhTd2libUZ0WlhNaU9sc2lSVzF3ZEhraUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lVR1Z5YVc5a0lpd2lXMjlpYW1WamRDQlBZbXBsWTNSZElpd2lkR2hsVjJsdVpHOTNJaXdpYzNWd1pYSWlMQ0owYUdseklpd2lSV3hsYldWdWRDSXNJbVJ2WTNWdFpXNTBJaXdpYUhKbFppSXNJbVZzWlcxbGJuUWlMQ0pqY21WaGRHVkZiR1Z0Wlc1MElpd2lZWFIwY21saWRYUmxjeUlzSW5KbGJDSXNJblI1Y0dVaUxDSjFibVJsWm1sdVpXUWlMQ0poY0hCbGJtUWlMQ0ptYjNKdElpd2lhbk52YmlJc0luQmxjbVp2Y20waUxDSmphR2xzWkhKbGJpSXNJbWtpTENKc1pXNW5kR2dpTENKb1lYTkJkSFJ5YVdKMWRHVWlMQ0puWlhSQmRIUnlhV0oxZEdVaUxDSm1hV3hsY3lJc0luWmhiSFZsSWl3aVgyVnNaVzFsYm5SZklpd2libTlrWlU1aGJXVWlMQ0owYjB4dmQyVnlRMkZ6WlNJc0ltZGxkRUYwZEhKcFluVjBaWE1pTENKemRIbHNaU0lzSW1OemN5SXNJbkIxYzJnaUxDSjBiMHB6YjI0aUxDSnZZbXBsWTNRaUxDSnphVzVuYkdWUVlYSmxiblFpTENKamNtVmhkR1ZrSWl3aWJtRnRaU0lzSW1selJXeGxiV1Z1ZENJc0ltbHpjMlYwSWl3aVlYUjBjaUlzSW5ObGRFRjBkSEpwWW5WMFpTSXNJblJsZUhRaUxDSjBaWGgwUTI5dWRHVnVkQ0lzSW1oMGJXd2lMQ0pwYm01bGNraFVUVXdpTENKcGJtTnNkV1JsY3lJc0ltTnlaV0YwWlVaeWIyMUlWRTFNSWl3aWIzVjBaWEpJVkUxTUlpd2lZWFIwWVdOb1JXeGxiV1Z1ZENJc0ltRjBkR0ZqYUcxbGJuUWlMQ0p0WVd0bFJXeGxiV1Z1ZENJc0ltOXdkR2x2Ym5NaUxDSkJjbkpoZVNJc0ltbHpRWEp5WVhraUxDSnZjSFJwYjI0aUxDSnpaV3hsWTNSbFpDSXNJblJ2VTNSeWFXNW5JaXdpWkdGMFlYTmxkQ0lzSW1samIyNGlMQ0poWkdSRGJHRnpjMlZ6SWl3aWFIUnRiRk4wY21sdVp5SXNJa1JQVFZCaGNuTmxjaUlzSW5CaGNuTmxSbkp2YlZOMGNtbHVaeUlzSW1KdlpIa2lMQ0ptYVhKemRFTm9hV3hrSWl3aWFXNWtaWGhQWmlJc0luQmxjbU5sY0hSdmNrVnNaVzFsYm5RaUxDSndZWEpoYlhNaUxDSnphVzVuYkdWUVlYSmhiU0lzSW1OdmJuTjBjblZqZEc5eUlpd2lUMkpxWldOMElpd2lZM0psWVhSbFVHVnlZMlZ3ZEc5eVJXeGxiV1Z1ZENJc0ltTnlaV0YwWlVaeWIyMVBZbXBsWTNRaUxDSnpaWFJMWlhraUxDSmtiMjFMWlhraUxDSnNhWE4wSWl3aWMzUmhkR1VpTENKdmQyNWxjaUlzSW1kbGRGQmhjbVZ1ZEhNaUxDSnBjMjUxYkd3aUxDSnpkR0YwWlZOMFlYUjFjeUlzSW1Ga1pGTjBZWFJsSWl3aWNHRnlaVzUwSWl3aVpXeGxiV1Z1ZEhNaUxDSndZWEpoYlNJc0ltZGxkRVZzWlcxbGJuUWlMQ0pwYzFOd1lXTmxVM1J5YVc1bklpd2lhR0Z6VTNSeWFXNW5JaXdpWTJ4aGMzTk9ZVzFsSWl3aWFYTkVZWFJsSWl3aWFYTkVZWFJsVm1Gc2FXUWlMQ0pwYzBWdFlXbHNJaXdpYVhOT2RXMWlaWElpTENKcGMxQmhjM04zYjNKa1ZtRnNhV1FpTENKdWIyUmxUbUZ0WlhNaUxDSmxiR1Z0Wlc1MFRtRnRaU0lzSW1ac1lXY2lMQ0ptYVc1a1FXeHNJaXdpZG1Gc2FXUmhkR1ZOWlNJc0ltMWxJaXdpZG1Gc2FXUmhkR1ZHYjNKdFNXNXdkWFFpTENKMllXeHBaR0YwWlVadmNtMVRaV3hsWTNRaUxDSjJZV3hwWkdGMFpVWnZjbTFVWlhoMFlYSmxZU0lzSW5aaGJHbGtZWFJsVDNSb1pYSkZiR1Z0Wlc1MGN5SXNJbTVoYldWeklpd2ljMlZzWmlJc0ltbHpTVzFoWjJWV1lXeHBaQ0lzSW1sdWNIVjBJaXdpWlhoMElpd2ljM1ZpYzNSeWFXNW5JaXdpYkdGemRFbHVaR1Y0VDJZaUxDSm1hV3hsSWl3aVkyRnNiRUpoWTJzaUxDSm1hV3hsVW1WaFpHVnlJaXdpUm1sc1pWSmxZV1JsY2lJc0ltMTVabWxzWlNJc0ltOXViRzloWkNJc0ltVjJaVzUwSWl3aWMzSmpJaXdpZEdGeVoyVjBJaXdpY21WemRXeDBJaXdpYzJsNlpTSXNJbkpsWVdSQmMwUmhkR0ZWVWt3aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxITkVRVU5CTEUxQlFVMUJMRXRCUVVGQkxFVkJORlpPUXl4clFrRkJUME1zUTBGNlZsQXNZMEZCZVVKRExGZEJRVUZCTEVOQlEzSkNReXhYUVVGQlFTeERRVUZaUXl4VFFVRkJRU3hEUVVGWlRDeExRVUZCUVN4RFFVRkJRU3hEUVVOd1FrMHNTMEZCUVVFc1JVRkJRVUVzUTBGRFFVTXNTVUZCUVVFc1EwRkJTME1zVDBGQlFVRXNRMEZCVlVnc1UwRkJRVUVzUTBGQlZVY3NUMEZCUVVFc1EwRkRla0pFTEVsQlFVRkJMRU5CUVV0RkxGRkJRVUZCTEVOQlFWZEtMRk5CUVVGQkxFTkJRVlZKTEZGQlFVRkJMRU5CUnpsQ1RDeFBRVUZCUVN4RFFVRlJUU3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCUVN4RFFVTllMRWxCUVVsRExFOUJRVUZCTEVOQlFWVktMRWxCUVVGQkxFTkJRVXRMTEdGQlFVRkJMRU5CUVdNc1EwRkJSVVFzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRkxGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1IwRkJRVUVzUTBGQlN5eFpRVUZCTEVOQlFXTkRMRWxCUVVGQkxFTkJRVTBzVlVGQlFTeERRVUZaVEN4SlFVRkJRU3hEUVVGQlFTeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVVOcVJrMHNRMEZCUVVFc1IwRkJiRUpVTEVsQlFVRkJMRU5CUVV0RkxGRkJRVUZCTEVWQlFVRkJMRXRCUTNsQ1R5eERRVUZCUVN4SFFVRXhRbFFzU1VGQlFVRXNRMEZCUzBVc1VVRkJRVUVzUTBGQlpTeEpRVUZCTEVWQlEzQkNSaXhKUVVGQlFTeERRVUZMUlN4UlFVRkJRU3hEUVVGbExFbEJRVUVzUTBGQlJWRXNUVUZCUVVFc1EwRkJUMDRzVDBGQlFVRXNRMEZCUVVFc1EwRkxla05RTEZGQlFVRkJMRU5CUVZOakxFbEJRVUZCTEVOQlFVRkJMRU5CUTB3c1NVRkJTVU1zU1VGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUTFCRExFOUJRVUZCTEVOQlFWZFVMRTlCUVVGQkxFVkJRVUZCTEVOQlExZ3NTVUZCU1ZVc1VVRkJRVUVzUTBGQlYxWXNUMEZCUVVFc1EwRkJVVlVzVVVGQlFVRXNRMEZEZGtJc1NVRkJTeXhKUVVGSlF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1VRc1VVRkJRVUVzUTBGQlUwVXNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRha05HTEU5QlFVRkJMRU5CUVZGRExGRkJRVUZCTEVOQlFWTkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUldwQ1dDeFBRVUZCUVN4RFFVRlJZU3haUVVGQlFTeERRVUZoTEUxQlFVRXNRMEZCUVN4SFFVTkVMRTFCUVVFc1JVRkJhRUppTEU5QlFVRkJMRU5CUVZGSkxFbEJRVUZCTEVOQlEwcEtMRTlCUVVGQkxFTkJRVkZoTEZsQlFVRkJMRU5CUVdFc1ZVRkJRU3hEUVVGQkxFTkJRM0pDVEN4SlFVRkJRU3hEUVVGTFVpeFBRVUZCUVN4RFFVRlJZeXhaUVVGQlFTeERRVUZoTEUxQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZka0xFOUJRVUZCTEVOQlFWRmxMRXRCUVVGQkxFTkJSemREVUN4SlFVRkJRU3hEUVVGTFVpeFBRVUZCUVN4RFFVRlJZeXhaUVVGQlFTeERRVUZoTEUxQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVZka0xFOUJRVUZCTEVOQlFWRmxMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlNYWkVVQ3hKUVVGQlFTeERRVUZMVWl4UFFVRkJRU3hEUVVGUll5eFpRVUZCUVN4RFFVRmhMRTFCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVmRrTEU5QlFVRkJMRU5CUVZGblFpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTE2UkN4UFFVUkJVQ3hQUVVGQlFTeERRVUZSUml4SlFVRkJRU3hEUVVGQlFTeERRVU5FUXl4SlFVRkJRU3hEUVVkWVppeFhRVUZCUVN4RFFVRlpkMElzVTBGQlFVRXNRMEZCUVVFc1EwRkRVaXhKUVVGSmFrSXNUMEZCUVVFc1EwRkJWV2xDTEZOQlFVRkJMRU5CUVZWRExGRkJRVUZCTEVOQlFWTkRMRmRCUVVGQkxFVkJRVUZCTEVOQlF6ZENha0lzVlVGQlFVRXNRMEZCWVdVc1UwRkJRVUVzUTBGQlZVY3NZVUZCUVVFc1JVRkJRVUVzUTBGRE0wSnNRaXhWUVVGQlFTeERRVUZYYlVJc1MwRkJRVUVzUTBGQlVVb3NVMEZCUVVFc1EwRkJWVXNzUjBGQlFVRXNSVUZCUVVFc1EwRkROMElzU1VGQlNWb3NVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRMllzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVTBzVTBGQlFVRXNRMEZCVlZBc1VVRkJRVUVzUTBGQlUwVXNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRNME5FTEZGQlFVRkJMRU5CUVZOaExFbEJRVUZCTEVOQlFVdE9MRk5CUVVGQkxFTkJRVlZRTEZGQlFVRkJMRU5CUVZORExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkaExFMUJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJSWGhETEUxQlFVOHNRMEZCUlhoQ0xFOUJRVUZCTEVOQlFVRkJMRTlCUVVGQkxFTkJRVk5GTEZWQlFVRkJMRU5CUVVGQkxGVkJRVUZCTEVOQlFWbFJMRkZCUVVGQkxFTkJRVUZCTEZGQlFVRkJMRU5CUVVGQkxFTkJSMnhEYWtJc1UwRkJRVUVzUTBGQlZXZERMRTFCUVVGQkxFTkJRVUZCTEVOQlEwNHNUMEZCVDBFc1RVRkJRVUVzV1VGQmEwSTNRaXhKUVVGQlFTeERRVUZMUXl4UFFVRkJRU3hEUVVkc1Ewb3NaMEpCUVVGQkxFTkJRV2xDWjBNc1RVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVbERMRmxCUVVGQkxFTkJRVUZCTEVOQlF6RkNMRWxCUVVsRExFOUJRVUZCTEVOQlFWTkRMRWxCUVVGQkxFTkJaMEppTEVkQlpFbG9ReXhKUVVGQlFTeERRVUZMYVVNc1UwRkJRVUVzUTBGQlZVb3NUVUZCUVVFc1EwRkJRVUVzUTBGRlprY3NTVUZCUVVFc1EwRkJRVUVzUTBGRVFVUXNUMEZCUVVFc1EwRkJWVVlzVFVGQlFVRXNSVUZEUzFBc1VVRkJRVUVzUTBGRlZuUkNMRWxCUVVGQkxFTkJRVXRwUXl4VFFVRkJRU3hEUVVGVlNpeE5RVUZCUVN4RFFVRlBla0lzVDBGQlFVRXNRMEZCUVVFc1EwRkZNMEkwUWl4SlFVRkJRU3hEUVVGQlFTeERRVVJCUkN4UFFVRkJRU3hEUVVGVlJpeE5RVUZCUVN4RFFVRlBla0lzVDBGQlFVRXNSVUZEUm10Q0xGRkJRVUZCTEVWQlIyWlZMRWxCUVVGQkxFTkJRVTlJTEUxQlFVRkJMRU5CUVU5NlFpeFBRVUZCUVN4RFFVRlJiVUlzVjBGQlFVRXNSVUZCUVVFc1EwRkRkRUpSTEU5QlFVRkJMRU5CUVZVM1FpeFJRVUZCUVN4RFFVRlRSeXhoUVVGQlFTeERRVUZqZDBJc1RVRkJRVUVzUTBGQlQzcENMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hoRFNpeEpRVUZCUVN4RFFVRkxhME1zUzBGQlFVRXNRMEZCVFV3c1RVRkJRVUVzUTBGQlQzWkNMRlZCUVVGQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVdkQ1RpeEpRVUZCUVN4RFFVRkxhVU1zVTBGQlFVRXNRMEZCVlVvc1RVRkJRVUVzUTBGQlFVRXNRMEZEYWtRc1NVRkJTeXhKUVVGSlRTeEpRVUZCUVN4SlFVRlJUaXhOUVVGQlFTeERRVUZQZGtJc1ZVRkJRVUVzUTBGRFVpeFBRVUZCTEVWQlFWSTJRaXhKUVVGQlFTeERRVU5CU2l4UFFVRkJRU3hEUVVGUlRDeEhRVUZCUVN4RFFVRkpSeXhOUVVGQlFTeERRVUZQZGtJc1ZVRkJRVUVzUTBGQlZ6WkNMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlRkQ1NpeFBRVUZCUVN4RFFVRlJTeXhaUVVGQlFTeERRVUZoUkN4SlFVRkJRU3hEUVVGTlRpeE5RVUZCUVN4RFFVRlBka0lzVlVGQlFVRXNRMEZCVnpaQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJORUl4UkN4SFFYaENTVzVETEVsQlFVRkJMRU5CUVV0clF5eExRVUZCUVN4RFFVRk5UQ3hOUVVGQlFTeERRVUZQVVN4SlFVRkJRU3hEUVVGQlFTeEhRVU5zUWs0c1QwRkJRVUVzUTBGQlVVOHNWMEZCUVVFc1EwRkJZMVFzVFVGQlFVRXNRMEZCVDFFc1NVRkJRVUVzUTBGQlFVRXNRMEZITjBKeVF5eEpRVUZCUVN4RFFVRkxhME1zUzBGQlFVRXNRMEZCVFV3c1RVRkJRVUVzUTBGQlQxVXNTVUZCUVVFc1EwRkJRVUVzUjBGRGJFSlNMRTlCUVVGQkxFTkJRVkZUTEZOQlFVRkJMRU5CUVZsWUxFMUJRVUZCTEVOQlFVOVZMRWxCUVVGQkxFTkJRVUZCTEVOQlJ6TkNka01zU1VGQlFVRXNRMEZCUzJ0RExFdEJRVUZCTEVOQlFVMU1MRTFCUVVGQkxFTkJRVTlVTEV0QlFVRkJMRU5CUVVGQkxFZEJRMnhDVnl4UFFVRkJRU3hEUVVGUldDeExRVUZCUVN4RFFVRlJVeXhOUVVGQlFTeERRVUZQVkN4TFFVRkJRU3hEUVVGQlFTeERRVWQyUWxrc1NVRkJRVUVzUTBGQlMxTXNVVUZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVUVzUjBGRFpGWXNUMEZCUVVFc1EwRkJWUzlDTEVsQlFVRkJMRU5CUVVzd1F5eGpRVUZCUVN4RFFVRmxXQ3hQUVVGQlFTeERRVUZSV1N4VFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDBRek5ETEVsQlFVRkJMRU5CUVV0clF5eExRVUZCUVN4RFFVRk5TaXhaUVVGQlFTeERRVUZCUVN4RlFVTllRU3haUVVGQlFTeERRVUZoWXl4aFFVRkJRU3hEUVVGallpeFBRVUZCUVN4RFFVRlRSaXhOUVVGQlFTeERRVUZQWjBJc1ZVRkJRVUVzUTBGQlFVRXNRMEZITTBNM1F5eEpRVUZCUVN4RFFVRkxhME1zUzBGQlFVRXNRMEZCVFV3c1RVRkJRVUVzUTBGQlQyWXNVVUZCUVVFc1EwRkJRVUVzUlVGRGJFSnBRaXhQUVVGQlFTeERRVUZSWlN4WFFVRkJRU3hEUVVGWmFrSXNUVUZCUVVFc1EwRkJUMllzVVVGQlFVRXNRMEZCUVVFc1EwRkhNMEprTEVsQlFVRkJMRU5CUVV0clF5eExRVUZCUVN4RFFVRk5UQ3hOUVVGQlFTeERRVUZQYTBJc1QwRkJRVUVzUTBGQlFVRXNSVUZCV1VNc1MwRkJRVUVzUTBGQlRVTXNUMEZCUVVFc1EwRkJVWEJDTEUxQlFVRkJMRU5CUVU5clFpeFBRVUZCUVN4RFFVRkJRU3hEUVVOdVJDeEpRVUZMTEVsQlFVbG9ReXhEUVVGQlFTeEpRVUZMWXl4TlFVRkJRU3hEUVVGUGEwSXNUMEZCUVVFc1EwRkJVeXhEUVVNeFFpeEpRVUZKUnl4TlFVRkJRU3hEUVVGVGJrSXNUMEZCUVVFc1EwRkJVV1VzVjBGQlFVRXNRMEZCV1N4RFFVRkZNVU1zVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWblFpeExRVUZCUVN4RFFVRlBUQ3hEUVVGQlFTeERRVUZIYzBJc1NVRkJRVUVzUTBGQlRYUkNMRU5CUVVGQkxFTkJRVWM0UWl4VlFVRkJRU3hEUVVGWkxGRkJRVUVzUTBGQlFTeERRVUZCTEVOQlEycEdOME1zU1VGQlFVRXNRMEZCUzJ0RExFdEJRVUZCTEVOQlFVMU1MRTFCUVVGQkxFTkJRVTl6UWl4UlFVRkJRU3hEUVVGQlFTeEZRVUZoZEVJc1RVRkJRVUVzUTBGQlQzTkNMRkZCUVVGQkxFVkJRVmx3UXl4RFFVRkJRU3hGUVVOc1JHMURMRTFCUVVGQkxFTkJRVTlrTEZsQlFVRkJMRU5CUVdFc1ZVRkJRU3hEUVVGQkxFTkJRVmtzUTBGQlFTeERRVUZCTEVOQlJVWXNUVUZCUVN4RlFVRTVRbkpDTEVOQlFVRkJMRU5CUVVWeFF5eFJRVUZCUVN4RlFVRkJRU3hEUVVGWE4wSXNWMEZCUVVFc1JVRkJRVUVzUlVGRFlqSkNMRTFCUVVGQkxFTkJRVTlrTEZsQlFVRkJMRU5CUVdFc1ZVRkJRU3hEUVVGQkxFTkJRVmtzUTBGQlFTeERRVUZCTEVOQlV6VkRMRTlCU2tsd1F5eEpRVUZCUVN4RFFVRkxhME1zUzBGQlFVRXNRMEZCVFVnc1QwRkJRVUVzUTBGQlVYTkNMRTlCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVVGQkxFVkJRek5DZGtJc1QwRkJRVUVzUTBGQlVYZENMRlZCUVVGQkxFTkJRVmQ0UWl4UFFVRkJRU3hEUVVGUmMwSXNUMEZCUVVFc1EwRkJVVU1zU1VGQlFVRXNRMEZCUVVFc1EwRkhhRU4yUWl4UFFVRkJRU3hEUVVkWWJFTXNZMEZCUVVFc1EwRkJaVEpFTEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGSk1VSXNXVUZCUVVFc1EwRkJRVUVzUTBGRE5VSXNTVUZEU1ZNc1NVRkJRVUVzUTBGQlFVRXNRMEZFVXl4SlFVRkphMElzVTBGQlFVRXNSVUZEUTBNc1pVRkJRVUVzUTBGQlowSkdMRlZCUVVGQkxFTkJRVmtzVjBGQlFTeERRVUZCTEVOQlJURkRla0lzVDBGQlFVRXNRMEZCVlZFc1NVRkJRVUVzUTBGQlMyOUNMRWxCUVVGQkxFTkJRVXRETEZWQlFVRkJMRU5CVlhoQ0xFOUJVbXRETEVOQlFVRXNSVUZCT1VKS0xGVkJRVUZCTEVOQlFWZExMRTlCUVVGQkxFTkJRVkVzVFVGQlFTeERRVUZCTEVOQlEyNUNPVUlzVDBGQlFVRXNRMEZCVlZFc1NVRkJRVUVzUTBGRmVVSXNRMEZCUVN4RlFVRTVRbWxDTEZWQlFVRkJMRU5CUVZkTExFOUJRVUZCTEVOQlFWRXNUVUZCUVN4RFFVRkJMRWRCUTNoQ09VSXNUMEZCUVVFc1EwRkJWVkVzU1VGQlFVRXNRMEZCUzI5Q0xFbEJRVUZCTEVOQlFVRkJMRU5CUjJZelJDeEpRVUZCUVN4RFFVRkxhME1zUzBGQlFVRXNRMEZCVFVvc1dVRkJRVUVzUTBGQlFVRXNSVUZCWlVFc1dVRkJRVUVzUTBGQllXTXNZVUZCUVVFc1EwRkJZMklzVDBGQlFVRXNRMEZCVTBRc1dVRkJRVUVzUTBGQllXVXNWVUZCUVVFc1EwRkJRVUVzUTBGRGVFVmtMRTlCUVVGQkxFTkJSMWhzUXl4elFrRkJRVUVzUTBGQmRVSm5ReXhOUVVGQlFTeERRVUZSUXl4WlFVRkJRU3hEUVVGQlFTeERRVU16UWl4SlFVRkpReXhQUVVGQlFTeERRVUZWTDBJc1NVRkJRVUVzUTBGQlN6WkNMRTFCUVVGQkxFTkJRVTlwUXl4blFrRkJRVUVzUTBGQlFVRXNRMEZCYTBKcVF5eE5RVUZCUVN4RFFVRlBhME1zVFVGQlFVRXNRMEZCUVVFc1EwRkpia1FzVDBGSVNTOUVMRWxCUVVGQkxFTkJRVXRyUXl4TFFVRkJRU3hEUVVGTlNpeFpRVUZCUVN4RFFVRkJRU3hGUVVOWVFTeFpRVUZCUVN4RFFVRmhZeXhoUVVGQlFTeERRVUZqWWl4UFFVRkJRU3hEUVVGVFJpeE5RVUZCUVN4RFFVRlBaMElzVlVGQlFVRXNRMEZCUVVFc1EwRkZlRU5rTEU5QlFVRkJMRU5CUjFoc1F5eFZRVUZCUVN4RFFVRlhiVVVzVjBGQlFVRXNRMEZCWXl4RFFVRkZOVVFzVDBGQlFVRXNRMEZCVXl4RlFVRkJMRU5CUVVsRkxGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVUxM1FpeFpRVUZCUVN4RFFVRkJRU3hEUVVOMFJDeEpRVUZKTVVJc1QwRkJRVUVzUTBGMVFrb3NSMEZ5UWpCQ0xGRkJRVUVzUlVGQlFTeFBRVUZtTkVRc1YwRkJRVUVzUTBGRFVEVkVMRTlCUVVGQkxFTkJRVlZLTEVsQlFVRkJMRU5CUVVzd1F5eGpRVUZCUVN4RFFVRmxjMElzVjBGQlFVRXNRMEZCWVd4RExGbEJRVUZCTEVOQlFVRkJMRU5CUlhSRE9VSXNTVUZCUVVFc1EwRkJTMmxETEZOQlFVRkJMRU5CUVZVclFpeFhRVUZCUVN4RFFVRkJRU3hGUVVOd1FqVkVMRTlCUVVGQkxFTkJRVlUwUkN4WFFVRkJRU3hEUVVOT2FFVXNTVUZCUVVFc1EwRkJTMnRETEV0QlFVRkJMRU5CUVUxS0xGbEJRVUZCTEVOQlFVRkJMRVZCUVdWQkxGbEJRVUZCTEVOQlFXRmpMR0ZCUVVGQkxFTkJRV040UXl4UFFVRkJRU3hEUVVGVE5FUXNWMEZCUVVFc1EwRkJXVzVDTEZWQlFVRkJMRU5CUVVGQkxFVkJSM3BGYlVJc1YwRkJRVUVzUTBGQldVTXNWMEZCUVVFc1JVRkJaVU1zVFVGQlFVRXNSMEZGTlVJNVJDeFBRVUZCUVN4RFFVUkJORVFzVjBGQlFVRXNRMEZCV1VZc1owSkJRVUZCTEVOQlEwWTVSQ3hKUVVGQlFTeERRVUZMYlVVc2MwSkJRVUZCTEVOQlFYVkNTQ3hYUVVGQlFTeERRVUZoYkVNc1dVRkJRVUVzUTBGQlFVRXNRMEZIZWtNNVFpeEpRVUZCUVN4RFFVRkxiMFVzWjBKQlFVRkJMRU5CUVdsQ1NpeFhRVUZCUVN4RFFVRmhiRU1zV1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSmFrUTVRaXhKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRUbENMRTlCUVVGQkxFTkJRVkZwUlN4TlFVRkJRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRlpja1VzU1VGQlFVRXNRMEZCUzJ0RExFdEJRVUZCTEVOQlFVMDVRaXhQUVVGQlFTeERRVUZSYVVRc1QwRkJRVUVzUTBGQlVXbENMRTFCUVVGQkxFTkJRVUZCTEVWQlF6RkViRVVzVDBGQlFVRXNRMEZCVVdsRkxFMUJRVUZCTEVWQlFVRkJMRU5CUjFKeVJTeEpRVUZCUVN4RFFVRkxhME1zUzBGQlFVRXNRMEZCVFRoQ0xGZEJRVUZCTEVOQlFWbFBMRWxCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZET1VJc1NVRkJTVUVzU1VGQlFVRXNRMEZCVDI1RkxFOUJRVUZCTEVOQlFWRXdReXhYUVVGQlFTeERRVUZaTEVOQlFVVXhReXhQUVVGQlFTeERRVUZUTEZWQlFVRXNRMEZCV1RKRExFOUJRVUZCTEVOQlFWTnBRaXhYUVVGQlFTeERRVUZaVHl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTXpSVzVGTEU5QlFVRkJMRU5CUVZGblF5eFpRVUZCUVN4RFFVRmhMRTFCUVVFc1EwRkJVV2hETEU5QlFVRkJMRU5CUVZGcFJDeFBRVUZCUVN4RFFVRlJhVUlzVFVGQlFVRXNRMEZCUVVFc1EwRkROME5ETEVsQlFVRkJMRU5CUVV0dVF5eFpRVUZCUVN4RFFVRmhMRWxCUVVFc1EwRkJUV2hETEU5QlFVRkJMRU5CUVZGcFJDeFBRVUZCUVN4RFFVRlJhVUlzVFVGQlFVRXNRMEZCUVVFc1EwRkhOVU1zUjBGQlNYUkZMRWxCUVVGQkxFTkJRVXRyUXl4TFFVRkJRU3hEUVVGTk9FSXNWMEZCUVVFc1EwRkJXVkVzUzBGQlFVRXNRMEZCUVVFc1EwRkJVU3hEUVVNdlFpeEpRVUZKUXl4TFFVRkJRU3hEUVVGUmNrVXNUMEZCUVVFc1EwRkJVWE5GTEZWQlFVRkJMRU5CUVZkV0xGZEJRVUZCTEVOQlFWbFJMRXRCUVVGQkxFTkJRVTFETEV0QlFVRkJMRU5CUVU5VUxGZEJRVUZCTEVOQlFWbFJMRXRCUVVGQkxFTkJRVTF3UkN4TFFVRkJRU3hEUVVGQlFTeERRVU55UlhCQ0xFbEJRVUZCTEVOQlFVc3lSU3hOUVVGQlFTeERRVUZQUml4TFFVRkJRU3hEUVVGQlFTeERRVWxpY2tVc1QwRkJRVUVzUTBGQlVXbEVMRTlCUVVGQkxFTkJRVkYxUWl4WFFVRkJRU3hEUVVGakxGTkJRVUVzUlVGSU9VSklMRXRCUVVGQkxFTkJRVTFKTEZGQlFVRkJMRU5CUVZNc1EwRkJSVGRETEVsQlFVRkJMRU5CUVUxblF5eFhRVUZCUVN4RFFVRlpVU3hMUVVGQlFTeERRVUZOZUVNc1NVRkJRVUVzUTBGQlRYZERMRXRCUVVGQkxFTkJRVTl3UlN4UFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjBSRUVzVDBGQlFVRXNRMEZCVVdsRUxFOUJRVUZCTEVOQlFWRjFRaXhYUVVGQlFTeERRVUZqTEV0QlFVRXNRMEZCUVN4RFFVMTBReXhQUVVGUGVFVXNUMEZCUVVFc1EwRkhXRkFzWVVGQlFVRXNRMEZCWTJ0RkxFMUJRVUZCTEVOQlFWTXNRMEZCUlRORUxFOUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkpSU3hWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRk5kMFVzVFVGQlFVRXNRMEZCUVVFc1EwRkRjRVFzUjBGQlNUbENMRXRCUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVZGakxFMUJRVUZCTEVOQlFVRkJMRU5CUVZNc1EwRkRka0lzU1VGQlNXZENMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVU5tTEVsQlFVc3NTVUZCU1VNc1MwRkJRVUVzU1VGQlUycENMRTFCUVVGQkxFTkJRMlJuUWl4UlFVRkJRU3hEUVVGVGNFUXNTVUZCUVVFc1EwRkJTek5DTEVsQlFVRkJMRU5CUVV0cFJpeFZRVUZCUVN4RFFVRlhSQ3hMUVVGQlFTeERRVUZQUml4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVjZReXhQUVVGUFF5eFJRVUZCUVN4RFFVZFFMRTlCUkdNdlJTeEpRVUZCUVN4RFFVRkxhVVlzVlVGQlFVRXNRMEZCVjJ4Q0xFMUJRVUZCTEVOQlFWRmxMRTFCUVVGQkxFTkJRVUZCTEVOQlN6bERha1lzYjBKQlFVRkJMRU5CUVhGQ1R5eFBRVUZCUVN4RFFVRkJRU3hEUVVOcVFpeE5RVUZ4UWl4RlFVRkJMRVZCUVdwQ1FTeFBRVUZCUVN4RFFVRlJaMElzUzBGQlFVRXNRMEZOYUVKMlFpeHBRa0ZCUVVFc1EwRkJhMEpQTEU5QlFVRkJMRU5CUVVGQkxFTkJRMlFzU1VGQlNVa3NTVUZCUVVFc1EwRkJUMG9zVDBGQlFVRXNRMEZCVVdNc1dVRkJRVUVzUTBGQllTeE5RVUZCTEVOQlFVRXNRMEZETlVKRkxFdEJRVUZCTEVOQlFWRm9RaXhQUVVGQlFTeERRVUZSWjBJc1MwRkJRVUVzUTBGRmNFSXNUMEZCU1hCQ0xFbEJRVUZCTEVOQlFVc3lSU3hOUVVGQlFTeERRVUZQYmtVc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRTbElzU1VGQlFVRXNRMEZCUzJ0R0xHRkJRVUZCTEVOQlFXTTVSQ3hMUVVGQlFTeERRVUZCUVN4RFFVbHVRaXhOUVVGQkxFZEJSRnBhTEVsQlFVRkJMRU5CUVU5QkxFbEJRVUZCTEVOQlFVdGxMRmRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUlZFc1JVRkJRU3hGUVVGVVNDeExRVUZCUVN4RFFVVk5MRTFCUVVFc1JVRkJVbG9zU1VGQlFVRXNRMEZCUVVFc1EwRkRSMUlzU1VGQlFVRXNRMEZCUzJ0R0xHRkJRVUZCTEVOQlFXTTVSQ3hMUVVGQlFTeERRVUZCUVN4RFFVVmtMRTFCUVVFc1JVRkJVbG9zU1VGQlFVRXNRMEZEUkZJc1NVRkJRVUVzUTBGQlMyMUdMRk5CUVVGQkxFTkJRVlV2UlN4UFFVRkJRU3hEUVVGUlowWXNVMEZCUVVFc1EwRkJWeXhSUVVGQkxFTkJRVUVzUTBGRE0wSndSaXhKUVVGQlFTeERRVUZMY1VZc1RVRkJRVUVzUTBGQlQycEZMRXRCUVVGQkxFTkJRVUZCTEVOQlJWcHdRaXhKUVVGQlFTeERRVUZMYzBZc1YwRkJRVUVzUTBGQldXeEZMRXRCUVVGQkxFTkJRVUZCTEVOQlIyWXNUMEZCUVN4RlFVRlNXaXhKUVVGQlFTeERRVU5GVWl4SlFVRkJRU3hEUVVGTGRVWXNUMEZCUVVFc1EwRkJVVzVGTEV0QlFVRkJMRU5CUVVGQkxFTkJSVkFzVVVGQlFTeEZRVUZTV2l4SlFVRkJRU3hEUVVORlVpeEpRVUZCUVN4RFFVRkxkMFlzVVVGQlFVRXNRMEZCVTNCRkxFdEJRVUZCTEVOQlFVRkJMRU5CUlZJc1ZVRkJRU3hGUVVGU1dpeEpRVUZCUVN4RFFVTkZVaXhKUVVGQlFTeERRVUZMZVVZc1pVRkJRVUVzUTBGQlowSnlSU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkd1FuQkNMRWxCUVVGQkxFTkJRVXRyUml4aFFVRkJRU3hEUVVGak9VUXNTMEZCUVVFc1EwRkJRVUVzUTBGSmJrTjJRaXhyUWtGQlFVRXNRMEZCYlVKUExFOUJRVUZCTEVOQlFVRkJMRU5CUTJZc1QwRkJjVUlzUTBGQlFTeEZRVUZxUWtFc1QwRkJRVUVzUTBGQlVXZENMRXRCUVVGQkxFVkJRVFpETEUxQlFVRXNSVUZCTDBKb1FpeFBRVUZCUVN4RFFVRlJaMElzUzBGQlFVRXNRMEZCVFVjc1YwRkJRVUVzUlVGQlFVRXNRMEZQTlVNeFFpeFpRVUZCUVN4RFFVRmhZeXhKUVVGQlFTeERRVUZOYjBNc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRaa0VzVDBGQlFVRXNRMEZCVlVFc1QwRkJRVUVzUlVGQlZ5eEZRVUZCTEVWQlEySXlReXhUUVVGQlFTeERRVUZaTTBNc1QwRkJRVUVzUTBGQlVUSkRMRk5CUVVGQkxFVkJRV0VzZVVKQlFVRXNRMEZEZWtNc1NVRkRTWEJGTEZGQlFVRkJMRU5CUTBGeFJTeFhRVUZCUVN4RFFVWkJReXhKUVVGQlFTeERRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkhVR0lzVVVGQlFVRXNRMEZCVjNCRkxFbEJRVUZCTEVOQlFVdHJSaXhQUVVGQlFTeERRVUZST1VNc1QwRkJRVUVzUTBGQlVUSkRMRk5CUVVGQkxFTkJRVUZCTEVOQlJXaERTU3hWUVVGQlFTeERRVUZoUXl4RlFVRkJRU3hGUVVGQlFTeERRVU5pTEVsQlFVa3pSU3hMUVVGQlFTeERRV05LTEU5QldrbEJMRXRCUVVGQkxFTkJSRmtzVDBGQlFTeEZRVUZhUlN4UlFVRkJRU3hEUVVOUmRFSXNTVUZCUVVFc1EwRkJTMmRITEdsQ1FVRkJRU3hEUVVGclFrUXNSVUZCUVVFc1EwRkJRVUVzUTBGRlpDeFJRVUZCTEVWQlFWcDZSU3hSUVVGQlFTeERRVU5IZEVJc1NVRkJRVUVzUTBGQlMybEhMR3RDUVVGQlFTeERRVUZ0UWtZc1JVRkJRVUVzUTBGQlFVRXNRMEZGWml4VlFVRkJMRVZCUVZwNlJTeFJRVUZCUVN4RFFVTkhkRUlzU1VGQlFVRXNRMEZCUzJ0SExHOUNRVUZCUVN4RFFVRnhRa2dzUlVGQlFVRXNRMEZCUVVFc1EwRkhNVUl2Uml4SlFVRkJRU3hEUVVGTGJVY3NjVUpCUVVGQkxFTkJRWE5DU2l4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVMHpReXhKUVVGTExFbEJRVWxvUml4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTV2RGTEZGQlFVRkJMRU5CUVZNdlJDeE5RVUZCUVN4RFFVRlJSQ3hEUVVGQlFTeEZRVUZCUVN4RFFVbHFReXhIUVVoQlR5eFJRVUZCUVN4RFFVRlhlVVFzVVVGQlFVRXNRMEZCVTJoRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVkUExGRkJRVUZCTEVOQlEzWkNjVVVzVjBGQlFVRXNRMEZCWTFvc1VVRkJRVUVzUTBGQlUyaEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEhMRmxCUVVGQkxFTkJRV0VzVFVGQlFTeERRVUZCTEVOQlJVY3NUVUZCUVN4RlFVRjBRelpFTEZGQlFVRkJMRU5CUVZOb1JTeERRVUZCUVN4RFFVRkJRU3hEUVVGSFJ5eFpRVUZCUVN4RFFVRmhMRkZCUVVFc1EwRkJRU3hEUVVFM1FpeERRVWxCTEVkQlFVbHNRaXhKUVVGQlFTeERRVUZMYTBNc1MwRkJRVUVzUTBGQlRXRXNUMEZCUVVFc1EwRkJVWEZFTEV0QlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGRE0wSXNSMEZCUVN4RFFVRkpja1FzVDBGQlFVRXNRMEZCVVhGRUxFdEJRVUZCTEVOQlFVMHpSQ3hSUVVGQlFTeERRVUZUYTBRc1YwRkJRVUVzUTBGQlFVRXNRMEZKZGtJc1UwRklRVU1zU1VGQlFVRXNRMEZCVDBVc1ZVRkJRVUVzUTBGQlYyWXNVVUZCUVVFc1EwRkJVMmhGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCVHk5Q05rVXNTVUZCUVVFc1EwRkJUMFVzVlVGQlFVRXNRMEZCVjJZc1VVRkJRVUVzUTBGQlUyaEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnk5Q0xFZEJRVUVzUTBGQlN6WkZMRWxCUVVGQkxFTkJRMFFzUzBGQlFTeERRVWxTTEUxQlFVOHNRMEZCUlVFc1NVRkJRVUVzUTBGQlFVRXNTVUZCUVVFc1EwRkJUVVFzVjBGQlFVRXNRMEZCUVVFc1YwRkJRVUVzUTBGQlFVRXNRMEZIYmtJNVJpeHhRa0ZCUVVFc1EwRkJjMEpQTEU5QlFVRkJMRU5CUVVGQkxFTkJRMnhDTEVsQlFVbG5RaXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkZXaXhQUVVSSmNFSXNTVUZCUVVFc1EwRkJTMnRETEV0QlFVRkJMRU5CUVUwNVFpeFBRVUZCUVN4RFFVRlJaMElzUzBGQlFVRXNRMEZCUVVFc1JVRkJNa0lzUlVGQlFTeEZRVUZxUW1oQ0xFOUJRVUZCTEVOQlFWRm5RaXhMUVVGQlFTeEhRVUZoUVN4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVTjJSRUVzUzBGQlFVRXNRMEZIV0haQ0xHdENRVUZCUVN4RFFVRnRRbU1zU1VGQlFVRXNRMEZCUVVFc1EwRkRaaXhOUVVGblFpeE5RVUZCTEVWQlFWSklMRWxCUVVGQkxFVkJRVUZCTEVOQlFXMUNOa1lzU1VGQlFVRXNRMEZCUzBNc1dVRkJRVUVzUTBGQllXeEdMRXRCUVVGQkxFTkJRVUZCTEVOQlIycEVka0lzV1VGQlFVRXNRMEZCWVRCSExFdEJRVUZCTEVOQlFVRkJMRU5CUTFRc1NVRkJTVU1zUjBGQlFVRXNRMEZCVFVRc1MwRkJRVUVzUTBGQlRVVXNVMEZCUVVFc1EwRkJWVVlzUzBGQlFVRXNRMEZCVFVjc1YwRkJRVUVzUTBGQldTeEhRVUZCTEVOQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRkJSMjVHTEZkQlFVRkJMRVZCUVVGQkxFTkJRM1JFTEUxQlFWY3NTMEZCUVN4RlFVRlFhVVlzUjBGQlFVRXNSVUZCZFVJc1MwRkJRU3hGUVVGUVFTeEhRVUZCUVN4RlFVRjFRaXhOUVVGQkxFVkJRVkJCTEVkQlFVRkJMRVZCUVhkQ0xFdEJRVUVzUlVGQlVFRXNSMEZCUVVFc1EwRlBla1F6Unl4WFFVRkJRU3hEUVVGWk9FY3NTVUZCUVVFc1EwRkJUVU1zVVVGQlFVRXNSVUZCVnl4SlFVRkJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRM3BDTEVsQlFVbERMRlZCUVVGQkxFTkJRV0VzU1VGQlNVTXNWVUZCUVVFc1EwRkRha0pETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVOaVJpeFZRVUZCUVN4RFFVRlhSeXhOUVVGQlFTeEZRVUZWUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5xUWtZc1RVRkJRVUVzUTBGQlQwY3NSMEZCUVVFc1EwRkJUVVFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkRNVUpTTEZGQlFVRkJMRU5CUVZOSExFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIySkJMRTFCUVVGQkxFTkJRVTlOTEVsQlFVRkJMRU5CUVU5V0xFbEJRVUZCTEVOQlFVdFZMRWxCUVVGQkxFTkJRMjVDVGl4TlFVRkJRU3hEUVVGUGRrY3NTVUZCUVVFc1EwRkJUMjFITEVsQlFVRkJMRU5CUVV0dVJ5eEpRVUZCUVN4RFFVTnVRbkZITEZWQlFVRkJMRU5CUVZkVExHRkJRVUZCTEVOQlFXTllMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwiLyogcmVtb3ZlZDogY29uc3QgXyRKU0VsZW1lbnRzXzg9cmVxdWlyZShcIi4vSlNFbGVtZW50c1wiKTsgKi87Y2xhc3MgX19FbXB0eV8xMnt9dmFyIF8kVGVtcGxhdGVfMTI9Y2xhc3MgZXh0ZW5kcyBfJEpTRWxlbWVudHNfOHtjb25zdHJ1Y3Rvcih0aGVXaW5kb3c9X19FbXB0eV8xMil7c3VwZXIodGhlV2luZG93KSx0aGlzLnZpcnR1YWw9e30sdGhpcy5lbGVtZW50TGlicmFyeSh0aGVXaW5kb3cuRWxlbWVudCksdGhpcy5odG1sQ29sbGVjdGlvbkxpYnJhcnkodGhlV2luZG93LkhUTUxDb2xsZWN0aW9uKSx0aGlzLm5vZGVMaWJyYXJ5KHRoZVdpbmRvdy5Ob2RlKSx0aGlzLm5vZGVMaXN0TGlicmFyeSh0aGVXaW5kb3cuTm9kZUxpc3QpfWVsZW1lbnRMaWJyYXJ5KEVsZW1lbnQ9X19FbXB0eV8xMil7bGV0IHNlbGY9dGhpcztFbGVtZW50LnByb3RvdHlwZS5jaGFuZ2VOb2RlTmFtZT1mdW5jdGlvbihuYW1lKXtsZXQgc3RydWN0dXJlPXRoaXMudG9Kc29uKCk7cmV0dXJuIHN0cnVjdHVyZS5lbGVtZW50PW5hbWUsc2VsZi5jcmVhdGVFbGVtZW50KHN0cnVjdHVyZSl9LEVsZW1lbnQucHJvdG90eXBlLnRvSnNvbj1mdW5jdGlvbigpe2xldCBlbGVtZW50PXRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxhdHRyaWJ1dGVzPXRoaXMuZ2V0QXR0cmlidXRlcygpO2F0dHJpYnV0ZXMuc3R5bGU9dGhpcy5jc3MoKTtsZXQgY2hpbGRyZW49W107Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspY2hpbGRyZW4ucHVzaCh0aGlzLmNoaWxkcmVuW2ldLnRvSnNvbigpKTtyZXR1cm57ZWxlbWVudDplbGVtZW50LGF0dHJpYnV0ZXM6YXR0cmlidXRlcyxjaGlsZHJlbjpjaGlsZHJlbn19LEVsZW1lbnQucHJvdG90eXBlLnNldE9wdGlvbnM9ZnVuY3Rpb24ob3B0aW9ucz1bXSxwYXJhbXM9e3NlbGVjdGVkOlwiXCJ9KXtwYXJhbXM9cGFyYW1zfHx7fSxzZWxmLmlzc2V0KHBhcmFtcy5mbGFnKSYmKHRoaXMuaW5uZXJIVE1MPVwiXCIpO2ZvcihsZXQgaT0wO2k8b3B0aW9ucy5sZW5ndGg7aSsrKXtsZXQgdGV4dD1vcHRpb25zW2ldLnRleHR8fG9wdGlvbnNbaV0sdmFsdWU9b3B0aW9uc1tpXS52YWx1ZXx8b3B0aW9uc1tpXSxvcHRpb249dGhpcy5tYWtlRWxlbWVudCh7ZWxlbWVudDpcIm9wdGlvblwiLGF0dHJpYnV0ZXM6e3ZhbHVlOnZhbHVlfSx0ZXh0OnRleHR9KTtcIm51bGxcIj09dmFsdWUudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpJiZvcHRpb24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwhMCksc2VsZi5pc3NldChwYXJhbXMuc2VsZWN0ZWQpJiZ2YWx1ZT09cGFyYW1zLnNlbGVjdGVkJiZvcHRpb24uc2V0QXR0cmlidXRlKFwic2VsZWN0ZWRcIiwhMCl9fSxFbGVtZW50LnByb3RvdHlwZS5jb21tb25BbmNlc3Rvcj1mdW5jdGlvbihlbGVtZW50QSxlbGVtZW50Qil7Zm9yKGxldCBhbmNlc3RvckEgb2YgZWxlbWVudEEucGFyZW50cygpKWZvcihsZXQgYW5jZXN0b3JCIG9mIGVsZW1lbnRCLnBhcmVudHMoKSlpZihhbmNlc3RvckE9PWFuY2VzdG9yQilyZXR1cm4gYW5jZXN0b3JBO3JldHVybiBudWxsfSxFbGVtZW50LnByb3RvdHlwZS5vbkFkZGVkPWZ1bmN0aW9uKGNhbGxiYWNrPSgoKT0+e30pKXt0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Ob2RlSW5zZXJ0ZWRJbnRvRG9jdW1lbnRcIixldmVudD0+e2NhbGxiYWNrKCl9KX0sRWxlbWVudC5wcm90b3R5cGUuc3RhdGVzPXt9LEVsZW1lbnQucHJvdG90eXBlLnRlbXA9e30sRWxlbWVudC5wcm90b3R5cGUubWFueUJ1YmJsZWRFdmVudHM9ZnVuY3Rpb24oZXZlbnRzLGNhbGxiYWNrPSgoKT0+e30pKXtldmVudHM9ZXZlbnRzLnNwbGl0KFwiLFwiKTtmb3IobGV0IGV2ZW50IG9mIGV2ZW50cyl0aGlzLmJ1YmJsZWRFdmVudChldmVudC50cmltKCksY2FsbGJhY2spfSxFbGVtZW50LnByb3RvdHlwZS5tYW55Tm90QnViYmxlZEV2ZW50cz1mdW5jdGlvbihldmVudHMsY2FsbGJhY2s9KCgpPT57fSkpe2V2ZW50cz1ldmVudHMuc3BsaXQoXCIsXCIpO2ZvcihsZXQgZXZlbnQgb2YgZXZlbnRzKXRoaXMubm90QnViYmxlZEV2ZW50KGV2ZW50LnRyaW0oKSxjYWxsYmFjayl9LEVsZW1lbnQucHJvdG90eXBlLmJ1YmJsZWRFdmVudD1mdW5jdGlvbihldmVudCxjYWxsYmFjaz0oKCk9Pnt9KSl7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCxldmVudD0+eyhldmVudC50YXJnZXQ9PXRoaXN8fHRoaXMuaXNBbmNlc3RvcihldmVudC50YXJnZXQpKSYmY2FsbGJhY2soZXZlbnQpfSl9LEVsZW1lbnQucHJvdG90eXBlLm5vdEJ1YmJsZWRFdmVudD1mdW5jdGlvbihldmVudCxjYWxsYmFjaz0oKCk9Pnt9KSl7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCxldmVudD0+e2V2ZW50LnRhcmdldD09dGhpc3x8dGhpcy5pc0FuY2VzdG9yKGV2ZW50LnRhcmdldCl8fGNhbGxiYWNrKGV2ZW50KX0pfSxFbGVtZW50LnByb3RvdHlwZS5hZGRNdWx0aXBsZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oZXZlbnRzLGNhbGxiYWNrPSgoKT0+e30pKXtldmVudHM9ZXZlbnRzLnNwbGl0KFwiLFwiKTtmb3IobGV0IGV2ZW50IG9mIGV2ZW50cyl0aGlzLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQudHJpbSgpLGU9PntjYWxsYmFjayhlKX0pfSxFbGVtZW50LnByb3RvdHlwZS5ob3Zlcj1mdW5jdGlvbihwYXJhbXM9e2Nzczp7fSxkbzooKT0+e319KXtsZXQgY3NzVmFsdWVzLGNzcz1bXTt0aGlzLmFkZE11bHRpcGxlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIixldmVudD0+e2Nzc1ZhbHVlcz10aGlzLmNzcygpLHNlbGYuaXNzZXQocGFyYW1zLmNzcykmJihjc3M9c2VsZi5hcnJheS5lYWNoKE9iamVjdC5rZXlzKHBhcmFtcy5jc3MpLHZhbHVlPT5zZWxmLmNzc1N0eWxlTmFtZSh2YWx1ZSkpLHRoaXMuY3NzKHBhcmFtcy5jc3MpKSxzZWxmLmlzZnVuY3Rpb24ocGFyYW1zLmRvKSYmcGFyYW1zLmRvKGV2ZW50KX0pLHRoaXMuYWRkTXVsdGlwbGVFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGV2ZW50PT57c2VsZi5pc3NldChwYXJhbXMuY3NzKSYmKHRoaXMuY3NzUmVtb3ZlKGNzcyksdGhpcy5jc3MoY3NzVmFsdWVzKSl9KX0sRWxlbWVudC5wcm90b3R5cGUuZmluZD1mdW5jdGlvbihuYW1lPVwiXCIscG9zaXRpb249MCl7bGV0IGVsZW1lbnQ9bnVsbDtyZXR1cm4gc2VsZi5pc3NldChwb3NpdGlvbik/dGhpcy5xdWVyeVNlbGVjdG9yQWxsKG5hbWUpLmZvckVhY2goKGUscCk9Pntwb3NpdGlvbj09cCYmKGVsZW1lbnQ9ZSl9KTplbGVtZW50PXRoaXMucXVlcnlTZWxlY3RvcihuYW1lKSxlbGVtZW50fSxFbGVtZW50LnByb3RvdHlwZS5maW5kQWxsPWZ1bmN0aW9uKG5hbWU9XCJcIil7cmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbChuYW1lKX0sRWxlbWVudC5wcm90b3R5cGUuc2VhcmNoPWZ1bmN0aW9uKG5hbWU9XCJcIixvcHRpb25zPXthdHRyaWJ1dGVzOnt9LGlkOlwiXCIsbm9kZU5hbWU6XCJcIixjbGFzczpcIlwiLGNsYXNzZXM6XCJcIn0scG9zaXRpb249MCl7bGV0IGVsZW1lbnQ9bnVsbCxmb3VuZEVsZW1lbnRzPVtdO2lmKHNlbGYuaXNzZXQob3B0aW9ucykpe2xldCBhbGxFbGVtZW50cz10aGlzLnF1ZXJ5U2VsZWN0b3JBbGwobmFtZSk7Zm9yKGxldCBpPTA7aTxhbGxFbGVtZW50cy5sZW5ndGg7aSsrKXtpZihlbGVtZW50PWFsbEVsZW1lbnRzW2ldLHNlbGYuaXNzZXQob3B0aW9ucy5hdHRyaWJ1dGVzKSl7Zm9yKGxldCBhdHRyIGluIG9wdGlvbnMuYXR0cmlidXRlcyllbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKT09b3B0aW9ucy5hdHRyaWJ1dGVzW2F0dHJdfHwoZWxlbWVudD1udWxsKTtpZihzZWxmLmlzbnVsbChlbGVtZW50KSljb250aW51ZX1pZihzZWxmLmlzc2V0KG9wdGlvbnMuaWQpJiZvcHRpb25zLmlkIT1lbGVtZW50LmlkKWVsZW1lbnQ9bnVsbDtlbHNlIGlmKCFzZWxmLmlzc2V0KG9wdGlvbnMuY2xhc3MpfHxlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhvcHRpb25zLmNsYXNzKSlpZighc2VsZi5pc3NldChvcHRpb25zLmNsYXNzZXMpfHxlbGVtZW50Lmhhc0NsYXNzZXMob3B0aW9ucy5jbGFzc2VzKSlpZihzZWxmLmlzc2V0KG9wdGlvbnMubm9kZU5hbWUpJiZlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPW9wdGlvbnMubm9kZU5hbWUpZWxlbWVudD1udWxsO2Vsc2V7aWYocG9zaXRpb248PTApcmV0dXJuIGVsZW1lbnQ7Zm91bmRFbGVtZW50cy5wdXNoKGVsZW1lbnQpfWVsc2UgZWxlbWVudD1udWxsO2Vsc2UgZWxlbWVudD1udWxsfWVsZW1lbnQ9Zm91bmRFbGVtZW50cy5sZW5ndGgmJnNlbGYuaXNzZXQoZm91bmRFbGVtZW50c1twb3NpdGlvbl0pP2ZvdW5kRWxlbWVudHNbcG9zaXRpb25dOm51bGx9ZWxzZSBlbGVtZW50PXRoaXMuZmluZChuYW1lKTtyZXR1cm4gZWxlbWVudH0sRWxlbWVudC5wcm90b3R5cGUuc2VhcmNoQWxsPWZ1bmN0aW9uKG5hbWU9XCJcIixvcHRpb25zPXthdHRyaWJ1dGVzOnt9LGlkOlwiXCIsbm9kZU5hbWU6XCJcIixjbGFzczpcIlwiLGNsYXNzZXM6XCJcIn0pe2lmKHNlbGYuaXNzZXQob3B0aW9ucykpe2xldCBhbGxFbGVtZW50cz10aGlzLnF1ZXJ5U2VsZWN0b3JBbGwobmFtZSksZWxlbWVudHM9W107Zm9yKGxldCBpPTA7aTxhbGxFbGVtZW50cy5sZW5ndGg7aSsrKXtsZXQgZWxlbWVudD1hbGxFbGVtZW50c1tpXTtpZihzZWxmLmlzc2V0KG9wdGlvbnMuYXR0cmlidXRlcykpZm9yKGxldCBhdHRyIGluIG9wdGlvbnMuYXR0cmlidXRlcyllbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKT09b3B0aW9ucy5hdHRyaWJ1dGVzW2F0dHJdfHwoZWxlbWVudD1udWxsKTtzZWxmLmlzc2V0KG9wdGlvbnMuaWQpJiZvcHRpb25zLmlkIT1lbGVtZW50LmlkP2VsZW1lbnQ9bnVsbDpzZWxmLmlzc2V0KG9wdGlvbnMuY2xhc3MpJiYhZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMob3B0aW9ucy5jbGFzcyl8fHNlbGYuaXNzZXQob3B0aW9ucy5jbGFzc2VzKSYmIWVsZW1lbnQuaGFzQ2xhc3NlcyhvcHRpb25zLmNsYXNzZXMpP2VsZW1lbnQ9bnVsbDpzZWxmLmlzc2V0KG9wdGlvbnMubm9kZU5hbWUpJiZlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPW9wdGlvbnMubm9kZU5hbWU/ZWxlbWVudD1udWxsOnNlbGYuaXNudWxsKGVsZW1lbnQpfHxlbGVtZW50cy5wdXNoKGVsZW1lbnQpfXJldHVybiBlbGVtZW50c31yZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKG5hbWUpfSxFbGVtZW50LnByb3RvdHlwZS5mZXRjaD1mdW5jdGlvbihuYW1lcz1bXSxwb3NpdGlvbj0wKXtsZXQgZWxlbWVudHM9e307Zm9yKGxldCBuYW1lIG9mIG5hbWVzKWVsZW1lbnRzW25hbWVdPXRoaXMuZmluZChuYW1lLHBvc2l0aW9uKTtyZXR1cm4gZWxlbWVudHN9LEVsZW1lbnQucHJvdG90eXBlLmZldGNoQWxsPWZ1bmN0aW9uKG5hbWVzPVtdKXtsZXQgZWxlbWVudHM9e307Zm9yKGxldCBuYW1lIG9mIG5hbWVzKWVsZW1lbnRzW25hbWVdPXRoaXMuZmluZEFsbChuYW1lKTtyZXR1cm4gZWxlbWVudHN9LEVsZW1lbnQucHJvdG90eXBlLm5vZGVzQmV0d2Vlbj1mdW5jdGlvbihlbGVtZW50QSxlbGVtZW50Qil7bGV0IGluQmV0d2Vlbk5vZGVzPVtdO2ZvcihsZXQgY2hpbGQgb2YgQXJyYXkuZnJvbSh0aGlzLmNoaWxkcmVuKSkoY2hpbGQ9PWVsZW1lbnRBfHxjaGlsZD09ZWxlbWVudEJ8fGNoaWxkLmlzQW5jZXN0b3IoZWxlbWVudEEpfHxjaGlsZC5pc0FuY2VzdG9yKGVsZW1lbnRCKSkmJmluQmV0d2Vlbk5vZGVzLnB1c2goY2hpbGQpO3JldHVybiBpbkJldHdlZW5Ob2Rlc30sRWxlbWVudC5wcm90b3R5cGUuaXNBbmNlc3Rvcj1mdW5jdGlvbihjaGlsZCl7cmV0dXJuIGNoaWxkLnBhcmVudHMoKS5pbmNsdWRlcyh0aGlzKX0sRWxlbWVudC5wcm90b3R5cGUucGFyZW50cz1mdW5jdGlvbigpe2xldCBwYXJlbnRzPVtdLGN1cnJlbnRQYXJlbnQ9dGhpcy5wYXJlbnROb2RlO2Zvcig7bnVsbCE9Y3VycmVudFBhcmVudDspcGFyZW50cy5wdXNoKGN1cnJlbnRQYXJlbnQpLGN1cnJlbnRQYXJlbnQ9Y3VycmVudFBhcmVudC5wYXJlbnROb2RlO3JldHVybiBwYXJlbnRzfSxFbGVtZW50LnByb3RvdHlwZS5jdXN0b21QYXJlbnRzPWZ1bmN0aW9uKCl7bGV0IHBhcmVudHM9dGhpcy5wYXJlbnRzKCksY3VzdG9tUGFyZW50cz1bXTtmb3IobGV0IGk9MDtpPHBhcmVudHMubGVuZ3RoO2krKylwYXJlbnRzW2ldLm5vZGVOYW1lLmluY2x1ZGVzKFwiLVwiKSYmY3VzdG9tUGFyZW50cy5wdXNoKHBhcmVudHNbaV0pO3JldHVybiBjdXN0b21QYXJlbnRzfSxFbGVtZW50LnByb3RvdHlwZS5yZW1vdmVTdGF0ZT1mdW5jdGlvbihwYXJhbXM9e25hbWU6XCJcIn0pe2xldCBzdGF0ZT10aGlzLmdldFN0YXRlKHBhcmFtcyk7c2VsZi5pc3NldChzdGF0ZSkmJnNlbGYuaXNzZXQocGFyYW1zLmZvcmNlKSYmKHNlbGYuaXNzZXQoc3RhdGUuZGF0YXNldC5kb21LZXkpJiZkZWxldGUgc2VsZi52aXJ0dWFsW3N0YXRlLmRhdGFzZXQuZG9tS2V5XSxzdGF0ZS5yZW1vdmUoKSksdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYGRhdGEtJHtwYXJhbXMubmFtZX1gKX0sRWxlbWVudC5wcm90b3R5cGUuZ2V0U3RhdGU9ZnVuY3Rpb24ocGFyYW1zPXtuYW1lOlwiXCJ9KXtsZXQgc3RhdGVOYW1lLHN0YXRlPW51bGw7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHBhcmFtcz9zdGF0ZU5hbWU9cGFyYW1zOnNlbGYuaXNzZXQodGhpcy5kYXRhc2V0W2Ake3BhcmFtcy5uYW1lfWBdKSYmKHN0YXRlTmFtZT1wYXJhbXMubmFtZSksc2VsZi5pc3NldChzdGF0ZU5hbWUpJiYoc3RhdGU9c2VsZi52aXJ0dWFsW3RoaXMuZGF0YXNldFtzdGF0ZU5hbWVdXSksc3RhdGV9LEVsZW1lbnQucHJvdG90eXBlLmFkZFN0YXRlPWZ1bmN0aW9uKHBhcmFtcz17bmFtZTpcIlwifSl7cmV0dXJuIHNlbGYuaXNzZXQocGFyYW1zLnN0YXRlLmRhdGFzZXQuZG9tS2V5KXx8cGFyYW1zLnN0YXRlLnNldEtleSgpLHRoaXMuZGF0YXNldFtwYXJhbXMubmFtZV09cGFyYW1zLnN0YXRlLmRhdGFzZXQuZG9tS2V5LHRoaXMuc3RhdGVzW3BhcmFtcy5uYW1lXT17fSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihwYXJhbXM9e25hbWU6XCJcIixhdHRyaWJ1dGVzOnt9LHJlbmRlcjp7fSxjaGlsZHJlbjpbXSx0ZXh0OlwiXCIsaHRtbDpcIlwiLHZhbHVlOlwiXCIsb3B0aW9uczpbXX0pe2xldCBzdGF0ZT10aGlzLmdldFN0YXRlKHBhcmFtcyk7aWYoc3RhdGUuc2V0QXR0cmlidXRlcyhwYXJhbXMuYXR0cmlidXRlcyksc2VsZi5pc3NldChwYXJhbXMuY2hpbGRyZW4pJiZzdGF0ZS5tYWtlRWxlbWVudChwYXJhbXMuY2hpbGRyZW4pLHNlbGYuaXNzZXQocGFyYW1zLnJlbmRlcikmJnN0YXRlLnJlbmRlcihwYXJhbXMucmVuZGVyKSxzZWxmLmlzc2V0KHBhcmFtcy50ZXh0KSYmKHN0YXRlLnRleHRDb250ZW50PXBhcmFtcy50ZXh0KSxzZWxmLmlzc2V0KHBhcmFtcy5odG1sKSYmKHN0YXRlLmlubmVySFRNTD1wYXJhbXMuaHRtbCksc2VsZi5pc3NldChwYXJhbXMudmFsdWUpJiYoc3RhdGUudmFsdWU9cGFyYW1zLnZhbHVlKSxzZWxmLmlzc2V0KHBhcmFtcy5vcHRpb25zKSlmb3IodmFyIGkgb2YgcGFyYW1zLm9wdGlvbnMpc3RhdGUubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJvcHRpb25cIix2YWx1ZTppLHRleHQ6aSxhdHRhY2htZW50OlwiYXBwZW5kXCJ9KTtyZXR1cm4gdGhpcy5zdGF0ZXNbcGFyYW1zLm5hbWVdW0pTT04uc3RyaW5naWZ5KHBhcmFtcyldPXN0YXRlLmNsb25lTm9kZSghMCksc3RhdGV9LEVsZW1lbnQucHJvdG90eXBlLnNldEtleUFzeW5jPWFzeW5jIGZ1bmN0aW9uKCl7cmV0dXJuIGF3YWl0IHRoaXMuc2V0S2V5KCl9LEVsZW1lbnQucHJvdG90eXBlLnNldEtleT1mdW5jdGlvbigpe2xldCBrZXk9RGF0ZS5ub3coKS50b1N0cmluZygzNikrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7cmV0dXJuIHNlbGYuaXNzZXQodGhpcy5kYXRhc2V0LmRvbUtleSk/a2V5PXRoaXMuZGF0YXNldC5kb21LZXk6dGhpcy5kYXRhc2V0LmRvbUtleT1rZXksc2VsZi52aXJ0dWFsW2tleV09dGhpcyxrZXl9LEVsZW1lbnQucHJvdG90eXBlLmRyb3BEb3duPWZ1bmN0aW9uKGVsZW1lbnQpe2xldCBwYXJlbnRDb250ZW50PXRoaXMuY2xvbmVOb2RlKCEwKTt0aGlzLmlubmVySFRNTD1cIlwiLHRoaXMuYXBwZW5kKHBhcmVudENvbnRlbnQpLHBhcmVudENvbnRlbnQuY3NzKHtib3hTaGFkb3c6XCIxcHggMXB4IDFweCAxcHggI2FhYWFhYVwifSksdGhpcy5jc3Moe2JveFNoYWRvdzpcIjAuNXB4IDAuNXB4IDAuNXB4IDAuNXB4ICNjY2NjY2NcIn0pO2xldCBkcm9wQ29udGFpbmVyPXRoaXMubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImRyb3AtZG93blwifX0pO3JldHVybiBkcm9wQ29udGFpbmVyLmFwcGVuZChlbGVtZW50KSx0aGlzLnJlbW92ZURyb3BEb3duPSgoKT0+e2Ryb3BDb250YWluZXIucmVtb3ZlKCkscGFyZW50Q29udGVudC5jc3Moe2JveFNoYWRvdzpcInVuc2V0XCJ9KSx0aGlzLmlubmVySFRNTD1wYXJlbnRDb250ZW50LmlubmVySFRNTH0pLHRoaXN9LEVsZW1lbnQucHJvdG90eXBlLnN0b3BNb25pdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub2JzZXJ2ZSYmdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCksdGhpc30sRWxlbWVudC5wcm90b3R5cGUub25BdHRyaWJ1dGVDaGFuZ2U9ZnVuY3Rpb24oYXR0cmlidXRlPVwiXCIsY2FsbGJhY2s9KCgpPT57fSkpe3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImF0dHJpYnV0ZXNDaGFuZ2VkXCIsZXZlbnQ9PntldmVudC5kZXRhaWwuYXR0cmlidXRlTmFtZT09YXR0cmlidXRlJiZjYWxsYmFjayhldmVudCl9KX0sRWxlbWVudC5wcm90b3R5cGUubW9uaXRvcj1mdW5jdGlvbihjb25maWc9e2F0dHJpYnV0ZXM6ITAsY2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KXtyZXR1cm4gdGhpcy5vYnNlcnZlcj1uZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25MaXN0LG9ic2VydmVyKT0+e211dGF0aW9uTGlzdC5sZW5ndGgmJnRoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJtdXRhdGVkXCIpKTtmb3IobGV0IG11dGF0aW9uIG9mIG11dGF0aW9uTGlzdClcImNoaWxkTGlzdFwiPT1tdXRhdGlvbi50eXBlP3RoaXMuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJjaGlsZExpc3RjaGFuZ2VkXCIse2RldGFpbDptdXRhdGlvbn0pKTpcImF0dHJpYnV0ZXNcIj09bXV0YXRpb24udHlwZT90aGlzLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiYXR0cmlidXRlc0NoYW5nZWRcIix7ZGV0YWlsOm11dGF0aW9ufSkpOlwiY2hhcmFjdGVyRGF0YVwiPT1tdXRhdGlvbi50eXBlJiZ0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiY2hhcmFjdGVyRGF0YUNoYW5nZWRcIix7ZGV0YWlsOm11dGF0aW9ufSkpfSksdGhpcy5vYnNlcnZlci5vYnNlcnZlKHRoaXMsY29uZmlnKSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5jaGVja0NoYW5nZXM9ZnVuY3Rpb24oY2FsbGJhY2s9KCgpPT57fSkpe3RoaXMubW9uaXRvcigpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcIm11dGF0ZWRcIixldmVudD0+e2NhbGxiYWNrKGV2ZW50KX0pfSxFbGVtZW50LnByb3RvdHlwZS5vbkNoYW5nZWQ9ZnVuY3Rpb24oY2FsbEJhY2s9KCgpPT57fSkpe3RoaXMuZ2V0QXR0cmlidXRlKFwidmFsdWVcIik7bGV0IHVwZGF0ZU1lPWV2ZW50PT57aWYoXCJJTlBVVFwiPT1ldmVudC50YXJnZXQubm9kZU5hbWUpaWYoXCJkYXRlXCI9PWV2ZW50LnRhcmdldC50eXBlKXRoaXMuaXNEYXRlKHRoaXMudmFsdWUpJiZ0aGlzLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsdGhpcy52YWx1ZSk7ZWxzZSBpZihcInRpbWVcIj09ZXZlbnQudGFyZ2V0LnR5cGUpdGhpcy5pc1RpbWVWYWxpZCh0aGlzLnZhbHVlKSYmdGhpcy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLHRoaXMudmFsdWUpO2Vsc2UgaWYoXCJmaWxlXCI9PWV2ZW50LnRhcmdldC50eXBlKXtldmVudC50YXJnZXQudmFsdWU7bGV0IGZpbGU9ZXZlbnQudGFyZ2V0LmZpbGVzWzBdOzA9PWZpbGUudHlwZS5pbmRleE9mKFwiaW1hZ2VcIikmJnNlbGYuaW1hZ2VUb0pzb24oZmlsZSxjYWxsQmFjayl9ZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsdGhpcy52YWx1ZSk7ZWxzZSBpZihcIlNFTEVDVFwiPT1ldmVudC50YXJnZXQubm9kZU5hbWUpZm9yKGxldCBpPTA7aTxldmVudC50YXJnZXQub3B0aW9ucy5sZW5ndGg7aSsrKWk9PWV2ZW50LnRhcmdldC5zZWxlY3RlZEluZGV4P2V2ZW50LnRhcmdldC5vcHRpb25zW2ldLnNldEF0dHJpYnV0ZShcInNlbGVjdGVkXCIsITApOmV2ZW50LnRhcmdldC5vcHRpb25zW2ldLnJlbW92ZUF0dHJpYnV0ZShcInNlbGVjdGVkXCIpO2Vsc2VcIkRBVEEtRUxFTUVOVFwiPT1ldmVudC50YXJnZXQubm9kZU5hbWU/dGhpcy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLHRoaXMudmFsdWUpOlwiU0VMRUNULUVMRU1FTlRcIj09ZXZlbnQudGFyZ2V0Lm5vZGVOYW1lP3RoaXMuc2V0QXR0cmlidXRlKFwidmFsdWVcIix0aGlzLnZhbHVlKTp0aGlzLnZhbHVlPXRoaXMudGV4dENvbnRlbnQ7c2VsZi5pc3NldChjYWxsQmFjaykmJlwiZmlsZVwiIT1ldmVudC50YXJnZXQudHlwZSYmY2FsbEJhY2sodGhpcy52YWx1ZSxldmVudCl9O3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsZXZlbnQ9Pnt1cGRhdGVNZShldmVudCl9KSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixldmVudD0+e3VwZGF0ZU1lKGV2ZW50KX0pfSxFbGVtZW50LnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24ocGFyYW1zPXtlbGVtZW50OlwiXCIsYXR0cmlidXRlczp7fX0sZXhjZXB0KXtzZWxmLmlzc2V0KGV4Y2VwdCk/dGhpcy5yZW1vdmVDaGlsZHJlbihleGNlcHQpOnRoaXMucmVtb3ZlQ2hpbGRyZW4oKSx0aGlzLm1ha2VFbGVtZW50KHBhcmFtcyl9LEVsZW1lbnQucHJvdG90eXBlLmdldEFsbENzc1Byb3BlcnRpZXM9ZnVuY3Rpb24oKXtsZXQgY3NzUnVsZXMsc2VsZWN0b3JUZXh0LHN0eWxlU2hlZXRzPUFycmF5LmZyb20oZG9jdW1lbnQuc3R5bGVTaGVldHMpLGlkPXRoaXMuaWQsbm9kZU5hbWU9dGhpcy5ub2RlTmFtZSxjbGFzc0xpc3Q9QXJyYXkuZnJvbSh0aGlzLmNsYXNzTGlzdCkscHJvcGVydGllcz17fTtmb3IodmFyIGkgaW4gY2xhc3NMaXN0KWNsYXNzTGlzdFtpXT1gLiR7Y2xhc3NMaXN0W2ldfWA7Zm9yKGk9MDtpPHN0eWxlU2hlZXRzLmxlbmd0aDtpKyspe2Nzc1J1bGVzPXN0eWxlU2hlZXRzW2ldLmNzc1J1bGVzO2Zvcih2YXIgaj0wO2o8Y3NzUnVsZXMubGVuZ3RoO2orKylpZigoc2VsZWN0b3JUZXh0PWNzc1J1bGVzW2pdLnNlbGVjdG9yVGV4dCk9PWAjJHtpZH1gfHxzZWxlY3RvclRleHQ9PW5vZGVOYW1lfHwtMSE9Y2xhc3NMaXN0LmluZGV4T2Yoc2VsZWN0b3JUZXh0KSl7cHJvcGVydGllc1tzZWxlY3RvclRleHRdPXt9O2xldCBzdHlsZT1jc3NSdWxlc1tqXS5zdHlsZTtmb3IobGV0IG4gaW4gc3R5bGUpXCJcIiE9PXN0eWxlW25dJiYocHJvcGVydGllc1tzZWxlY3RvclRleHRdW25dPXN0eWxlW25dKX19cmV0dXJuIHByb3BlcnRpZXMuc3R5bGU9dGhpcy5jc3MoKSxwcm9wZXJ0aWVzfSxFbGVtZW50LnByb3RvdHlwZS5nZXRDc3NQcm9wZXJ0aWVzPWZ1bmN0aW9uKHByb3BlcnR5PVwiXCIpe2xldCBhbGxQcm9wZXJ0aWVzPXRoaXMuZ2V0QWxsQ3NzUHJvcGVydGllcygpLHByb3BlcnRpZXM9e307Zm9yKGxldCBuYW1lIGluIGFsbFByb3BlcnRpZXMpe3Byb3BlcnRpZXNbbmFtZV09e307Zm9yKGxldCBwIGluIGFsbFByb3BlcnRpZXNbbmFtZV0pcHJvcGVydHk9PXAmJihwcm9wZXJ0aWVzW25hbWVdW3BdPWFsbFByb3BlcnRpZXNbbmFtZV1bcF0pfXJldHVybiBwcm9wZXJ0aWVzfSxFbGVtZW50LnByb3RvdHlwZS5oYXNDc3NQcm9wZXJ0eT1mdW5jdGlvbihwcm9wZXJ0eT1cIlwiKXt2YXIgcHJvcGVydGllcz10aGlzLmdldENzc1Byb3BlcnRpZXMocHJvcGVydHkpO2Zvcih2YXIgaSBpbiBwcm9wZXJ0aWVzKWlmKHNlbGYuaXNzZXQocHJvcGVydGllc1tpXSkmJlwiXCIhPXByb3BlcnRpZXNbaV0pcmV0dXJuITA7cmV0dXJuITF9LEVsZW1lbnQucHJvdG90eXBlLmNzc1Byb3BlcnR5VmFsdWU9ZnVuY3Rpb24ocHJvcGVydHk9XCJcIil7dmFyIHByb3BlcnRpZXM9dGhpcy5nZXRDc3NQcm9wZXJ0aWVzKHByb3BlcnR5KSxpZD10aGlzLmlkLGNsYXNzTGlzdD1BcnJheS5mcm9tKHRoaXMuY2xhc3NMaXN0KTtpZihzZWxmLmlzc2V0KHByb3BlcnRpZXMuc3R5bGUpJiZcIlwiIT1wcm9wZXJ0aWVzLnN0eWxlKXJldHVybiBwcm9wZXJ0aWVzLnN0eWxlO2lmKHNlbGYuaXNzZXQoaWQpJiZzZWxmLmlzc2V0KHByb3BlcnRpZXNbYCMke2lkfWBdKSYmXCJcIiE9cHJvcGVydGllc1tgIyR7aWR9YF0pcmV0dXJuIHByb3BlcnRpZXNbYCMke2lkfWBdO2Zvcih2YXIgaSBvZiBjbGFzc0xpc3QpaWYoc2VsZi5pc3NldChwcm9wZXJ0aWVzW2AuJHtpfWBdKSYmXCJcIiE9cHJvcGVydGllc1tgLiR7aX1gXSlyZXR1cm4gcHJvcGVydGllc1tgLiR7aX1gXTtyZXR1cm4gc2VsZi5pc3NldChwcm9wZXJ0aWVzW3RoaXMubm9kZU5hbWVdKSYmXCJcIiE9cHJvcGVydGllc1t0aGlzLm5vZGVOYW1lXT9wcm9wZXJ0aWVzW3RoaXMubm9kZU5hbWVdOlwiXCJ9LEVsZW1lbnQucHJvdG90eXBlLmNzcz1mdW5jdGlvbihzdHlsZXM9e30pe3JldHVybiBzZWxmLmlzc2V0KHN0eWxlcykmJk9iamVjdC5rZXlzKHN0eWxlcykubWFwKGtleT0+e3RoaXMuc3R5bGVba2V5XT1zdHlsZXNba2V5XX0pLHNlbGYuZXh0cmFjdENTUyh0aGlzKX0sRWxlbWVudC5wcm90b3R5cGUuY3NzUmVtb3ZlPWZ1bmN0aW9uKHN0eWxlcz1bXSl7aWYoQXJyYXkuaXNBcnJheShzdHlsZXMpKWZvcih2YXIgaSBvZiBzdHlsZXMpdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShpKTtlbHNlIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoc3R5bGVzKTtyZXR1cm4gdGhpcy5jc3MoKX0sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlQ2hpbGQ9ZnVuY3Rpb24oY2hpbGQpe3ZhciBuYW1lLF9jbGFzc2VzLGlkLGZvdW5kPSExO2NvbnNvbGUubG9nKGNoaWxkKSx0aGlzLmNoaWxkcmVuLmZvckVhY2gobm9kZT0+e25hbWU9bm9kZS5ub2RlTmFtZSxfY2xhc3Nlcz1ub2RlLmNsYXNzTGlzdCxpZD1ub2RlLmlkLG5hbWU9PWNoaWxkLm5vZGVOYW1lJiZpZD09Y2hpbGQuaWQmJl9jbGFzc2VzLnRvU3RyaW5nKCk9PWNoaWxkLmNsYXNzTGlzdC50b1N0cmluZygpJiYobm9kZS5yZW1vdmUoKSxmb3VuZD0hMCl9KSxmb3VuZHx8dGhpcy5hcHBlbmQoY2hpbGQpfSxFbGVtZW50LnByb3RvdHlwZS5jbGVhckNsYXNzZXM9ZnVuY3Rpb24oZXhjZXB0PVwiXCIpe2V4Y2VwdD1leGNlcHQuc3BsaXQoXCIsXCIpO2ZvcihsZXQgaiBpbiBleGNlcHQpZXhjZXB0W2pdPWV4Y2VwdFtqXS50cmltKCk7Zm9yKGxldCBpIG9mIHRoaXMuY2xhc3NMaXN0KXNlbGYuaXNzZXQoZXhjZXB0KSYmZXhjZXB0LmluY2x1ZGVzKGkpfHx0aGlzLmNsYXNzTGlzdC5yZW1vdmUoaSl9LEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUNsYXNzZXM9ZnVuY3Rpb24oY2xhc3Nlcz1cIlwiKXtjbGFzc2VzPWNsYXNzZXMuc3BsaXQoXCIsXCIpO2ZvcihsZXQgaSBvZiBjbGFzc2VzKVwiXCIhPShpPWkudHJpbSgpKSYmdGhpcy5jbGFzc0xpc3QucmVtb3ZlKGkpfSxFbGVtZW50LnByb3RvdHlwZS5hZGRDbGFzc2VzPWZ1bmN0aW9uKGNsYXNzZXM9XCJcIil7Y2xhc3Nlcz1jbGFzc2VzLnNwbGl0KFwiLFwiKTtmb3IobGV0IGkgb2YgY2xhc3NlcylcIlwiIT0oaT1pLnRyaW0oKSkmJnRoaXMuY2xhc3NMaXN0LmFkZChpKX0sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlQ2xhc3Nlcz1mdW5jdGlvbihjbGFzc2VzPVwiXCIpe2NsYXNzZXM9Y2xhc3Nlcy5zcGxpdChcIixcIik7Zm9yKGxldCBpIG9mIGNsYXNzZXMpXCJcIiE9KGk9aS50cmltKCkpJiZ0aGlzLmNsYXNzTGlzdC50b2dnbGUoaSl9LEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUNsYXNzPWZ1bmN0aW9uKF9jbGFzcz1cIlwiKXtyZXR1cm4gdGhpcy5jbGFzc0xpc3QucmVtb3ZlKF9jbGFzcyksdGhpc30sRWxlbWVudC5wcm90b3R5cGUuaGFzQ2xhc3Nlcz1mdW5jdGlvbihjbGFzc0xpc3Q9W10pe2ZvcihsZXQgbUNsYXNzIG9mIGNsYXNzTGlzdClpZighdGhpcy5jbGFzc0xpc3QuY29udGFpbnMobUNsYXNzKSlyZXR1cm4hMTtyZXR1cm4hMH0sRWxlbWVudC5wcm90b3R5cGUuYWRkQ2xhc3M9ZnVuY3Rpb24oX2NsYXNzPVwiXCIpe3JldHVybiB0aGlzLmNsYXNzTGlzdC5hZGQoX2NsYXNzKSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS50b2dnbGVDbGFzcz1mdW5jdGlvbihfY2xhc3M9XCJcIil7cmV0dXJuIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShfY2xhc3MpLHRoaXN9LEVsZW1lbnQucHJvdG90eXBlLnBvc2l0aW9uPWZ1bmN0aW9uKHBhcmFtcz17fSl7cmV0dXJuIHNlbGYuaXNzZXQocGFyYW1zKSYmKE9iamVjdC5rZXlzKHBhcmFtcykubWFwKGtleT0+e3BhcmFtc1trZXldPVwicHhcIj09bmV3IFN0cmluZyhwYXJhbXNba2V5XSkuc2xpY2UocGFyYW1zW2tleV0ubGVuZ3RoLTIpP3BhcmFtc1trZXldOmAke3BhcmFtc1trZXldfXB4YH0pLHRoaXMuY3NzKHBhcmFtcykpLHRoaXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCl9LEVsZW1lbnQucHJvdG90eXBlLmluVmlldz1mdW5jdGlvbihwYXJlbnRJZGVudGlmaWVyPVwiXCIpe2xldCBwYXJlbnQ9dGhpcy5nZXRQYXJlbnRzKHBhcmVudElkZW50aWZpZXIpLHRvcD10aGlzLnBvc2l0aW9uKCkudG9wLGZsYWc9ITE7cmV0dXJuIHNlbGYuaXNudWxsKHBhcmVudCl8fChmbGFnPXRvcD49MCYmdG9wPD1wYXJlbnQuY2xpZW50SGVpZ2h0KSxmbGFnfSxFbGVtZW50LnByb3RvdHlwZS5oYXNDbGFzcz1mdW5jdGlvbihfY2xhc3M9XCJcIil7cmV0dXJuIHRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKF9jbGFzcyl9LEVsZW1lbnQucHJvdG90eXBlLnNldFByb3BlcnRpZXM9ZnVuY3Rpb24ocHJvcGVydGllcz17fSl7Zm9yKGxldCBpIGluIHByb3BlcnRpZXMpdGhpc1tpXT1wcm9wZXJ0aWVzW2ldfSxFbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGVzPWZ1bmN0aW9uKGF0dHJpYnV0ZXM9e30pe2ZvcihsZXQgaSBpbiBhdHRyaWJ1dGVzKVwic3R5bGVcIj09aT90aGlzLmNzcyhhdHRyaWJ1dGVzW2ldKTp0aGlzLnNldEF0dHJpYnV0ZShpLGF0dHJpYnV0ZXNbaV0pfSxFbGVtZW50LnByb3RvdHlwZS5nZXRBdHRyaWJ1dGVzPWZ1bmN0aW9uKG5hbWVzPVtdKXswPT1uYW1lcy5sZW5ndGgmJihuYW1lcz10aGlzLmdldEF0dHJpYnV0ZU5hbWVzKCkpO2xldCBhdHRyaWJ1dGVzPXt9O2ZvcihsZXQgbmFtZSBvZiBuYW1lcylhdHRyaWJ1dGVzW25hbWVdPXRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpO3JldHVybiBhdHRyaWJ1dGVzfSxFbGVtZW50LnByb3RvdHlwZS5tYWtlRWxlbWVudD1mdW5jdGlvbihwYXJhbXM9e2VsZW1lbnQ6XCJcIixhdHRyaWJ1dGVzOnt9fSl7cmV0dXJuIHRoaXMuc2V0S2V5QXN5bmMoKSxzZWxmLmNyZWF0ZUVsZW1lbnQocGFyYW1zLHRoaXMpfSxFbGVtZW50LnByb3RvdHlwZS5nZXRQYXJlbnRzPWZ1bmN0aW9uKG5hbWU9XCJcIix2YWx1ZT1cIlwiKXt2YXIgYXR0cmlidXRlPW5hbWUuc2xpY2UoMCwxKSxwYXJlbnQ9dGhpcy5wYXJlbnROb2RlO2lmKFwiLlwiPT1hdHRyaWJ1dGUpZm9yKDtwYXJlbnQmJighc2VsZi5pc3NldChwYXJlbnQuY2xhc3NMaXN0KXx8IXBhcmVudC5jbGFzc0xpc3QuY29udGFpbnMobmFtZS5zbGljZSgxKSkpOylwYXJlbnQ9cGFyZW50LnBhcmVudE5vZGU7ZWxzZSBpZihcIiNcIj09YXR0cmlidXRlKWZvcig7cGFyZW50JiYoIXNlbGYuaXNzZXQocGFyZW50LmlkKXx8cGFyZW50LmlkIT1uYW1lLnNsaWNlKDEpKTspcGFyZW50PXBhcmVudC5wYXJlbnROb2RlO2Vsc2UgZm9yKDtwYXJlbnQmJighc2VsZi5pc3NldChwYXJlbnQubm9kZU5hbWUpfHxwYXJlbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSE9bmFtZS50b0xvd2VyQ2FzZSgpKTspe2lmKHNlbGYuaXNzZXQocGFyZW50Lmhhc0F0dHJpYnV0ZSkmJnBhcmVudC5oYXNBdHRyaWJ1dGUobmFtZSkpe2lmKHNlbGYuaXNzZXQodmFsdWUpJiZwYXJlbnQuZ2V0QXR0cmlidXRlKG5hbWUpPT12YWx1ZSlicmVhazticmVha31wYXJlbnQ9cGFyZW50LnBhcmVudE5vZGV9cmV0dXJuIHBhcmVudH0sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKCl7XCJub25lXCI9PXRoaXMuc3R5bGUuZGlzcGxheXx8XCJoaWRkZW5cIj09dGhpcy5zdHlsZS52aXNpYmlsaXR5P3RoaXMuc2hvdygpOnRoaXMuaGlkZSgpfSxFbGVtZW50LnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3NzUmVtb3ZlKFtcImRpc3BsYXlcIl0pLHRoaXN9LEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUNoaWxkcmVuPWZ1bmN0aW9uKHBhcmFtcz17ZXhjZXB0OltdfSl7bGV0IGV4Y2VwdGlvbnM9W107KHBhcmFtcz1wYXJhbXN8fHt9KS5leGNlcHQ9cGFyYW1zLmV4Y2VwdHx8W107bGV0IGV4Y2VwdD1wYXJhbXMuZXhjZXB0O2ZvcihsZXQgaT0wO2k8ZXhjZXB0Lmxlbmd0aDtpKyspe2xldCBhbGw9dGhpcy5maW5kQWxsKGV4Y2VwdFtpXSk7Zm9yKGxldCBqPTA7ajxhbGwubGVuZ3RoO2orKylleGNlcHRpb25zLmluY2x1ZGVzKGFsbFtqXSl8fGV4Y2VwdGlvbnMucHVzaChhbGxbal0pfXJldHVybiB0aGlzLmNoaWxkcmVuLmZvckVhY2gobm9kZT0+e2V4Y2VwdGlvbnMuaW5jbHVkZXMobm9kZSl8fG5vZGUucmVtb3ZlKCl9KSx0aGlzfSxFbGVtZW50LnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24oKXtzZWxmLmlzc2V0KHRoaXMuZGF0YXNldC5kb21LZXkpJiZkZWxldGUgc2VsZi52aXJ0dWFsW3RoaXMuZGF0YXNldC5kb21LZXldLHRoaXMucmVtb3ZlKCl9LEVsZW1lbnQucHJvdG90eXBlLmRlbGV0ZUNoaWxkPWZ1bmN0aW9uKGNoaWxkKXtyZXR1cm4gY2hpbGQuZGVsZXRlKCksdGhpc30sRWxlbWVudC5wcm90b3R5cGUudG9nZ2xlQ2hpbGRyZW49ZnVuY3Rpb24ocGFyYW1zPXtuYW1lOlwiXCIsY2xhc3M6XCJcIixpZDpcIlwifSl7QXJyYXkuZnJvbSh0aGlzLmNoaWxkcmVuKS5mb3JFYWNoKG5vZGU9PntzZWxmLmlzc2V0KHBhcmFtcy5uYW1lKSYmcGFyYW1zLm5hbWU9PW5vZGUubm9kZU5hbWV8fHNlbGYuaXNzZXQocGFyYW1zLmNsYXNzKSYmc2VsZi5oYXNBcnJheUVsZW1lbnQoQXJyYXkuZnJvbShub2RlLmNsYXNzTGlzdCkscGFyYW1zLmNsYXNzLnNwbGl0KFwiIFwiKSl8fHNlbGYuaXNzZXQocGFyYW1zLmlkKSYmKHBhcmFtcy5pZCxub2RlLmlkKSxub2RlLnRvZ2dsZSgpfSl9LEVsZW1lbnQucHJvdG90eXBlLmF0dGFjaEVsZW1lbnQ9ZnVuY3Rpb24oZWxlbWVudCxhdHRhY2htZW50PVwiYXBwZW5kXCIpe3RoaXNbYXR0YWNobWVudF0oZWxlbWVudCl9LEVsZW1lbnQucHJvdG90eXBlLnByZXNzZWQ9ZnVuY3Rpb24oY2FsbGJhY2s9KCgpPT57fSkpe2xldCBzdGFydFRpbWU9MCxlbmRUaW1lPTA7dGhpcy5hZGRNdWx0aXBsZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd24sIHRvdWNoc3RhcnRcIixldmVudD0+e3N0YXJ0VGltZT1ldmVudC50aW1lU3RhbXB9KSx0aGlzLmFkZE11bHRpcGxlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXAsIHRvdWNoZW5kXCIsZXZlbnQ9PntlbmRUaW1lPWV2ZW50LnRpbWVTdGFtcCxldmVudC5kdXJhdGlvbj1lbmRUaW1lLXN0YXJ0VGltZSxjYWxsYmFjayhldmVudCl9KX19aHRtbENvbGxlY3Rpb25MaWJyYXJ5KEhUTUxDb2xsZWN0aW9uPV9fRW1wdHlfMTIpe2xldCBzZWxmPXRoaXM7SFRNTENvbGxlY3Rpb24ucHJvdG90eXBlLnBvcEluZGV4PWZ1bmN0aW9uKHBvc2l0aW9uPTApe2xldCBjb2xsZWN0aW9uPXNlbGYuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNhbXBsZVwifSkuY2hpbGRyZW4sbGlzdD1BcnJheS5mcm9tKHRoaXMpO2ZvcihsZXQgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKWkhPXBvc2l0aW9uJiYoY29sbGVjdGlvbltpXT10aGlzLml0ZW0oaSksY29uc29sZS5sb2coY29sbGVjdGlvbikpO3JldHVybiBjb2xsZWN0aW9ufSxIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihjYWxsYmFjaz0oKCk9Pnt9KSl7bGV0IGxpc3Q9QXJyYXkuZnJvbSh0aGlzKTtmb3IobGV0IGk9MDtpPGxpc3QubGVuZ3RoO2krKyljYWxsYmFjayhsaXN0W2ldLGkpfSxIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuZWFjaD1mdW5jdGlvbihjYWxsYmFjaz0oKCk9Pnt9KSl7bGV0IGxpc3Q9QXJyYXkuZnJvbSh0aGlzKTtmb3IobGV0IGk9MDtpPGxpc3QubGVuZ3RoO2krKyljYWxsYmFjayhsaXN0W2ldLGkpfSxIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlbGVtZW50KXtsZXQgbGlzdD1BcnJheS5mcm9tKHRoaXMpO2ZvcihsZXQgaSBpbiBsaXN0KWlmKGxpc3Q9PWVsZW1lbnQpcmV0dXJuIGk7cmV0dXJuLTF9LEhUTUxDb2xsZWN0aW9uLnByb3RvdHlwZS5pbmNsdWRlcz1mdW5jdGlvbihlbGVtZW50KXtyZXR1cm4tMSE9dGhpcy5pbmRleE9mKGVsZW1lbnQpfSxIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUubm9kZXNCZXR3ZWVuPWZ1bmN0aW9uKGVsZW1lbnRBLGVsZW1lbnRCKXtsZXQgaW5CZXR3ZWVuTm9kZXM9W10sbGlzdD1BcnJheS5mcm9tKHRoaXMpO2ZvcihsZXQgYVBhcmVudCBvZiBsaXN0KShhUGFyZW50PT1lbGVtZW50QXx8YVBhcmVudD09ZWxlbWVudEJ8fGFQYXJlbnQuaXNBbmNlc3RvcihlbGVtZW50QSl8fGFQYXJlbnQuaXNBbmNlc3RvcihlbGVtZW50QikpJiZpbkJldHdlZW5Ob2Rlcy5wdXNoKGFQYXJlbnQpO3JldHVybiBpbkJldHdlZW5Ob2Rlc319bm9kZUxpYnJhcnkoTm9kZT1fX0VtcHR5XzEyKXtOb2RlLnByb3RvdHlwZS5zdGF0ZXM9e319bm9kZUxpc3RMaWJyYXJ5KE5vZGVMaXN0PV9fRW1wdHlfMTIpe05vZGVMaXN0LnByb3RvdHlwZS5lYWNoPWZ1bmN0aW9uKGNhbGxiYWNrPSgoKT0+e30pKXtmb3IobGV0IGk9MDtpPHRoaXMubGVuZ3RoO2krKyljYWxsYmFjayh0aGlzW2ldLGkpfSxOb2RlTGlzdC5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlbGVtZW50KXtmb3IobGV0IGkgaW4gdGhpcylpZih0aGlzW2ldPT1lbGVtZW50KXJldHVybiBpO3JldHVybi0xfSxOb2RlTGlzdC5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZWxlbWVudCl7cmV0dXJuLTEhPXRoaXMuaW5kZXhPZihlbGVtZW50KX0sTm9kZUxpc3QucHJvdG90eXBlLm5vZGVzQmV0d2Vlbj1mdW5jdGlvbihlbGVtZW50QSxlbGVtZW50Qil7bGV0IGluQmV0d2Vlbk5vZGVzPVtdO2ZvcihsZXQgYVBhcmVudCBvZiB0aGlzKShhUGFyZW50PT1lbGVtZW50QXx8YVBhcmVudD09ZWxlbWVudEJ8fGFQYXJlbnQuaXNBbmNlc3RvcihlbGVtZW50QSl8fGFQYXJlbnQuaXNBbmNlc3RvcihlbGVtZW50QikpJiZpbkJldHdlZW5Ob2Rlcy5wdXNoKGFQYXJlbnQpO3JldHVybiBpbkJldHdlZW5Ob2Rlc319fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWxSbGJYQnNZWFJsTG1weklsMHNJbTVoYldWeklqcGJJa1Z0Y0hSNUlpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJa3BUUld4bGJXVnVkSE1pTENKYmIySnFaV04wSUU5aWFtVmpkRjBpTENKMGFHVlhhVzVrYjNjaUxDSnpkWEJsY2lJc0luUm9hWE1pTENKMmFYSjBkV0ZzSWl3aVpXeGxiV1Z1ZEV4cFluSmhjbmtpTENKRmJHVnRaVzUwSWl3aWFIUnRiRU52Ykd4bFkzUnBiMjVNYVdKeVlYSjVJaXdpU0ZSTlRFTnZiR3hsWTNScGIyNGlMQ0p1YjJSbFRHbGljbUZ5ZVNJc0lrNXZaR1VpTENKdWIyUmxUR2x6ZEV4cFluSmhjbmtpTENKT2IyUmxUR2x6ZENJc0luTmxiR1lpTENKd2NtOTBiM1I1Y0dVaUxDSmphR0Z1WjJWT2IyUmxUbUZ0WlNJc0ltNWhiV1VpTENKemRISjFZM1IxY21VaUxDSjBiMHB6YjI0aUxDSmxiR1Z0Wlc1MElpd2lZM0psWVhSbFJXeGxiV1Z1ZENJc0ltNXZaR1ZPWVcxbElpd2lkRzlNYjNkbGNrTmhjMlVpTENKaGRIUnlhV0oxZEdWeklpd2laMlYwUVhSMGNtbGlkWFJsY3lJc0luTjBlV3hsSWl3aVkzTnpJaXdpWTJocGJHUnlaVzRpTENKcElpd2liR1Z1WjNSb0lpd2ljSFZ6YUNJc0luTmxkRTl3ZEdsdmJuTWlMQ0p2Y0hScGIyNXpJaXdpY0dGeVlXMXpJaXdpYzJWc1pXTjBaV1FpTENKcGMzTmxkQ0lzSW1ac1lXY2lMQ0pwYm01bGNraFVUVXdpTENKMFpYaDBJaXdpZG1Gc2RXVWlMQ0p2Y0hScGIyNGlMQ0p0WVd0bFJXeGxiV1Z1ZENJc0luUnZVM1J5YVc1bklpd2ljMlYwUVhSMGNtbGlkWFJsSWl3aVkyOXRiVzl1UVc1alpYTjBiM0lpTENKbGJHVnRaVzUwUVNJc0ltVnNaVzFsYm5SQ0lpd2lZVzVqWlhOMGIzSkJJaXdpY0dGeVpXNTBjeUlzSW1GdVkyVnpkRzl5UWlJc0ltOXVRV1JrWldRaUxDSmpZV3hzWW1GamF5SXNJbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSWlMQ0psZG1WdWRDSXNJbk4wWVhSbGN5SXNJblJsYlhBaUxDSnRZVzU1UW5WaVlteGxaRVYyWlc1MGN5SXNJbVYyWlc1MGN5SXNJbk53YkdsMElpd2lZblZpWW14bFpFVjJaVzUwSWl3aWRISnBiU0lzSW0xaGJubE9iM1JDZFdKaWJHVmtSWFpsYm5Seklpd2libTkwUW5WaVlteGxaRVYyWlc1MElpd2laRzlqZFcxbGJuUWlMQ0owWVhKblpYUWlMQ0pwYzBGdVkyVnpkRzl5SWl3aVlXUmtUWFZzZEdsd2JHVkZkbVZ1ZEV4cGMzUmxibVZ5SWl3aVpTSXNJbWh2ZG1WeUlpd2laRzhpTENKamMzTldZV3gxWlhNaUxDSmhjbkpoZVNJc0ltVmhZMmdpTENKUFltcGxZM1FpTENKclpYbHpJaXdpWTNOelUzUjViR1ZPWVcxbElpd2lhWE5tZFc1amRHbHZiaUlzSW1OemMxSmxiVzkyWlNJc0ltWnBibVFpTENKd2IzTnBkR2x2YmlJc0luRjFaWEo1VTJWc1pXTjBiM0pCYkd3aUxDSm1iM0pGWVdOb0lpd2ljQ0lzSW5GMVpYSjVVMlZzWldOMGIzSWlMQ0ptYVc1a1FXeHNJaXdpYzJWaGNtTm9JaXdpYVdRaUxDSmpiR0Z6Y3lJc0ltTnNZWE56WlhNaUxDSm1iM1Z1WkVWc1pXMWxiblJ6SWl3aVlXeHNSV3hsYldWdWRITWlMQ0poZEhSeUlpd2laMlYwUVhSMGNtbGlkWFJsSWl3aWFYTnVkV3hzSWl3aVkyeGhjM05NYVhOMElpd2lZMjl1ZEdGcGJuTWlMQ0pvWVhORGJHRnpjMlZ6SWl3aWMyVmhjbU5vUVd4c0lpd2laV3hsYldWdWRITWlMQ0ptWlhSamFDSXNJbTVoYldWeklpd2labVYwWTJoQmJHd2lMQ0p1YjJSbGMwSmxkSGRsWlc0aUxDSnBia0psZEhkbFpXNU9iMlJsY3lJc0ltTm9hV3hrSWl3aVFYSnlZWGtpTENKbWNtOXRJaXdpYVc1amJIVmtaWE1pTENKamRYSnlaVzUwVUdGeVpXNTBJaXdpY0dGeVpXNTBUbTlrWlNJc0ltTjFjM1J2YlZCaGNtVnVkSE1pTENKeVpXMXZkbVZUZEdGMFpTSXNJbk4wWVhSbElpd2laMlYwVTNSaGRHVWlMQ0ptYjNKalpTSXNJbVJoZEdGelpYUWlMQ0prYjIxTFpYa2lMQ0p5WlcxdmRtVWlMQ0p5WlcxdmRtVkJkSFJ5YVdKMWRHVWlMQ0p6ZEdGMFpVNWhiV1VpTENKaFpHUlRkR0YwWlNJc0luTmxkRXRsZVNJc0luTmxkRk4wWVhSbElpd2ljbVZ1WkdWeUlpd2lhSFJ0YkNJc0luTmxkRUYwZEhKcFluVjBaWE1pTENKMFpYaDBRMjl1ZEdWdWRDSXNJbUYwZEdGamFHMWxiblFpTENKS1UwOU9JaXdpYzNSeWFXNW5hV1o1SWl3aVkyeHZibVZPYjJSbElpd2ljMlYwUzJWNVFYTjVibU1pTENKaGMzbHVZeUlzSW10bGVTSXNJa1JoZEdVaUxDSnViM2NpTENKTllYUm9JaXdpY21GdVpHOXRJaXdpYzJ4cFkyVWlMQ0prY205d1JHOTNiaUlzSW5CaGNtVnVkRU52Ym5SbGJuUWlMQ0poY0hCbGJtUWlMQ0ppYjNoVGFHRmtiM2NpTENKa2NtOXdRMjl1ZEdGcGJtVnlJaXdpY21WdGIzWmxSSEp2Y0VSdmQyNGlMQ0p6ZEc5d1RXOXVhWFJ2Y2lJc0ltOWljMlZ5ZG1VaUxDSnZZbk5sY25abGNpSXNJbVJwYzJOdmJtNWxZM1FpTENKdmJrRjBkSEpwWW5WMFpVTm9ZVzVuWlNJc0ltRjBkSEpwWW5WMFpTSXNJbVJsZEdGcGJDSXNJbUYwZEhKcFluVjBaVTVoYldVaUxDSnRiMjVwZEc5eUlpd2lZMjl1Wm1sbklpd2lZMmhwYkdSTWFYTjBJaXdpYzNWaWRISmxaU0lzSWsxMWRHRjBhVzl1VDJKelpYSjJaWElpTENKdGRYUmhkR2x2Ymt4cGMzUWlMQ0prYVhOd1lYUmphRVYyWlc1MElpd2lRM1Z6ZEc5dFJYWmxiblFpTENKdGRYUmhkR2x2YmlJc0luUjVjR1VpTENKdmJrTm9ZVzVuWldRaUxDSmpZV3hzUW1GamF5SXNJblZ3WkdGMFpVMWxJaXdpYVhORVlYUmxJaXdpYVhOVWFXMWxWbUZzYVdRaUxDSm1hV3hsSWl3aVptbHNaWE1pTENKcGJtUmxlRTltSWl3aWFXMWhaMlZVYjBwemIyNGlMQ0p6Wld4bFkzUmxaRWx1WkdWNElpd2laWGhqWlhCMElpd2ljbVZ0YjNabFEyaHBiR1J5Wlc0aUxDSm5aWFJCYkd4RGMzTlFjbTl3WlhKMGFXVnpJaXdpWTNOelVuVnNaWE1pTENKelpXeGxZM1J2Y2xSbGVIUWlMQ0p6ZEhsc1pWTm9aV1YwY3lJc0luQnliM0JsY25ScFpYTWlMQ0pxSWl3aWJpSXNJbWRsZEVOemMxQnliM0JsY25ScFpYTWlMQ0p3Y205d1pYSjBlU0lzSW1Gc2JGQnliM0JsY25ScFpYTWlMQ0pvWVhORGMzTlFjbTl3WlhKMGVTSXNJbU56YzFCeWIzQmxjblI1Vm1Gc2RXVWlMQ0p6ZEhsc1pYTWlMQ0p0WVhBaUxDSmxlSFJ5WVdOMFExTlRJaXdpYVhOQmNuSmhlU0lzSW5KbGJXOTJaVkJ5YjNCbGNuUjVJaXdpZEc5bloyeGxRMmhwYkdRaUxDSmZZMnhoYzNObGN5SXNJbVp2ZFc1a0lpd2lZMjl1YzI5c1pTSXNJbXh2WnlJc0ltNXZaR1VpTENKamJHVmhja05zWVhOelpYTWlMQ0p5WlcxdmRtVkRiR0Z6YzJWeklpd2lZV1JrUTJ4aGMzTmxjeUlzSW1Ga1pDSXNJblJ2WjJkc1pVTnNZWE56WlhNaUxDSjBiMmRuYkdVaUxDSnlaVzF2ZG1WRGJHRnpjeUlzSWw5amJHRnpjeUlzSW0xRGJHRnpjeUlzSW1Ga1pFTnNZWE56SWl3aWRHOW5aMnhsUTJ4aGMzTWlMQ0pUZEhKcGJtY2lMQ0puWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRaUxDSnBibFpwWlhjaUxDSndZWEpsYm5SSlpHVnVkR2xtYVdWeUlpd2ljR0Z5Wlc1MElpd2laMlYwVUdGeVpXNTBjeUlzSW5SdmNDSXNJbU5zYVdWdWRFaGxhV2RvZENJc0ltaGhjME5zWVhOeklpd2ljMlYwVUhKdmNHVnlkR2xsY3lJc0ltZGxkRUYwZEhKcFluVjBaVTVoYldWeklpd2lhR0Z6UVhSMGNtbGlkWFJsSWl3aVpHbHpjR3hoZVNJc0luWnBjMmxpYVd4cGRIa2lMQ0p6YUc5M0lpd2lhR2xrWlNJc0ltVjRZMlZ3ZEdsdmJuTWlMQ0poYkd3aUxDSmtaV3hsZEdVaUxDSmtaV3hsZEdWRGFHbHNaQ0lzSW5SdloyZHNaVU5vYVd4a2NtVnVJaXdpYUdGelFYSnlZWGxGYkdWdFpXNTBJaXdpWVhSMFlXTm9SV3hsYldWdWRDSXNJbkJ5WlhOelpXUWlMQ0p6ZEdGeWRGUnBiV1VpTENKbGJtUlVhVzFsSWl3aWRHbHRaVk4wWVcxd0lpd2laSFZ5WVhScGIyNGlMQ0p3YjNCSmJtUmxlQ0lzSW1OdmJHeGxZM1JwYjI0aUxDSnNhWE4wSWl3aWFYUmxiU0lzSW1GUVlYSmxiblFpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTERaRVFVVkJMRTFCUVUxQkxGVkJRVUZCTEVWQmEycERUa01zYVVKQlFVOURMRU5CTDJsRFVDeGpRVUYxUWtNc1kwRkJRVUVzUTBGRGJrSkRMRmRCUVVGQkxFTkJRVmxETEZOQlFVRkJMRU5CUVZsTUxGVkJRVUZCTEVOQlFVRkJMRU5CUTNCQ1RTeExRVUZCUVN4RFFVRk5SQ3hUUVVGQlFTeERRVUZCUVN4RFFVTk9SU3hKUVVGQlFTeERRVUZMUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRFprUXNTVUZCUVVFc1EwRkJTMFVzWTBGQlFVRXNRMEZCWlVvc1UwRkJRVUVzUTBGQlZVc3NUMEZCUVVFc1EwRkJRVUVzUTBGRE9VSklMRWxCUVVGQkxFTkJRVXRKTEhGQ1FVRkJRU3hEUVVGelFrNHNVMEZCUVVFc1EwRkJWVThzWTBGQlFVRXNRMEZCUVVFc1EwRkRja05NTEVsQlFVRkJMRU5CUVV0TkxGZEJRVUZCTEVOQlFWbFNMRk5CUVVGQkxFTkJRVlZUTEVsQlFVRkJMRU5CUVVGQkxFTkJRek5DVUN4SlFVRkJRU3hEUVVGTFVTeGxRVUZCUVN4RFFVRm5RbFlzVTBGQlFVRXNRMEZCVlZjc1VVRkJRVUVzUTBGQlFVRXNRMEZIYmtOYUxHTkJRVUZCTEVOQlFXVk5MRTlCUVVGQkxFTkJRVlZXTEZWQlFVRkJMRU5CUVVGQkxFTkJSWEpDTEVsQlFVbHBRaXhKUVVGQlFTeERRVUZQVml4SlFVRkJRU3hEUVVOWVJ5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWUXl4alFVRkJRU3hEUVVGcFFpeFRRVUZWUXl4SlFVRkJRU3hEUVVGQlFTeERRVU42UXl4SlFVRkpReXhUUVVGQlFTeERRVUZaWkN4SlFVRkJRU3hEUVVGTFpTeE5RVUZCUVN4RlFVRkJRU3hEUVVkeVFpeFBRVVpCUkN4VFFVRkJRU3hEUVVGVlJTeFBRVUZCUVN4RFFVRlZTQ3hKUVVGQlFTeERRVU5PU0N4SlFVRkJRU3hEUVVGTFR5eGhRVUZCUVN4RFFVRmpTQ3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVseVExZ3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlVrc1RVRkJRVUVzUTBGQlV5eFZRVUZCTEVOQlEzWkNMRWxCUVVsRExFOUJRVUZCTEVOQlFWVm9RaXhKUVVGQlFTeERRVUZMYTBJc1VVRkJRVUVzUTBGQlUwTXNWMEZCUVVFc1JVRkJRVUVzUTBGRGVFSkRMRlZCUVVGQkxFTkJRV0Z3UWl4SlFVRkJRU3hEUVVGTGNVSXNZVUZCUVVFc1JVRkJRVUVzUTBGRGRFSkVMRlZCUVVGQkxFTkJRVmRGTEV0QlFVRkJMRU5CUVZGMFFpeEpRVUZCUVN4RFFVRkxkVUlzUjBGQlFVRXNSVUZCUVVFc1EwRkRlRUlzU1VGQlNVTXNVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRMllzU1VGQlN5eEpRVUZKUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWHBDTEVsQlFVRkJMRU5CUVV0M1FpeFJRVUZCUVN4RFFVRlRSU3hOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU4wUTBRc1VVRkJRVUVzUTBGQlUwY3NTVUZCUVVFc1EwRkJTek5DTEVsQlFVRkJMRU5CUVV0M1FpeFJRVUZCUVN4RFFVRlRReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhWaXhOUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVWdVF5eE5RVUZQTEVOQlFVVkRMRTlCUVVGQkxFTkJRVUZCTEU5QlFVRkJMRU5CUVZOSkxGVkJRVUZCTEVOQlFVRkJMRlZCUVVGQkxFTkJRVmxKTEZGQlFVRkJMRU5CUVVGQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMnhEY2tJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV2xDTEZWQlFVRkJMRU5CUVdFc1UwRkJWVU1zVDBGQlFVRXNRMEZCVlN4RlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWTXNRMEZCUlVNc1VVRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjRSVVFzVFVGQlFVRXNRMEZCVTBFc1RVRkJRVUVzUlVGQlZTeEZRVUZCTEVOQlEyWndRaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUMGNzU1VGQlFVRXNRMEZCUVVFc1IwRkRiRUpxUXl4SlFVRkJRU3hEUVVGTGEwTXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGSGNrSXNTVUZCU3l4SlFVRkpWQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVa3NUMEZCUVVFc1EwRkJVVWdzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTnlReXhKUVVGSlZTeEpRVUZCUVN4RFFVRlBUaXhQUVVGQlFTeERRVUZSU2l4RFFVRkJRU3hEUVVGQlFTeERRVUZIVlN4SlFVRkJRU3hGUVVGUlRpeFBRVUZCUVN4RFFVRlJTaXhEUVVGQlFTeERRVUZCUVN4RFFVTnNRMWNzUzBGQlFVRXNRMEZCVVZBc1QwRkJRVUVzUTBGQlVVb3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIxY3NTMEZCUVVFc1JVRkJVMUFzVDBGQlFVRXNRMEZCVVVvc1EwRkJRVUVzUTBGQlFVRXNRMEZGY0VOWkxFMUJRVUZCTEVOQlFWTnlReXhKUVVGQlFTeERRVUZMYzBNc1YwRkJRVUVzUTBGQldTeERRVUZGZEVJc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkpMRlZCUVVGQkxFTkJRVmtzUTBGQlJXZENMRXRCUVVGQkxFTkJRVUZCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVk5FTEVsQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWEJETEUxQlFVRXNSVUZCYkVORExFdEJRVUZCTEVOQlFVMUhMRkZCUVVGQkxFVkJRVUZCTEVOQlFWZHdRaXhYUVVGQlFTeEZRVUZCUVN4RlFVTnFRbXRDTEUxQlFVRkJMRU5CUVU5SExGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJSMmhET1VJc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVU5RExGRkJRVUZCTEVOQlFVRkJMRVZCUVdGTExFdEJRVUZCTEVWQlFWTk9MRTFCUVVGQkxFTkJRVTlETEZGQlFVRkJMRVZCUXk5RFRTeE5RVUZCUVN4RFFVRlBSeXhaUVVGQlFTeERRVUZoTEZWQlFVRXNRMEZCUVN4RFFVRlpMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGTE5VTnlReXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVk9FSXNZMEZCUVVFc1EwRkJhVUlzVTBGQlZVTXNVVUZCUVVFc1EwRkJWVU1zVVVGQlFVRXNRMEZCUVVFc1EwRkRia1FzU1VGQlN5eEpRVUZKUXl4VFFVRkJRU3hKUVVGaFJpeFJRVUZCUVN4RFFVRlRSeXhQUVVGQlFTeEZRVUZCUVN4RFFVTXpRaXhKUVVGTExFbEJRVWxETEZOQlFVRkJMRWxCUVdGSUxGRkJRVUZCTEVOQlFWTkZMRTlCUVVGQkxFVkJRVUZCTEVOQlF6TkNMRWRCUVVsRUxGTkJRVUZCTEVWQlFXRkZMRk5CUVVGQkxFTkJRVmNzVDBGQlQwWXNVMEZCUVVFc1EwRkpNME1zVDBGQlR5eEpRVUZCTEVOQlFVRXNRMEZIV0hwRExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ2UXl4UFFVRkJRU3hEUVVGVkxGTkJRVlZETEZGQlFVRkJMRVZCUVZjc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU0zUTJoRUxFbEJRVUZCTEVOQlFVdHBSQ3huUWtGQlFVRXNRMEZCYVVJc05rSkJRVUVzUTBGQkswSkRMRXRCUVVGQkxFVkJRVUZCTEVOQlEycEVSaXhSUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbFNOME1zVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZYZERMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVWN6UW1oRUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlY1UXl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGSGVrSnFSQ3hQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVk1FTXNhVUpCUVVGQkxFTkJRVzlDTEZOQlFWVkRMRTFCUVVGQkxFTkJRVkZPTEZGQlFVRkJMRVZCUVZjc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU12UkUwc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRkRUlzU1VGQlN5eEpRVUZKVEN4TFFVRkJRU3hKUVVGVFNTeE5RVUZCUVN4RFFVTmtkRVFzU1VGQlFVRXNRMEZCUzNkRUxGbEJRVUZCTEVOQlFXRk9MRXRCUVVGQkxFTkJRVTFQTEVsQlFVRkJMRVZCUVVGQkxFTkJRVkZVTEZGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzaEROME1zVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZTdERMRzlDUVVGQlFTeERRVUYxUWl4VFFVRlZTaXhOUVVGQlFTeERRVUZSVGl4UlFVRkJRU3hGUVVGWExFbEJRVUVzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZEYkVWTkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVTlETEV0QlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRM1JDTEVsQlFVc3NTVUZCU1V3c1MwRkJRVUVzU1VGQlUwa3NUVUZCUVVFc1EwRkRaSFJFTEVsQlFVRkJMRU5CUVVzeVJDeGxRVUZCUVN4RFFVRm5RbFFzUzBGQlFVRXNRMEZCVFU4c1NVRkJRVUVzUlVGQlFVRXNRMEZCVVZRc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxNME0zUXl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZOa01zV1VGQlFVRXNRMEZCWlN4VFFVRlZUaXhMUVVGQlFTeERRVUZQUml4UlFVRkJRU3hGUVVGWExFbEJRVUVzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZGZWtSWkxGRkJRVUZCTEVOQlFWTllMR2RDUVVGQlFTeERRVUZwUWtNc1MwRkJRVUVzUTBGQlQwRXNTMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZGZWtKQkxFdEJRVUZCTEVOQlFVMVhMRTFCUVVGQkxFVkJRVlUzUkN4SlFVRkJRU3hGUVVGUlFTeEpRVUZCUVN4RFFVRkxPRVFzVlVGQlFVRXNRMEZCVjFvc1MwRkJRVUVzUTBGQlRWY3NUVUZCUVVFc1EwRkJRVUVzUjBGRE9VTmlMRkZCUVVGQkxFTkJRVk5GTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUWEpDTDBNc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV2RFTEdWQlFVRkJMRU5CUVd0Q0xGTkJRVlZVTEV0QlFVRkJMRU5CUVU5R0xGRkJRVUZCTEVWQlFWY3NTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNMVJGa3NVVUZCUVVFc1EwRkJVMWdzWjBKQlFVRkJMRU5CUVdsQ1F5eExRVUZCUVN4RFFVRlBRU3hMUVVGQlFTeEZRVUZCUVN4RFFVTjJRa0VzUzBGQlFVRXNRMEZCVFZjc1RVRkJRVUVzUlVGQlZUZEVMRWxCUVVGQkxFVkJRVkZCTEVsQlFVRkJMRU5CUVVzNFJDeFZRVUZCUVN4RFFVRlhXaXhMUVVGQlFTeERRVUZOVnl4TlFVRkJRU3hEUVVGQlFTeEZRVU5vUkdJc1VVRkJRVUVzUTBGQlUwVXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrSXZReXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmIwUXNkMEpCUVVGQkxFTkJRVEpDTEZOQlFWVlVMRTFCUVVGQkxFTkJRVkZPTEZGQlFVRkJMRVZCUVZjc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4wUlUwc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRkRUlzU1VGQlN5eEpRVUZKVEN4TFFVRkJRU3hKUVVGVFNTeE5RVUZCUVN4RFFVTmtkRVFzU1VGQlFVRXNRMEZCUzJsRUxHZENRVUZCUVN4RFFVRnBRa01zUzBGQlFVRXNRMEZCVFU4c1NVRkJRVUVzUlVGQlFVRXNRMEZCVVU4c1EwRkJRVUVzUlVGQlFVRXNRMEZEYUVOb1FpeFJRVUZCUVN4RFFVRlRaMElzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5ja0kzUkN4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjMFFzUzBGQlFVRXNRMEZCVVN4VFFVRlZia01zVFVGQlFVRXNRMEZCVXl4RFFVRkZVQ3hIUVVGQlFTeERRVUZMTEVWQlFVRXNRMEZCU1RKRExFVkJRVUZCTEVOQlFVa3NTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWNFJDeEpRVU5KUXl4VFFVRkJRU3hEUVVSQk5VTXNSMEZCUVVFc1EwRkJUU3hGUVVGQkxFTkJSMVoyUWl4SlFVRkJRU3hEUVVGTEswUXNkMEpCUVVGQkxFTkJRWGxDTEZsQlFVRXNRMEZCWTJJc1MwRkJRVUVzUlVGQlFVRXNRMEZEZUVOcFFpeFRRVUZCUVN4RFFVRlpia1VzU1VGQlFVRXNRMEZCUzNWQ0xFZEJRVUZCTEVWQlFVRkJMRU5CUTJKaUxFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUFVDeEhRVUZCUVN4RFFVRkJRU3hIUVVOc1FrRXNSMEZCUVVFc1EwRkJUV0lzU1VGQlFVRXNRMEZCU3pCRUxFdEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5RExFbEJRVUZCTEVOQlFVdDZReXhOUVVGQlFTeERRVUZQVUN4SFFVRkJRU3hEUVVGQlFTeERRVUZOWVN4TFFVRkJRU3hGUVVOd1F6RkNMRWxCUVVGQkxFTkJRVXM0UkN4WlFVRkJRU3hEUVVGaGNFTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGTjBKd1F5eEpRVUZCUVN4RFFVRkxkVUlzUjBGQlFVRXNRMEZCU1U4c1RVRkJRVUVzUTBGQlQxQXNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYUVKaUxFbEJRVUZCTEVOQlFVc3JSQ3hWUVVGQlFTeERRVUZYTTBNc1RVRkJRVUVzUTBGQlQyOURMRVZCUVVGQkxFTkJRVUZCTEVWQlEzWkNjRU1zVFVGQlFVRXNRMEZCVDI5RExFVkJRVUZCTEVOQlFVZG9RaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxzUW14RUxFbEJRVUZCTEVOQlFVc3JSQ3gzUWtGQlFVRXNRMEZCZVVJc1dVRkJRU3hEUVVGallpeExRVUZCUVN4RlFVRkJRU3hEUVVOd1EzaERMRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTlJpeE5RVUZCUVN4RFFVRlBVQ3hIUVVGQlFTeERRVUZCUVN4SFFVTnNRblpDTEVsQlFVRkJMRU5CUVVzd1JTeFRRVUZCUVN4RFFVRlZia1FzUjBGQlFVRXNRMEZCUVVFc1EwRkRablpDTEVsQlFVRkJMRU5CUVV0MVFpeEhRVUZCUVN4RFFVRkpORU1zVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrSm9SU3hQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVlowVXNTVUZCUVVFc1EwRkJUeXhUUVVGVk9VUXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVWtyUkN4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVU55UkN4SlFVRkpOVVFzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CVTJRc1QwRlNTVTRzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMDBReXhSUVVGQlFTeERRVUZCUVN4RFFVTllOVVVzU1VGQlFVRXNRMEZCU3paRkxHZENRVUZCUVN4RFFVRnBRbWhGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTFwUlN4UFFVRkJRU3hEUVVGUkxFTkJRVU5rTEVOQlFVRkJMRU5CUVVkbExFTkJRVUZCTEVkQlFVRkJMRU5CUTJoRFNDeFJRVUZCUVN4RlFVRlpSeXhEUVVGQlFTeEhRVUZITDBRc1QwRkJRVUVzUTBGQlZXZEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV3BEYUVRc1QwRkJRVUVzUTBGQlZXaENMRWxCUVVGQkxFTkJRVXRuUml4aFFVRkJRU3hEUVVGamJrVXNTVUZCUVVFc1EwRkJRVUVzUTBGRk1VSkhMRTlCUVVGQkxFTkJRVUZCTEVOQlNWaGlMRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWelJTeFBRVUZCUVN4RFFVRlZMRk5CUVZWd1JTeEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJRU3hEUVVONlF5eFBRVUZQWWl4SlFVRkJRU3hEUVVGTE5rVXNaMEpCUVVGQkxFTkJRV2xDYUVVc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpha05XTEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVjFSU3hOUVVGQlFTeERRVUZUTEZOQlFWVnlSU3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1dkQ0xFOUJRVUZCTEVOQlFWVXNRMEZCUlZRc1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVa3JSQ3hGUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1dwRkxGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkphMFVzUzBGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsRExFOUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUVUxVUxGRkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRkJMRU5CUTI1SkxFbEJRVWsxUkN4UFFVRkJRU3hEUVVGVkxFbEJRVUVzUTBGRFZuTkZMR0ZCUVVGQkxFTkJRV2RDTEVWQlFVRXNRMEZGY0VJc1IwRkJTVFZGTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5TQ3hQUVVGQlFTeERRVUZCUVN4RFFVRlZMRU5CUTNKQ0xFbEJRVWt3UkN4WFFVRkJRU3hEUVVGamRrWXNTVUZCUVVFc1EwRkJTelpGTEdkQ1FVRkJRU3hEUVVGcFFtaEZMRWxCUVVGQkxFTkJRVUZCTEVOQlIzaERMRWxCUVVzc1NVRkJTVmtzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVazRSQ3hYUVVGQlFTeERRVUZaTjBRc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN5eERRVWw2UXl4SFFVaEJWQ3hQUVVGQlFTeERRVUZWZFVVc1YwRkJRVUVzUTBGQldUbEVMRU5CUVVGQkxFTkJRVUZCTEVOQlIyeENaaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVZ3NUMEZCUVVFc1EwRkJVVlFzVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVOb1F5eEpRVUZMTEVsQlFVbHZSU3hKUVVGQlFTeEpRVUZSTTBRc1QwRkJRVUVzUTBGQlVWUXNWVUZCUVVFc1EwRkZha0pLTEU5QlFVRkJMRU5CUVZGNVJTeFpRVUZCUVN4RFFVRmhSQ3hKUVVGQlFTeERRVUZCUVN4RlFVRlRNMFFzVDBGQlFVRXNRMEZCVVZRc1ZVRkJRVUVzUTBGQlYyOUZMRWxCUVVGQkxFTkJRVUZCTEVkQlEycEVlRVVzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CUVVFc1EwRkxiRUlzUjBGQlNVNHNTVUZCUVVFc1EwRkJTMmRHTEUxQlFVRkJMRU5CUVU4eFJTeFBRVUZCUVN4RFFVRkJRU3hEUVVGVkxGRkJRVUVzUTBGSk9VSXNSMEZCU1U0c1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFJTEU5QlFVRkJMRU5CUVZGelJDeEZRVUZCUVN4RFFVRkJRU3hGUVVGUGRFUXNUMEZCUVVFc1EwRkJVWE5FTEVWQlFVRkJMRVZCUVUxdVJTeFBRVUZCUVN4RFFVRlJiVVVzUlVGQlFVRXNRMEZEYUVSdVJTeFBRVUZCUVN4RFFVRlZMRWxCUVVFc1EwRkJRU3hMUVV0a0xFZEJRVUVzUTBGQlNVNHNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxSUxFOUJRVUZCTEVOQlFWRjFSQ3hMUVVGQlFTeERRVUZCUVN4RlFVRlhjRVVzVDBGQlFVRXNRMEZCVVRKRkxGTkJRVUZCTEVOQlFWVkRMRkZCUVVGQkxFTkJRVk12UkN4UFFVRkJRU3hEUVVGUmRVUXNTMEZCUVVFc1EwRkJRVUVzUTBGTmNrVXNSMEZCUVN4RFFVRkpNVVVzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMUlMRTlCUVVGQkxFTkJRVkYzUkN4UFFVRkJRU3hEUVVGQlFTeEZRVUZoY2tVc1QwRkJRVUVzUTBGQlVUWkZMRlZCUVVGQkxFTkJRVmRvUlN4UFFVRkJRU3hEUVVGUmQwUXNUMEZCUVVFc1EwRkJRVUVzUTBGTkwwUXNSMEZCU1RORkxFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOU0N4UFFVRkJRU3hEUVVGUldDeFJRVUZCUVN4RFFVRkJRU3hGUVVGaFJpeFBRVUZCUVN4RFFVRlJSU3hSUVVGQlFTeERRVUZUUXl4WFFVRkJRU3hGUVVGQlFTeEZRVUZwUWxVc1QwRkJRVUVzUTBGQlVWZ3NVVUZCUVVFc1EwRkRNVVZHTEU5QlFVRkJMRU5CUVZVc1NVRkJRU3hEUVVGQkxFbEJSR1FzUTBGTlFTeEhRVUZKTkVRc1VVRkJRVUVzUlVGQldTeERRVUZCTEVOQlFVY3NUMEZCVHpWRUxFOUJRVUZCTEVOQlF6RkNjMFVzWVVGQlFVRXNRMEZCWXpORUxFbEJRVUZCTEVOQlFVdFlMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCV21aQkxFOUJRVUZCTEVOQlFWVXNTVUZCUVN4RFFVRkJMRXRCVGxaQkxFOUJRVUZCTEVOQlFWVXNTVUZCUVN4RFFYTkNaRUVzVDBGQlFVRXNRMEZFUVhORkxHRkJRVUZCTEVOQlFXTTFSQ3hOUVVGQlFTeEZRVUZWYUVJc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTF6UkN4aFFVRkJRU3hEUVVGalZpeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU4yUTFVc1lVRkJRVUVzUTBGQlkxWXNVVUZCUVVFc1EwRkJRVUVzUTBGSFpDeEpRVUZCTEVOQlFVRXNTMEZKWkRWRUxFOUJRVUZCTEVOQlFWVm9RaXhKUVVGQlFTeERRVUZMTWtVc1NVRkJRVUVzUTBGQlN6bEVMRWxCUVVGQkxFTkJRVUZCTEVOQlIzaENMRTlCUVU5SExFOUJRVUZCTEVOQlFVRkJMRU5CU1ZoaUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ0Uml4VFFVRkJRU3hEUVVGWkxGTkJRVlZxUml4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlNXZENMRTlCUVVGQkxFTkJRVlVzUTBGQlJWUXNWVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVWtyUkN4RlFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNXcEZMRkZCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZKYTBVc1MwRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbERMRTlCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZEY2tnc1IwRkJTVE5GTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5TQ3hQUVVGQlFTeERRVUZCUVN4RFFVRlZMRU5CUTNKQ0xFbEJRVWt3UkN4WFFVRkJRU3hEUVVGamRrWXNTVUZCUVVFc1EwRkJTelpGTEdkQ1FVRkJRU3hEUVVGcFFtaEZMRWxCUVVGQkxFTkJRVUZCTEVOQlEzQkRhMFlzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTJZc1NVRkJTeXhKUVVGSmRFVXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrNFJDeFhRVUZCUVN4RFFVRlpOMFFzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTjZReXhKUVVGSlZDeFBRVUZCUVN4RFFVRlZkVVVzVjBGQlFVRXNRMEZCV1RsRUxFTkJRVUZCTEVOQlFVRkJMRU5CUXpGQ0xFZEJRVWxtTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5TQ3hQUVVGQlFTeERRVUZSVkN4VlFVRkJRU3hEUVVGQlFTeERRVU51UWl4SlFVRkxMRWxCUVVsdlJTeEpRVUZCUVN4SlFVRlJNMFFzVDBGQlFVRXNRMEZCVVZRc1ZVRkJRVUVzUTBGRGFrSktMRTlCUVVGQkxFTkJRVkY1UlN4WlFVRkJRU3hEUVVGaFJDeEpRVUZCUVN4RFFVRkJRU3hGUVVGVE0wUXNUMEZCUVVFc1EwRkJVVlFzVlVGQlFVRXNRMEZCVjI5RkxFbEJRVUZCTEVOQlFVRkJMRWRCUTJwRWVFVXNUMEZCUVVFc1EwRkJWU3hKUVVGQkxFTkJRVUVzUTBGTmJFSk9MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTlNDeFBRVUZCUVN4RFFVRlJjMFFzUlVGQlFVRXNRMEZCUVVFc1JVRkJUM1JFTEU5QlFVRkJMRU5CUVZGelJDeEZRVUZCUVN4RlFVRk5ia1VzVDBGQlFVRXNRMEZCVVcxRkxFVkJRVUZCTEVOQlEyaEVia1VzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CU1ZaT0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOU0N4UFFVRkJRU3hEUVVGUmRVUXNTMEZCUVVFc1EwRkJRVUVzUlVGQlFVRXNRMEZCVjNCRkxFOUJRVUZCTEVOQlFWRXlSU3hUUVVGQlFTeERRVUZWUXl4UlFVRkJRU3hEUVVGVEwwUXNUMEZCUVVFc1EwRkJVWFZFTEV0QlFVRkJMRU5CUVVGQkxFVkJTMnBGTVVVc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFJTEU5QlFVRkJMRU5CUVZGM1JDeFBRVUZCUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZoY2tVc1QwRkJRVUVzUTBGQlVUWkZMRlZCUVVGQkxFTkJRVmRvUlN4UFFVRkJRU3hEUVVGUmQwUXNUMEZCUVVFc1EwRkJRVUVzUTBGS00wUnlSU3hQUVVGQlFTeERRVUZWTEVsQlFVRXNRMEZUVms0c1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFJTEU5QlFVRkJMRU5CUVZGWUxGRkJRVUZCTEVOQlFVRkJMRVZCUVdGR0xFOUJRVUZCTEVOQlFWRkZMRkZCUVVGQkxFTkJRVk5ETEZkQlFVRkJMRVZCUVVGQkxFVkJRV2xDVlN4UFFVRkJRU3hEUVVGUldDeFJRVUZCUVN4RFFVTXhSVVlzVDBGQlFVRXNRMEZCVlN4SlFVRkJMRU5CU1ZST0xFbEJRVUZCTEVOQlFVdG5SaXhOUVVGQlFTeERRVUZQTVVVc1QwRkJRVUVzUTBGQlFVRXNSVUZEWWl0RkxGRkJRVUZCTEVOQlFWTndSU3hKUVVGQlFTeERRVUZMV0N4UFFVRkJRU3hEUVVGQlFTeERRVWQwUWl4UFFVRlBLMFVzVVVGQlFVRXNRMEZGV0N4UFFVRlBMMFlzU1VGQlFVRXNRMEZCU3paRkxHZENRVUZCUVN4RFFVRnBRbWhGTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXcERWaXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmNVWXNTMEZCUVVFc1EwRkJVU3hUUVVGVlF5eExRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJTWEpDTEZGQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVGQkxFTkJRM1pFTEVsQlFVbHRRaXhSUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZEWml4SlFVRkxMRWxCUVVsc1JpeEpRVUZCUVN4SlFVRlJiMFlzUzBGQlFVRXNRMEZEWWtZc1VVRkJRVUVzUTBGQlUyeEdMRWxCUVVGQkxFTkJRVUZCTEVOQlFWRmlMRWxCUVVGQkxFTkJRVXN5UlN4SlFVRkJRU3hEUVVGTE9VUXNTVUZCUVVFc1EwRkJUU3RFTEZGQlFVRkJMRU5CUVVGQkxFTkJSM0pETEU5QlFVOXRRaXhSUVVGQlFTeERRVUZCUVN4RFFVbFlOVVlzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZYVkdMRkZCUVVGQkxFTkJRVmNzVTBGQlZVUXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRVUVzUTBGRE0wTXNTVUZCU1VZc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpiRVlzU1VGQlFVRXNTVUZCVVc5R0xFdEJRVUZCTEVOQlEySkdMRkZCUVVGQkxFTkJRVk5zUml4SlFVRkJRU3hEUVVGQlFTeERRVUZSWWl4SlFVRkJRU3hEUVVGTGFVWXNUMEZCUVVFc1EwRkJVWEJGTEVsQlFVRkJMRU5CUVVGQkxFTkJSMnhETEU5QlFVOXJSaXhSUVVGQlFTeERRVUZCUVN4RFFVbFlOVVlzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZYZEdMRmxCUVVGQkxFTkJRV1VzVTBGQlZYcEVMRkZCUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVVGQkxFTkJRMnBFTEVsQlFVbDVSQ3hqUVVGQlFTeERRVUZwUWl4RlFVRkJMRU5CUTNKQ0xFbEJRVXNzU1VGQlNVTXNTMEZCUVVFc1NVRkJVME1zUzBGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlMzWkhMRWxCUVVGQkxFTkJRVXQzUWl4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVXhRalpGTEV0QlFVRkJMRVZCUVZNelJDeFJRVUZCUVN4RlFVRlpNa1FzUzBGQlFVRXNSVUZCVXpGRUxGRkJRVUZCTEVWQlFWa3dSQ3hMUVVGQlFTeERRVUZOZGtNc1ZVRkJRVUVzUTBGQlYzQkNMRkZCUVVGQkxFTkJRVUZCTEVWQlFXRXlSQ3hMUVVGQlFTeERRVUZOZGtNc1ZVRkJRVUVzUTBGQlYyNUNMRkZCUVVGQkxFTkJRVUZCTEVkQlEzcEdlVVFzWTBGQlFVRXNRMEZCWlhwRkxFbEJRVUZCTEVOQlFVc3dSU3hMUVVGQlFTeERRVUZCUVN4RFFVazFRaXhQUVVGUFJDeGpRVUZCUVN4RFFVRkJRU3hEUVVsWWFrY3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlcxRUxGVkJRVUZCTEVOQlFXRXNVMEZCVlhWRExFdEJRVUZCTEVOQlFVRkJMRU5CUlhKRExFOUJSR05CTEV0QlFVRkJMRU5CUVUxNFJDeFBRVUZCUVN4RlFVRkJRU3hEUVVOTU1rUXNVVUZCUVVFc1EwRkJVM2hITEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNUVkNSeXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmEwTXNUMEZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRM2hDTEVsQlFVbEJMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVU5XTkVRc1lVRkJRVUVzUTBGQlowSjZSeXhKUVVGQlFTeERRVUZMTUVjc1ZVRkJRVUVzUTBGRGVrSXNTMEZCZDBJc1NVRkJRU3hGUVVGcVFrUXNZVUZCUVVFc1JVRkRTRFZFTEU5QlFVRkJMRU5CUVZGc1FpeEpRVUZCUVN4RFFVRkxPRVVzWVVGQlFVRXNRMEZCUVVFc1EwRkRZa0VzWVVGQlFVRXNRMEZCWjBKQkxHRkJRVUZCTEVOQlFXTkRMRlZCUVVGQkxFTkJSMnhETEU5QlFVODNSQ3hQUVVGQlFTeERRVUZCUVN4RFFVZFlNVU1zVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZXZEhMR0ZCUVVGQkxFTkJRV2RDTEZWQlFVRXNRMEZET1VJc1NVRkJTVGxFTEU5QlFVRkJMRU5CUVZVM1F5eEpRVUZCUVN4RFFVRkxOa01zVDBGQlFVRXNSVUZCUVVFc1EwRkRaamhFTEdGQlFVRkJMRU5CUVdkQ0xFVkJRVUVzUTBGRGNFSXNTVUZCU3l4SlFVRkpiRVlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHZRaXhQUVVGQlFTeERRVUZSYmtJc1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRE5VSnZRaXhQUVVGQlFTeERRVUZSY0VJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjFBc1VVRkJRVUVzUTBGQlUzTkdMRkZCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZCTEVWQlF6ZENSeXhoUVVGQlFTeERRVUZqYUVZc1NVRkJRVUVzUTBGQlMydENMRTlCUVVGQkxFTkJRVkZ3UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHVReXhQUVVGUGEwWXNZVUZCUVVFc1EwRkJRVUVzUTBGSldIaEhMRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWcFJ5eFhRVUZCUVN4RFFVRmpMRk5CUVZVNVJTeE5RVUZCUVN4RFFVRlRMRU5CUVVWcVFpeEpRVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRM1pFTEVsQlFVbG5SeXhMUVVGQlFTeERRVUZSTjBjc1NVRkJRVUVzUTBGQlN6aEhMRkZCUVVGQkxFTkJRVk5vUml4TlFVRkJRU3hEUVVGQlFTeERRVU4wUW5CQ0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOTmtVc1MwRkJRVUVzUTBGQlFVRXNSVUZCVlc1SExFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUGFVWXNTMEZCUVVFc1EwRkJRVUVzUjBGRGJrTnlSeXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRUWkZMRXRCUVVGQkxFTkJRVTFITEU5QlFVRkJMRU5CUVZGRExFMUJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFOUJRMnhDZGtjc1NVRkJRVUVzUTBGQlMxUXNUMEZCUVVFc1EwRkJVVFJITEV0QlFVRkJMRU5CUVUxSExFOUJRVUZCTEVOQlFWRkRMRTFCUVVGQkxFTkJRVUZCTEVOQlJYUkRTaXhMUVVGQlFTeERRVUZOU3l4TlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVVldiRWdzU1VGQlFVRXNRMEZCUzIxSUxHVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJRVUZCTEVWQlFYZENja1lzVFVGQlFVRXNRMEZCVDJwQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hoRFZpeFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWYlVjc1VVRkJRVUVzUTBGQlZ5eFRRVUZWYUVZc1RVRkJRVUVzUTBGQlV5eERRVUZGYWtJc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTndSQ3hKUVVOSmRVY3NVMEZCUVVFc1EwRkVRVkFzUzBGQlFVRXNRMEZCVVN4SlFVRkJMRU5CWjBKYUxFMUJXbkZDTEZGQlFVRXNSVUZCUVN4UFFVRldMMFVzVFVGQlFVRXNRMEZEVUhOR0xGTkJRVUZCTEVOQlFWbDBSaXhOUVVGQlFTeERRVVZRY0VJc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFvUXl4SlFVRkJRU3hEUVVGTFowZ3NUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVjJ4R0xFMUJRVUZCTEVOQlFVOXFRaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4SFFVTjJRM1ZITEZOQlFVRkJMRU5CUVZsMFJpeE5RVUZCUVN4RFFVRlBha0lzU1VGQlFVRXNRMEZCUVVFc1EwRkhia0pJTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5iMFlzVTBGQlFVRXNRMEZCUVVFc1IwRkRXRkFzUzBGQlFVRXNRMEZCVVc1SExFbEJRVUZCTEVOQlFVdFVMRTlCUVVGQkxFTkJRVkZFTEVsQlFVRkJMRU5CUVV0blNDeFBRVUZCUVN4RFFVRlJTU3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWt2UWxBc1MwRkJRVUVzUTBGQlFVRXNRMEZKV0RGSExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlV3Unl4UlFVRkJRU3hEUVVGWExGTkJRVlYyUml4TlFVRkJRU3hEUVVGVExFTkJRVVZxUWl4SlFVRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlUzQkVMRTlCVUV0SUxFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUEswVXNTMEZCUVVFc1EwRkJUVWNzVDBGQlFVRXNRMEZCVVVNc1RVRkJRVUVzUTBGQlFVRXNSVUZEYWtOdVJpeE5RVUZCUVN4RFFVRlBLMFVzUzBGQlFVRXNRMEZCVFZNc1RVRkJRVUVzUlVGQlFVRXNRMEZKYWtKMFNDeEpRVUZCUVN4RFFVRkxaMGdzVDBGQlFVRXNRMEZCVVd4R0xFMUJRVUZCTEVOQlFVOXFRaXhKUVVGQlFTeERRVUZCUVN4RFFVRlJhVUlzVFVGQlFVRXNRMEZCVHl0RkxFdEJRVUZCTEVOQlFVMUhMRTlCUVVGQkxFTkJRVkZETEUxQlFVRkJMRU5CUTJwRWFrZ3NTVUZCUVVFc1EwRkJTMjFFTEUxQlFVRkJMRU5CUVU5eVFpeE5RVUZCUVN4RFFVRlBha0lzU1VGQlFVRXNRMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRM0JDWWl4SlFVRkJRU3hEUVVGQlFTeERRVWxZUnl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZORWNzVVVGQlFVRXNRMEZCVnl4VFFVRlZla1lzVFVGQlFVRXNRMEZCVXl4RFFVRkZha0lzU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVsUExGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkpiMGNzVFVGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVsb1J5eFJRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJTVmNzU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVselJpeEpRVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkJTWEpHTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlVDeFBRVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRekZKTEVsQlFVbG5SaXhMUVVGQlFTeERRVUZSTjBjc1NVRkJRVUVzUTBGQlN6aEhMRkZCUVVGQkxFTkJRVk5vUml4TlFVRkJRU3hEUVVGQlFTeERRVzlETVVJc1IwRldRU3RGTEV0QlFVRkJMRU5CUVUxaExHRkJRVUZCTEVOQlFXTTFSaXhOUVVGQlFTeERRVUZQVml4VlFVRkJRU3hEUVVGQlFTeERRVU4yUWxZc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVU5T0xGRkJRVUZCTEVOQlFVRkJMRVZCUTJ4Q2NVWXNTMEZCUVVFc1EwRkJUWFpGTEZkQlFVRkJMRU5CUVZsU0xFMUJRVUZCTEVOQlFVOU9MRkZCUVVGQkxFTkJRVUZCTEVOQlJYcENaQ3hKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUekJHTEUxQlFVRkJMRU5CUVVGQkxFVkJRMnhDV0N4TFFVRkJRU3hEUVVGTlZ5eE5RVUZCUVN4RFFVRlBNVVlzVFVGQlFVRXNRMEZCVHpCR0xFMUJRVUZCTEVOQlFVRkJMRU5CUlhCQ09VY3NTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxR0xFMUJRVUZCTEVOQlFVOUxMRWxCUVVGQkxFTkJRVUZCTEVkQlFVOHdSU3hMUVVGQlFTeERRVUZOWXl4WFFVRkJRU3hEUVVGak4wWXNUVUZCUVVFc1EwRkJUMHNzU1VGQlFVRXNRMEZCUVVFc1EwRkRjRVI2UWl4SlFVRkJRU3hEUVVGTGMwSXNTMEZCUVVFc1EwRkJUVVlzVFVGQlFVRXNRMEZCVHpKR0xFbEJRVUZCTEVOQlFVRkJMRWRCUVU5YUxFdEJRVUZCTEVOQlFVMHpSU3hUUVVGQlFTeERRVUZaU2l4TlFVRkJRU3hEUVVGUE1rWXNTVUZCUVVFc1EwRkJRVUVzUTBGRGJFUXZSeXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUMDBzUzBGQlFVRXNRMEZCUVVFc1IwRkJVWGxGTEV0QlFVRkJMRU5CUVUxNlJTeExRVUZCUVN4RFFVRlJUaXhOUVVGQlFTeERRVUZQVFN4TFFVRkJRU3hEUVVGQlFTeERRVU12UXpGQ0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOUml4TlFVRkJRU3hEUVVGUFJDeFBRVUZCUVN4RFFVRkJRU3hEUVVOc1FpeEpRVUZMTEVsQlFVbEtMRU5CUVVGQkxFbEJRVXRMTEUxQlFVRkJMRU5CUVU5RUxFOUJRVUZCTEVOQlEycENaMFlzUzBGQlFVRXNRMEZCVFhaRkxGZEJRVUZCTEVOQlFWa3NRMEZCUlhSQ0xFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZiMElzUzBGQlFVRXNRMEZCVDFnc1EwRkJRVUVzUTBGQlIxVXNTVUZCUVVFc1EwRkJUVllzUTBGQlFVRXNRMEZCUjIxSExGVkJRVUZCTEVOQlFWa3NVVUZCUVN4RFFVRkJMRU5CUVVFc1EwRk5PVVVzVDBGR1FUVklMRWxCUVVGQkxFTkJRVXR0UkN4TlFVRkJRU3hEUVVGUGNrSXNUVUZCUVVFc1EwRkJUMnBDTEVsQlFVRkJMRU5CUVVGQkxFTkJRVTFuU0N4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlZhRWNzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlZ5dEZMRXRCUVVGQkxFTkJRVTFyUWl4VFFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUVN4RFFVVTFSR3hDTEV0QlFVRkJMRU5CUVVGQkxFTkJTVmd4Unl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjVWdzVjBGQlFVRXNRMEZCWTBNc1owSkJRVUZCTEVOQlF6VkNMRTlCUVVFc1RVRkJZV3BKTEVsQlFVRkJMRU5CUVV0elNDeE5RVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVWwwUW01SUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlV5Unl4TlFVRkJRU3hEUVVGVExGVkJRVUVzUTBGRGRrSXNTVUZCU1Zrc1IwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTME1zUjBGQlFVRXNSVUZCUVVFc1EwRkJUVGRHTEZGQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRVTA0Uml4SlFVRkJRU3hEUVVGTFF5eE5RVUZCUVN4RlFVRkJRU3hEUVVGVEwwWXNVVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUTBGQlNXZEhMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlQzSkZMRTlCVGtzM1NDeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFdoRExFbEJRVUZCTEVOQlFVdG5TQ3hQUVVGQlFTeERRVUZSUXl4TlFVRkJRU3hEUVVGQlFTeERRVWQ2UW1sQ0xFZEJRVUZCTEVOQlFVMXNTU3hKUVVGQlFTeERRVUZMWjBnc1QwRkJRVUVzUTBGQlVVTXNUVUZCUVVFc1EwRkdia0pxU0N4SlFVRkJRU3hEUVVGTFowZ3NUMEZCUVVFc1EwRkJVVU1zVFVGQlFVRXNRMEZCVTJsQ0xFZEJRVUZCTEVOQlNURkNlRWdzU1VGQlFVRXNRMEZCUzFRc1QwRkJRVUVzUTBGQlVXbEpMRWRCUVVGQkxFTkJRVUZCTEVOQlFVOXNTU3hKUVVGQlFTeERRVU5pYTBrc1IwRkJRVUVzUTBGQlFVRXNRMEZKV0M5SUxFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlUyU0N4UlFVRkJRU3hEUVVGWExGTkJRVlY0U0N4UFFVRkJRU3hEUVVGQlFTeERRVU51UXl4SlFVRkplVWdzWVVGQlFVRXNRMEZCWjBKNlNTeEpRVUZCUVN4RFFVRkxLMGdzVTBGQlFVRXNRMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRVUVzUTBGRGJrTXZTQ3hKUVVGQlFTeERRVUZMYTBNc1UwRkJRVUVzUTBGQldTeEZRVUZCTEVOQlEycENiRU1zU1VGQlFVRXNRMEZCU3pCSkxFMUJRVUZCTEVOQlFVOUVMR0ZCUVVGQkxFTkJRVUZCTEVOQlExcEJMR0ZCUVVGQkxFTkJRV05zU0N4SFFVRkJRU3hEUVVGSkxFTkJRVVZ2U0N4VFFVRkJRU3hEUVVGWExIbENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXZRak5KTEVsQlFVRkJMRU5CUVV0MVFpeEhRVUZCUVN4RFFVRkpMRU5CUVVWdlNDeFRRVUZCUVN4RFFVRlhMR2xEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVYwUWl4SlFVRkpReXhoUVVGQlFTeERRVUZuUWpWSkxFbEJRVUZCTEVOQlFVdHpReXhYUVVGQlFTeERRVUZaTEVOQlEycERkRUlzVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5SkxGVkJRVUZCTEVOQlFWa3NRMEZCUldkRkxFdEJRVUZCTEVOQlFVOHNWMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVZWNlF5eFBRVkpCZDBRc1lVRkJRVUVzUTBGQlkwWXNUVUZCUVVFc1EwRkJUekZJTEU5QlFVRkJMRU5CUVVGQkxFTkJSWEpDYUVJc1NVRkJRVUVzUTBGQlN6WkpMR05CUVVGQkxFVkJRV2xDTEVsQlFVRXNRMEZEYkVKRUxHRkJRVUZCTEVOQlFXTXhRaXhOUVVGQlFTeEZRVUZCUVN4RFFVTmtkVUlzWVVGQlFVRXNRMEZCWTJ4SUxFZEJRVUZCTEVOQlFVa3NRMEZCUlc5SUxGTkJRVUZCTEVOQlFWY3NUMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRMMEl6U1N4SlFVRkJRU3hEUVVGTGEwTXNVMEZCUVVFc1EwRkJXWFZITEdGQlFVRkJMRU5CUVdOMlJ5eFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWMxUW14RExFbEJRVUZCTEVOQlFVRkJMRU5CU1ZoSExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ0U1N4WFFVRkJRU3hEUVVGakxGVkJRVUVzUTBGRk5VSXNUMEZFU1RsSkxFbEJRVUZCTEVOQlFVc3JTU3hQUVVGQlFTeEZRVUZUTDBrc1NVRkJRVUVzUTBGQlMyZEtMRkZCUVVGQkxFTkJRVk5ETEZWQlFVRkJMRVZCUVVGQkxFTkJRM3BDYWtvc1NVRkJRVUVzUTBGQlFVRXNRMEZKV0Vjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWWFZKTEdsQ1FVRkJRU3hEUVVGdlFpeFRRVUZWUXl4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlNXNUhMRkZCUVVGQkxFVkJRVmNzU1VGQlFTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTjJSV2hFTEVsQlFVRkJMRU5CUVV0cFJDeG5Ra0ZCUVVFc1EwRkJhVUlzYlVKQlFVRXNRMEZCY1VKRExFdEJRVUZCTEVWQlFVRkJMRU5CUTI1RFFTeExRVUZCUVN4RFFVRk5hMGNzVFVGQlFVRXNRMEZCVDBNc1lVRkJRVUVzUlVGQmFVSkdMRk5CUVVGQkxFVkJRemxDYmtjc1VVRkJRVUVzUTBGQlUwVXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrSXZReXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVk1ra3NUMEZCUVVFc1EwRkJWU3hUUVVGVlF5eE5RVUZCUVN4RFFVRlRMRU5CUVVWdVNTeFZRVUZCUVN4RFFVRkJRU3hEUVVGWkxFTkJRVUVzUTBGQlRXOUpMRk5CUVVGQkxFTkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRk5ReXhQUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJhVUo2Uml4UFFXaENRWHBLTEVsQlFVRkJMRU5CUVV0blNpeFJRVUZCUVN4RFFVRlhMRWxCUVVsVkxHZENRVUZCUVN4RFFVRnBRaXhEUVVGRFF5eFpRVUZCUVN4RFFVRmpXQ3hSUVVGQlFTeEhRVUZCUVN4RFFVTTFRMWNzV1VGQlFVRXNRMEZCWVdwSkxFMUJRVUZCTEVWQlFWRXhRaXhKUVVGQlFTeERRVUZMTkVvc1lVRkJRVUVzUTBGQll5eEpRVUZKUXl4WFFVRkJRU3hEUVVGWkxGTkJRVUVzUTBGQlFTeERRVUZCTEVOQlF6VkVMRWxCUVVzc1NVRkJTVU1zVVVGQlFVRXNTVUZCV1Vnc1dVRkJRVUVzUTBGRFNTeFhRVUZCTEVWQlFXcENSeXhSUVVGQlFTeERRVUZUUXl4SlFVRkJRU3hEUVVOVUwwb3NTVUZCUVVFc1EwRkJTelJLTEdGQlFVRkJMRU5CUVdNc1NVRkJTVU1zVjBGQlFVRXNRMEZCV1N4clFrRkJRU3hEUVVGdlFpeERRVUZGVkN4TlFVRkJRU3hEUVVGUlZTeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVXpReXhaUVVGQkxFVkJRV3BDUVN4UlFVRkJRU3hEUVVGVFF5eEpRVUZCUVN4RFFVTmtMMG9zU1VGQlFVRXNRMEZCU3pSS0xHRkJRVUZCTEVOQlFXTXNTVUZCU1VNc1YwRkJRVUVzUTBGQldTeHRRa0ZCUVN4RFFVRnhRaXhEUVVGRlZDeE5RVUZCUVN4RFFVRlJWU3hSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVUxUXl4bFFVRkJMRVZCUVdwQ1FTeFJRVUZCUVN4RFFVRlRReXhKUVVGQlFTeEZRVU5rTDBvc1NVRkJRVUVzUTBGQlN6UktMR0ZCUVVGQkxFTkJRV01zU1VGQlNVTXNWMEZCUVVFc1EwRkJXU3h6UWtGQlFTeERRVUYzUWl4RFFVRkZWQ3hOUVVGQlFTeERRVUZSVlN4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVdHFSamxLTEVsQlFVRkJMRU5CUVV0blNpeFJRVUZCUVN4RFFVRlRSQ3hQUVVGQlFTeERRVUZSTDBrc1NVRkJRVUVzUTBGQlRYVktMRTFCUVVGQkxFTkJRVUZCTEVOQlEzSkNka29zU1VGQlFVRXNRMEZCUVVFc1EwRkhXRWNzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQmQwSXNXVUZCUVN4RFFVRkpMRk5CUVZWeFF5eFJRVUZCUVN4RlFVRlhMRWxCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGNrUm9SQ3hKUVVGQlFTeERRVUZMYzBvc1QwRkJRVUVzUlVGQlFVRXNRMEZEVEhSS0xFbEJRVUZCTEVOQlFVdHBSQ3huUWtGQlFVRXNRMEZCYVVJc1UwRkJRU3hEUVVGWFF5eExRVUZCUVN4RlFVRkJRU3hEUVVNM1FrWXNVVUZCUVVFc1EwRkJVMFVzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxha0l2UXl4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjVW9zVTBGQlFVRXNRMEZCV1N4VFFVRlZReXhSUVVGQlFTeEZRVUZYTEVsQlFVRXNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkRia05xU3l4SlFVRkJRU3hEUVVGTGVVWXNXVUZCUVVFc1EwRkJZU3hQUVVGQkxFTkJRVUVzUTBGQk9VSXNTVUZEU1hsRkxGRkJRVUZCTEVOQlFWbG9TQ3hMUVVGQlFTeEZRVUZCUVN4RFFVVmFMRWRCUVRaQ0xFOUJRVUVzUlVGQmVrSkJMRXRCUVVGQkxFTkJRVTFYTEUxQlFVRkJMRU5CUVU4elF5eFJRVUZCUVN4RFFVTmlMRWRCUVhsQ0xFMUJRVUVzUlVGQmNrSm5ReXhMUVVGQlFTeERRVUZOVnl4TlFVRkJRU3hEUVVGUGEwY3NTVUZCUVVFc1EwRkRWQzlLTEVsQlFVRkJMRU5CUVV0dFN5eE5RVUZCUVN4RFFVRlBia3NzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVRkJMRVZCUVZGd1F5eEpRVUZCUVN4RFFVRkxkME1zV1VGQlFVRXNRMEZCWVN4UFFVRkJMRU5CUVZONFF5eEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGRk5VUXNSMEZCZVVJc1RVRkJRU3hGUVVGeVFtTXNTMEZCUVVFc1EwRkJUVmNzVFVGQlFVRXNRMEZCVDJ0SExFbEJRVUZCTEVOQlEyUXZTaXhKUVVGQlFTeERRVUZMYjBzc1YwRkJRVUVzUTBGQldYQkxMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGQlFTeEZRVUZSY0VNc1NVRkJRVUVzUTBGQlMzZERMRmxCUVVGQkxFTkJRV0VzVDBGQlFTeERRVUZUZUVNc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCUldwRkxFZEJRWGxDTEUxQlFVRXNSVUZCY2tKakxFdEJRVUZCTEVOQlFVMVhMRTFCUVVGQkxFTkJRVTlyUnl4SlFVRkJRU3hEUVVGblFpeERRVU51UWpkSExFdEJRVUZCTEVOQlFVMVhMRTFCUVVGQkxFTkJRVTk2UWl4TFFVRkJRU3hEUVVFMVFpeEpRVU5KYVVrc1NVRkJRVUVzUTBGQlQyNUlMRXRCUVVGQkxFTkJRVTFYTEUxQlFVRkJMRU5CUVU5NVJ5eExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVOSkxFTkJRVUVzUlVGQk9VSkVMRWxCUVVGQkxFTkJRVXRPTEVsQlFVRkJMRU5CUVV0UkxFOUJRVUZCTEVOQlFWRXNUMEZCUVN4RFFVRkJMRVZCUTJ4Q04wb3NTVUZCUVVFc1EwRkJTemhLTEZkQlFVRkJMRU5CUVZsSUxFbEJRVUZCTEVOQlFVMUtMRkZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRXRCU1ROQ2Frc3NTVUZCUVVFc1EwRkJTM2RETEZsQlFVRkJMRU5CUVdFc1QwRkJRU3hEUVVGVGVFTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlIyNURMRWRCUVRaQ0xGRkJRVUVzUlVGQmVrSmpMRXRCUVVGQkxFTkJRVTFYTEUxQlFVRkJMRU5CUVU4elF5eFJRVUZCUVN4RFFVTnNRaXhKUVVGTExFbEJRVWxQTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkplVUlzUzBGQlFVRXNRMEZCVFZjc1RVRkJRVUVzUTBGQlQyaERMRTlCUVVGQkxFTkJRVkZJTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTNwRFFTeERRVUZCUVN4RlFVRkxlVUlzUzBGQlFVRXNRMEZCVFZjc1RVRkJRVUVzUTBGQlR6UkhMR0ZCUVVGQkxFTkJRMnhDZGtnc1MwRkJRVUVzUTBGQlRWY3NUVUZCUVVFc1EwRkJUMmhETEU5QlFVRkJMRU5CUVZGS0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkbExGbEJRVUZCTEVOQlFXRXNWVUZCUVN4RFFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGQkxFTkJSV3BFVlN4TFFVRkJRU3hEUVVGTlZ5eE5RVUZCUVN4RFFVRlBhRU1zVDBGQlFVRXNRMEZCVVVvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpCR0xHVkJRVUZCTEVOQlFXZENMRlZCUVVFc1EwRkJRU3hEUVVGQkxFbEJTV3hDTEdOQlFVRXNSVUZCZWtKcVJTeExRVUZCUVN4RFFVRk5WeXhOUVVGQlFTeERRVUZQTTBNc1VVRkJRVUVzUTBGRGJFSnNRaXhKUVVGQlFTeERRVUZMZDBNc1dVRkJRVUVzUTBGQllTeFBRVUZCTEVOQlFWTjRReXhKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlFVRXNRMEZGUml4blFrRkJRU3hGUVVGNlFtTXNTMEZCUVVFc1EwRkJUVmNzVFVGQlFVRXNRMEZCVHpORExGRkJRVUZCTEVOQlEyeENiRUlzU1VGQlFVRXNRMEZCUzNkRExGbEJRVUZCTEVOQlFXRXNUMEZCUVN4RFFVRlRlRU1zU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVRkJMRU5CUjJoRGNFTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVZGd1F5eEpRVUZCUVN4RFFVRkxNa2dzVjBGQlFVRXNRMEZIYkVKcVNDeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFdsSkxGRkJRVUZCTEVOQlFVRkJMRVZCUVd0RExFMUJRVUVzUlVGQmNrSXZSeXhMUVVGQlFTeERRVUZOVnl4TlFVRkJRU3hEUVVGUGEwY3NTVUZCUVVFc1JVRkRja05GTEZGQlFVRkJMRU5CUVZOcVN5eEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCVDJNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxOMEpzUkN4SlFVRkJRU3hEUVVGTGFVUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVlVNc1MwRkJRVUVzUlVGQlFVRXNRMEZETlVKblNDeFJRVUZCUVN4RFFVRlRhRWdzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKWW14RUxFbEJRVUZCTEVOQlFVdHBSQ3huUWtGQlFVRXNRMEZCYVVJc1VVRkJRU3hEUVVGWFF5eExRVUZCUVN4RlFVRkJRU3hEUVVNM1FtZElMRkZCUVVGQkxFTkJRVk5vU0N4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXRxUWk5RExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlUyUnl4TlFVRkJRU3hEUVVGVExGTkJRVlV4Uml4TlFVRkJRU3hEUVVGVExFTkJRVVZrTEU5QlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGSlNTeFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJRU3hEUVVGTmMwb3NUVUZCUVVFc1EwRkJRVUVzUTBGRGRrVm9TeXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRUQkpMRTFCUVVGQkxFTkJRVUZCTEVOQlFWTXhTeXhKUVVGQlFTeERRVUZMTWtzc1kwRkJRVUVzUTBGQlpVUXNUVUZCUVVFc1EwRkJRVUVzUTBGRGRrTXhTeXhKUVVGQlFTeERRVUZMTWtzc1kwRkJRVUVzUlVGQlFVRXNRMEZEVmpOTExFbEJRVUZCTEVOQlFVdHpReXhYUVVGQlFTeERRVUZaVWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbHlRak5DTEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVnBTeXh0UWtGQlFVRXNRMEZCYzBJc1ZVRkJRU3hEUVVOd1F5eEpRVU5KUXl4UlFVRkJRU3hEUVV0QlF5eFpRVUZCUVN4RFFVNUJReXhYUVVGQlFTeERRVUZqZWtVc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTek5ETEZGQlFVRkJMRU5CUVZOdFNDeFhRVUZCUVN4RFFVRkJRU3hEUVVWc1F6VkdMRVZCUVVGQkxFTkJRVXR1Uml4SlFVRkJRU3hEUVVGTGJVWXNSVUZCUVVFc1EwRkRWbXBGTEZGQlFVRkJMRU5CUVZkc1FpeEpRVUZCUVN4RFFVRkxhMElzVVVGQlFVRXNRMEZEYUVKNVJTeFRRVUZCUVN4RFFVRlpWeXhMUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGTGRrY3NTVUZCUVVFc1EwRkJTekpHTEZOQlFVRkJMRU5CUVVGQkxFTkJRelZDY1VZc1ZVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlIycENMRWxCUVVzc1NVRkJTWFpLTEVOQlFVRkJMRWxCUVV0clJTeFRRVUZCUVN4RFFVRlhRU3hUUVVGQlFTeERRVUZWYkVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVTJ0RkxGTkJRVUZCTEVOQlFWVnNSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVYwUkN4SlFVRlRRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYTktMRmRCUVVGQkxFTkJRVmx5U2l4TlFVRkJRU3hEUVVGUlJDeERRVUZCUVN4RlFVRkJRU3hEUVVGTExFTkJRM3BEYjBvc1VVRkJRVUVzUTBGQlYwVXNWMEZCUVVFc1EwRkJXWFJLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWR2U2l4UlFVRkJRU3hEUVVNeFFpeEpRVUZMTEVsQlFVbEpMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlNpeFJRVUZCUVN4RFFVRlRia29zVFVGQlFVRXNRMEZCVVhWS0xFTkJRVUZCTEVWQlFVRkJMRU5CUldwRExFZEJRVUVzUTBGRVFVZ3NXVUZCUVVFc1EwRkJaVVFzVVVGQlFVRXNRMEZCVTBrc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBnc1dVRkJRVUVzUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGRFNETkdMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUVZFeVJpeFpRVUZCUVN4RlFVRm5RalZLTEZGQlFVRkJMRVZCUVVGQkxFTkJRV2RFTEVOQlFVRXNSVUZCY0VONVJTeFRRVUZCUVN4RFFVRlZORVVzVDBGQlFVRXNRMEZCVVU4c1dVRkJRVUVzUTBGQlFVRXNRMEZCY1VJc1EwRkRMMFpGTEZWQlFVRkJMRU5CUVZkR0xGbEJRVUZCTEVOQlFVRkJMRU5CUVdkQ0xFVkJRVUVzUTBGRE0wSXNTVUZCU1hoS0xFdEJRVUZCTEVOQlFWRjFTaXhSUVVGQlFTeERRVUZUU1N4RFFVRkJRU3hEUVVGQlFTeERRVUZITTBvc1MwRkJRVUVzUTBGRGVFSXNTVUZCU3l4SlFVRkpORW9zUTBGQlFVRXNTVUZCU3pWS0xFdEJRVUZCTEVOQlEwOHNSVUZCUVN4SFFVRmlRU3hMUVVGQlFTeERRVUZOTkVvc1EwRkJRVUVzUTBGQlFVRXNSMEZEVGtZc1ZVRkJRVUVzUTBGQlYwWXNXVUZCUVVFc1EwRkJRVUVzUTBGQlkwa3NRMEZCUVVFc1EwRkJRVUVzUTBGQlN6VktMRXRCUVVGQkxFTkJRVTAwU2l4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVZONFJDeFBRVVJCUml4VlFVRkJRU3hEUVVGclFpeExRVUZCTEVOQlFVbG9UQ3hKUVVGQlFTeERRVUZMZFVJc1IwRkJRVUVzUlVGQlFVRXNRMEZEY0VKNVNpeFZRVUZCUVN4RFFVRkJRU3hEUVVsWU4wc3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlhkTExHZENRVUZCUVN4RFFVRnRRaXhUUVVGVlF5eFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVOMFJDeEpRVUZKUXl4aFFVRkJRU3hEUVVGblFuSk1MRWxCUVVGQkxFTkJRVXMwU3l4dFFrRkJRVUVzUlVGQlFVRXNRMEZEY2tKSkxGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVTnFRaXhKUVVGTExFbEJRVWx1U3l4SlFVRkJRU3hKUVVGUmQwc3NZVUZCUVVFc1EwRkJaU3hEUVVNMVFrd3NWVUZCUVVFc1EwRkJWMjVMTEVsQlFVRkJMRU5CUVVGQkxFTkJRVkVzUlVGQlFTeERRVU51UWl4SlFVRkxMRWxCUVVsclJTeERRVUZCUVN4SlFVRkxjMGNzWVVGQlFVRXNRMEZCWTNoTExFbEJRVUZCTEVOQlFVRkJMRU5CUTNCQ2RVc3NVVUZCUVVFc1JVRkJXWEpITEVOQlFVRkJMRWRCUVVkcFJ5eFZRVUZCUVN4RFFVRlhia3NzU1VGQlFVRXNRMEZCUVVFc1EwRkJUV3RGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXR6Unl4aFFVRkJRU3hEUVVGamVFc3NTVUZCUVVFc1EwRkJRVUVzUTBGQlRXdEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hKRkxFOUJRVTlwUnl4VlFVRkJRU3hEUVVGQlFTeERRVWxZTjBzc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWVEpMTEdOQlFVRkJMRU5CUVdsQ0xGTkJRVlZHTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRM0JFTEVsQlFVbEtMRlZCUVVGQkxFTkJRV0ZvVEN4SlFVRkJRU3hEUVVGTGJVd3NaMEpCUVVGQkxFTkJRV2xDUXl4UlFVRkJRU3hEUVVGQlFTeERRVU4yUXl4SlFVRkxMRWxCUVVrelNpeERRVUZCUVN4SlFVRkxkVW9zVlVGQlFVRXNRMEZEVml4SFFVRkpkRXNzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMW5TaXhWUVVGQlFTeERRVUZYZGtvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJkMElzUlVGQlFTeEZRVUZxUW5WS0xGVkJRVUZCTEVOQlFWZDJTaXhEUVVGQlFTeERRVUZCUVN4RFFVTjRReXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVWRtTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRkpXSFJDTEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVTBTeXhuUWtGQlFVRXNRMEZCYlVJc1UwRkJWVWdzVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkZkRVFzU1VGQlNVb3NWVUZCUVVFc1EwRkJZV2hNTEVsQlFVRkJMRU5CUVV0dFRDeG5Ra0ZCUVVFc1EwRkJhVUpETEZGQlFVRkJMRU5CUVVGQkxFTkJRMjVEYWtjc1JVRkJRVUVzUTBGQlMyNUdMRWxCUVVGQkxFTkJRVXR0Uml4RlFVRkJRU3hEUVVOV1VTeFRRVUZCUVN4RFFVRlpWeXhMUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGTGRrY3NTVUZCUVVFc1EwRkJTekpHTEZOQlFVRkJMRU5CUVVGQkxFTkJSV2hETEVkQlFVbHFSaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRXZEtMRlZCUVVGQkxFTkJRV3RDTEV0QlFVRXNRMEZCUVN4RlFVRTJRaXhGUVVGQkxFVkJRWFpDUVN4VlFVRkJRU3hEUVVGclFpeExRVUZCTEVOQlFWTXNUMEZCVDBFc1ZVRkJRVUVzUTBGQmEwSXNTMEZCUVN4RFFVTXpSaXhIUVVGSmRFc3NTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxdFJDeEZRVUZCUVN4RFFVRkJRU3hGUVVGUGVrVXNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUxblNpeFZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRmxOMFlzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJhME1zUlVGQlFTeEZRVUY0UWpaR0xGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXVTNSaXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZoTEU5QlFVODJSaXhWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZsTjBZc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRE5VY3NTVUZCU3l4SlFVRkpNVVFzUTBGQlFVRXNTVUZCUzJ0RkxGTkJRVUZCTEVOQlExWXNSMEZCU1dwR0xFbEJRVUZCTEVOQlFVdHpRaXhMUVVGQlFTeERRVUZOWjBvc1ZVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlpYWktMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFXZERMRVZCUVVFc1JVRkJka0oxU2l4VlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGbGRrb3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJXU3hQUVVGUGRVb3NWVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJaWFpLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpWR0xFOUJRVWxtTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5aMG9zVlVGQlFVRXNRMEZCVjJoTUxFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVFeVF5eEZRVUZCTEVWQlFUZENPRW9zVlVGQlFVRXNRMEZCVjJoTUxFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZCUVN4RFFVRjNRamhLTEZWQlFVRkJMRU5CUVZkb1RDeEpRVUZCUVN4RFFVRkxhMElzVVVGQlFVRXNRMEZCUVVFc1EwRkRPVVlzUlVGQlFTeERRVUZCTEVOQlNWaG1MRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWWkxFZEJRVUZCTEVOQlFVMHNVMEZCVldsTExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CVVhaRExFOUJUa2s1U3l4SlFVRkJRU3hEUVVGTGMwSXNTMEZCUVVFc1EwRkJUWGRLTEUxQlFVRkJMRU5CUVVGQkxFVkJRMWhzU0N4TlFVRkJRU3hEUVVGUFF5eEpRVUZCUVN4RFFVRkxhVWdzVFVGQlFVRXNRMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCUzNaRUxFZEJRVUZCTEVWQlFVRkJMRU5CUTNKQ2JFa3NTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUwMFJ5eEhRVUZCUVN4RFFVRkJRU3hEUVVGUGMwUXNUVUZCUVVFc1EwRkJUM1JFTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1RGQ2VFZ3NTVUZCUVVFc1EwRkJTMmRNTEZWQlFVRkJMRU5CUVZjeFRDeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWt6UWtjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWU3RFTEZOQlFVRkJMRU5CUVZrc1UwRkJWVGhITEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJSVGRETEVkQlFVbHNSaXhMUVVGQlFTeERRVUZOY1VZc1QwRkJRVUVzUTBGQlVVZ3NUVUZCUVVFc1EwRkJRVUVzUTBGRFpDeEpRVUZMTEVsQlFVa3ZTaXhEUVVGQlFTeEpRVUZMSzBvc1RVRkJRVUVzUTBGRFZuaE1MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTmMwc3NZMEZCUVVFc1EwRkJaVzVMTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlNUbENla0lzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMXpTeXhqUVVGQlFTeERRVUZsU2l4TlFVRkJRU3hEUVVGQlFTeERRVVU1UWl4UFFVRlBlRXdzU1VGQlFVRXNRMEZCUzNWQ0xFZEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJTV2hDY0VJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV3RNTEZkQlFVRkJMRU5CUVdNc1UwRkJWWGhHTEV0QlFVRkJMRU5CUVVGQkxFTkJSWFJETEVsQlFVbDRSaXhKUVVGQlFTeERRVUZOYVV3c1VVRkJRVUVzUTBGQlZUTkhMRVZCUVVGQkxFTkJRVWswUnl4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZEYUVORExFOUJRVUZCTEVOQlFWRkRMRWRCUVVGQkxFTkJRVWsxUml4TFFVRkJRU3hEUVVGQlFTeERRVVZhY2tjc1NVRkJRVUVzUTBGQlMzZENMRkZCUVVGQkxFTkJRVk56UkN4UFFVRkJRU3hEUVVGUmIwZ3NTVUZCUVVFc1JVRkJRVUVzUTBGRGJFSnlUQ3hKUVVGQlFTeERRVUZQY1V3c1NVRkJRVUVzUTBGQlMyaE1MRkZCUVVGQkxFTkJRMW8wU3l4UlFVRkJRU3hEUVVGWFNTeEpRVUZCUVN4RFFVRkxka2NzVTBGQlFVRXNRMEZEYUVKU0xFVkJRVUZCTEVOQlFVc3JSeXhKUVVGQlFTeERRVUZMTDBjc1JVRkJRVUVzUTBGRFRuUkZMRWxCUVVGQkxFVkJRVkYzUml4TFFVRkJRU3hEUVVGTmJrWXNVVUZCUVVFc1JVRkJXV2xGTEVWQlFVRkJMRVZCUVUxclFpeExRVUZCUVN4RFFVRk5iRUlzUlVGQlFVRXNSVUZCVFRKSExGRkJRVUZCTEVOQlFWTjJTaXhSUVVGQlFTeEZRVUZCUVN4RlFVRmpPRVFzUzBGQlFVRXNRMEZCVFZZc1UwRkJRVUVzUTBGQlZYQkVMRkZCUVVGQkxFVkJRVUZCTEVkQlEyNUdNa29zU1VGQlFVRXNRMEZCUzJoR0xFMUJRVUZCTEVWQlFVRkJMRU5CUTB3MlJTeExRVUZCUVN4RFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZIV0VFc1MwRkJRVUVzUlVGQlR5OU1MRWxCUVVGQkxFTkJRVXN3U1N4TlFVRkJRU3hEUVVGUGNrTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKTlVKc1J5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWZDB3c1dVRkJRVUVzUTBGQlpTeFRRVUZWZWtJc1RVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZEYUVSQkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVTl1U0N4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVU4wUWl4SlFVRkxMRWxCUVVrd1NDeERRVUZCUVN4SlFVRkxVQ3hOUVVGQlFTeERRVU5XUVN4TlFVRkJRU3hEUVVGUFR5eERRVUZCUVN4RFFVRkJRU3hEUVVGTFVDeE5RVUZCUVN4RFFVRlBUeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhlRWdzU1VGQlFVRXNSVUZCUVVFc1EwRkZNVUlzU1VGQlN5eEpRVUZKYUVNc1EwRkJRVUVzU1VGQlMzcENMRWxCUVVGQkxFTkJRVXN5Uml4VFFVRkJRU3hEUVVOWWFrWXNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRU5CUVUwd1NTeE5RVUZCUVN4RFFVRkJRU3hGUVVGWFFTeE5RVUZCUVN4RFFVRlBiRVVzVVVGQlFVRXNRMEZCVXk5RkxFTkJRVUZCTEVOQlFVRkJMRVZCUXpGRGVrSXNTVUZCUVVFc1EwRkJTekpHTEZOQlFVRkJMRU5CUVZWMVFpeE5RVUZCUVN4RFFVRlBla1lzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTE9VSjBRaXhQUVVGQlFTeERRVUZSVVN4VFFVRkJRU3hEUVVGVmVVd3NZVUZCUVVFc1EwRkJaMElzVTBGQlZTOUhMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZCTEVOQlEyeEVRU3hQUVVGQlFTeERRVUZWUVN4UFFVRkJRU3hEUVVGUk9VSXNTMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGRGVFSXNTVUZCU3l4SlFVRkpPVUlzUTBGQlFVRXNTVUZCU3pSRUxFOUJRVUZCTEVOQlJVUXNSVUZCUVN4SFFVUlVOVVFzUTBGQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlJXZERMRWxCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRVZCUlVaNlJDeEpRVUZCUVN4RFFVRkxNa1lzVTBGQlFVRXNRMEZCVlhWQ0xFMUJRVUZCTEVOQlFVOTZSaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUxc1EzUkNMRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZVd1RDeFZRVUZCUVN4RFFVRmhMRk5CUVZWb1NDeFBRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJRU3hEUVVNdlEwRXNUMEZCUVVFc1EwRkJWVUVzVDBGQlFVRXNRMEZCVVRsQ0xFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUTNoQ0xFbEJRVXNzU1VGQlNUbENMRU5CUVVGQkxFbEJRVXMwUkN4UFFVRkJRU3hEUVVWRUxFVkJRVUVzUjBGRVZEVkVMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVWblF5eEpRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeEZRVVZHZWtRc1NVRkJRVUVzUTBGQlN6SkdMRk5CUVVGQkxFTkJRVlV5Unl4SFFVRkJRU3hEUVVGSk4wc3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZOTDBKMFFpeFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWTkV3c1lVRkJRVUVzUTBGQlowSXNVMEZCVld4SUxFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkJMRU5CUTJ4RVFTeFBRVUZCUVN4RFFVRlZRU3hQUVVGQlFTeERRVUZST1VJc1MwRkJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVRXNRMEZEZUVJc1NVRkJTeXhKUVVGSk9VSXNRMEZCUVVFc1NVRkJTelJFTEU5QlFVRkJMRU5CUlVRc1JVRkJRU3hIUVVSVU5VUXNRMEZCUVVFc1EwRkJTVUVzUTBGQlFVRXNRMEZCUldkRExFbEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFVkJSVVo2UkN4SlFVRkJRU3hEUVVGTE1rWXNVMEZCUVVFc1EwRkJWVFpITEUxQlFVRkJMRU5CUVU4dlN5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTFzUTNSQ0xFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlU0VEN4WFFVRkJRU3hEUVVGakxGTkJRVlZETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJSUzlETEU5QlJFRXhUU3hKUVVGQlFTeERRVUZMTWtZc1UwRkJRVUVzUTBGQlZYVkNMRTFCUVVGQkxFTkJRVTkzUml4TlFVRkJRU3hEUVVGQlFTeERRVU5tTVUwc1NVRkJRVUVzUTBGQlFVRXNRMEZKV0Vjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV3RHTEZWQlFVRkJMRU5CUVdFc1UwRkJWVVlzVTBGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUVVFc1EwRkRha1FzU1VGQlN5eEpRVUZKWjBnc1RVRkJRVUVzU1VGQlZXaElMRk5CUVVGQkxFTkJRMllzUjBGQlFTeERRVUZMTTBZc1NVRkJRVUVzUTBGQlN6SkdMRk5CUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVZNclJ5eE5RVUZCUVN4RFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlJXcEVMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVUVzUTBGSldIaE5MRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWcFRTeFJRVUZCUVN4RFFVRlhMRk5CUVZWR0xFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUlRWRExFOUJSRUV4VFN4SlFVRkJRU3hEUVVGTE1rWXNVMEZCUVVFc1EwRkJWVEpITEVkQlFVRkJMRU5CUVVsSkxFMUJRVUZCTEVOQlFVRkJMRU5CUTFveFRTeEpRVUZCUVN4RFFVRkJRU3hEUVVsWVJ5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWYTAwc1YwRkJRVUVzUTBGQll5eFRRVUZWU0N4TlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVWN2UXl4UFFVUkJNVTBzU1VGQlFVRXNRMEZCU3pKR0xGTkJRVUZCTEVOQlFWVTJSeXhOUVVGQlFTeERRVUZQUlN4TlFVRkJRU3hEUVVGQlFTeERRVU5tTVUwc1NVRkJRVUVzUTBGQlFVRXNRMEZKV0Vjc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWV2xGTEZGQlFVRkJMRU5CUVZjc1UwRkJWVGxETEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJVelZETEU5QlVrbHdRaXhKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJRVUVzUjBGRFdIZERMRTFCUVVGQkxFTkJRVTlETEVsQlFVRkJMRU5CUVV0NlF5eE5RVUZCUVN4RFFVRkJRU3hEUVVGUk1rb3NSMEZCUVVFc1EwRkJTWFpFTEVkQlFVRkJMRVZCUVVGQkxFTkJRM0JDY0Vjc1RVRkJRVUVzUTBGQlQyOUhMRWRCUVVGQkxFTkJRVUZCTEVOQlFXbEZMRWxCUVVFc1JVRkJla1FzU1VGQlNUUkZMRTFCUVVGQkxFTkJRVTlvVEN4TlFVRkJRU3hEUVVGUGIwY3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFVzc1MwRkJRVUVzUTBGQlRYcEhMRTFCUVVGQkxFTkJRVTl2Unl4SFFVRkJRU3hEUVVGQlFTeERRVUZMZUVjc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVRXNRMEZCWTBrc1RVRkJRVUVzUTBGQlQyOUhMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVlZ3Unl4TlFVRkJRU3hEUVVGUGIwY3NSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZOVWRzU1N4SlFVRkJRU3hEUVVGTGRVSXNSMEZCUVVFc1EwRkJTVThzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRlJUbENMRWxCUVVGQkxFTkJRVXNyVFN4eFFrRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRk5lRUkxVFN4UFFVRkJRU3hEUVVGUlVTeFRRVUZCUVN4RFFVRlZjVTBzVFVGQlFVRXNRMEZCVXl4VFFVRlZReXhuUWtGQlFVRXNRMEZCYlVJc1JVRkJRU3hEUVVGQkxFTkJRM0JFTEVsQlFVbERMRTFCUVVGQkxFTkJRVk5zVGl4SlFVRkJRU3hEUVVGTGJVNHNWVUZCUVVFc1EwRkJWMFlzWjBKQlFVRkJMRU5CUVVGQkxFTkJRM3BDUnl4SFFVRkJRU3hEUVVGTmNFNHNTVUZCUVVFc1EwRkJTelJGTEZGQlFVRkJMRVZCUVVGQkxFTkJRVmQzU1N4SFFVRkJRU3hEUVVOMFFtNU1MRWxCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVdFlMRTlCU0V0MlFpeEpRVUZCUVN4RFFVRkxaMFlzVFVGQlFVRXNRMEZCVDNkSUxFMUJRVUZCTEVOQlFVRkJMRWRCUTJKcVRDeEpRVUZCUVN4RFFVRlBiVXdzUjBGQlFVRXNSVUZCVHl4RFFVRkJMRVZCUVV0QkxFZEJRVUZCTEVWQlFVOUdMRTFCUVVGQkxFTkJRVTlITEZsQlFVRkJMRU5CUVVGQkxFTkJSVGxDY0V3c1NVRkJRVUVzUTBGQlFVRXNRMEZKV0RsQ0xFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlV5VFN4UlFVRkJRU3hEUVVGWExGTkJRVlZhTEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRelZETEU5QlFVOHhUU3hKUVVGQlFTeERRVUZMTWtZc1UwRkJRVUVzUTBGQlZVTXNVVUZCUVVFc1EwRkJVemhITEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXNURkazBzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZUUk5MR0ZCUVVGQkxFTkJRV2RDTEZOQlFWVjJReXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTnlSQ3hKUVVGTExFbEJRVWwyU2l4RFFVRkJRU3hKUVVGTGRVb3NWVUZCUVVFc1EwRkRWbWhNTEVsQlFVRkJMRU5CUVV0NVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTGRVb3NWVUZCUVVFc1EwRkJWM1pLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlN6ZENkRUlzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZTdEhMR0ZCUVVGQkxFTkJRV2RDTEZOQlFWVjBSeXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTnlSQ3hKUVVGTExFbEJRVWxMTEVOQlFVRkJMRWxCUVV0TUxGVkJRVUZCTEVOQlEwUXNUMEZCUVN4RlFVRk1TeXhEUVVGQlFTeERRVU5CZWtJc1NVRkJRVUVzUTBGQlMzVkNMRWRCUVVGQkxFTkJRVWxJTEZWQlFVRkJMRU5CUVZkTExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0JDZWtJc1NVRkJRVUVzUTBGQlMzZERMRmxCUVVGQkxFTkJRV0ZtTEVOQlFVRkJMRU5CUVVkTUxGVkJRVUZCTEVOQlFWZExMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUVFZEZEVJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWVlVzWVVGQlFVRXNRMEZCWjBJc1UwRkJWVFJGTEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGQkxFTkJRelZDTEVOQlFVRXNSVUZCYUVKQkxFdEJRVUZCTEVOQlFVMTJSU3hOUVVGQlFTeEhRVUZoZFVVc1MwRkJRVUVzUTBGQlVXcEhMRWxCUVVGQkxFTkJRVXQzVGl4cFFrRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkRjRU1zU1VGQlNYQk5MRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVVZxUWl4SlFVRkxMRWxCUVVsUUxFbEJRVUZCTEVsQlFWRnZSaXhMUVVGQlFTeERRVU5pTjBVc1ZVRkJRVUVzUTBGQlYxQXNTVUZCUVVFc1EwRkJRVUVzUTBGQlVXSXNTVUZCUVVFc1EwRkJTM2xHTEZsQlFVRkJMRU5CUVdFMVJTeEpRVUZCUVN4RFFVRkJRU3hEUVVWNlF5eFBRVUZQVHl4VlFVRkJRU3hEUVVGQlFTeERRVWxZYWtJc1QwRkJRVUVzUTBGQlVWRXNVMEZCUVVFc1EwRkJWVEpDTEZkQlFVRkJMRU5CUVdNc1UwRkJWVklzVFVGQlFVRXNRMEZCVXl4RFFVRkZaQ3hQUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCU1Vrc1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVa3hSU3hQUVVoQmNFSXNTVUZCUVVFc1EwRkJTMmRKTEZkQlFVRkJMRVZCUVVGQkxFTkJSVk4wU0N4SlFVRkJRU3hEUVVGTFR5eGhRVUZCUVN4RFFVRmpZU3hOUVVGQlFTeERRVUZST1VJc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxOME5ITEU5QlFVRkJMRU5CUVZGUkxGTkJRVUZCTEVOQlFWVjNUU3hWUVVGQlFTeERRVUZoTEZOQlFWVjBUU3hKUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1hWQ0xFdEJRVUZCTEVOQlFWRXNSVUZCUVN4RFFVRkJMRU5CUTNoRUxFbEJRVWtyUnl4VFFVRkJRU3hEUVVGWmRFa3NTVUZCUVVFc1EwRkJTekJJTEV0QlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVU14UWpKRkxFMUJRVUZCTEVOQlFWTnNUaXhKUVVGQlFTeERRVUZMTUVjc1ZVRkJRVUVzUTBGRGJFSXNSMEZCYVVJc1IwRkJRU3hGUVVGaWVVTXNVMEZCUVVFc1EwRkRRU3hMUVVGUEswUXNUVUZCUVVFc1IwRkJRVUVzUTBGRFEzaE5MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTmEwd3NUVUZCUVVFc1EwRkJUM1pJTEZOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVOQlFXTjFTQ3hOUVVGQlFTeERRVUZQZGtnc1UwRkJRVUVzUTBGQlZVTXNVVUZCUVVFc1EwRkJVeTlGTEVsQlFVRkJMRU5CUVVzd1NDeExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUlVGSGVrVXlSU3hOUVVGQlFTeERRVUZUUVN4TlFVRkJRU3hEUVVGUGVFY3NWVUZCUVVFc1EwRkJRVUVzUzBGSGJrSXNSMEZCYVVJc1IwRkJRU3hGUVVGaWVVTXNVMEZCUVVFc1EwRkRUQ3hMUVVGUEswUXNUVUZCUVVFc1IwRkJRVUVzUTBGRFEzaE5MRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hEUVVGTmEwd3NUVUZCUVVFc1EwRkJUeTlJTEVWQlFVRkJMRU5CUVVGQkxFVkJRVThyU0N4TlFVRkJRU3hEUVVGUEwwZ3NSVUZCUVVFc1JVRkJUWFJGTEVsQlFVRkJMRU5CUVVzd1NDeExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hEUVVGQkxFVkJSM0pFTWtVc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUM2hITEZWQlFVRkJMRU5CUVVGQkxFdEJTWEJDTEV0QlFVOTNSeXhOUVVGQlFTeEhRVUZCUVN4RFFVTkRlRTBzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMXJUQ3hOUVVGQlFTeERRVUZQYUUwc1VVRkJRVUVzUTBGQlFVRXNSVUZCWVdkTkxFMUJRVUZCTEVOQlFVOW9UU3hSUVVGQlFTeERRVUZUUXl4WFFVRkJRU3hGUVVGQlFTeEZRVUZwUWs0c1NVRkJRVUVzUTBGQlMwMHNWMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNSVUZFT1VRc1EwRkpUaXhIUVVGSlZDeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFd0TUxFMUJRVUZCTEVOQlFVOVBMRmxCUVVGQkxFTkJRVUZCTEVWQlFXbENVQ3hOUVVGQlFTeERRVUZQVHl4WlFVRkJRU3hEUVVGaE5VMHNTVUZCUVVFc1EwRkJRVUVzUTBGQlR5eERRVU51UlN4SFFVRkpTQ3hKUVVGQlFTeERRVUZMYzBJc1MwRkJRVUVzUTBGQlRVa3NTMEZCUVVFc1EwRkJRVUVzUlVGQlZUaExMRTFCUVVGQkxFTkJRVTk2U0N4WlFVRkJRU3hEUVVGaE5VVXNTVUZCUVVFc1EwRkJRVUVzUlVGQlUzVkNMRXRCUVVGQkxFTkJRMnhFTEUxQlJVTXNTMEZCUVN4RFFVVlVPRXNzVFVGQlFVRXNRMEZCVTBFc1RVRkJRVUVzUTBGQlQzaEhMRlZCUVVGQkxFTkJSM2hDTEU5QlFVOTNSeXhOUVVGQlFTeERRVUZCUVN4RFFVbFlMMDBzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZUWk1MRTFCUVVGQkxFTkJRVk1zVlVGQlFTeERRVU5ITEUxQlFVRXNSVUZCZEVKNFRTeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFc5TkxFOUJRVUZCTEVWQlFUaERMRkZCUVVFc1JVRkJla0l4VGl4SlFVRkJRU3hEUVVGTGMwSXNTMEZCUVVFc1EwRkJUWEZOTEZWQlFVRkJMRU5CUVhkQ00wNHNTVUZCUVVFc1EwRkJTelJPTEVsQlFVRkJMRVZCUVVGQkxFTkJRM1pGTlU0c1NVRkJRVUVzUTBGQlN6Wk9MRWxCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CU1dReFRpeFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWYTA0c1NVRkJRVUVzUTBGQlR5eFZRVUZCTEVOQlRYSkNMRTlCUmtFM1RpeEpRVUZCUVN4RFFVRkxjMElzUzBGQlFVRXNRMEZCVFc5TkxFOUJRVUZCTEVOQlFWVXNUVUZCUVN4RFFVVmtNVTRzU1VGQlFVRXNRMEZCUVVFc1EwRkpXRWNzVDBGQlFVRXNRMEZCVVZFc1UwRkJRVUVzUTBGQlZXbE9MRWxCUVVGQkxFTkJRVThzVlVGQlFTeERRVkZ5UWl4UFFVUkJOVTRzU1VGQlFVRXNRMEZCU3pCRkxGTkJRVUZCTEVOQlFWVXNRMEZCUXl4VFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOVU1VVXNTVUZCUVVFc1EwRkJRVUVzUTBGSldFY3NUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVldkTExHTkJRVUZCTEVOQlFXbENMRk5CUVZVM1NTeE5RVUZCUVN4RFFVRlRMRU5CUVVVMFNTeE5RVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRelZFTEVsQlFVbHZSQ3hWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTnFRbWhOTEUxQlFVRkJMRU5CUVZOQkxFMUJRVUZCTEVWQlFWVXNSVUZCUVN4RlFVTmFORWtzVFVGQlFVRXNRMEZCVXpWSkxFMUJRVUZCTEVOQlFVODBTU3hOUVVGQlFTeEZRVUZWTEVWQlFVRXNRMEZEYWtNc1NVRkJTVUVzVFVGQlFVRXNRMEZCVXpWSkxFMUJRVUZCTEVOQlFVODBTU3hOUVVGQlFTeERRVU53UWl4SlFVRkxMRWxCUVVscVNpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1dsS0xFMUJRVUZCTEVOQlFVOW9TaXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlEzQkRMRWxCUVVselRTeEhRVUZCUVN4RFFVRk5MMDRzU1VGQlFVRXNRMEZCUzJsR0xFOUJRVUZCTEVOQlFWRjVSaXhOUVVGQlFTeERRVUZQYWtvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRPVUlzU1VGQlN5eEpRVUZKZDBvc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWs0UXl4SFFVRkJRU3hEUVVGSmNrMHNUVUZCUVVFc1EwRkJVWFZLTEVOQlFVRkJMRVZCUVVGQkxFTkJRM1pDTmtNc1ZVRkJRVUVzUTBGQlYzUklMRkZCUVVGQkxFTkJRVk4xU0N4SFFVRkJRU3hEUVVGSk9VTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCU3paRExGVkJRVUZCTEVOQlFWZHVUU3hKUVVGQlFTeERRVUZMYjAwc1IwRkJRVUVzUTBGQlNUbERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVVRsRUxFOUJTa0ZxVEN4SlFVRkJRU3hEUVVGTGQwSXNVVUZCUVVFc1EwRkJVM05FTEU5QlFVRkJMRU5CUVZGdlNDeEpRVUZCUVN4RlFVRkJRU3hEUVVOaU5FSXNWVUZCUVVFc1EwRkJWM1JJTEZGQlFVRkJMRU5CUVZNd1JpeEpRVUZCUVN4RFFVRkJRU3hGUVVGUFFTeEpRVUZCUVN4RFFVRkxhRVlzVFVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVOc1NDeEpRVUZCUVN4RFFVRkJRU3hEUVVsWVJ5eFBRVUZCUVN4RFFVRlJVU3hUUVVGQlFTeERRVUZWY1U0c1RVRkJRVUVzUTBGQlV5eFZRVUZCTEVOQlEyNUNkRTRzU1VGQlFVRXNRMEZCUzNOQ0xFdEJRVUZCTEVOQlFVMW9ReXhKUVVGQlFTeERRVUZMWjBnc1QwRkJRVUVzUTBGQlVVTXNUVUZCUVVFc1EwRkJRVUVzUlVGQlFVRXNUMEZEYWtKMlJ5eEpRVUZCUVN4RFFVRkxWQ3hQUVVGQlFTeERRVUZSUkN4SlFVRkJRU3hEUVVGTFowZ3NUMEZCUVVFc1EwRkJVVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkZja05xU0N4SlFVRkJRU3hEUVVGTGEwZ3NUVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZKVkM5SExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlZ6VGl4WFFVRkJRU3hEUVVGakxGTkJRVlUxU0N4TFFVRkJRU3hEUVVGQlFTeERRVVYwUXl4UFFVUkJRU3hMUVVGQlFTeERRVUZOTWtnc1RVRkJRVUVzUlVGQlFVRXNRMEZEUTJoUExFbEJRVUZCTEVOQlFVRkJMRU5CU1ZoSExFOUJRVUZCTEVOQlFWRlJMRk5CUVVGQkxFTkJRVlYxVGl4alFVRkJRU3hEUVVGcFFpeFRRVUZWY0Uwc1RVRkJRVUVzUTBGQlV5eERRVUZGYWtJc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVbDFSU3hMUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1VRc1JVRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTNSVzFDTEV0QlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVdDJSeXhKUVVGQlFTeERRVUZMZDBJc1VVRkJRVUVzUTBGQlFVRXNRMEZCVlhORUxFOUJRVUZCTEVOQlFWRnZTQ3hKUVVGQlFTeEZRVUZCUVN4RFFVTjJRbmhNTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5SaXhOUVVGQlFTeERRVUZQYWtJc1NVRkJRVUVzUTBGQlFVRXNSVUZCVTJsQ0xFMUJRVUZCTEVOQlFVOXFRaXhKUVVGQlFTeEZRVUZSY1V3c1NVRkJRVUVzUTBGQlMyaE1MRkZCUVVGQkxFVkJRV0ZTTEVsQlFVRkJMRU5CUVV0elFpeExRVUZCUVN4RFFVRk5SaXhOUVVGQlFTeERRVUZQYzBRc1MwRkJRVUVzUTBGQlFVRXNSVUZCVlRGRkxFbEJRVUZCTEVOQlFVdDVUaXhsUVVGQlFTeERRVUZuUWpkSUxFdEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVXN5Uml4SlFVRkJRU3hEUVVGTGRrY3NVMEZCUVVFc1EwRkJRVUVzUTBGQldUZEVMRTFCUVVGQkxFTkJRVTl6UkN4TFFVRkJRU3hEUVVGTk4wSXNTMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGQlFTeEZRVUZWTjBNc1NVRkJRVUVzUTBGQlMzTkNMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVU5eFJDeEZRVUZCUVN4RFFVRkJRU3hIUVVGUGNrUXNUVUZCUVVFc1EwRkJUM0ZFTEVWQlFVRkJMRU5CUVUwclJ5eEpRVUZCUVN4RFFVRkxMMGNzUlVGQlFVRXNRMEZCUVVFc1EwRkpjRTRyUnl4SlFVRkJRU3hEUVVGTFRTeE5RVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUxcVFuSk5MRTlCUVVGQkxFTkJRVkZSTEZOQlFVRkJMRU5CUVZWNVRpeGhRVUZCUVN4RFFVRm5RaXhUUVVGVmNFNHNUMEZCUVVFc1EwRkJVelJITEZWQlFVRkJMRU5CUVdFc1VVRkJRU3hEUVVGQkxFTkJRemxFTlVnc1NVRkJRVUVzUTBGQlN6UklMRlZCUVVGQkxFTkJRVUZCTEVOQlFWazFSeXhQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkeVFtSXNUMEZCUVVFc1EwRkJVVkVzVTBGQlFVRXNRMEZCVlRCT0xFOUJRVUZCTEVOQlFWVXNVMEZCVlhKTUxGRkJRVUZCTEVWQlFWY3NTVUZCUVN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNM1F5eEpRVUZKYzB3c1UwRkJRVUVzUTBGQldTeERRVUZCTEVOQlFVZERMRTlCUVVGQkxFTkJRVlVzUTBGQlFTeERRVU0zUW5aUExFbEJRVUZCTEVOQlFVc3JSQ3gzUWtGQlFVRXNRMEZCZVVJc2RVSkJRVUVzUTBGQmVVSmlMRXRCUVVGQkxFVkJRVUZCTEVOQlEyNUViMHdzVTBGQlFVRXNRMEZCV1hCTUxFdEJRVUZCTEVOQlFVMXpUQ3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkMFFuaFBMRWxCUVVGQkxFTkJRVXNyUkN4M1FrRkJRVUVzUTBGQmVVSXNiVUpCUVVFc1EwRkJjVUppTEV0QlFVRkJMRVZCUVVGQkxFTkJReTlEY1V3c1QwRkJRVUVzUTBGQlZYSk1MRXRCUVVGQkxFTkJRVTF6VEN4VFFVRkJRU3hEUVVOb1FuUk1MRXRCUVVGQkxFTkJRVTExVEN4UlFVRkJRU3hEUVVGWFJpeFBRVUZCUVN4RFFVRlZSQ3hUUVVGQlFTeERRVVV6UW5STUxGRkJRVUZCTEVOQlFWTkZMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzSkNja1FzY1VKQlFVRkJMRU5CUVhOQ1VTeGpRVUZCUVN4RFFVRnBRbG9zVlVGQlFVRXNRMEZCUVVFc1EwRkRia01zU1VGQlNXbENMRWxCUVVGQkxFTkJRVTlXTEVsQlFVRkJMRU5CUlZoTExHTkJRVUZCTEVOQlFXVk5MRk5CUVVGQkxFTkJRVlVyVGl4UlFVRkJRU3hEUVVGWExGTkJRVlU1U2l4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVU55UkN4SlFVRkpLMG9zVlVGQlFVRXNRMEZCWVdwUExFbEJRVUZCTEVOQlFVdFBMR0ZCUVVGQkxFTkJRV01zUTBGQlJVUXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZaVVN4UlFVRkJRU3hEUVVWMlJHOU9MRWxCUVVGQkxFTkJRVTkwU1N4TFFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRkxka2NzU1VGQlFVRXNRMEZCUVVFc1EwRkZkRUlzU1VGQlN5eEpRVUZKZVVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWx0VGl4SlFVRkJRU3hEUVVGTGJFNHNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRla0pCTEVOQlFVRkJMRVZCUVV0dFJDeFJRVUZCUVN4SFFVTlVLMG9zVlVGQlFVRXNRMEZCVjJ4T0xFTkJRVUZCTEVOQlFVRkJMRU5CUVV0NlFpeEpRVUZCUVN4RFFVRkxOazhzU1VGQlFVRXNRMEZCUzNCT0xFTkJRVUZCTEVOQlFVRkJMRU5CUXpGQ2RVc3NUMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCU1RCRExGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV2hDTEU5QlFVOUJMRlZCUVVGQkxFTkJRVUZCTEVOQlIxaDBUeXhqUVVGQlFTeERRVUZsVFN4VFFVRkJRU3hEUVVGVmJVVXNUMEZCUVVFc1EwRkJWU3hUUVVGVk9VSXNVVUZCUVVFc1JVRkJWeXhKUVVGQkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzQkVMRWxCUVVrMFRDeEpRVUZCUVN4RFFVRlBkRWtzUzBGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlMzWkhMRWxCUVVGQkxFTkJRVUZCTEVOQlEzUkNMRWxCUVVzc1NVRkJTWGxDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpiVTRzU1VGQlFVRXNRMEZCUzJ4T0xFMUJRVUZCTEVOQlFWRkVMRU5CUVVGQkxFVkJRVUZCTEVOQlF6ZENkVUlzVVVGQlFVRXNRMEZCVXpSTUxFbEJRVUZCTEVOQlFVdHVUaXhEUVVGQlFTeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVreFFuQkNMR05CUVVGQkxFTkJRV1ZOTEZOQlFVRkJMRU5CUVZVd1JDeEpRVUZCUVN4RFFVRlBMRk5CUVZWeVFpeFJRVUZCUVN4RlFVRlhMRWxCUVVFc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGFrUXNTVUZCU1RSTUxFbEJRVUZCTEVOQlFVOTBTU3hMUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGTGRrY3NTVUZCUVVFc1EwRkJRVUVzUTBGRGRFSXNTVUZCU3l4SlFVRkplVUlzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHRUaXhKUVVGQlFTeERRVUZMYkU0c1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRE4wSjFRaXhSUVVGQlFTeERRVUZUTkV3c1NVRkJRVUVzUTBGQlMyNU9MRU5CUVVGQkxFTkJRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU3pGQ2NFSXNZMEZCUVVFc1EwRkJaVTBzVTBGQlFVRXNRMEZCYlVJc1QwRkJRU3hEUVVGSkxGTkJRVlZMTEU5QlFVRkJMRU5CUVVGQkxFTkJRelZETEVsQlFVazBUaXhKUVVGQlFTeERRVUZQZEVrc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTM1pITEVsQlFVRkJMRU5CUVVGQkxFTkJRM1JDTEVsQlFVc3NTVUZCU1hsQ0xFTkJRVUZCTEVsQlFVdHRUaXhKUVVGQlFTeERRVU5XTEVkQlFVbEJMRWxCUVVGQkxFVkJRVkUxVGl4UFFVRkJRU3hEUVVGVExFOUJRVTlUTEVOQlFVRkJMRU5CUldoRExFMUJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZIV25CQ0xHTkJRVUZCTEVOQlFXVk5MRk5CUVVGQkxFTkJRVzlDTEZGQlFVRXNRMEZCU1N4VFFVRlZTeXhQUVVGQlFTeERRVUZCUVN4RFFVTTNReXhOUVVGQkxFTkJRV2xETEVOQlFVRXNSVUZCTVVKb1FpeEpRVUZCUVN4RFFVRkxkVXNzVDBGQlFVRXNRMEZCVVhaS0xFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM2hDV0N4alFVRkJRU3hEUVVGbFRTeFRRVUZCUVN4RFFVRjNRaXhaUVVGQkxFTkJRVWtzVTBGQlZTdENMRkZCUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVVGQkxFTkJRek5FTEVsQlFVbDVSQ3hqUVVGQlFTeERRVUZwUWl4RlFVRkJMRU5CUTJwQ2Qwa3NTVUZCUVVFc1EwRkJUM1JKTEV0QlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVdDJSeXhKUVVGQlFTeERRVUZCUVN4RFFVVjBRaXhKUVVGTExFbEJRVWs0VHl4UFFVRkJRU3hKUVVGWFJpeEpRVUZCUVN4RFFVRkJRU3hEUVVOYVJTeFBRVUZCUVN4RlFVRlhjRTBzVVVGQlFVRXNSVUZCV1c5TkxFOUJRVUZCTEVWQlFWZHVUU3hSUVVGQlFTeEZRVUZaYlUwc1QwRkJRVUVzUTBGQlVXaE1MRlZCUVVGQkxFTkJRVmR3UWl4UlFVRkJRU3hEUVVGQlFTeEZRVUZoYjAwc1QwRkJRVUVzUTBGQlVXaE1MRlZCUVVGQkxFTkJRVmR1UWl4UlFVRkJRU3hEUVVGQlFTeEhRVU5xUjNsRUxHTkJRVUZCTEVOQlFXVjZSU3hKUVVGQlFTeERRVUZMYlU0c1QwRkJRVUVzUTBGQlFVRXNRMEZKTlVJc1QwRkJUekZKTEdOQlFVRkJMRU5CUVVGQkxFTkJTV1oyUnl4WFFVRkJRU3hEUVVGWlZTeEpRVUZCUVN4RFFVRlBaQ3hWUVVGQlFTeERRVUZCUVN4RFFVZG1ZeXhKUVVGQlFTeERRVUZMU1N4VFFVRkJRU3hEUVVGVmQwTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJSelZDZEVRc1pVRkJRVUVzUTBGQlowSlpMRkZCUVVGQkxFTkJRVmRvUWl4VlFVRkJRU3hEUVVGQlFTeERRVWQyUW1kQ0xGRkJRVUZCTEVOQlFWTkZMRk5CUVVGQkxFTkJRV2RDTEVsQlFVRXNRMEZCU1N4VFFVRlZjVU1zVVVGQlFVRXNSVUZCVnl4SlFVRkJMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRemxETEVsQlFVc3NTVUZCU1haQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKZWtJc1NVRkJRVUVzUTBGQlN6QkNMRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRemRDZFVJc1VVRkJRVUVzUTBGQlUyaEVMRWxCUVVGQkxFTkJRVXQ1UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVa3hRbWhDTEZGQlFVRkJMRU5CUVZORkxGTkJRVUZCTEVOQlFXMUNMRTlCUVVFc1EwRkJTU3hUUVVGVlN5eFBRVUZCUVN4RFFVRkJRU3hEUVVOMFF5eEpRVUZMTEVsQlFVbFRMRU5CUVVGQkxFbEJRVXQ2UWl4SlFVRkJRU3hEUVVOV0xFZEJRVWxCTEVsQlFVRkJMRU5CUVV0NVFpeERRVUZCUVN4RFFVRkJRU3hGUVVGTlZDeFBRVUZCUVN4RFFVRlRMRTlCUVU5VExFTkJRVUZCTEVOQlJXNURMRTFCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGSFdtaENMRkZCUVVGQkxFTkJRVk5GTEZOQlFVRkJMRU5CUVc5Q0xGRkJRVUVzUTBGQlNTeFRRVUZWU3l4UFFVRkJRU3hEUVVGQlFTeERRVU4yUXl4TlFVRkJMRU5CUVdsRExFTkJRVUVzUlVGQk1VSm9RaXhKUVVGQlFTeERRVUZMZFVzc1QwRkJRVUVzUTBGQlVYWktMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNoQ1VDeFJRVUZCUVN4RFFVRlRSU3hUUVVGQlFTeERRVUYzUWl4WlFVRkJMRU5CUVVrc1UwRkJWU3RDTEZGQlFVRkJMRU5CUVZWRExGRkJRVUZCTEVOQlFVRkJMRU5CUTNKRUxFbEJRVWw1UkN4alFVRkJRU3hEUVVGcFFpeEZRVUZCTEVOQlEzSkNMRWxCUVVzc1NVRkJTVEJKTEU5QlFVRkJMRWxCUVZjNVR5eEpRVUZCUVN4RFFVRkJRU3hEUVVOYU9FOHNUMEZCUVVFc1JVRkJWM0JOTEZGQlFVRkJMRVZCUVZsdlRTeFBRVUZCUVN4RlFVRlhiazBzVVVGQlFVRXNSVUZCV1cxTkxFOUJRVUZCTEVOQlFWRm9UQ3hWUVVGQlFTeERRVUZYY0VJc1VVRkJRVUVzUTBGQlFVRXNSVUZCWVc5TkxFOUJRVUZCTEVOQlFWRm9UQ3hWUVVGQlFTeERRVUZYYmtJc1VVRkJRVUVzUTBGQlFVRXNSMEZEYWtkNVJDeGpRVUZCUVN4RFFVRmxla1VzU1VGQlFVRXNRMEZCUzIxT0xFOUJRVUZCTEVOQlFVRkJMRU5CU1RWQ0xFOUJRVTh4U1N4alFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kVGVtcGxhdGVfMTI9cmVxdWlyZShcIi4vVGVtcGxhdGVcIik7ICovO2NsYXNzIF9fRW1wdHlfNnt9dmFyIF8kQ29tcG9uZW50c182PWNsYXNzIGV4dGVuZHMgXyRUZW1wbGF0ZV8xMntjb25zdHJ1Y3Rvcih0aGVXaW5kb3c9X19FbXB0eV82KXtzdXBlcih0aGVXaW5kb3cpfWNyZWF0ZVRhYihwYXJhbXM9e3RpdGxlczpbXX0pe3ZhciB0YWJUaXRsZT10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJ1bFwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwidGFiXCJ9fSk7Zm9yKHZhciBpIG9mKHBhcmFtcy52aWV3LmFwcGVuZCh0YWJUaXRsZSkscGFyYW1zLnRpdGxlcykpdGFiVGl0bGUuYXBwZW5kKHRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImxpXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJ0YWItdGl0bGVcIn0sdGV4dDppfSkpO3RhYlRpdGxlLmZpbmRBbGwoXCJsaVwiKS5mb3JFYWNoKG5vZGU9Pntub2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57dmFyIHVybD10aGlzLnVybFNwbGl0dGVyKGxvY2F0aW9uLmhyZWYpO3VybC52YXJzLnRhYj1ub2RlLnRleHRDb250ZW50LnRvTG93ZXJDYXNlKCkscm91dGVyLnJlbmRlcih7dXJsOlwiP1wiK3RoaXMudXJsU3BsaXR0ZXIodGhpcy51cmxNZXJnZXIodXJsLFwidGFiXCIpKS5xdWVyaWVzfSl9KX0pfWNlbGwocGFyYW1zPXtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOnt9LG5hbWU6XCJcIixkYXRhQXR0cmlidXRlczp7fSx2YWx1ZTpcIlwiLHRleHQ6XCJcIixodG1sOlwiXCIsZWRpdDpcIlwifSl7dmFyIGNvbXBvbmVudHMsaWQ9dGhpcy5zdHJpbmdSZXBsYWNlKHBhcmFtcy5uYW1lLFwiIFwiLFwiLVwiKStcIi1jZWxsXCIsbGFiZWw9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwibGFiZWxcIixhdHRyaWJ1dGVzOntjbGFzczpcImNlbGwtbGFiZWxcIn0sdGV4dDpwYXJhbXMubmFtZX0pO2xldCBkYXRhO3BhcmFtcy5hdHRyaWJ1dGVzPXRoaXMuaXNzZXQocGFyYW1zLmF0dHJpYnV0ZXMpP3BhcmFtcy5hdHRyaWJ1dGVzOnt9LHBhcmFtcy5kYXRhQXR0cmlidXRlcz10aGlzLmlzc2V0KHBhcmFtcy5kYXRhQXR0cmlidXRlcyk/cGFyYW1zLmRhdGFBdHRyaWJ1dGVzOnt9LHBhcmFtcy5kYXRhQXR0cmlidXRlcy5pZD1pZCxjb21wb25lbnRzPVwic2VsZWN0XCI9PXBhcmFtcy5lbGVtZW50P3tlbGVtZW50OnBhcmFtcy5lbGVtZW50LGF0dHJpYnV0ZXM6cGFyYW1zLmRhdGFBdHRyaWJ1dGVzLGNoaWxkcmVuOlt7ZWxlbWVudDpcIm9wdGlvblwiLGF0dHJpYnV0ZXM6e2Rpc2FibGVkOlwiXCIsc2VsZWN0ZWQ6XCJcIn0sdGV4dDpgU2VsZWN0ICR7cGFyYW1zLm5hbWV9YCx2YWx1ZTpcIlwifV19OntlbGVtZW50OnBhcmFtcy5lbGVtZW50LGF0dHJpYnV0ZXM6cGFyYW1zLmRhdGFBdHRyaWJ1dGVzLHRleHQ6cGFyYW1zLnZhbHVlfSx0aGlzLmlzc2V0KHBhcmFtcy52YWx1ZSkmJihjb21wb25lbnRzLmF0dHJpYnV0ZXMudmFsdWU9cGFyYW1zLnZhbHVlKSx0aGlzLmlzc2V0KHBhcmFtcy5vcHRpb25zKSYmKGNvbXBvbmVudHMub3B0aW9ucz1wYXJhbXMub3B0aW9ucyksKGRhdGE9cGFyYW1zLmVsZW1lbnQgaW5zdGFuY2VvZiBFbGVtZW50P3BhcmFtcy5lbGVtZW50OnRoaXMuY3JlYXRlRWxlbWVudChjb21wb25lbnRzKSkuY2xhc3NMaXN0LmFkZChcImNlbGwtZGF0YVwiKSx0aGlzLmlzc2V0KHBhcmFtcy52YWx1ZSkmJihkYXRhLnZhbHVlPXBhcmFtcy52YWx1ZSk7bGV0IGVkaXQsY2VsbD10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOnBhcmFtcy5hdHRyaWJ1dGVzLGNoaWxkcmVuOltsYWJlbCxkYXRhXX0pO3JldHVybiBjZWxsLmNsYXNzTGlzdC5hZGQoXCJjZWxsXCIpLHRoaXMuaXNzZXQocGFyYW1zLnRleHQpJiYoZGF0YS50ZXh0Q29udGVudD1wYXJhbXMudGV4dCksdGhpcy5pc3NldChwYXJhbXMuaHRtbCkmJihkYXRhLmlubmVySFRNTD1wYXJhbXMuaHRtbCksdGhpcy5pc3NldChwYXJhbXMubGlzdCkmJihjZWxsLm1ha2VFbGVtZW50KHtlbGVtZW50OlwiZGF0YWxpc3RcIixhdHRyaWJ1dGVzOntpZDpgJHtpZH0tbGlzdGB9LG9wdGlvbnM6cGFyYW1zLmxpc3Quc29ydCgpfSksZGF0YS5zZXRBdHRyaWJ1dGUoXCJsaXN0XCIsYCR7aWR9LWxpc3RgKSksdGhpcy5pc3NldChwYXJhbXMuZWRpdCkmJihlZGl0PWNlbGwubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6YCR7cGFyYW1zLmVkaXR9YCxcImRhdGEtaWNvblwiOlwiZmFzLCBmYS1wZW5cIixzdHlsZTp7Y3Vyc29yOlwicG9pbnRlclwiLGJhY2tncm91bmRDb2xvcjpcInZhcigtLXByaW1hcnktY29sb3IpXCIsd2lkdGg6XCIxZW1cIixoZWlnaHQ6XCJhdXRvXCIscG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDpcIjBweFwiLHJpZ2h0OlwiMHB4XCIscGFkZGluZzpcIi4xNWVtXCJ9fX0pLGNlbGwuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCJ9KSksY2VsbH1tZXNzYWdlKHBhcmFtcz17bGluazpcIlwiLHRleHQ6XCJcIix0ZW1wOjB9KXt2YXIgbWU9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiYWxlcnRcIn0sY2hpbGRyZW46W3RoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImFcIix0ZXh0OnBhcmFtcy50ZXh0LGF0dHJpYnV0ZXM6e2NsYXNzOlwidGV4dFwiLGhyZWY6cGFyYW1zLmxpbmt9fSksdGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY2xvc2VcIn19KV19KTtpZih0aGlzLmlzc2V0KHBhcmFtcy50ZW1wKSl2YXIgdGltZT1zZXRUaW1lb3V0KCgpPT57bWUucmVtb3ZlKCksY2xlYXJUaW1lb3V0KHRpbWUpfSxcIlwiIT1wYXJhbXMudGVtcD8xZTMqcGFyYW1zLnRpbWU6NWUzKTttZS5maW5kKFwiLmNsb3NlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bWUucmVtb3ZlKCl9KSxib2R5LmZpbmQoXCIjbm90aWZpY2F0aW9uLWJsb2NrXCIpLmFwcGVuZChtZSl9Y3JlYXRlVGFibGUocGFyYW1zPXt0aXRsZTpcIlwiLGNvbnRlbnRzOnt9LHByb2plY3Rpb246e30scmVuYW1lOnt9LHNvcnQ6ITEsc2VhcmNoOiExLGZpbHRlcjpbXX0pe2xldCBpLGhlYWRlcnM9W10sY29sdW1ucz17fSxjb2x1bW5Db3VudD0wLHRhYmxlPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6cGFyYW1zLmF0dHJpYnV0ZXN9KTt0YWJsZS5jbGFzc0xpc3QuYWRkKFwia2VyZHgtdGFibGVcIik7Zm9yKGxldCBjb250ZW50IG9mIHBhcmFtcy5jb250ZW50cyl7aT1wYXJhbXMuY29udGVudHMuaW5kZXhPZihjb250ZW50KTtmb3IobGV0IG5hbWUgaW4gY29udGVudCktMT09aGVhZGVycy5pbmRleE9mKG5hbWUpJiYoaGVhZGVycy5wdXNoKG5hbWUpLGNvbHVtbnNbbmFtZV09dGFibGUubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJjb2x1bW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLWNvbHVtblwiLFwiZGF0YS1uYW1lXCI6bmFtZX0sY2hpbGRyZW46W3tlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtY29sdW1uLXRpdGxlXCIsXCJkYXRhLW5hbWVcIjpuYW1lfSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJwXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtdGV4dFwifSx0ZXh0Om5hbWV9XX0se2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLWNvbHVtbi1jb250ZW50c1wifX1dfSksdGhpcy5pc3NldChwYXJhbXMuc29ydCkmJmNvbHVtbnNbbmFtZV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGVcIikubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtc29ydFwiLFwiZGF0YS1pY29uXCI6XCJmYXMsIGZhLWFycm93LWRvd25cIn19KSl9cGFyYW1zLnByb2plY3Rpb249cGFyYW1zLnByb2plY3Rpb258fHt9O2xldCBoaWRlPU9iamVjdC52YWx1ZXMocGFyYW1zLnByb2plY3Rpb24pLmluY2x1ZGVzKDEpO2ZvcihsZXQgbmFtZSBvZiBoZWFkZXJzKXtmb3IobGV0IGNvbnRlbnQgb2YgcGFyYW1zLmNvbnRlbnRzKWk9cGFyYW1zLmNvbnRlbnRzLmluZGV4T2YoY29udGVudCksY29sdW1uc1tuYW1lXS5maW5kKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jb250ZW50c1wiKS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIsXCJkYXRhLW5hbWVcIjpuYW1lLFwiZGF0YS12YWx1ZVwiOmNvbnRlbnRbbmFtZV18fFwiXCIsXCJkYXRhLXJvd1wiOml9LGh0bWw6Y29udGVudFtuYW1lXXx8XCJcIn0pOy0xPT1wYXJhbXMucHJvamVjdGlvbltuYW1lXXx8aGlkZSYmIXRoaXMuaXNzZXQocGFyYW1zLnByb2plY3Rpb25bbmFtZV0pP2NvbHVtbnNbbmFtZV0uY3NzKHtkaXNwbGF5Olwibm9uZVwifSk6Y29sdW1uQ291bnQrK310YWJsZS5jc3Moe2dyaWRUZW1wbGF0ZUNvbHVtbnM6YHJlcGVhdCgke2NvbHVtbkNvdW50fSwgMWZyKWB9KTtsZXQgdGFibGVDb250YWluZXI9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS1jb250YWluZXJcIn0sY2hpbGRyZW46W3tlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtdGl0bGVhbmRzZWFyY2hcIn19LHRhYmxlXX0pLHRpdGxlQ291bnQ9MDtyZXR1cm4gdGhpcy5pc3NldChwYXJhbXMudGl0bGUpJiYodGFibGVDb250YWluZXIuZmluZChcIi5rZXJkeC10YWJsZS10aXRsZWFuZHNlYXJjaFwiKS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcImg1XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC10YWJsZS10aXRsZVwifSx0ZXh0OnBhcmFtcy50aXRsZX0pLHRpdGxlQ291bnQrKyksdGhpcy5pc3NldChwYXJhbXMuc29ydCkmJih0YWJsZS5kYXRhc2V0LnNvcnQ9ITApLHRoaXMuaXNzZXQocGFyYW1zLnNlYXJjaCkmJih0YWJsZUNvbnRhaW5lci5maW5kKFwiLmtlcmR4LXRhYmxlLXRpdGxlYW5kc2VhcmNoXCIpLm1ha2VFbGVtZW50KHtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLXNlYXJjaFwiLHBsYWNlSG9sZGVyOlwiU2VhcmNoIHRhYmxlLi4uXCJ9fSksdGl0bGVDb3VudCsrKSx0aGlzLmlzc2V0KHBhcmFtcy5maWx0ZXIpJiYodGFibGVDb250YWluZXIuZmluZChcIi5rZXJkeC10YWJsZS10aXRsZWFuZHNlYXJjaFwiKS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcInNlbGVjdFwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtdGFibGUtZmlsdGVyXCJ9LG9wdGlvbnM6cGFyYW1zLmZpbHRlcn0pLHRpdGxlQ291bnQrKyksMD09cGFyYW1zLmNvbnRlbnRzLmxlbmd0aCYmKHRhYmxlLnRleHRDb250ZW50PVwiRW1wdHkgVGFibGVcIiksdGFibGVDb250YWluZXIubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJzdHlsZVwiLHRleHQ6YFxcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6IDcwMHB4KSB7XFxuICAgICAgICAgICAgICAgIC5rZXJkeC10YWJsZS10aXRsZWFuZHNlYXJjaCB7XFxuICAgICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHt0aXRsZUNvdW50fSwgMWZyKTtcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgfVxcbiAgICAgICAgYH0pLHRhYmxlQ29udGFpbmVyfWdldFRhYmxlRGF0YSh0YWJsZSl7bGV0IGRhdGE9W10sY2VsbHM9dGFibGUuZmluZEFsbChcIi5rZXJkeC10YWJsZS1jb2x1bW4tY2VsbFwiKTtmb3IobGV0IGk9MDtpPGNlbGxzLmxlbmd0aDtpKyspe2xldHtuYW1lOm5hbWUsdmFsdWU6dmFsdWUscm93OnJvd309Y2VsbHNbaV0uZGF0YXNldDtkYXRhW3Jvd109ZGF0YVtyb3ddfHx7fSxkYXRhW3Jvd11bbmFtZV09dmFsdWV9cmV0dXJuIGRhdGF9c29ydFRhYmxlKHRhYmxlLGJ5PVwiXCIsZGlyZWN0aW9uPTEpe2xldCBkYXRhPXRoaXMuZ2V0VGFibGVEYXRhKHRhYmxlKTtyZXR1cm4gZGF0YS5zb3J0KChhLGIpPT4oYT1hW2J5XSxiPWJbYnldLHRoaXMuaXNOdW1iZXIoYSkmJnRoaXMuaXNOdW1iZXIoYikmJihhLz0xLGIvPTEpLGRpcmVjdGlvbj4tMT9hPmI/MTotMTphPmI/LTE6MSkpLGRhdGF9bGlzdGVuVGFibGUocGFyYW1zPXt0YWJsZTp7fSxvcHRpb25zOltdfSxjYWxsYmFja3M9e2NsaWNrOigpPT57fSxmaWx0ZXI6KCk9Pnt9fSl7cGFyYW1zLm9wdGlvbnM9cGFyYW1zLm9wdGlvbnN8fFtdLGNhbGxiYWNrcz1jYWxsYmFja3N8fFtdO2xldCBvcHRpb25DbGFzcyx0YWJsZT1wYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZVwiKSxvcHRpb25zPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXRhYmxlLW9wdGlvbnNcIn19KSxsaXN0PXt2aWV3OlwiZmFzIGZhLWV5ZVwiLGRlbGV0ZTpcImZhcyBmYS10cmFzaFwiLGVkaXQ6XCJmYXMgZmEtcGVuXCIscmV2ZXJ0OlwiZmFzIGZhLWhpc3RvcnlcIn07Zm9yKGxldCBvcHRpb24gb2YgcGFyYW1zLm9wdGlvbnMpb3B0aW9uQ2xhc3M9bGlzdFtvcHRpb25dfHxgZmFzIGZhLSR7b3B0aW9ufWAsb3B0aW9ucy5tYWtlRWxlbWVudCh7ZWxlbWVudDpcImlcIixhdHRyaWJ1dGVzOntjbGFzczpvcHRpb25DbGFzcytcIiBrZXJkeC10YWJsZS1vcHRpb25cIixpZDpcImtlcmR4LXRhYmxlLW9wdGlvbi1cIitvcHRpb259fSk7bGV0IGZpcnN0VmlzaWJsZUNvbHVtbix0YWJsZVRpdGxlcz10YWJsZS5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi10aXRsZVwiKSx0YWJsZUNvbHVtbnM9dGFibGUuZmluZEFsbChcIi5rZXJkeC10YWJsZS1jb2x1bW5cIikscm93cz1bXSxmaXJzdENvbHVtbj10YWJsZUNvbHVtbnNbMF07aWYodGhpcy5pc251bGwoZmlyc3RDb2x1bW4pKXJldHVybjtmb3IobGV0IGk9MDtpPHRhYmxlQ29sdW1ucy5sZW5ndGg7aSsrKWlmKFwibm9uZVwiIT10YWJsZUNvbHVtbnNbaV0uY3NzKCkuZGlzcGxheSl7Zmlyc3RWaXNpYmxlQ29sdW1uPXRhYmxlQ29sdW1uc1tpXTticmVha31sZXQgdGFibGVSb3csc2VhcmNoVmFsdWUsZmlsdGVyVmFsdWUsZmlyc3RDZWxscz1maXJzdENvbHVtbi5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpLGZpcnN0VmlzaWJsZUNlbGxzPWZpcnN0VmlzaWJsZUNvbHVtbi5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpO2ZvcihsZXQgaT0wO2k8Zmlyc3RDZWxscy5sZW5ndGg7aSsrKXJvd3MucHVzaChmaXJzdENlbGxzW2ldLmRhdGFzZXQucm93KTtpZihcInRydWVcIj09cGFyYW1zLnRhYmxlLmZpbmQoXCIua2VyZHgtdGFibGVcIikuZGF0YXNldC5zb3J0KWZvcihsZXQgaT0wO2k8dGFibGVUaXRsZXMubGVuZ3RoO2krKyl0YWJsZVRpdGxlc1tpXS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLGV2ZW50PT57dGFibGVUaXRsZXNbaV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtc29ydFwiKS5jc3Moe2Rpc3BsYXk6XCJ1bnNldFwifSl9KSx0YWJsZVRpdGxlc1tpXS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGV2ZW50PT57dGFibGVUaXRsZXNbaV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtc29ydFwiKS5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KX0pLHRhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZXZlbnQ9PntsZXQgZGlyZWN0aW9uO3RhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikudG9nZ2xlQ2xhc3NlcyhcImZhcywgZmEtYXJyb3ctdXBcIiksdGFibGVUaXRsZXNbaV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtc29ydFwiKS50b2dnbGVDbGFzc2VzKFwiZmFzLCBmYS1hcnJvdy1kb3duXCIpLFwidXBcIj09dGFibGVUaXRsZXNbaV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtc29ydFwiKS5kYXRhc2V0LmRpcmVjdGlvbj8odGFibGVUaXRsZXNbaV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtc29ydFwiKS5kYXRhc2V0LmRpcmVjdGlvbj1cImRvd25cIixkaXJlY3Rpb249MSk6KHRhYmxlVGl0bGVzW2ldLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLXRpdGxlLXNvcnRcIikuZGF0YXNldC5kaXJlY3Rpb249XCJ1cFwiLGRpcmVjdGlvbj0tMSk7bGV0IHRleHQ9dGFibGVUaXRsZXNbaV0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tdGl0bGUtdGV4dFwiKS50ZXh0Q29udGVudCxkYXRhPXRoaXMuc29ydFRhYmxlKHBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlXCIpLHRleHQsZGlyZWN0aW9uKSxuZXdUYWJsZUNvbHVtbnM9dGhpcy5jcmVhdGVUYWJsZSh7Y29udGVudHM6ZGF0YX0pLmZpbmRBbGwoXCIua2VyZHgtdGFibGUtY29sdW1uXCIpO2ZvcihsZXQgaj0wO2o8bmV3VGFibGVDb2x1bW5zLmxlbmd0aDtqKyspdGFibGVDb2x1bW5zW2pdLmZpbmQoXCIua2VyZHgtdGFibGUtY29sdW1uLWNvbnRlbnRzXCIpLmlubmVySFRNTD1uZXdUYWJsZUNvbHVtbnNbal0uZmluZChcIi5rZXJkeC10YWJsZS1jb2x1bW4tY29udGVudHNcIikuaW5uZXJIVE1MO3RhYmxlQ29sdW1ucz10YWJsZS5maW5kQWxsKFwiLmtlcmR4LXRhYmxlLWNvbHVtblwiKSxmaWx0ZXIoKX0pO3RoaXMuaXNudWxsKHBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlLXNlYXJjaFwiKSl8fHBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlLXNlYXJjaFwiKS5vbkNoYW5nZWQodmFsdWU9PntmaWx0ZXIoKX0pLHRoaXMuaXNudWxsKHBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlLWZpbHRlclwiKSl8fHBhcmFtcy50YWJsZS5maW5kKFwiLmtlcmR4LXRhYmxlLWZpbHRlclwiKS5vbkNoYW5nZWQodmFsdWU9PntmaWx0ZXIoKX0pO2xldCBmaWx0ZXI9KCk9Pnt0aGlzLmlzbnVsbChwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZS1zZWFyY2hcIikpfHwoc2VhcmNoVmFsdWU9cGFyYW1zLnRhYmxlLmZpbmQoXCIua2VyZHgtdGFibGUtc2VhcmNoXCIpLnZhbHVlKSx0aGlzLmlzbnVsbChwYXJhbXMudGFibGUuZmluZChcIi5rZXJkeC10YWJsZS1maWx0ZXJcIikpfHwoZmlsdGVyVmFsdWU9cGFyYW1zLnRhYmxlLmZpbmQoXCIua2VyZHgtdGFibGUtZmlsdGVyXCIpLnZhbHVlKTtmb3IobGV0IGk9MDtpPHJvd3MubGVuZ3RoO2krKyl7bGV0IGhpZGU9ITE7dGFibGVSb3c9dGFibGUuZmluZEFsbChgLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsW2RhdGEtcm93PVwiJHtpfVwiXWApO2ZvcihsZXQgaj0wO2o8dGFibGVSb3cubGVuZ3RoO2orKyl0YWJsZVJvd1tqXS5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSk7aWYodGhpcy5pc3NldChmaWx0ZXJWYWx1ZSkmJjA9PWhpZGUmJnRoaXMuaXNzZXQoY2FsbGJhY2tzLmZpbHRlcikmJihoaWRlPWNhbGxiYWNrcy5maWx0ZXIoZmlsdGVyVmFsdWUsdGFibGVSb3cpKSx0aGlzLmlzc2V0KHNlYXJjaFZhbHVlKSYmMD09aGlkZSl7aGlkZT0hMDtmb3IobGV0IGo9MDtqPHRhYmxlUm93Lmxlbmd0aDtqKyspaWYodGFibGVSb3dbal0udGV4dENvbnRlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hWYWx1ZS50b0xvd2VyQ2FzZSgpKSl7aGlkZT0hMTticmVha319aWYoaGlkZSlmb3IobGV0IGo9MDtqPHRhYmxlUm93Lmxlbmd0aDtqKyspdGFibGVSb3dbal0uY3NzKHtkaXNwbGF5Olwibm9uZVwifSl9fTt0aGlzLmlzc2V0KGNhbGxiYWNrcy5jbGljaykmJih0YWJsZS5hZGRNdWx0aXBsZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd24sIHRvdWNoc3RhcnRcIixldmVudD0+e2xldCB0YXJnZXQ9ZXZlbnQudGFyZ2V0O2lmKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC10YWJsZS1vcHRpb25cIikpdGhpcy5pc3NldChjYWxsYmFja3MuY2xpY2spJiZjYWxsYmFja3MuY2xpY2soZXZlbnQpO2Vsc2UgaWYodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpfHwhdGhpcy5pc251bGwodGFyZ2V0LmdldFBhcmVudHMoXCIua2VyZHgtdGFibGUtY29sdW1uLWNlbGxcIikpKXt0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwia2VyZHgtdGFibGUtY29sdW1uLWNlbGxcIil8fCh0YXJnZXQ9dGFyZ2V0LmdldFBhcmVudHMoXCIua2VyZHgtdGFibGUtY29sdW1uLWNlbGxcIikpO2xldCBwb3NpdGlvbj10YXJnZXQuZGF0YXNldC5yb3c7aWYob3B0aW9ucy5yZW1vdmUoKSxmaXJzdFZpc2libGVDZWxsc1twb3NpdGlvbl0uY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCJ9KSxmaXJzdFZpc2libGVDZWxsc1twb3NpdGlvbl0uYXBwZW5kKG9wdGlvbnMpLHBhcmFtcy50YWJsZS5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1zZWxlY3RhYmxlXCIpKXtsZXQgcm93PXRhYmxlLmZpbmRBbGwoYC5rZXJkeC10YWJsZS1jb2x1bW4tY2VsbFtkYXRhLXJvdz1cIiR7cG9zaXRpb259XCJdYCk7Zm9yKGxldCBpPTA7aTxyb3cubGVuZ3RoO2krKylyb3dbaV0uY2xhc3NMaXN0LnRvZ2dsZShcImtlcmR4LXRhYmxlLXNlbGVjdGVkLXJvd1wiKTtvcHRpb25zLnJlbW92ZSgpLHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC10YWJsZS1zZWxlY3RlZC1yb3dcIil8fDA9PWZpcnN0Q29sdW1uLmZpbmRBbGwoXCIua2VyZHgtdGFibGUtc2VsZWN0ZWQtcm93XCIpLmxlbmd0aCYmcGFyYW1zLnRhYmxlLmNsYXNzTGlzdC5yZW1vdmUoXCJrZXJkeC1zZWxlY3RhYmxlXCIpfX19KSx0YWJsZS5wcmVzc2VkKGV2ZW50PT57bGV0IHRhcmdldD1ldmVudC50YXJnZXQ7aWYoZXZlbnQuZHVyYXRpb24+MzAwJiYodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpfHwhdGhpcy5pc251bGwodGFyZ2V0LmdldFBhcmVudHMoXCIua2VyZHgtdGFibGUtY29sdW1uLWNlbGxcIikpKSl7dGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpfHwodGFyZ2V0PXRhcmdldC5nZXRQYXJlbnRzKFwiLmtlcmR4LXRhYmxlLWNvbHVtbi1jZWxsXCIpKTtsZXQgcG9zaXRpb249dGFyZ2V0LmRhdGFzZXQucm93O2lmKDA9PWZpcnN0Q29sdW1uLmZpbmRBbGwoXCIua2VyZHgtdGFibGUtc2VsZWN0ZWQtcm93XCIpLmxlbmd0aCYmIXBhcmFtcy50YWJsZS5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1zZWxlY3RhYmxlXCIpKXtwYXJhbXMudGFibGUuY2xhc3NMaXN0LmFkZChcImtlcmR4LXNlbGVjdGFibGVcIik7bGV0IHJvdz10YWJsZS5maW5kQWxsKGAua2VyZHgtdGFibGUtY29sdW1uLWNlbGxbZGF0YS1yb3c9XCIke3Bvc2l0aW9ufVwiXWApO2ZvcihsZXQgaT0wO2k8cm93Lmxlbmd0aDtpKyspcm93W2ldLmNsYXNzTGlzdC5hZGQoXCJrZXJkeC10YWJsZS1zZWxlY3RlZC1yb3dcIik7b3B0aW9ucy5yZW1vdmUoKX19fSkpfWNyZWF0ZUZvcm0ocGFyYW1zPXtlbGVtZW50OlwiXCIsdGl0bGU6XCJcIixjb2x1bW5zOjEsY29udGVudHM6e30scmVxdWlyZWQ6W10sYnV0dG9uczp7fX0pe2xldCBub3RlLGZvcm09dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OnBhcmFtcy5lbGVtZW50fHxcImZvcm1cIixhdHRyaWJ1dGVzOnBhcmFtcy5hdHRyaWJ1dGVzLGNoaWxkcmVuOlt7ZWxlbWVudDpcImgzXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1mb3JtLXRpdGxlXCJ9LHRleHQ6cGFyYW1zLnRpdGxlfSx7ZWxlbWVudDpcInNlY3Rpb25cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWZvcm0tY29udGVudHNcIixzdHlsZTp7Z3JpZFRlbXBsYXRlQ29sdW1uczpgcmVwZWF0KCR7cGFyYW1zLmNvbHVtbnN9LCAxZnIpYH19fSx7ZWxlbWVudDpcInNlY3Rpb25cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWZvcm0tYnV0dG9uc1wifX1dfSk7Zm9ybS5jbGFzc0xpc3QuYWRkKFwia2VyZHgtZm9ybVwiKSx0aGlzLmlzc2V0KHBhcmFtcy5wYXJlbnQpJiZwYXJhbXMucGFyZW50LmFwcGVuZChmb3JtKTtsZXQgZm9ybUNvbnRlbnRzPWZvcm0uZmluZChcIi5rZXJkeC1mb3JtLWNvbnRlbnRzXCIpO2ZvcihsZXQga2V5IGluIHBhcmFtcy5jb250ZW50cyl7bm90ZT10aGlzLmlzc2V0KHBhcmFtcy5jb250ZW50c1trZXldLm5vdGUpP2AoJHtwYXJhbXMuY29udGVudHNba2V5XS5ub3RlfSlgOlwiXCI7bGV0IGxhYmxlVGV4dD1wYXJhbXMuY29udGVudHNba2V5XS5sYWJlbHx8dGhpcy5jYW1lbENhc2VkVG9UZXh0KGtleSkudG9Mb3dlckNhc2UoKSxibG9jaz1mb3JtQ29udGVudHMubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWZvcm0tc2luZ2xlLWNvbnRlbnRcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwibGFiZWxcIixodG1sOmxhYmxlVGV4dCxhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWZvcm0tbGFiZWxcIixmb3I6a2V5LnRvTG93ZXJDYXNlKCl9fV19KSxkYXRhPWJsb2NrLm1ha2VFbGVtZW50KHBhcmFtcy5jb250ZW50c1trZXldKTtkYXRhLmNsYXNzTGlzdC5hZGQoXCJrZXJkeC1mb3JtLWRhdGFcIiksdGhpcy5pc3NldChwYXJhbXMuY29udGVudHNba2V5XS5ub3RlKSYmYmxvY2subWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsdGV4dDpwYXJhbXMuY29udGVudHNba2V5XS5ub3RlLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZm9ybS1ub3RlXCJ9fSksdGhpcy5pc3NldChwYXJhbXMucmVxdWlyZWQpJiZwYXJhbXMucmVxdWlyZWQuaW5jbHVkZXMoa2V5KSYmKGRhdGEucmVxdWlyZWQ9ITApfWZvcihsZXQga2V5IGluIHBhcmFtcy5idXR0b25zKWZvcm0uZmluZChcIi5rZXJkeC1mb3JtLWJ1dHRvbnNcIikubWFrZUVsZW1lbnQocGFyYW1zLmJ1dHRvbnNba2V5XSk7cmV0dXJuIGZvcm0ubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1mb3JtLWVycm9yXCJ9LHN0YXRlOntuYW1lOlwiZXJyb3JcIixvd25lcjpgIyR7Zm9ybS5pZH1gfX0pLGZvcm19cGlja2VyKHBhcmFtcz17dGl0bGU6XCJcIixjb250ZW50czpbXX0sY2FsbGJhY2s9KGV2ZW50PT57fSkpe2xldCBwaWNrZXI9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1waWNrZXJcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiaDNcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXBpY2tlci10aXRsZVwifSx0ZXh0OnBhcmFtcy50aXRsZXx8XCJcIn0se2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXBpY2tlci1jb250ZW50c1wifX1dfSk7Zm9yKGxldCBjb250ZW50IG9mIHBhcmFtcy5jb250ZW50cylwaWNrZXIuZmluZChcIi5rZXJkeC1waWNrZXItY29udGVudHNcIikubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1waWNrZXItc2luZ2xlXCIsXCJkYXRhLW5hbWVcIjpjb250ZW50fSx0ZXh0OmNvbnRlbnR9KTtyZXR1cm4gcGlja2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJkYmxjbGlja1wiLGV2ZW50PT57ZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LXBpY2tlci1zaW5nbGVcIikmJmNhbGxiYWNrKGV2ZW50LnRhcmdldC5kYXRhc2V0Lm5hbWUpfSkscGlja2VyfXBvcFVwKGNvbnRlbnQscGFyYW1zPXt0aXRsZTpcIlwiLGF0dHJpYnV0ZXM6e319KXtsZXQgY29udGFpbmVyPXBhcmFtcy5jb250YWluZXJ8fGRvY3VtZW50LmJvZHksdGl0bGU9cGFyYW1zLnRpdGxlfHxcIlwiO3BhcmFtcy5hdHRyaWJ1dGVzPXBhcmFtcy5hdHRyaWJ1dGVzfHx7fSxwYXJhbXMuYXR0cmlidXRlcy5zdHlsZT1wYXJhbXMuYXR0cmlidXRlcy5zdHlsZXx8e30scGFyYW1zLmF0dHJpYnV0ZXMuc3R5bGUud2lkdGg9cGFyYW1zLmF0dHJpYnV0ZXMuc3R5bGUud2lkdGh8fFwiNTB2d1wiLHBhcmFtcy5hdHRyaWJ1dGVzLnN0eWxlLmhlaWdodD1wYXJhbXMuYXR0cmlidXRlcy5zdHlsZS5oZWlnaHR8fFwiNTB2aFwiO2xldCBwb3BVcD10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXBvcC11cFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpcInBvcC11cC13aW5kb3dcIixjbGFzczpcImtlcmR4LXBvcC11cC13aW5kb3dcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7aWQ6XCJwb3AtdXAtbWVudVwiLGNsYXNzOlwia2VyZHgtcG9wLXVwLW1lbnVcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwicFwiLGF0dHJpYnV0ZXM6e2lkOlwiXCIsc3R5bGU6e2NvbG9yOlwiaW5oZXJpdFwiLHBhZGRpbmc6XCIxZW1cIn19LHRleHQ6dGl0bGV9LHtlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2lkOlwidG9nZ2xlLXdpbmRvd1wiLGNsYXNzOlwia2VyZHgtcG9wLXVwLWNvbnRyb2wgZmFzIGZhLWV4cGFuZC1hbHRcIn19LHtlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2lkOlwiY2xvc2Utd2luZG93XCIsY2xhc3M6XCJrZXJkeC1wb3AtdXAtY29udHJvbCBmYXMgZmEtdGltZXNcIn19XX0se2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpcInBvcC11cC1jb250ZW50XCIsY2xhc3M6XCJrZXJkeC1wb3AtdXAtY29udGVudFwifSxjaGlsZHJlbjpbY29udGVudF19XX1dfSk7cmV0dXJuIHBvcFVwLmZpbmQoXCIjcG9wLXVwLXdpbmRvd1wiKS5zZXRBdHRyaWJ1dGVzKHBhcmFtcy5hdHRyaWJ1dGVzKSxwb3BVcC5maW5kKFwiI3RvZ2dsZS13aW5kb3dcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZXZlbnQ9Pntwb3BVcC5maW5kKFwiI3RvZ2dsZS13aW5kb3dcIikuY2xhc3NMaXN0LnRvZ2dsZShcImZhLWV4cGFuZC1hbHRcIikscG9wVXAuZmluZChcIiN0b2dnbGUtd2luZG93XCIpLmNsYXNzTGlzdC50b2dnbGUoXCJmYS1jb21wcmVzcy1hbHRcIikscG9wVXAuZmluZChcIiN0b2dnbGUtd2luZG93XCIpLmNsYXNzTGlzdC5jb250YWlucyhcImZhLWV4cGFuZC1hbHRcIik/cG9wVXAuZmluZChcIiNwb3AtdXAtd2luZG93XCIpLmNzcyh7aGVpZ2h0OnBhcmFtcy5hdHRyaWJ1dGVzLnN0eWxlLmhlaWdodCx3aWR0aDpwYXJhbXMuYXR0cmlidXRlcy5zdHlsZS53aWR0aH0pOnBvcFVwLmZpbmQoXCIjcG9wLXVwLXdpbmRvd1wiKS5jc3Moe2hlaWdodDpcInZhcigtLWZpbGwtcGFyZW50KVwiLHdpZHRoOlwidmFyKC0tZmlsbC1wYXJlbnQpXCJ9KX0pLHBvcFVwLmZpbmQoXCIjY2xvc2Utd2luZG93XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57cG9wVXAucmVtb3ZlKCl9KSxjb250YWluZXIuYXBwZW5kKHBvcFVwKSxwb3BVcH1jcmVhdGVTZWxlY3QocGFyYW1zPXt2YWx1ZTpcIlwiLGNvbnRlbnRzOnt9LG11bHRpcGxlOiExfSl7bGV0IGFjdGl2ZSxzZWxlY3RlZD1bXSxhbGxvd05hdmlnYXRlPSExLHNjcm9sbFBvc2l0aW9uPS0xLHNlbGVjdD10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOnBhcmFtcy5hdHRyaWJ1dGVzLGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXNlbGVjdC1jb250cm9sXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1zZWxlY3QtaW5wdXRcIix2YWx1ZTpwYXJhbXMudmFsdWV8fFwiXCIsaWdub3JlOiEwfX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1zZWxlY3QtdG9nZ2xlXCJ9fV19LHtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LXNlbGVjdC1zZWFyY2hcIixwbGFjZUhvbGRlcjpcIlNlYXJjaCBtZS4uLlwiLGlnbm9yZTohMH19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtc2VsZWN0LWNvbnRlbnRzXCJ9fV19KTtzZWxlY3QuY2xhc3NMaXN0LmFkZChcImtlcmR4LXNlbGVjdFwiKTtsZXQgc2V0VmFsdWU9c2VsZWN0LmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO3NlbGVjdC52YWx1ZT1bXSx0aGlzLmlzbnVsbChzZXRWYWx1ZSl8fChzZWxlY3QudmFsdWU9dGhpcy5hcnJheS5maW5kQWxsKHNldFZhbHVlLnNwbGl0KFwiLFwiKSx2PT5cIlwiIT12LnRyaW0oKSkpLHNlbGVjdC5kYXRhc2V0LmFjdGl2ZT1cImZhbHNlXCI7bGV0IGNvbnRlbnRzPXNlbGVjdC5maW5kKFwiLmtlcmR4LXNlbGVjdC1jb250ZW50c1wiKSxpbnB1dD1zZWxlY3QuZmluZChcIi5rZXJkeC1zZWxlY3QtaW5wdXRcIiksc2VhcmNoPXNlbGVjdC5maW5kKFwiLmtlcmR4LXNlbGVjdC1zZWFyY2hcIiksdG9nZ2xlPXNlbGVjdC5maW5kKFwiLmtlcmR4LXNlbGVjdC10b2dnbGVcIik7aWYocGFyYW1zLmNvbnRlbnRzPXBhcmFtcy5jb250ZW50c3x8e30sQXJyYXkuaXNBcnJheShwYXJhbXMuY29udGVudHMpKXtsZXQgaXRlbXM9cGFyYW1zLmNvbnRlbnRzO3BhcmFtcy5jb250ZW50cz17fTtmb3IobGV0IGk9MDtpPGl0ZW1zLmxlbmd0aDtpKyspcGFyYW1zLmNvbnRlbnRzW2l0ZW1zW2ldXT1pdGVtc1tpXX1mb3IobGV0IGkgaW4gcGFyYW1zLmNvbnRlbnRzKXtsZXQgb3B0aW9uPWNvbnRlbnRzLm1ha2VFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtc2VsZWN0LW9wdGlvblwiLHZhbHVlOml9fSk7b3B0aW9uLmlubmVySFRNTD1wYXJhbXMuY29udGVudHNbaV0sb3B0aW9uLnZhbHVlPWl9Zm9yKGxldCB2IG9mIHNlbGVjdC52YWx1ZSlpbnB1dC52YWx1ZSs9cGFyYW1zLmNvbnRlbnRzW3ZdLGlucHV0LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiY2hhbmdlXCIpKTtsZXQgc2luZ2xlPSF0aGlzLmlzc2V0KHBhcmFtcy5tdWx0aXBsZSl8fDA9PXBhcmFtcy5tdWx0aXBsZSxvcHRpb25zPXNlbGVjdC5maW5kQWxsKFwiLmtlcmR4LXNlbGVjdC1vcHRpb25cIik7c2VhcmNoLm9uQ2hhbmdlZCh2YWx1ZT0+e2ZvcihsZXQgaT0wO2k8b3B0aW9ucy5sZW5ndGg7aSsrKW9wdGlvbnNbaV0udGV4dENvbnRlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh2YWx1ZS50b0xvd2VyQ2FzZSgpKT9vcHRpb25zW2ldLmNzc1JlbW92ZShbXCJkaXNwbGF5XCJdKTpvcHRpb25zW2ldLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pfSk7bGV0IHRvcCxib3R0b20sbmF2aWdhdGU9ZXZlbnQ9PnthbGxvd05hdmlnYXRlPSExLFwiQXJyb3dEb3duXCI9PWV2ZW50LmtleSYmc2Nyb2xsUG9zaXRpb248b3B0aW9ucy5sZW5ndGgtMT8oc2Nyb2xsUG9zaXRpb24rKyxhbGxvd05hdmlnYXRlPSEwKTpcIkFycm93VXBcIj09ZXZlbnQua2V5JiZzY3JvbGxQb3NpdGlvbj4wPyhzY3JvbGxQb3NpdGlvbi0tLGFsbG93TmF2aWdhdGU9ITApOmV2ZW50LmtleSxhbGxvd05hdmlnYXRlJiYoYWN0aXZlPWNvbnRlbnRzLmZpbmQoXCIua2VyZHgtc2VsZWN0LWFjdGl2ZS1vcHRpb25cIiksdGhpcy5pc251bGwoYWN0aXZlKXx8YWN0aXZlLmNsYXNzTGlzdC5yZW1vdmUoXCJrZXJkeC1zZWxlY3QtYWN0aXZlLW9wdGlvblwiKSxvcHRpb25zW3Njcm9sbFBvc2l0aW9uXS5jbGFzc0xpc3QuYWRkKFwia2VyZHgtc2VsZWN0LWFjdGl2ZS1vcHRpb25cIikpfTt0b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZXZlbnQ9PntsZXQgYWN0aXZlPVwidHJ1ZVwiPT1zZWxlY3QuZGF0YXNldC5hY3RpdmU7YWN0aXZlP2RlYWN0aXZhdGUoYWN0aXZlKTphY3RpdmF0ZShhY3RpdmUpfSksZG9jdW1lbnQuYm9keS5jc3Moe292ZXJmbG93OlwiYXV0b1wifSk7bGV0IHBsYWNlQ29udGVudHM9KCk9Pnt0b3A9c2VsZWN0LnBvc2l0aW9uKCkudG9wLGJvdHRvbT1kb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodC1zZWxlY3QucG9zaXRpb24oKS50b3AsdG9wPmJvdHRvbT9jb250ZW50cy5jc3Moe3RvcDotY29udGVudHMucG9zaXRpb24oKS5oZWlnaHQrXCJweFwifSk6Y29udGVudHMuY3NzKHt0b3A6c2VsZWN0LnBvc2l0aW9uKCkuaGVpZ2h0K1wicHhcIn0pfSxhY3RpdmF0ZT0oKT0+e3NlbGVjdC5pblZpZXcoXCJib2R5XCIpJiYoaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixuYXZpZ2F0ZSwhMSksc2VhcmNoLmNzcyh7ZGlzcGxheTpcImZsZXhcIn0pLGNvbnRlbnRzLmNzcyh7ZGlzcGxheTpcImZsZXhcIn0pLHBsYWNlQ29udGVudHMoKSxzZWxlY3QuZGF0YXNldC5hY3RpdmU9XCJ0cnVlXCIpfSxkZWFjdGl2YXRlPSgpPT57aW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixuYXZpZ2F0ZSwhMSksc2VhcmNoLmNzc1JlbW92ZShbXCJkaXNwbGF5XCJdKSxjb250ZW50cy5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSksc2VsZWN0LmRhdGFzZXQuYWN0aXZlPVwiZmFsc2VcIn07cmV0dXJuIHNlbGVjdC5idWJibGVkRXZlbnQoXCJjbGlja1wiLGV2ZW50PT57aWYoZXZlbnQudGFyZ2V0IT10b2dnbGUmJlwiZmFsc2VcIj09c2VsZWN0LmRhdGFzZXQuYWN0aXZlJiZhY3RpdmF0ZSgpLGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJrZXJkeC1zZWxlY3Qtb3B0aW9uXCIpKXtsZXQgdGV4dD1wYXJhbXMuY29udGVudHNbZXZlbnQudGFyZ2V0LnZhbHVlXTtcInNpbmdsZVwiPT1wYXJhbXMubXVsdGlwbGUmJmlucHV0LnZhbHVlLmluY2x1ZGVzKHRleHQpP2lucHV0LnZhbHVlPWlucHV0LnZhbHVlLnJlcGxhY2UodGV4dCxcIlwiKTppbnB1dC52YWx1ZSs9YCwgJHt0ZXh0fWAsaW5wdXQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJjaGFuZ2VcIikpLHNpbmdsZSYmZGVhY3RpdmF0ZSgpfX0pLHNlbGVjdC5ub3RCdWJibGVkRXZlbnQoXCJjbGlja1wiLGV2ZW50PT57XCJ0cnVlXCI9PXNlbGVjdC5kYXRhc2V0LmFjdGl2ZSYmZGVhY3RpdmF0ZSgpfSksaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLGV2ZW50PT57bGV0IHZhbHVlcz1pbnB1dC52YWx1ZS5zcGxpdChcIixcIik7dmFsdWVzPXRoaXMuYXJyYXkuZmluZEFsbCh2YWx1ZXMsdmFsdWU9PlwiXCIhPXZhbHVlLnRyaW0oKSksdmFsdWVzPXRoaXMuYXJyYXkuZWFjaCh2YWx1ZXMsdmFsdWU9PnZhbHVlLnRyaW0oKSksc2luZ2xlfHxcInNpbmdsZVwiPT1wYXJhbXMubXVsdGlwbGUmJih2YWx1ZXM9dGhpcy5hcnJheS50b1NldCh2YWx1ZXMpKSwodmFsdWVzPT57c2VsZWN0ZWQ9W10sdmFsdWVzPXZhbHVlcy5zcGxpdChcIixcIik7Zm9yKGxldCB2YWx1ZSBvZiB2YWx1ZXMpe3ZhbHVlPXZhbHVlLnRyaW0oKTtmb3IobGV0IGkgaW4gcGFyYW1zLmNvbnRlbnRzKXBhcmFtcy5jb250ZW50c1tpXT09dmFsdWUmJih2YWx1ZT1pKTtzZWxlY3RlZC5wdXNoKHZhbHVlKX1zZWxlY3QudmFsdWU9c2VsZWN0ZWQsaW5wdXQudmFsdWU9dmFsdWVzfSkodmFsdWVzPXZhbHVlcy5qb2luKFwiLCBcIikpfSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixldmVudD0+e3NlbGVjdC5pblZpZXcoXCJib2R5XCIpJiZwbGFjZUNvbnRlbnRzKCl9KSxzZWxlY3R9Y2hvb3NlKHBhcmFtcz17bm90ZTpcIlwiLG9wdGlvbnM6W119KXtsZXQgY2hvb3NlV2luZG93PXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImNyYXRlci1jaG9vc2VcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwicFwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY3JhdGVyLWNob29zZS1ub3RlXCJ9LHRleHQ6cGFyYW1zLm5vdGV9LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiY3JhdGVyLWNob29zZS1jb250cm9sXCJ9fSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiY3JhdGVyLWNob29zZS1jbG9zZVwiLGNsYXNzOlwiYnRuXCJ9LHRleHQ6XCJDbG9zZVwifV19KSxjaG9vc2VDb250cm9sPWNob29zZVdpbmRvdy5xdWVyeVNlbGVjdG9yKFwiLmNyYXRlci1jaG9vc2UtY29udHJvbFwiKTtjaG9vc2VXaW5kb3cucXVlcnlTZWxlY3RvcihcIiNjcmF0ZXItY2hvb3NlLWNsb3NlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57Y2hvb3NlV2luZG93LnJlbW92ZSgpfSk7Zm9yKGxldCBvcHRpb24gb2YgcGFyYW1zLm9wdGlvbnMpY2hvb3NlQ29udHJvbC5tYWtlRWxlbWVudCh7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwiYnRuIGNob29zZS1vcHRpb25cIn0sdGV4dDpvcHRpb259KTtyZXR1cm57ZGlzcGxheTpjaG9vc2VXaW5kb3csY2hvaWNlOm5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntjaG9vc2VDb250cm9sLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57ZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImNob29zZS1vcHRpb25cIikmJihyZXNvbHZlKGV2ZW50LnRhcmdldC50ZXh0Q29udGVudCksY2hvb3NlV2luZG93LnJlbW92ZSgpKX0pfSl9fXRleHRFZGl0b3IocGFyYW1zPXtpZDpcIlwiLHdpZHRoOlwibWF4LXdpZHRoXCJ9KXsocGFyYW1zPXBhcmFtc3x8e30pLmlkPXBhcmFtcy5pZHx8XCJ0ZXh0LWVkaXRvclwiO2xldCB0ZXh0RWRpdG9yPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2lkOnBhcmFtcy5pZH0sY2hpbGRyZW46W3tlbGVtZW50Olwic3R5bGVcIix0ZXh0OmBcXG5cXG4gICAgICAgICAgICAgICAgICAgIGRpdiNjcmF0ZXItdGV4dC1lZGl0b3J7XFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XFxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogJHtwYXJhbXMud2lkdGh8fFwibWF4LWNvbnRlbnRcIn07XFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBtYXgtY29udGVudDtcXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IoNDAsIDExMCwgODkpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMHB4IDBweDtcXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgIFxcbiAgICAgICAgICAgICAgICAgICAgZGl2I2NyYXRlci1yaWNoLXRleHQtYXJlYXtcXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICBkaXYjY3JhdGVyLXRoZS1yaWJib257XFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XFxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IG1heC1jb250ZW50IG1heC1jb250ZW50O1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MCwgMTEwLCA4OSk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICBpZnJhbWUjY3JhdGVyLXRoZS1XWVNJV1lHe1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgIGRpdiNjcmF0ZXItdGhlLXJpYmJvbiBidXR0b257XFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAuM2VtO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogLjVlbTtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgIGRpdiNjcmF0ZXItdGhlLXJpYmJvbiBidXR0b246aG92ZXJ7XFxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwLCA5MCwgNzApO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhciAwcztcXG4gICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgIGRpdiNjcmF0ZXItdGhlLXJpYmJvbiBpbnB1dCwgIGRpdiNjcmF0ZXItdGhlLXJpYmJvbiBzZWxlY3R7XFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAuNWVtO1xcbiAgICAgICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAgICAgZGl2I2NyYXRlci10aGUtcmliYm9uIGlucHV0W3R5cGU9XCJjb2xvclwiXXtcXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgYH0se2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpcImNyYXRlci10aGUtcmliYm9uXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInNwYW5cIixjaGlsZHJlbjpbe2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInVuZG9CdXR0b25cIix0aXRsZTpcIlVuZG9cIn0sdGV4dDpcIiZsYXJyO1wifSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwicmVkb0J1dHRvblwiLHRpdGxlOlwiUmVkb1wifSx0ZXh0OlwiJnJhcnI7XCJ9LHtlbGVtZW50Olwic2VsZWN0XCIsYXR0cmlidXRlczp7aWQ6XCJmb250Q2hhbmdlclwifSxvcHRpb25zOnRoaXMuZm9udFN0eWxlc30se2VsZW1lbnQ6XCJzZWxlY3RcIixhdHRyaWJ1dGVzOntpZDpcImZvbnRTaXplQ2hhbmdlclwifSxvcHRpb25zOnRoaXMucmFuZ2UoMSwyMCl9LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJvcmRlcmVkTGlzdEJ1dHRvblwiLHRpdGxlOlwiTnVtYmVyZWQgTGlzdFwifSx0ZXh0OlwiKGkpXCJ9LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJ1bm9yZGVyZWRMaXN0QnV0dG9uXCIsdGl0bGU6XCJCdWxsZXR0ZWQgTGlzdFwifSx0ZXh0OlwiJmJ1bGw7XCJ9LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJsaW5rQnV0dG9uXCIsdGl0bGU6XCJDcmVhdGUgTGlua1wifSx0ZXh0OlwiTGlua1wifSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwidW5MaW5rQnV0dG9uXCIsdGl0bGU6XCJSZW1vdmUgTGlua1wifSx0ZXh0OlwiVW5saW5rXCJ9XX0se2VsZW1lbnQ6XCJzcGFuXCIsY2hpbGRyZW46W3tlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJib2xkQnV0dG9uXCIsdGl0bGU6XCJCb2xkXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImJcIix0ZXh0OlwiQlwifV19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJpdGFsaWNCdXR0b25cIix0aXRsZTpcIkl0YWxpY1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJlbVwiLHRleHQ6XCJJXCJ9XX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInVuZGVybGluZUJ1dHRvblwiLHRpdGxlOlwiVW5kZXJsaW5lXCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInVcIix0ZXh0OlwiVVwifV19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJzdXBCdXR0b25cIix0aXRsZTpcIlN1cGVyc2NyaXB0XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInN1cFwiLHRleHQ6XCIyXCJ9XX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInN1YkJ1dHRvblwiLHRpdGxlOlwiU3Vic2NyaXB0XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcInN1YlwiLHRleHQ6XCIyXCJ9XX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInN0cmlrZUJ1dHRvblwiLHRpdGxlOlwiU3RyaWtldGhyb3VnaFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzXCIsdGV4dDpcImFiY1wifV19LHtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOnt0eXBlOlwiY29sb3JcIixpZDpcImZvbnRDb2xvckJ1dHRvblwiLHRpdGxlOlwiQ2hhbmdlIEZvbnQgQ29sb3JcIix2YWx1ZTpcIiMwMDAwMDBcIn19LHtlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOnt0eXBlOlwiY29sb3JcIixpZDpcImhpZ2hsaWdodEJ1dHRvblwiLHRpdGxlOlwiSGlnaHRsaWdodCBUZXh0XCIsdmFsdWU6XCIjZmZmZmZmXCJ9fSx7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7dHlwZTpcImNvbG9yXCIsaWQ6XCJiYWNrZ3JvdW5kQnV0dG9uXCIsdGl0bGU6XCJDaGFuZ2UgQmFja2dyb3VuZFwiLHZhbHVlOlwiI2ZmZmZmZlwifX0se2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcImFsaWduTGVmdEJ1dHRvblwiLHRpdGxlOlwiQWxpZ24gTGVmdFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsdGV4dDpcIkxcIn1dfSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiYWxpZ25DZW50ZXJCdXR0b25cIix0aXRsZTpcIkFsaWduIENlbnRlclwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsdGV4dDpcIkNcIn1dfSx7ZWxlbWVudDpcImJ1dHRvblwiLGF0dHJpYnV0ZXM6e2lkOlwiYWxpZ25KdXN0aWZ5QnV0dG9uXCIsdGl0bGU6XCJBbGlnbiBKdXN0aWZ5XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImFcIix0ZXh0OlwiSlwifV19LHtlbGVtZW50OlwiYnV0dG9uXCIsYXR0cmlidXRlczp7aWQ6XCJhbGlnblJpZ2h0QnV0dG9uXCIsdGl0bGU6XCJBbGlnbiBSaWdodFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJhXCIsdGV4dDpcIlJcIn1dfV19XX0se2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntpZDpcImNyYXRlci1yaWNoLXRleHQtYXJlYVwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJpZnJhbWVcIixhdHRyaWJ1dGVzOntpZDpcImNyYXRlci10aGUtV1lTSVdZR1wiLGZyYW1lQm9yZGVyOjAsbmFtZTpcInRoZVdZU0lXWUdcIn19XX1dfSk7dGV4dEVkaXRvci5maW5kQWxsKFwic2VsZWN0I2ZvbnQtY2hhbmdlciA+IG9wdGlvblwiKS5mb3JFYWNoKGZvbnQ9Pntmb250LmNzcyh7Zm9udEZhbWlseTpmb250LnZhbHVlfSl9KSx0ZXh0RWRpdG9yLmZpbmQoXCIjdW5vcmRlcmVkTGlzdEJ1dHRvblwiKS5pbm5lckhUTUw9XCImYnVsbDtcIix0ZXh0RWRpdG9yLmZpbmQoXCIjcmVkb0J1dHRvblwiKS5pbm5lckhUTUw9XCImcmFycjtcIix0ZXh0RWRpdG9yLmZpbmQoXCIjdW5kb0J1dHRvblwiKS5pbm5lckhUTUw9XCImbGFycjtcIjtsZXQgc2VsZj10aGlzLGVkaXRvcldpbmRvdz10ZXh0RWRpdG9yLmZpbmQoXCIjY3JhdGVyLXRoZS1XWVNJV1lHXCIpO3JldHVybiBlZGl0b3JXaW5kb3cub25BZGRlZCgoKT0+e2xldCBlZGl0b3I9ZWRpdG9yV2luZG93LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7ZWRpdG9yLmJvZHkuaW5uZXJIVE1MPVwiXCIsc2VsZi5pc3NldChwYXJhbXMuY29udGVudCkmJihlZGl0b3IuYm9keS5pbm5lckhUTUw9cGFyYW1zLmNvbnRlbnQuaW5uZXJIVE1MKSxlZGl0b3IuZGVzaWduTW9kZT1cIm9uXCIsdGV4dEVkaXRvci5maW5kKFwiI2JvbGRCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJCb2xkXCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjaXRhbGljQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiSXRhbGljXCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjdW5kZXJsaW5lQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiVW5kZXJsaW5lXCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjc3VwQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiU3VwZXJzY3JpcHRcIiwhMSxudWxsKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiNzdWJCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJTdWJzY3JpcHRcIiwhMSxudWxsKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiNzdHJpa2VCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJTdHJpa2V0aHJvdWdoXCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjb3JkZXJlZExpc3RCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJJbnNlcnRPcmRlcmVkTGlzdFwiLCExLGBuZXdPTCR7c2VsZi5yYW5kb20oKX1gKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiN1bm9yZGVyZWRMaXN0QnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiSW5zZXJ0VW5vcmRlcmVkTGlzdFwiLCExLGBuZXdVTCR7c2VsZi5yYW5kb20oKX1gKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiNmb250Q29sb3JCdXR0b25cIikub25DaGFuZ2VkKHZhbHVlPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiRm9yZUNvbG9yXCIsITEsdmFsdWUpfSksdGV4dEVkaXRvci5maW5kKFwiI2hpZ2hsaWdodEJ1dHRvblwiKS5vbkNoYW5nZWQodmFsdWU9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJCYWNrQ29sb3JcIiwhMSx2YWx1ZSl9KSx0ZXh0RWRpdG9yLmZpbmQoXCIjYmFja2dyb3VuZEJ1dHRvblwiKS5vbkNoYW5nZWQodmFsdWU9PntlZGl0b3IuYm9keS5zdHlsZS5iYWNrZ3JvdW5kPXZhbHVlfSksdGV4dEVkaXRvci5maW5kKFwiI2ZvbnRDaGFuZ2VyXCIpLm9uQ2hhbmdlZCh2YWx1ZT0+e2VkaXRvci5leGVjQ29tbWFuZChcIkZvbnROYW1lXCIsITEsdmFsdWUpfSksdGV4dEVkaXRvci5maW5kKFwiI2ZvbnRTaXplQ2hhbmdlclwiKS5vbkNoYW5nZWQodmFsdWU9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJGb250U2l6ZVwiLCExLHZhbHVlKX0pLHRleHRFZGl0b3IuZmluZChcIiNsaW5rQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57bGV0IHVybD1wcm9tcHQoXCJFbnRlciBhIFVSTFwiLFwiaHR0cDovL1wiKTtzZWxmLmlzbnVsbCh1cmwpfHxlZGl0b3IuZXhlY0NvbW1hbmQoXCJDcmVhdGVMaW5rXCIsITEsdXJsKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiN1bkxpbmtCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJVbkxpbmtcIiwhMSxudWxsKX0sITEpLHRleHRFZGl0b3IuZmluZChcIiN1bmRvQnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwiVW5kb1wiLCExLG51bGwpfSwhMSksdGV4dEVkaXRvci5maW5kKFwiI3JlZG9CdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJyZWRvXCIsITEsbnVsbCl9LCExKSx0ZXh0RWRpdG9yLmZpbmQoXCIjYWxpZ25MZWZ0QnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57ZWRpdG9yLmV4ZWNDb21tYW5kKFwianVzdGlmeUxlZnRcIiwhMSxudWxsKX0pLHRleHRFZGl0b3IuZmluZChcIiNhbGlnbkNlbnRlckJ1dHRvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e2VkaXRvci5leGVjQ29tbWFuZChcImp1c3RpZnlDZW50ZXJcIiwhMSxudWxsKX0pLHRleHRFZGl0b3IuZmluZChcIiNhbGlnbkp1c3RpZnlCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJqdXN0aWZ5RnVsbFwiLCExLG51bGwpfSksdGV4dEVkaXRvci5maW5kKFwiI2FsaWduUmlnaHRCdXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntlZGl0b3IuZXhlY0NvbW1hbmQoXCJqdXN0aWZ5UmlnaHRcIiwhMSxudWxsKX0pfSwhMSksdGV4dEVkaXRvcn1kaXNwbGF5RGF0YShkYXRhPXt9LGNvbnRhaW5lcil7bGV0IGxpbmVOdW1iZXJzPVtdLGRpc3BsYXlTdHJpbmc9dmFsdWU9PnRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtc3RyXCJ9LHRleHQ6YFwiJHt2YWx1ZX1cImB9KSxkaXNwbGF5TGl0ZXJhbD12YWx1ZT0+dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS1saXRcIn0sdGV4dDpgJHt2YWx1ZX1gfSksZGlzcGxheVB1bmN0dWF0aW9uPXZhbHVlPT50aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLXB1blwifSx0ZXh0OmAke3ZhbHVlfWB9KSxkaXNwbGF5SXRlbT0odmFsdWUscGFyYW1zKT0+e3BhcmFtcz1wYXJhbXN8fHt9O2xldCBpdGVtPXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtaXRlbVwifX0pO3JldHVybiBsaW5lTnVtYmVycy5wdXNoKGl0ZW0pLHRoaXMuaXNzZXQocGFyYW1zLmtleSk/aXRlbS5tYWtlRWxlbWVudChbZGlzcGxheVN0cmluZyhwYXJhbXMua2V5KSxkaXNwbGF5UHVuY3R1YXRpb24oXCIgOiBcIiksY2hvb3NlRGlzcGxheSh2YWx1ZSldKTppdGVtLm1ha2VFbGVtZW50KFtjaG9vc2VEaXNwbGF5KHZhbHVlKV0pLGl0ZW19LGRpc3BsYXlBcnJheT12YWx1ZT0+e2xldCBpdGVtLGFycmF5PXRoaXMuY3JlYXRlRWxlbWVudCh7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtYmxvY2tcIn19KTtsaW5lTnVtYmVycy5wdXNoKGFycmF5KSxhcnJheS5tYWtlRWxlbWVudChkaXNwbGF5UHVuY3R1YXRpb24oXCJbXCIpKTtmb3IobGV0IGk9MDtpPHZhbHVlLmxlbmd0aDtpKyspaXRlbT1hcnJheS5tYWtlRWxlbWVudChkaXNwbGF5SXRlbSh2YWx1ZVtpXSkpLGkhPXZhbHVlLmxlbmd0aC0xJiZpdGVtLm1ha2VFbGVtZW50KGRpc3BsYXlQdW5jdHVhdGlvbihcIixcIikpO3JldHVybiBhcnJheS5tYWtlRWxlbWVudChkaXNwbGF5UHVuY3R1YXRpb24oXCJdXCIpKSxhcnJheX0sZGlzcGxheU9iamVjdD12YWx1ZT0+e2xldCBpdGVtLG9iamVjdD10aGlzLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLWJsb2NrXCJ9fSk7bGluZU51bWJlcnMucHVzaChvYmplY3QpLG9iamVjdC5tYWtlRWxlbWVudChkaXNwbGF5UHVuY3R1YXRpb24oXCJ7XCIpKTtsZXQgaT0wO2ZvcihsZXQga2V5IGluIHZhbHVlKWl0ZW09b2JqZWN0Lm1ha2VFbGVtZW50KGRpc3BsYXlJdGVtKHZhbHVlW2tleV0se2tleTprZXl9KSksaSE9T2JqZWN0LmtleXModmFsdWUpLmxlbmd0aC0xJiZpdGVtLm1ha2VFbGVtZW50KGRpc3BsYXlQdW5jdHVhdGlvbihcIixcIikpLGkrKztyZXR1cm4gb2JqZWN0Lm1ha2VFbGVtZW50KGRpc3BsYXlQdW5jdHVhdGlvbihcIn1cIikpLG9iamVjdH0sY2hvb3NlRGlzcGxheT12YWx1ZT0+XCJzdHJpbmdcIj09dHlwZW9mIHZhbHVlP2Rpc3BsYXlTdHJpbmcodmFsdWUpOkFycmF5LmlzQXJyYXkodmFsdWUpP2Rpc3BsYXlBcnJheSh2YWx1ZSk6XCJvYmplY3RcIj09dHlwZW9mIHZhbHVlP2Rpc3BsYXlPYmplY3QodmFsdWUpOmRpc3BsYXlMaXRlcmFsKHZhbHVlKSxkaXNwbGF5ZWQ9dGhpcy5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwicHJlXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLXdpbmRvd1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLWxpbmVcIixzdHlsZTp7bGluZUhlaWdodDpcIjI1cHhcIn19fSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtdG9nZ2xlc1wifX0se2VsZW1lbnQ6XCJjb2RlXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJrZXJkeC1kYXRhLWNvZGVcIixzdHlsZTp7bGluZUhlaWdodDpcIjI1cHhcIn19LGNoaWxkcmVuOltjaG9vc2VEaXNwbGF5KGRhdGEpXX1dfSk7dGhpcy5pc3NldChjb250YWluZXIpJiZjb250YWluZXIuYXBwZW5kKGRpc3BsYXllZCk7bGV0IG51bWJlcnMsdG9nZ2xlQnV0dG9ucyxjb2RlPWRpc3BsYXllZC5maW5kKFwiLmtlcmR4LWRhdGEtY29kZVwiKSxsaW5lcz0oY29kZS5wb3NpdGlvbigpLmhlaWdodCxkaXNwbGF5ZWQuZmluZChcIi5rZXJkeC1kYXRhLWxpbmVcIikpLHRvZ2dsZXM9ZGlzcGxheWVkLmZpbmQoXCIua2VyZHgtZGF0YS10b2dnbGVzXCIpLGJsb2Nrcz0ocGFyc2VJbnQoXCIyNXB4XCIpLGNvZGUuZmluZEFsbChcIi5rZXJkeC1kYXRhLWl0ZW1cIiksY29kZS5maW5kQWxsKFwiLmtlcmR4LWRhdGEtYmxvY2tcIikpLHNldFJhbmdlPWJsb2NrPT57bGV0IHN0YXJ0PU1hdGguZmxvb3IoKGJsb2NrLnBvc2l0aW9uKCkudG9wLWNvZGUucG9zaXRpb24oKS50b3ApL3BhcnNlSW50KFwiMjVweFwiKSkrMSxlbmQ9TWF0aC5mbG9vcigoYmxvY2sucG9zaXRpb24oKS5ib3R0b20tY29kZS5wb3NpdGlvbigpLnRvcCkvcGFyc2VJbnQoXCIyNXB4XCIpKSsxO2Jsb2NrLnJhbmdlPXRoaXMucmFuZ2UoZW5kLHN0YXJ0KX0saGlkZU51bWJlcnM9YmxvY2s9Pntmb3IobGV0IGk9MDtpPGJsb2NrLnJhbmdlLmxlbmd0aDtpKyspdGhpcy5pc3NldChudW1iZXJzW2Jsb2NrLnJhbmdlW2ldXS5jb250cm9sbGVyKXx8KG51bWJlcnNbYmxvY2sucmFuZ2VbaV1dLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pLG51bWJlcnNbYmxvY2sucmFuZ2VbaV1dLmNvbnRyb2xsZXI9YmxvY2spfSxoaWRlQmxvY2s9YmxvY2s9PntsZXQgYmxvY2tDb250ZW50PWJsb2NrLmNoaWxkcmVuO2ZvcihsZXQgaT0wO2k8YmxvY2tDb250ZW50Lmxlbmd0aDtpKyspYmxvY2tDb250ZW50W2ldLmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LWRhdGEtaXRlbVwiKSYmKGJsb2NrQ29udGVudFtpXS5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KSxibG9ja0NvbnRlbnRbaV0uZmluZEFsbChcIi5rZXJkeC1kYXRhLWJsb2NrXCIpLmZvckVhY2goYj0+e3RoaXMuaXNzZXQoYi50b2dnbGUuY29udHJvbGxlcil8fChiLnRvZ2dsZS5jb250cm9sbGVyPWJsb2NrLGIudG9nZ2xlLmNzcyh7ZGlzcGxheTpcIm5vbmVcIn0pKX0pKX07cmV0dXJuIGxpbmVOdW1iZXJzLnB1c2godm9pZCAwKSxkaXNwbGF5ZWQub25BZGRlZChldmVudD0+eygoKT0+e2ZvcihsZXQgaT0wO2k8bGluZU51bWJlcnMubGVuZ3RoO2krKylsaW5lcy5tYWtlRWxlbWVudChbe2VsZW1lbnQ6XCJhXCIsaHRtbDpgJHtpLzErMX1gLGF0dHJpYnV0ZXM6e2NsYXNzOlwia2VyZHgtZGF0YS1saW5lLW51bWJlclwifX1dKX0pKCksKCgpPT57Zm9yKGxldCBpPTA7aTxibG9ja3MubGVuZ3RoO2krKyl7bGV0IHRvcD1ibG9ja3NbaV0ucG9zaXRpb24oKS50b3AtY29kZS5wb3NpdGlvbigpLnRvcCs2K1wicHhcIix0b2dnbGU9dG9nZ2xlcy5tYWtlRWxlbWVudCh7ZWxlbWVudDpcImlcIixhdHRyaWJ1dGVzOntjbGFzczpcImtlcmR4LWRhdGEtdG9nZ2xlcy1idXR0b24gZmFzIGZhLWFycm93LWRvd25cIixzdHlsZTp7dG9wOnRvcH19fSk7dG9nZ2xlLmJsb2NrPWJsb2Nrc1tpXSxibG9ja3NbaV0udG9nZ2xlPXRvZ2dsZX19KSgpLG51bWJlcnM9bGluZXMuZmluZEFsbChcIi5rZXJkeC1kYXRhLWxpbmUtbnVtYmVyXCIpLHRvZ2dsZUJ1dHRvbnM9dG9nZ2xlcy5maW5kQWxsKFwiLmtlcmR4LWRhdGEtdG9nZ2xlcy1idXR0b25cIiksZGlzcGxheWVkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bGV0IHRhcmdldD1ldmVudC50YXJnZXQ7dGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LWRhdGEtdG9nZ2xlcy1idXR0b25cIikmJih0aGlzLmlzc2V0KHRhcmdldC5ibG9jay5yYW5nZSl8fHNldFJhbmdlKHRhcmdldC5ibG9jayksdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImZhLWFycm93LWRvd25cIik/KGhpZGVOdW1iZXJzKHRhcmdldC5ibG9jayksaGlkZUJsb2NrKHRhcmdldC5ibG9jaykpOigoYmxvY2s9Pntmb3IobGV0IGk9MDtpPGJsb2NrLnJhbmdlLmxlbmd0aDtpKyspbnVtYmVyc1tibG9jay5yYW5nZVtpXV0uY29udHJvbGxlcj09YmxvY2smJihudW1iZXJzW2Jsb2NrLnJhbmdlW2ldXS5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSksZGVsZXRlIG51bWJlcnNbYmxvY2sucmFuZ2VbaV1dLmNvbnRyb2xsZXIpfSkodGFyZ2V0LmJsb2NrKSwoYmxvY2s9PntsZXQgYmxvY2tDb250ZW50PWJsb2NrLmNoaWxkcmVuO2ZvcihsZXQgaT0wO2k8YmxvY2tDb250ZW50Lmxlbmd0aDtpKyspYmxvY2tDb250ZW50W2ldLmNsYXNzTGlzdC5jb250YWlucyhcImtlcmR4LWRhdGEtaXRlbVwiKSYmKGJsb2NrQ29udGVudFtpXS5jc3NSZW1vdmUoW1wiZGlzcGxheVwiXSksYmxvY2tDb250ZW50W2ldLmZpbmRBbGwoXCIua2VyZHgtZGF0YS1ibG9ja1wiKS5mb3JFYWNoKGI9PntiLnRvZ2dsZS5jb250cm9sbGVyPT1ibG9jayYmKGRlbGV0ZSBiLnRvZ2dsZS5jb250cm9sbGVyLGIudG9nZ2xlLmNzc1JlbW92ZShbXCJkaXNwbGF5XCJdKSl9KSl9KSh0YXJnZXQuYmxvY2spKSx0YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcImZhLWFycm93LXVwXCIpLHRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwiZmEtYXJyb3ctZG93blwiKSwoKCk9Pntmb3IobGV0IGk9MDtpPHRvZ2dsZUJ1dHRvbnMubGVuZ3RoO2krKyl0b2dnbGVCdXR0b25zW2ldLmNzcyh7dG9wOnRvZ2dsZUJ1dHRvbnNbaV0uYmxvY2sucG9zaXRpb24oKS50b3AtY29kZS5wb3NpdGlvbigpLnRvcCs2K1wicHhcIn0pfSkoKSl9KX0pLGRpc3BsYXllZH19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa052YlhCdmJtVnVkSE11YW5NaVhTd2libUZ0WlhNaU9sc2lSVzF3ZEhraUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lWR1Z0Y0d4aGRHVWlMQ0piYjJKcVpXTjBJRTlpYW1WamRGMGlMQ0owYUdWWGFXNWtiM2NpTENKemRYQmxjaUlzSW5CaGNtRnRjeUlzSW5ScGRHeGxjeUlzSW5SaFlsUnBkR3hsSWl3aWRHaHBjeUlzSW1OeVpXRjBaVVZzWlcxbGJuUWlMQ0psYkdWdFpXNTBJaXdpWVhSMGNtbGlkWFJsY3lJc0ltTnNZWE56SWl3aWFTSXNJblpwWlhjaUxDSmhjSEJsYm1RaUxDSjBaWGgwSWl3aVptbHVaRUZzYkNJc0ltWnZja1ZoWTJnaUxDSnViMlJsSWl3aVlXUmtSWFpsYm5STWFYTjBaVzVsY2lJc0ltVjJaVzUwSWl3aWRYSnNJaXdpZFhKc1UzQnNhWFIwWlhJaUxDSnNiMk5oZEdsdmJpSXNJbWh5WldZaUxDSjJZWEp6SWl3aWRHRmlJaXdpZEdWNGRFTnZiblJsYm5RaUxDSjBiMHh2ZDJWeVEyRnpaU0lzSW5KdmRYUmxjaUlzSW5KbGJtUmxjaUlzSW5WeWJFMWxjbWRsY2lJc0luRjFaWEpwWlhNaUxDSnVZVzFsSWl3aVpHRjBZVUYwZEhKcFluVjBaWE1pTENKMllXeDFaU0lzSW1oMGJXd2lMQ0psWkdsMElpd2lZMjl0Y0c5dVpXNTBjeUlzSW1sa0lpd2ljM1J5YVc1blVtVndiR0ZqWlNJc0lteGhZbVZzSWl3aVpHRjBZU0lzSW1semMyVjBJaXdpWTJocGJHUnlaVzRpTENKa2FYTmhZbXhsWkNJc0luTmxiR1ZqZEdWa0lpd2liM0IwYVc5dWN5SXNJa1ZzWlcxbGJuUWlMQ0pqYkdGemMweHBjM1FpTENKaFpHUWlMQ0pqWld4c0lpd2lhVzV1WlhKSVZFMU1JaXdpYkdsemRDSXNJbTFoYTJWRmJHVnRaVzUwSWl3aWMyOXlkQ0lzSW5ObGRFRjBkSEpwWW5WMFpTSXNJbVJoZEdFdGFXTnZiaUlzSW5OMGVXeGxJaXdpWTNWeWMyOXlJaXdpWW1GamEyZHliM1Z1WkVOdmJHOXlJaXdpZDJsa2RHZ2lMQ0pvWldsbmFIUWlMQ0p3YjNOcGRHbHZiaUlzSW5SdmNDSXNJbkpwWjJoMElpd2ljR0ZrWkdsdVp5SXNJbU56Y3lJc0lteHBibXNpTENKMFpXMXdJaXdpYldVaUxDSjBhVzFsSWl3aWMyVjBWR2x0Wlc5MWRDSXNJbkpsYlc5MlpTSXNJbU5zWldGeVZHbHRaVzkxZENJc0ltWnBibVFpTENKaWIyUjVJaXdpZEdsMGJHVWlMQ0pqYjI1MFpXNTBjeUlzSW5CeWIycGxZM1JwYjI0aUxDSnlaVzVoYldVaUxDSnpaV0Z5WTJnaUxDSm1hV3gwWlhJaUxDSm9aV0ZrWlhKeklpd2lZMjlzZFcxdWN5SXNJbU52YkhWdGJrTnZkVzUwSWl3aWRHRmliR1VpTENKamIyNTBaVzUwSWl3aWFXNWtaWGhQWmlJc0luQjFjMmdpTENKa1lYUmhMVzVoYldVaUxDSm9hV1JsSWl3aVQySnFaV04wSWl3aWRtRnNkV1Z6SWl3aWFXNWpiSFZrWlhNaUxDSmtZWFJoTFhaaGJIVmxJaXdpWkdGMFlTMXliM2NpTENKa2FYTndiR0Y1SWl3aVozSnBaRlJsYlhCc1lYUmxRMjlzZFcxdWN5SXNJblJoWW14bFEyOXVkR0ZwYm1WeUlpd2lkR2wwYkdWRGIzVnVkQ0lzSW1SaGRHRnpaWFFpTENKd2JHRmpaVWh2YkdSbGNpSXNJbXhsYm1kMGFDSXNJbU5sYkd4eklpd2ljbTkzSWl3aVlua2lMQ0prYVhKbFkzUnBiMjRpTENKblpYUlVZV0pzWlVSaGRHRWlMQ0poSWl3aVlpSXNJbWx6VG5WdFltVnlJaXdpWTJGc2JHSmhZMnR6SWl3aVkyeHBZMnNpTENKdmNIUnBiMjVEYkdGemN5SXNJbVJsYkdWMFpTSXNJbkpsZG1WeWRDSXNJbTl3ZEdsdmJpSXNJbVpwY25OMFZtbHphV0pzWlVOdmJIVnRiaUlzSW5SaFlteGxWR2wwYkdWeklpd2lkR0ZpYkdWRGIyeDFiVzV6SWl3aWNtOTNjeUlzSW1acGNuTjBRMjlzZFcxdUlpd2lhWE51ZFd4c0lpd2lkR0ZpYkdWU2IzY2lMQ0p6WldGeVkyaFdZV3gxWlNJc0ltWnBiSFJsY2xaaGJIVmxJaXdpWm1seWMzUkRaV3hzY3lJc0ltWnBjbk4wVm1semFXSnNaVU5sYkd4eklpd2lkRzluWjJ4bFEyeGhjM05sY3lJc0luTnZjblJVWVdKc1pTSXNJbTVsZDFSaFlteGxRMjlzZFcxdWN5SXNJbU55WldGMFpWUmhZbXhsSWl3aWFpSXNJbTl1UTJoaGJtZGxaQ0lzSW1OemMxSmxiVzkyWlNJc0ltRmtaRTExYkhScGNHeGxSWFpsYm5STWFYTjBaVzVsY2lJc0luUmhjbWRsZENJc0ltTnZiblJoYVc1eklpd2laMlYwVUdGeVpXNTBjeUlzSW5SdloyZHNaU0lzSW5CeVpYTnpaV1FpTENKa2RYSmhkR2x2YmlJc0luSmxjWFZwY21Wa0lpd2lZblYwZEc5dWN5SXNJbTV2ZEdVaUxDSm1iM0p0SWl3aWNHRnlaVzUwSWl3aVptOXliVU52Ym5SbGJuUnpJaXdpYTJWNUlpd2liR0ZpYkdWVVpYaDBJaXdpWTJGdFpXeERZWE5sWkZSdlZHVjRkQ0lzSW1Kc2IyTnJJaXdpWm05eUlpd2ljM1JoZEdVaUxDSnZkMjVsY2lJc0ltTmhiR3hpWVdOcklpd2ljR2xqYTJWeUlpd2lZMjl1ZEdGcGJtVnlJaXdpWkc5amRXMWxiblFpTENKd2IzQlZjQ0lzSW1OdmJHOXlJaXdpYzJWMFFYUjBjbWxpZFhSbGN5SXNJbTExYkhScGNHeGxJaXdpWVdOMGFYWmxJaXdpWVd4c2IzZE9ZWFpwWjJGMFpTSXNJbk5qY205c2JGQnZjMmwwYVc5dUlpd2ljMlZzWldOMElpd2lhV2R1YjNKbElpd2ljMlYwVm1Gc2RXVWlMQ0puWlhSQmRIUnlhV0oxZEdVaUxDSmhjbkpoZVNJc0luTndiR2wwSWl3aWRpSXNJblJ5YVcwaUxDSnBibkIxZENJc0lrRnljbUY1SWl3aWFYTkJjbkpoZVNJc0ltbDBaVzF6SWl3aVpHbHpjR0YwWTJoRmRtVnVkQ0lzSWtOMWMzUnZiVVYyWlc1MElpd2ljMmx1WjJ4bElpd2lZbTkwZEc5dElpd2libUYyYVdkaGRHVWlMQ0prWldGamRHbDJZWFJsSWl3aVlXTjBhWFpoZEdVaUxDSnZkbVZ5Wm14dmR5SXNJbkJzWVdObFEyOXVkR1Z1ZEhNaUxDSmpiR2xsYm5SSVpXbG5hSFFpTENKcGJsWnBaWGNpTENKeVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUlpd2lZblZpWW14bFpFVjJaVzUwSWl3aWNtVndiR0ZqWlNJc0ltNXZkRUoxWW1Kc1pXUkZkbVZ1ZENJc0ltVmhZMmdpTENKMGIxTmxkQ0lzSW1wdmFXNGlMQ0ozYVc1a2IzY2lMQ0pqYUc5dmMyVlhhVzVrYjNjaUxDSmphRzl2YzJWRGIyNTBjbTlzSWl3aWNYVmxjbmxUWld4bFkzUnZjaUlzSW1Ob2IybGpaU0lzSWxCeWIyMXBjMlVpTENKeVpYTnZiSFpsSWl3aWNtVnFaV04wSWl3aWRHVjRkRVZrYVhSdmNpSXNJbVp2Ym5SVGRIbHNaWE1pTENKeVlXNW5aU0lzSW5SNWNHVWlMQ0ptY21GdFpVSnZjbVJsY2lJc0ltWnZiblFpTENKbWIyNTBSbUZ0YVd4NUlpd2ljMlZzWmlJc0ltVmthWFJ2Y2xkcGJtUnZkeUlzSW05dVFXUmtaV1FpTENKbFpHbDBiM0lpTENKamIyNTBaVzUwVjJsdVpHOTNJaXdpWkdWemFXZHVUVzlrWlNJc0ltVjRaV05EYjIxdFlXNWtJaXdpY21GdVpHOXRJaXdpWW1GamEyZHliM1Z1WkNJc0luQnliMjF3ZENJc0lteHBibVZPZFcxaVpYSnpJaXdpWkdsemNHeGhlVk4wY21sdVp5SXNJbVJwYzNCc1lYbE1hWFJsY21Gc0lpd2laR2x6Y0d4aGVWQjFibU4wZFdGMGFXOXVJaXdpWkdsemNHeGhlVWwwWlcwaUxDSnBkR1Z0SWl3aVkyaHZiM05sUkdsemNHeGhlU0lzSW1ScGMzQnNZWGxCY25KaGVTSXNJbVJwYzNCc1lYbFBZbXBsWTNRaUxDSnZZbXBsWTNRaUxDSnJaWGx6SWl3aVpHbHpjR3hoZVdWa0lpd2liR2x1WlVobGFXZG9kQ0lzSW01MWJXSmxjbk1pTENKMGIyZG5iR1ZDZFhSMGIyNXpJaXdpWTI5a1pTSXNJbXhwYm1Weklpd2lkRzluWjJ4bGN5SXNJbUpzYjJOcmN5SXNJbkJoY25ObFNXNTBJaXdpYzJWMFVtRnVaMlVpTENKemRHRnlkQ0lzSWsxaGRHZ2lMQ0ptYkc5dmNpSXNJbVZ1WkNJc0ltaHBaR1ZPZFcxaVpYSnpJaXdpWTI5dWRISnZiR3hsY2lJc0ltaHBaR1ZDYkc5amF5SXNJbUpzYjJOclEyOXVkR1Z1ZENJc0luVnVaR1ZtYVc1bFpDSXNJbk5sZEU1MWJXSmxjbk1pTENKelpYUlViMmRuYkdWeklpd2lZV3hwWjI1VWIyZG5iR1Z6SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN3d1JFRkRRU3hOUVVGTlFTeFRRVUZCUVN4RlFYVjRRMDVETEd0Q1FVRlBReXhEUVhCNFExQXNZMEZCZVVKRExHRkJRVUZCTEVOQlEzSkNReXhYUVVGQlFTeERRVUZaUXl4VFFVRkJRU3hEUVVGWlRDeFRRVUZCUVN4RFFVRkJRU3hEUVVOd1FrMHNTMEZCUVVFc1EwRkJUVVFzVTBGQlFVRXNRMEZCUVVFc1EwRkhWa1FzVTBGQlFVRXNRMEZCVlVjc1RVRkJRVUVzUTBGQlV5eERRVUZGUXl4TlFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzcENMRWxCUVVsRExGRkJRVUZCTEVOQlFWZERMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUVdNc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUVUxRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eExRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjNoRkxFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1NVRkdWRklzVFVGQlFVRXNRMEZCVDFNc1NVRkJRVUVzUTBGQlMwTXNUVUZCUVVFc1EwRkJUMUlzVVVGQlFVRXNRMEZCUVVFc1EwRkZURVlzVFVGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUlVGRGFrSkRMRkZCUVVGQkxFTkJRVk5STEUxQlFVRkJMRU5CUTB4UUxFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRV01zUTBGQlJVTXNUMEZCUVVFc1EwRkJVeXhKUVVGQkxFTkJRVTFETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4WFFVRkJMRU5CUVVFc1EwRkJaVWtzU1VGQlFVRXNRMEZCVFVnc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSmRFWk9MRkZCUVVGQkxFTkJRVk5WTEU5QlFVRkJMRU5CUVZFc1NVRkJRU3hEUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVZGRExFbEJRVUZCTEVWQlFVRkJMRU5CUXpOQ1FTeEpRVUZCUVN4RFFVRkxReXhuUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVFF5eExRVUZCUVN4RlFVRkJRU3hEUVVNelFpeEpRVUZKUXl4SFFVRkJRU3hEUVVGTlpDeEpRVUZCUVN4RFFVRkxaU3hYUVVGQlFTeERRVUZaUXl4UlFVRkJRU3hEUVVGVFF5eEpRVUZCUVN4RFFVRkJRU3hEUVVOd1EwZ3NSMEZCUVVFc1EwRkJTVWtzU1VGQlFVRXNRMEZCUzBNc1IwRkJRVUVzUTBGQlRWSXNTVUZCUVVFc1EwRkJTMU1zVjBGQlFVRXNRMEZCV1VNc1YwRkJRVUVzUlVGQlFVRXNRMEZEYUVORExFMUJRVUZCTEVOQlFVOURMRTFCUVVGQkxFTkJRVThzUTBGQlJWUXNSMEZCUVVFc1EwRkJTeXhIUVVGQkxFTkJRVTFrTEVsQlFVRkJMRU5CUVV0bExGZEJRVUZCTEVOQlFWbG1MRWxCUVVGQkxFTkJRVXQzUWl4VFFVRkJRU3hEUVVGVlZpeEhRVUZCUVN4RFFVRkxMRXRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVkZYTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzNCR0wwSXNTVUZCUVVFc1EwRkJTMGNzVFVGQlFVRXNRMEZCVXl4RFFVRkZTeXhQUVVGQlFTeERRVUZUTEU5QlFVRXNRMEZCVTBNc1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVbDFRaXhKUVVGQlFTeERRVUZOTEVWQlFVRXNRMEZCU1VNc1kwRkJRVUVzUTBGQlowSXNSVUZCUVN4RFFVRkpReXhMUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1hCQ0xFbEJRVUZCTEVOQlFVMHNSVUZCUVN4RFFVRkpjVUlzU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVsRExFbEJRVUZCTEVOQlFVMHNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkZha2dzU1VGWlNVTXNWVUZCUVVFc1EwRmFRVU1zUlVGQlFVRXNRMEZCUzJoRExFbEJRVUZCTEVOQlFVdHBReXhoUVVGQlFTeERRVUZqY0VNc1RVRkJRVUVzUTBGQlR6WkNMRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZMTEVkQlFVRXNRMEZCUVN4RFFVRlBMRTlCUVVFc1EwRkhha1JSTEV0QlFVRkJMRU5CUVZGc1F5eEpRVUZCUVN4RFFVRkxReXhoUVVGQlFTeERRVUZqTEVOQlFVVkRMRTlCUVVGQkxFTkJRVk1zVDBGQlFTeERRVUZUUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c1dVRkJRU3hEUVVGQkxFTkJRV2RDU1N4SlFVRkJRU3hEUVVGTldDeE5RVUZCUVN4RFFVRlBOa0lzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBFd1FuSkhMRWxCUVVsVExFbEJRVUZCTEVOQmRrSktkRU1zVFVGQlFVRXNRMEZCVDAwc1ZVRkJRVUVzUTBGQlkwZ3NTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBUU3hWUVVGQlFTeERRVUZCUVN4RFFVRmxUaXhOUVVGQlFTeERRVUZQVFN4VlFVRkJRU3hEUVVGaExFVkJRVUVzUTBGSE1VVk9MRTFCUVVGQkxFTkJRVTg0UWl4alFVRkJRU3hEUVVGclFqTkNMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmRrTXNUVUZCUVVFc1EwRkJUemhDTEdOQlFVRkJMRU5CUVVGQkxFTkJRVzFDT1VJc1RVRkJRVUVzUTBGQlR6aENMR05CUVVGQkxFTkJRV2xDTEVWQlFVRXNRMEZEZEVZNVFpeE5RVUZCUVN4RFFVRlBPRUlzWTBGQlFVRXNRMEZCWlVzc1JVRkJRVUVzUTBGQlMwRXNSVUZCUVVFc1EwRk5ka0pFTEZWQlFVRkJMRU5CUkd0Q0xGRkJRVUVzUlVGQmJFSnNReXhOUVVGQlFTeERRVUZQU3l4UFFVRkJRU3hEUVVOTkxFTkJRMVJCTEU5QlFVRkJMRU5CUVZOTUxFMUJRVUZCTEVOQlFVOUxMRTlCUVVGQkxFTkJRVk5ETEZWQlFVRkJMRU5CUVZsT0xFMUJRVUZCTEVOQlFVODRRaXhqUVVGQlFTeERRVUZuUWxVc1VVRkJRVUVzUTBGQlZTeERRVU5zUlN4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlcxRExGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkpReXhSUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZCUVN4RFFVRk5MMElzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzVDBGQlFVRXNSVUZCWjBKWUxFMUJRVUZCTEVOQlFVODJRaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGUlJTeExRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGTGJFY3NRMEZCUlRGQ0xFOUJRVUZCTEVOQlFWTk1MRTFCUVVGQkxFTkJRVTlMTEU5QlFVRkJMRU5CUVZORExGVkJRVUZCTEVOQlFWbE9MRTFCUVVGQkxFTkJRVTg0UWl4alFVRkJRU3hEUVVGblFtNUNMRWxCUVVGQkxFTkJRVTFZTEUxQlFVRkJMRU5CUVU4clFpeExRVUZCUVN4RFFVRkJRU3hEUVVkNFJqVkNMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmRrTXNUVUZCUVVFc1EwRkJUeXRDTEV0QlFVRkJMRU5CUVVGQkxFZEJRVkZITEZWQlFVRkJMRU5CUVZjMVFpeFZRVUZCUVN4RFFVRlhlVUlzUzBGQlFVRXNRMEZCVVM5Q0xFMUJRVUZCTEVOQlFVOHJRaXhMUVVGQlFTeERRVUZCUVN4RFFVTXZSRFZDTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5ka01zVFVGQlFVRXNRMEZCVHpKRExFOUJRVUZCTEVOQlFVRkJMRWRCUVZWVUxGVkJRVUZCTEVOQlFWZFRMRTlCUVVGQkxFTkJRVlV6UXl4TlFVRkJRU3hEUVVGUE1rTXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKZUVSTUxFbEJRVUZCTEVOQlJFRjBReXhOUVVGQlFTeERRVUZQU3l4UFFVRkJRU3haUVVGdFFuVkRMRTlCUVVGQkxFTkJRMjVDTlVNc1RVRkJRVUVzUTBGQlQwc3NUMEZCUVVFc1EwRkhVRVlzU1VGQlFVRXNRMEZCUzBNc1lVRkJRVUVzUTBGQll6aENMRlZCUVVGQkxFTkJRVUZCTEVWQlIzcENWeXhUUVVGQlFTeERRVUZWUXl4SFFVRkJRU3hEUVVGSkxGZEJRVUVzUTBGQlFTeERRVVZtTTBNc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTEyUXl4TlFVRkJRU3hEUVVGUEswSXNTMEZCUVVFc1EwRkJRVUVzUjBGQlVVOHNTVUZCUVVFc1EwRkJTMUFzUzBGQlFVRXNRMEZCVVM5Q0xFMUJRVUZCTEVOQlFVOHJRaXhMUVVGQlFTeERRVUZCUVN4RFFVZHNSQ3hKUVdsQ1NVVXNTVUZCUVVFc1EwRnFRa0ZqTEVsQlFVRkJMRU5CUVU4MVF5eEpRVUZCUVN4RFFVRkxReXhoUVVGQlFTeERRVUZqTEVOQlFVVkRMRTlCUVVGQkxFTkJRVk1zUzBGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWlRpeE5RVUZCUVN4RFFVRlBUU3hWUVVGQlFTeERRVUZaYTBNc1VVRkJRVUVzUTBGQlZTeERRVUZEU0N4TFFVRkJRU3hEUVVGUFF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFUQkNha2NzVDBGNFFrRlRMRWxCUVVGQkxFTkJRVXRHTEZOQlFVRkJMRU5CUVZWRExFZEJRVUZCTEVOQlFVa3NUVUZCUVN4RFFVRkJMRU5CUldZelF5eEpRVUZCUVN4RFFVRkxiME1zUzBGQlFVRXNRMEZCVFhaRExFMUJRVUZCTEVOQlFVOVhMRWxCUVVGQkxFTkJRVUZCTEVkQlFVOHlRaXhKUVVGQlFTeERRVUZMWml4WFFVRkJRU3hEUVVGamRrSXNUVUZCUVVFc1EwRkJUMWNzU1VGQlFVRXNRMEZCUVVFc1EwRkZia1JTTEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5ka01zVFVGQlFVRXNRMEZCVDJkRExFbEJRVUZCTEVOQlFVRkJMRWRCUVU5TkxFbEJRVUZCTEVOQlFVdFZMRk5CUVVGQkxFTkJRVmxvUkN4TlFVRkJRU3hEUVVGUFowTXNTVUZCUVVFc1EwRkJRVUVzUTBGSGFrUTNRaXhKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlRYWkRMRTFCUVVGQkxFTkJRVTlwUkN4SlFVRkJRU3hEUVVGQlFTeEhRVU5zUWtZc1NVRkJRVUVzUTBGQlMwY3NWMEZCUVVFc1EwRkJXU3hEUVVOaU4wTXNUMEZCUVVFc1EwRkJVeXhWUVVGQkxFTkJRVmxETEZWQlFVRkJMRU5CUVZrc1EwRkJSVFpDTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFVOUJMRVZCUVVGQkxFTkJRVUZCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFXRlJMRTlCUVVGQkxFTkJRVk16UXl4TlFVRkJRU3hEUVVGUGFVUXNTVUZCUVVFc1EwRkJTMFVzU1VGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYUVaaUxFbEJRVUZCTEVOQlFVdGpMRmxCUVVGQkxFTkJRV0VzVFVGQlFTeERRVUZCTEVOQlFVRXNSVUZCVjJwQ0xFVkJRVUZCTEVOQlFVRkJMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTVGRDYUVNc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTEyUXl4TlFVRkJRU3hEUVVGUGFVTXNTVUZCUVVFc1EwRkJRVUVzUjBGRGJFSkJMRWxCUVVGQkxFTkJRVTlqTEVsQlFVRkJMRU5CUVV0SExGZEJRVUZCTEVOQlFWa3NRMEZEY0VJM1F5eFBRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTME1zVlVGQlFVRXNRMEZCV1N4RFFVTjBRa01zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlZWQXNUVUZCUVVFc1EwRkJUMmxETEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWRnZRaXhYUVVGQlFTeERRVUZoTEdGQlFVRXNRMEZCWlVNc1MwRkJRVUVzUTBGQlR5eERRVUZGUXl4TlFVRkJRU3hEUVVGUkxGTkJRVUVzUTBGQlYwTXNaVUZCUVVFc1EwRkJhVUlzYzBKQlFVRXNRMEZCZDBKRExFdEJRVUZCTEVOQlFVOHNTMEZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZSTEUxQlFVRXNRMEZCVVVNc1VVRkJRVUVzUTBGQlZTeFZRVUZCTEVOQlFWbERMRWRCUVVGQkxFTkJRVXNzUzBGQlFTeERRVUZQUXl4TFFVRkJRU3hEUVVGUExFdEJRVUVzUTBGQlQwTXNUMEZCUVVFc1EwRkJVeXhQUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZIZWs1bUxFbEJRVUZCTEVOQlFVdG5RaXhIUVVGQlFTeERRVUZKTEVOQlFVVktMRkZCUVVGQkxFTkJRVlVzVlVGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVnNRbG9zU1VGQlFVRXNRMEZIV0d4RUxFOUJRVUZCTEVOQlFWRkhMRTFCUVVGQkxFTkJRVk1zUTBGQlJXZEZMRWxCUVVGQkxFTkJRVTBzUlVGQlFTeERRVUZKY2tRc1NVRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVbHpSQ3hKUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNwRExFbEJRVWxETEVWQlFVRkJMRU5CUVVzdlJDeEpRVUZCUVN4RFFVRkxReXhoUVVGQlFTeERRVUZqTEVOQlEzaENReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExFOUJRVUVzUTBGQlFTeERRVUZYYVVNc1VVRkJRVUVzUTBGQlZTeERRVU4yUkhKRExFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRV01zUTBGQlJVTXNUMEZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVXROTEVsQlFVRkJMRU5CUVUxWUxFMUJRVUZCTEVOQlFVOVhMRWxCUVVGQkxFTkJRVTFNTEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4TlFVRkJMRU5CUVZGaExFbEJRVUZCTEVOQlFVMXdRaXhOUVVGQlFTeERRVUZQWjBVc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGFFYzNSQ3hKUVVGQlFTeERRVUZMUXl4aFFVRkJRU3hEUVVGakxFTkJRVVZETEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNUMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWx1UlN4SFFVRkpTaXhKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlRYWkRMRTFCUVVGQkxFTkJRVTlwUlN4SlFVRkJRU3hEUVVGQlFTeERRVU5zUWl4SlFVRkpSU3hKUVVGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWExFbEJRVUVzUTBGRGJFSkdMRVZCUVVGQkxFTkJRVWRITEUxQlFVRkJMRVZCUVVGQkxFTkJRMGhETEZsQlFVRkJMRU5CUVdGSUxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRMFVzUlVGQlFTeEZRVUZtYmtVc1RVRkJRVUVzUTBGQlQybEZMRWxCUVVGQkxFTkJRVFJDTEVkQlFVRXNRMEZCWkdwRkxFMUJRVUZCTEVOQlFVOXRSU3hKUVVGQlFTeERRVUZqTEVkQlFVRXNRMEZCUVN4RFFVZHNSRVFzUlVGQlFVRXNRMEZCUjBzc1NVRkJRVUVzUTBGQlN5eFJRVUZCTEVOQlFVRXNRMEZCVlhoRUxHZENRVUZCUVN4RFFVRnBRaXhQUVVGQkxFTkJRVk5ETEV0QlFVRkJMRVZCUVVGQkxFTkJRM2hEYTBRc1JVRkJRVUVzUTBGQlIwY3NUVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhVRWNzU1VGQlFVRXNRMEZCUzBRc1NVRkJRVUVzUTBGQlN5eHhRa0ZCUVN4RFFVRkJMRU5CUVhWQ04wUXNUVUZCUVVFc1EwRkJUM2RFTEVWQlFVRkJMRU5CUVVGQkxFTkJSelZEY2tVc1YwRkJRVUVzUTBGQldVY3NUVUZCUVVFc1EwRkJVeXhEUVVGRmVVVXNTMEZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVWxETEZGQlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVGSlF5eFZRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkJTVU1zVFVGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUVVsNlFpeEpRVUZCUVN4RFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlR6QkNMRTFCUVVGQkxFTkJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUlRWSExFbEJSMGwwUlN4RFFVRkJRU3hEUVVoQmRVVXNUMEZCUVVFc1EwRkJWU3hGUVVGQkxFTkJRMVpETEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVOV1F5eFhRVUZCUVN4RFFVRmpMRU5CUVVFc1EwRkZaRU1zUzBGQlFVRXNRMEZCVVM5RkxFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRMVFzUTBGQlJVTXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVTlETEZWQlFVRkJMRU5CUVZsT0xFMUJRVUZCTEVOQlFVOU5MRlZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpkRE5FVXNTMEZCUVVFc1EwRkJUWEpETEZOQlFVRkJMRU5CUVZWRExFZEJRVUZCTEVOQlFVa3NZVUZCUVN4RFFVRkJMRU5CUlhCQ0xFbEJRVXNzU1VGQlNYRkRMRTlCUVVGQkxFbEJRVmR1Uml4TlFVRkJRU3hEUVVGUE1FVXNVVUZCUVVFc1EwRkJWU3hEUVVOcVEyeEZMRU5CUVVGQkxFTkJRVWxTTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVRlRWU3hQUVVGQlFTeERRVUZSUkN4UFFVRkJRU3hEUVVGQlFTeERRVU0xUWl4SlFVRkxMRWxCUVVsMFJDeEpRVUZCUVN4SlFVRlJjMFFzVDBGQlFVRXNRMEZCUVVFc1EwRkRhVUlzUTBGQlFTeEZRVUV4UWtvc1QwRkJRVUVzUTBGQlVVc3NUMEZCUVVFc1EwRkJVWFpFTEVsQlFVRkJMRU5CUVVGQkxFZEJRMmhDYTBRc1QwRkJRVUVzUTBGQlVVMHNTVUZCUVVFc1EwRkJTM2hFTEVsQlFVRkJMRU5CUVVGQkxFTkJRMkp0UkN4UFFVRkJRU3hEUVVGUmJrUXNTVUZCUVVFc1EwRkJRVUVzUTBGQlVYRkVMRXRCUVVGQkxFTkJRVTFvUXl4WFFVRkJRU3hEUVVGWkxFTkJRemxDTjBNc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXh2UWtGQlFTeERRVUZ6UWl0RkxGZEJRVUZCTEVOQlFXRjZSQ3hKUVVGQlFTeERRVUZCUVN4RFFVRlJWeXhSUVVGQlFTeERRVUZWTEVOQlEzcEdMRU5CUTBsdVF5eFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTERCQ1FVRkJMRU5CUVRSQ0swVXNWMEZCUVVFc1EwRkJZWHBFTEVsQlFVRkJMRU5CUVVGQkxFTkJRVkZYTEZGQlFVRkJMRU5CUVZVc1EwRkROMFlzUTBGQlJXNURMRTlCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZMUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c0swSkJRVUVzUTBGQlFTeERRVUZ0UTBrc1NVRkJRVUVzUTBGQlRXdENMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM1JHTEVOQlFVVjRRaXhQUVVGQlFTeERRVUZUTEV0QlFVRXNRMEZCVDBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExEWkNRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVrelEwb3NTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBiVVFzU1VGQlFVRXNRMEZCUVVFc1JVRkRiRUkyUWl4UFFVRkJRU3hEUVVGUmJrUXNTVUZCUVVFc1EwRkJRVUVzUTBGQlRUQkRMRWxCUVVGQkxFTkJRVXNzTWtKQlFVRXNRMEZCUVN4RFFVRTJRbkpDTEZkQlFVRkJMRU5CUVZrc1EwRkJSVGRETEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNLMEpCUVVFc1EwRkJhVU00UXl4WFFVRkJRU3hEUVVGaExHOUNRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRk5MMHB5UkN4TlFVRkJRU3hEUVVGUE1rVXNWVUZCUVVFc1EwRkJZVE5GTEUxQlFVRkJMRU5CUVU4eVJTeFZRVUZCUVN4RlFVRmpMRVZCUVVFc1EwRkZla01zU1VGQlNWa3NTVUZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUTBGQlQzcEdMRTFCUVVGQkxFTkJRVTh5UlN4VlFVRkJRU3hEUVVGQlFTeERRVUZaWlN4UlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVWR5UkN4SlFVRkxMRWxCUVVrM1JDeEpRVUZCUVN4SlFVRlJhMFFzVDBGQlFVRXNRMEZCVXl4RFFVTjBRaXhKUVVGTExFbEJRVWxKTEU5QlFVRkJMRWxCUVZkdVJpeE5RVUZCUVN4RFFVRlBNRVVzVVVGQlFVRXNRMEZEZGtKc1JTeERRVUZCUVN4RFFVRkpVaXhOUVVGQlFTeERRVUZQTUVVc1VVRkJRVUVzUTBGQlUxVXNUMEZCUVVFc1EwRkJVVVFzVDBGQlFVRXNRMEZCUVVFc1EwRkROVUpJTEU5QlFVRkJMRU5CUVZGdVJDeEpRVUZCUVN4RFFVRkJRU3hEUVVGTk1FTXNTVUZCUVVFc1EwRkJTeXc0UWtGQlFTeERRVUZCTEVOQlFXZERja0lzVjBGQlFVRXNRMEZCV1N4RFFVRkZOME1zVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eDVRa0ZCUVN4RFFVRXlRaXRGTEZkQlFVRkJMRU5CUVdGNlJDeEpRVUZCUVN4RFFVRk5PRVFzV1VGQlFVRXNRMEZCWTFJc1QwRkJRVUVzUTBGQlVYUkVMRWxCUVVGQkxFTkJRVUZCTEVWQlFWTXNSVUZCUVN4RFFVRkpLMFFzVlVGQlFVRXNRMEZCV1hCR0xFTkJRVUZCTEVOQlFVRkJMRU5CUVV0M1FpeEpRVUZCUVN4RFFVRk5iVVFzVDBGQlFVRXNRMEZCVVhSRUxFbEJRVUZCTEVOQlFVRkJMRVZCUVZNc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWR3VFN4RFFVRkJMRVZCUVRWQ04wSXNUVUZCUVVFc1EwRkJUekpGTEZWQlFVRkJMRU5CUVZjNVF5eEpRVUZCUVN4RFFVRkJRU3hGUVVGblFqQkVMRWxCUVVGQkxFVkJRVUZCTEVOQlFWTndSaXhKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlRYWkRMRTFCUVVGQkxFTkJRVTh5UlN4VlFVRkJRU3hEUVVGWE9VTXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEZUVWdFJDeFBRVUZCUVN4RFFVRlJia1FzU1VGQlFVRXNRMEZCUVVFc1EwRkJUV3RETEVkQlFVRkJMRU5CUVVrc1EwRkJSVGhDTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGSmFrTmFMRmRCUVVGQkxFVkJRVUZCTEVOQlIwcERMRXRCUVVGQkxFTkJRVTF1UWl4SFFVRkJRU3hEUVVGSkxFTkJRVVVyUWl4dFFrRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1QwRkJRVUVzUlVGQkswSmlMRmRCUVVGQkxFTkJRVUZCTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlRORExFbEJRVWxqTEdOQlFVRkJMRU5CUVdsQ05VWXNTVUZCUVVFc1EwRkJTME1zWVVGQlFVRXNRMEZCWXl4RFFVTndRME1zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eDFRa0ZCUVN4RFFVRkJMRU5CUVRKQ2FVTXNVVUZCUVVFc1EwRkJWU3hEUVVOMFJTeERRVU5KYmtNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXcwUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZGTVVNeVJTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbEtZeXhWUVVGQlFTeERRVUZoTEVOQlFVRXNRMEZyUTJwQ0xFOUJhRU5KTjBZc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTEyUXl4TlFVRkJRU3hEUVVGUGVVVXNTMEZCUVVFc1EwRkJRVUVzUjBGRGJFSnpRaXhqUVVGQlFTeERRVUZsZUVJc1NVRkJRVUVzUTBGQlN5dzJRa0ZCUVN4RFFVRkJMRU5CUVN0Q2NrSXNWMEZCUVVFc1EwRkJXU3hEUVVGRk4wTXNUMEZCUVVFc1EwRkJVeXhKUVVGQkxFTkJRVTFETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4dFFrRkJRU3hEUVVGQkxFTkJRWFZDU1N4SlFVRkJRU3hEUVVGTldDeE5RVUZCUVN4RFFVRlBlVVVzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRGVrbDFRaXhWUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVkQk4wWXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBiVVFzU1VGQlFVRXNRMEZCUVVFc1IwRkRiRUlyUWl4TFFVRkJRU3hEUVVGTlpTeFBRVUZCUVN4RFFVRlJPVU1zU1VGQlFVRXNRMEZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVUVzUTBGSGNrSm9SQ3hKUVVGQlFTeERRVUZMYjBNc1MwRkJRVUVzUTBGQlRYWkRMRTFCUVVGQkxFTkJRVTgyUlN4TlFVRkJRU3hEUVVGQlFTeEhRVU5zUW10Q0xHTkJRVUZCTEVOQlFXVjRRaXhKUVVGQlFTeERRVUZMTERaQ1FVRkJMRU5CUVVFc1EwRkJLMEp5UWl4WFFVRkJRU3hEUVVGWkxFTkJRVVUzUXl4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRzlDUVVGQkxFTkJRWE5DTWtZc1YwRkJRVUVzUTBGQllTeHBRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNelNVWXNWVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZIUVRkR0xFbEJRVUZCTEVOQlFVdHZReXhMUVVGQlFTeERRVUZOZGtNc1RVRkJRVUVzUTBGQlR6aEZMRTFCUVVGQkxFTkJRVUZCTEVkQlEyeENhVUlzWTBGQlFVRXNRMEZCWlhoQ0xFbEJRVUZCTEVOQlFVc3NOa0pCUVVFc1EwRkJRU3hEUVVFclFuSkNMRmRCUVVGQkxFTkJRVmtzUTBGQlJUZERMRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c2IwSkJRVUVzUTBGQlFTeERRVUYzUW05RExFOUJRVUZCTEVOQlFWTXpReXhOUVVGQlFTeERRVUZQT0VVc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRha3ByUWl4VlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVY3dRaXhEUVVGQkxFVkJRVEZDYUVjc1RVRkJRVUVzUTBGQlR6QkZMRkZCUVVGQkxFTkJRVk41UWl4TlFVRkJRU3hIUVVOb1FtcENMRXRCUVVGQkxFTkJRVTB6UkN4WFFVRkJRU3hEUVVGakxHRkJRVUVzUTBGQlFTeERRVWQ0UW5kRkxHTkJRVUZCTEVOQlFXVTNReXhYUVVGQlFTeERRVUZaTEVOQlEzWkNOME1zVDBGQlFVRXNRMEZCVXl4UFFVRkJMRU5CUVZOTkxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxIbEpRVUZCUVN4RlFVZHZRbkZHTEZWQlFVRkJMRU5CUVVGQkxIRkVRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVdHVRMFFzWTBGQlFVRXNRMEZIV0d4SExGbEJRVUZCTEVOQlFXRnhSaXhMUVVGQlFTeERRVUZCUVN4RFFVTlVMRWxCUVVrMVF5eEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkRVRGhFTEV0QlFVRkJMRU5CUVZGc1FpeExRVUZCUVN4RFFVRk5kRVVzVDBGQlFVRXNRMEZCVVN3d1FrRkJRU3hEUVVGQkxFTkJSVEZDTEVsQlFVc3NTVUZCU1Vvc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWswUml4TFFVRkJRU3hEUVVGTlJDeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOdVF5eEhRVUZCTEVOQlFVbHhRaXhKUVVGQlFTeERRVUZGUVN4SlFVRkJRU3hEUVVGSlJTeExRVUZCUVN4RFFVRkZRU3hMUVVGQlFTeERRVUZMYzBVc1IwRkJRVUVzUTBGQlJVRXNSMEZCUVVFc1EwRkJRVUVzUTBGQlVVUXNTMEZCUVVFc1EwRkJUVFZHTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWQ1Uml4UFFVRkJRU3hEUVVOd1F6TkVMRWxCUVVGQkxFTkJRVXNyUkN4SFFVRkJRU3hEUVVGQlFTeERRVUZQTDBRc1NVRkJRVUVzUTBGQlN5dEVMRWRCUVVGQkxFTkJRVUZCTEVWQlFWRXNSVUZCUVN4RFFVTjZRaTlFTEVsQlFVRkJMRU5CUVVzclJDeEhRVUZCUVN4RFFVRkJRU3hEUVVGTGVFVXNTVUZCUVVFc1EwRkJRVUVzUTBGQlVVVXNTMEZCUVVFc1EwRkhkRUlzVDBGQlQwOHNTVUZCUVVFc1EwRkhXSHBETEZOQlFVRkJMRU5CUVZWeFJpeExRVUZCUVN4RFFVRlBiMElzUlVGQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVsRExGTkJRVUZCTEVOQlFWa3NRMEZCUVN4RFFVRkJMRU5CUTJ4RExFbEJRVWxxUlN4SlFVRkJRU3hEUVVGUGJrTXNTVUZCUVVFc1EwRkJTM0ZITEZsQlFVRkJMRU5CUVdGMFFpeExRVUZCUVN4RFFVRkJRU3hEUVd0Q04wSXNUMEZvUWtFMVF5eEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZMTEVOQlFVTnpSQ3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hKUVVOV1JDeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGU0N4RlFVRkJRU3hEUVVGQlFTeERRVU5PU1N4RFFVRkJRU3hEUVVGSlFTeERRVUZCUVN4RFFVRkZTaXhGUVVGQlFTeERRVUZCUVN4RFFVVkdia2NzU1VGQlFVRXNRMEZCUzNkSExGRkJRVUZCTEVOQlFWTkdMRU5CUVVGQkxFTkJRVUZCTEVWQlFVMTBSeXhKUVVGQlFTeERRVUZMZDBjc1VVRkJRVUVzUTBGQlUwUXNRMEZCUVVFc1EwRkJRVUVzUjBGRGJFTkVMRU5CUVVGQkxFVkJRVkVzUTBGQlFTeERRVU5TUXl4RFFVRkJRU3hGUVVGUkxFTkJRVUVzUTBGQlFTeERRVWRTU0N4VFFVRkJRU3hEUVVGQlFTeERRVUZoTEVOQlFVRXNRMEZEVGtVc1EwRkJRVUVzUTBGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlN5eERRVUZCTEVOQlIySkVMRU5CUVVGQkxFTkJRVWxETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjNKQ2NFVXNTVUZCUVVFc1EwRkhXSHBETEZkQlFVRkJMRU5CUVZsSExFMUJRVUZCTEVOQlFWTXNRMEZCUld0R0xFdEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVRkpka01zVDBGQlFVRXNRMEZCVXl4RlFVRkJMRU5CUVVFc1EwRkJUV2xGTEZOQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4SlFVRkJMRVZCUVVFc1EwRkJWeTlDTEUxQlFVRkJMRU5CUVZFc1NVRkJRU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVU55UmpsRkxFMUJRVUZCTEVOQlFVOHlReXhQUVVGQlFTeERRVUZWTTBNc1RVRkJRVUVzUTBGQlR6SkRMRTlCUVVGQkxFVkJRVmNzUlVGQlFTeERRVU51UTJsRkxGTkJRVUZCTEVOQlFWbEJMRk5CUVVGQkxFVkJRV0VzUlVGQlFTeERRVU42UWl4SlFXRkpSU3hYUVVGQlFTeERRV0pCTlVJc1MwRkJRVUVzUTBGQlVXeEdMRTFCUVVGQkxFTkJRVTlyUml4TFFVRkJRU3hEUVVGTldDeEpRVUZCUVN4RFFVRkxMR05CUVVFc1EwRkJRU3hEUVVVeFFqVkNMRTlCUVVGQkxFTkJRVlY0UXl4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUXpkQ1F5eFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEhGQ1FVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSM1JETUVNc1NVRkJRVUVzUTBGQlR5eERRVU5RZUVNc1NVRkJRVUVzUTBGQlRTeFpRVUZCTEVOQlEwNXpSeXhOUVVGQlFTeERRVUZSTEdOQlFVRXNRMEZEVWpsRkxFbEJRVUZCTEVOQlFVMHNXVUZCUVN4RFFVTk9LMFVzVFVGQlFVRXNRMEZCVVN4blFrRkJRU3hEUVVGQkxFTkJTVm9zU1VGQlN5eEpRVUZKUXl4TlFVRkJRU3hKUVVGVmFrZ3NUVUZCUVVFc1EwRkJUekpETEU5QlFVRkJMRU5CUTNSQ2JVVXNWMEZCUVVFc1EwRkJZemRFTEVsQlFVRkJMRU5CUVV0blJTeE5RVUZCUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4UFFVRkJRU3hGUVVGeFFrRXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEZWtKMFJTeFBRVUZCUVN4RFFVRlJUeXhYUVVGQlFTeERRVUZaTEVOQlF5OUNOME1zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlQzVkhMRmRCUVVGQkxFTkJRV01zY1VKQlFVRXNRMEZCZFVJelJTeEZRVUZCUVN4RFFVRkpMSEZDUVVGQkxFTkJRWGRDT0VVc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSk5VY3NTVUZKU1VNc2EwSkJRVUZCTEVOQlNrRkRMRmRCUVVGQkxFTkJRV05xUXl4TFFVRkJRU3hEUVVGTmRFVXNUMEZCUVVFc1EwRkJVU3d5UWtGQlFTeERRVUZCTEVOQlF6VkNkMGNzV1VGQlFVRXNRMEZCWld4RExFdEJRVUZCTEVOQlFVMTBSU3hQUVVGQlFTeERRVUZSTEhGQ1FVRkJMRU5CUVVFc1EwRkROMEo1Unl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGRFVFTXNWMEZCUVVFc1EwRkJZMFlzV1VGQlFVRXNRMEZCWVN4RFFVRkJMRU5CUVVFc1EwRkhMMElzUjBGQlNXcElMRWxCUVVGQkxFTkJRVXR2U0N4TlFVRkJRU3hEUVVGUFJDeFhRVUZCUVN4RFFVRkJRU3hEUVVOYUxFOUJSMG9zU1VGQlN5eEpRVUZKT1Vjc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWswUnl4WlFVRkJRU3hEUVVGaGFrSXNUVUZCUVVFc1EwRkJVVE5HTEVOQlFVRkJMRVZCUVVGQkxFTkJRM0pETEVkQlFYRkRMRTFCUVVFc1JVRkJha00wUnl4WlFVRkJRU3hEUVVGaE5VY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIzVkVMRWRCUVVGQkxFVkJRVUZCTEVOQlFVMDRRaXhQUVVGQlFTeERRVUZ0UWl4RFFVTjZRM0ZDTEd0Q1FVRkJRU3hEUVVGeFFrVXNXVUZCUVVFc1EwRkJZVFZITEVOQlFVRkJMRU5CUVVGQkxFTkJRMnhETEV0QlFVRXNRMEZKVWl4SlFVZEpaMGdzVVVGQlFVRXNRMEY1UkVGRExGZEJRVUZCTEVOQlFXRkRMRmRCUVVGQkxFTkJOVVJpUXl4VlFVRkJRU3hEUVVGaFRDeFhRVUZCUVN4RFFVRlpNVWNzVDBGQlFVRXNRMEZCVVN3d1FrRkJRU3hEUVVGQkxFTkJRMnBEWjBnc2FVSkJRVUZCTEVOQlFXOUNWaXhyUWtGQlFVRXNRMEZCYlVKMFJ5eFBRVUZCUVN4RFFVRlJMREJDUVVGQkxFTkJRVUVzUTBGSmJrUXNTVUZCU3l4SlFVRkpTaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNXMUlMRlZCUVVGQkxFTkJRVmQ0UWl4TlFVRkJRU3hEUVVGUk0wWXNRMEZCUVVFc1JVRkJRVUVzUTBGRGJrTTJSeXhKUVVGQlFTeERRVUZMYUVNc1NVRkJRVUVzUTBGQlMzTkRMRlZCUVVGQkxFTkJRVmR1U0N4RFFVRkJRU3hEUVVGQlFTeERRVUZIZVVZc1QwRkJRVUVzUTBGQlVVa3NSMEZCUVVFc1EwRkJRVUVzUTBGSGNFTXNSMEZCYzBRc1RVRkJRU3hGUVVGc1JISkhMRTFCUVVGQkxFTkJRVTlyUml4TFFVRkJRU3hEUVVGTldDeEpRVUZCUVN4RFFVRkxMR05CUVVFc1EwRkJRU3hEUVVGblFqQkNMRTlCUVVGQkxFTkJRVkU1UXl4SlFVRkJRU3hEUVVNeFF5eEpRVUZMTEVsQlFVa3pReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNUSkhMRmRCUVVGQkxFTkJRVmxvUWl4TlFVRkJRU3hEUVVGUk0wWXNRMEZCUVVFc1JVRkJRVUVzUTBGRGNFTXlSeXhYUVVGQlFTeERRVUZaTTBjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjA4c1owSkJRVUZCTEVOQlFXbENMRmxCUVVFc1EwRkJZME1zUzBGQlFVRXNSVUZCUVVFc1EwRkRNVU50Unl4WFFVRkJRU3hEUVVGWk0wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5dEVMRWxCUVVGQkxFTkJRVXNzWjBOQlFVRXNRMEZCUVN4RFFVRnJRMUlzUjBGQlFVRXNRMEZCU1N4RFFVRkZPRUlzVDBGQlFVRXNRMEZCVXl4UFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSGVrVnpRaXhYUVVGQlFTeERRVUZaTTBjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjA4c1owSkJRVUZCTEVOQlFXbENMRmxCUVVFc1EwRkJZME1zUzBGQlFVRXNSVUZCUVVFc1EwRkRNVU50Unl4WFFVRkJRU3hEUVVGWk0wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5dEVMRWxCUVVGQkxFTkJRVXNzWjBOQlFVRXNRMEZCUVN4RFFVRnJRMUlzUjBGQlFVRXNRMEZCU1N4RFFVRkZPRUlzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSGVrVnpRaXhYUVVGQlFTeERRVUZaTTBjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl0RUxFbEJRVUZCTEVOQlFVc3NaME5CUVVFc1EwRkJRU3hEUVVGclEzaEVMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZORExFdEJRVUZCTEVWQlFVRkJMRU5CUXpWRkxFbEJRVWwxUml4VFFVRkJRU3hEUVVOS1dTeFhRVUZCUVN4RFFVRlpNMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXRFTEVsQlFVRkJMRU5CUVVzc1owTkJRVUVzUTBGQlFTeERRVUZyUTNORUxHRkJRVUZCTEVOQlFXTXNhMEpCUVVFc1EwRkJRU3hEUVVOd1JWWXNWMEZCUVVFc1EwRkJXVE5ITEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNyUkN4SlFVRkJRU3hEUVVGTExHZERRVUZCTEVOQlFVRXNRMEZCYTBOelJDeGhRVUZCUVN4RFFVRmpMRzlDUVVGQkxFTkJRVUVzUTBGRFZ5eEpRVUZCTEVWQlFUTkZWaXhYUVVGQlFTeERRVUZaTTBjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl0RUxFbEJRVUZCTEVOQlFVc3NaME5CUVVFc1EwRkJRU3hEUVVGclF6QkNMRTlCUVVGQkxFTkJRVkZOTEZOQlFVRkJMRVZCUXpsRVdTeFhRVUZCUVN4RFFVRlpNMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXRFTEVsQlFVRkJMRU5CUVVzc1owTkJRVUVzUTBGQlFTeERRVUZyUXpCQ0xFOUJRVUZCTEVOQlFWRk5MRk5CUVVGQkxFTkJRVmtzVFVGQlFTeERRVU14UlVFc1UwRkJRVUVzUTBGQldTeERRVUZCTEVkQlIxcFpMRmRCUVVGQkxFTkJRVmt6Unl4RFFVRkJRU3hEUVVGQlFTeERRVUZISzBRc1NVRkJRVUVzUTBGQlN5eG5RMEZCUVN4RFFVRkJMRU5CUVd0RE1FSXNUMEZCUVVFc1EwRkJVVTBzVTBGQlFVRXNRMEZCV1N4SlFVRkJMRU5CUXpGRlFTeFRRVUZCUVN4RFFVRkJRU3hEUVVGaExFTkJRVUVzUTBGQlFTeERRVWRxUWl4SlFVRkpOVVlzU1VGQlFVRXNRMEZCVDNkSExGZEJRVUZCTEVOQlFWa3pSeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhLMFFzU1VGQlFVRXNRMEZCU3l4blEwRkJRU3hEUVVGQkxFTkJRV3REYUVRc1YwRkJRVUVzUTBGRk4wUmxMRWxCUVVGQkxFTkJRVTl1UXl4SlFVRkJRU3hEUVVGTE1rZ3NVMEZCUVVFc1EwRkJWVGxJTEUxQlFVRkJMRU5CUVU5clJpeExRVUZCUVN4RFFVRk5XQ3hKUVVGQlFTeERRVUZMTEdOQlFVRXNRMEZCUVN4RFFVRnBRalZFTEVsQlFVRkJMRU5CUVUwMFJpeFRRVUZCUVN4RFFVRkJRU3hEUVVjdlJIZENMR1ZCUVVGQkxFTkJSbGMxU0N4SlFVRkJRU3hEUVVGTE5rZ3NWMEZCUVVFc1EwRkJXU3hEUVVGRmRFUXNVVUZCUVVFc1EwRkJWWEJETEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJXSXhRaXhQUVVGQlFTeERRVUZSTEhGQ1FVRkJMRU5CUVVFc1EwRkRka01zU1VGQlN5eEpRVUZKY1Vnc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxHTEdWQlFVRkJMRU5CUVdkQ05VSXNUVUZCUVVFc1EwRkJVVGhDTEVOQlFVRkJMRVZCUVVGQkxFTkJRM2hEWWl4WlFVRkJRU3hEUVVGaFlTeERRVUZCUVN4RFFVRkJRU3hEUVVGSE1VUXNTVUZCUVVFc1EwRkJTeXc0UWtGQlFTeERRVUZCTEVOQlFXZERka0lzVTBGQlFVRXNRMEZCV1N0RkxHVkJRVUZCTEVOQlFXZENSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhNVVFzU1VGQlFVRXNRMEZCU3l3NFFrRkJRU3hEUVVGQkxFTkJRV2REZGtJc1UwRkJRVUVzUTBGSE4waHZSU3haUVVGQlFTeERRVUZsYkVNc1MwRkJRVUVzUTBGQlRYUkZMRTlCUVVGQkxFTkJRVkVzY1VKQlFVRXNRMEZCUVN4RFFVTTNRbXRGTEUxQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzFBelJTeEpRVUZCUVN4RFFVRkxiMGdzVFVGQlFVRXNRMEZCVDNaSUxFMUJRVUZCTEVOQlFVOXJSaXhMUVVGQlFTeERRVUZOV0N4SlFVRkJRU3hEUVVGTExIRkNRVUZCTEVOQlFVRXNRMEZCUVN4RlFVTXZRblpGTEUxQlFVRkJMRU5CUVU5clJpeExRVUZCUVN4RFFVRk5XQ3hKUVVGQlFTeERRVUZMTEhGQ1FVRkJMRU5CUVVFc1EwRkJkVUl5UkN4VFFVRkJRU3hEUVVGVmJrY3NTMEZCUVVFc1JVRkJRVUVzUTBGREwwTXJReXhOUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxJTTBVc1NVRkJRVUVzUTBGQlMyOUlMRTFCUVVGQkxFTkJRVTkyU0N4TlFVRkJRU3hEUVVGUGEwWXNTMEZCUVVFc1EwRkJUVmdzU1VGQlFVRXNRMEZCU3l4eFFrRkJRU3hEUVVGQkxFTkJRVUVzUlVGREwwSjJSU3hOUVVGQlFTeERRVUZQYTBZc1MwRkJRVUVzUTBGQlRWZ3NTVUZCUVVFc1EwRkJTeXh4UWtGQlFTeERRVUZCTEVOQlFYVkNNa1FzVTBGQlFVRXNRMEZCVlc1SExFdEJRVUZCTEVWQlFVRkJMRU5CUXk5REswTXNUVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5VaXhKUVVGSlFTeE5RVUZCUVN4RFFVRlRMRWxCUVVFc1EwRkRTak5GTEVsQlFVRkJMRU5CUVV0dlNDeE5RVUZCUVN4RFFVRlBka2dzVFVGQlFVRXNRMEZCVDJ0R0xFdEJRVUZCTEVOQlFVMVlMRWxCUVVGQkxFTkJRVXNzY1VKQlFVRXNRMEZCUVN4RFFVRkJMRWRCUXk5Q2EwUXNWMEZCUVVFc1EwRkJZM3BJTEUxQlFVRkJMRU5CUVU5clJpeExRVUZCUVN4RFFVRk5XQ3hKUVVGQlFTeERRVUZMTEhGQ1FVRkJMRU5CUVVFc1EwRkJkVUo0UXl4TFFVRkJRU3hEUVVGQlFTeERRVWQwUkRWQ0xFbEJRVUZCTEVOQlFVdHZTQ3hOUVVGQlFTeERRVUZQZGtnc1RVRkJRVUVzUTBGQlQydEdMRXRCUVVGQkxFTkJRVTFZTEVsQlFVRkJMRU5CUVVzc2NVSkJRVUVzUTBGQlFTeERRVUZCTEVkQlF5OUNiVVFzVjBGQlFVRXNRMEZCWXpGSUxFMUJRVUZCTEVOQlFVOXJSaXhMUVVGQlFTeERRVUZOV0N4SlFVRkJRU3hEUVVGTExIRkNRVUZCTEVOQlFVRXNRMEZCZFVKNFF5eExRVUZCUVN4RFFVRkJRU3hEUVVjelJDeEpRVUZMTEVsQlFVbDJRaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNUWkhMRWxCUVVGQkxFTkJRVXRzUWl4TlFVRkJRU3hEUVVGUk0wWXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN5eERRVU5zUXl4SlFVRkpLMFVzU1VGQlFVRXNRMEZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRMWhwUXl4UlFVRkJRU3hEUVVGWGRFTXNTMEZCUVVFc1EwRkJUWFJGTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEcxRFFVRkJRU3hGUVVFNFEwb3NRMEZCUVVFc1EwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRkwwUXNTVUZCU3l4SlFVRkplVWdzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFVMRkZCUVVGQkxFTkJRVk55UWl4TlFVRkJRU3hEUVVGUk9FSXNRMEZCUVVFc1JVRkJRVUVzUTBGRGFrTlVMRkZCUVVGQkxFTkJRVk5UTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRGTEZOQlFVRkJMRU5CUVZVc1EwRkJReXhUUVVGQkxFTkJRVUVzUTBGQlFTeERRVTh6UWl4SFFVcEphRWtzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMXRSaXhYUVVGQlFTeERRVUZCUVN4RlFVRjNRaXhEUVVGQkxFVkJRVkp1UXl4SlFVRkJRU3hGUVVGcFFuQkdMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmNVVXNVMEZCUVVFc1EwRkJWVGxDTEUxQlFVRkJMRU5CUVVGQkxFZEJRMnBGVXl4SlFVRkJRU3hEUVVGUGNVSXNVMEZCUVVFc1EwRkJWVGxDTEUxQlFVRkJMRU5CUVU4MFF5eFhRVUZCUVN4RFFVRmhSaXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkeVEzSklMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmEwWXNWMEZCUVVFc1EwRkJRVUVzUlVGQmQwSXNRMEZCUVN4RlFVRlNiRU1zU1VGQlFVRXNRMEZCWlN4RFFVTXhRMEVzU1VGQlFVRXNRMEZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRMUFzU1VGQlN5eEpRVUZKTUVNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxVTEZGQlFVRkJMRU5CUVZOeVFpeE5RVUZCUVN4RFFVRlJPRUlzUTBGQlFVRXNSVUZCUVVFc1EwRkRha01zUjBGQlNWUXNVVUZCUVVFc1EwRkJVMU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSekZITEZkQlFVRkJMRU5CUVZsRExGZEJRVUZCTEVWQlFVRkJMRU5CUVdOclJTeFJRVUZCUVN4RFFVRlRLMElzVjBGQlFVRXNRMEZCV1dwSExGZEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRV2RDTEVOQlF6TkZLMFFzU1VGQlFVRXNRMEZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRMUFzUzBGQlFTeERRVUZCTEVOQlMxb3NSMEZCU1VFc1NVRkJRVUVzUTBGRFFTeEpRVUZMTEVsQlFVa3dReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNWUXNVVUZCUVVFc1EwRkJVM0pDTEUxQlFVRkJMRU5CUVZFNFFpeERRVUZCUVN4RlFVRkJRU3hEUVVOcVExUXNVVUZCUVVFc1EwRkJVMU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSMnhGTEVkQlFVRkJMRU5CUVVrc1EwRkJSVGhDTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlRYWkRNVVlzU1VGQlFVRXNRMEZCUzI5RExFdEJRVUZCTEVOQlFVMXhSU3hUUVVGQlFTeERRVUZWUXl4TFFVRkJRU3hEUVVGQlFTeEhRVU55UWpOQ0xFdEJRVUZCTEVOQlFVMXJSQ3gzUWtGQlFVRXNRMEZCZVVJc2RVSkJRVUVzUTBGQmVVSndTQ3hMUVVGQlFTeEZRVUZCUVN4RFFVTndSQ3hKUVVGSmNVZ3NUVUZCUVVFc1EwRkJVM0pJTEV0QlFVRkJMRU5CUVUxeFNDeE5RVUZCUVN4RFFVTnVRaXhIUVVGSlFTeE5RVUZCUVN4RFFVRlBlRVlzVTBGQlFVRXNRMEZCVlhsR0xGRkJRVUZCTEVOQlFWTXNiMEpCUVVFc1EwRkJRU3hEUVVOMFFtNUpMRWxCUVVGQkxFTkJRVXR2UXl4TFFVRkJRU3hEUVVGTmNVVXNVMEZCUVVFc1EwRkJWVU1zUzBGQlFVRXNRMEZCUVVFc1JVRkRja0pFTEZOQlFVRkJMRU5CUVZWRExFdEJRVUZCTEVOQlFVMDNSaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVVkdVFpeEhRVUZKY1Vnc1RVRkJRVUVzUTBGQlQzaEdMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExIbENRVUZCTEVOQlFVRXNSVUZCUVN4RFFVRXJRbTVKTEVsQlFVRkJMRU5CUVV0dlNDeE5RVUZCUVN4RFFVRlBZeXhOUVVGQlFTeERRVUZQUlN4VlFVRkJRU3hEUVVGWExEQkNRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRTRRaXhEUVVOeVNFWXNUVUZCUVVFc1EwRkJUM2hHTEZOQlFVRkJMRU5CUVZWNVJpeFJRVUZCUVN4RFFVRlRMSGxDUVVGQkxFTkJRVUVzUjBGRE0wSkVMRTFCUVVGQkxFTkJRVk5CTEUxQlFVRkJMRU5CUVU5RkxGVkJRVUZCTEVOQlFWY3NNRUpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSUzlDTEVsQlFVazFSU3hSUVVGQlFTeERRVUZYTUVVc1RVRkJRVUVzUTBGQlQzQkRMRTlCUVVGQkxFTkJRVkZKTEVkQlFVRkJMRU5CVFRsQ0xFZEJTa0V4UkN4UFFVRkJRU3hEUVVGUk1FSXNUVUZCUVVFc1JVRkJRVUVzUTBGRFVuVkVMR2xDUVVGQlFTeERRVUZyUW1wRkxGRkJRVUZCTEVOQlFVRkJMRU5CUVZWSkxFZEJRVUZCTEVOQlFVa3NRMEZCUlVvc1VVRkJRVUVzUTBGQlZTeFZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTTFRMmxGTEdsQ1FVRkJRU3hEUVVGclFtcEZMRkZCUVVGQkxFTkJRVUZCTEVOQlFWVnFSQ3hOUVVGQlFTeERRVUZQYVVNc1QwRkJRVUVzUTBGQlFVRXNRMEZGTDBJelF5eE5RVUZCUVN4RFFVRlBhMFlzUzBGQlFVRXNRMEZCVFhKRExGTkJRVUZCTEVOQlFWVjVSaXhSUVVGQlFTeERRVUZUTEd0Q1FVRkJMRU5CUVVFc1EwRkJjVUlzUTBGRGNrUXNTVUZCU1dwRExFZEJRVUZCTEVOQlFVMXVRaXhMUVVGQlFTeERRVUZOZEVVc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc2JVTkJRVUZCTEVWQlFUaERLME1zVVVGQlFVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRPVVFzU1VGQlN5eEpRVUZKYmtRc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWsyUml4SFFVRkJRU3hEUVVGSlJpeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkROVUkyUml4SFFVRkJRU3hEUVVGSk4wWXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIzRkRMRk5CUVVGQkxFTkJRVlV5Uml4TlFVRkJRU3hEUVVGUExEQkNRVUZCTEVOQlFVRXNRMEZGTlVJM1JpeFBRVUZCUVN4RFFVRlJNRUlzVFVGQlFVRXNSVUZCUVVFc1EwRkZTR2RGTEUxQlFVRkJMRU5CUVU5NFJpeFRRVUZCUVN4RFFVRlZlVVlzVVVGQlFVRXNRMEZCVXl3d1FrRkJRU3hEUVVGQkxFVkJRMjlETEVOQlFVRXNSVUZCTTBSb1FpeFhRVUZCUVN4RFFVRlpNVWNzVDBGQlFVRXNRMEZCVVN3eVFrRkJRU3hEUVVGQkxFTkJRVFpDZFVZc1RVRkJRVUVzUlVGRGFrUnVSeXhOUVVGQlFTeERRVUZQYTBZc1MwRkJRVUVzUTBGQlRYSkRMRk5CUVVGQkxFTkJRVlYzUWl4TlFVRkJRU3hEUVVGUExHdENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVU5c1JHRXNTMEZCUVVFc1EwRkJUWFZFTEU5QlFVRkJMRU5CUVZGNlNDeExRVUZCUVN4RlFVRkJRU3hEUVVOV0xFbEJRVWx4U0N4TlFVRkJRU3hEUVVGVGNrZ3NTMEZCUVVFc1EwRkJUWEZJTEUxQlFVRkJMRU5CUTI1Q0xFZEJRVWx5U0N4TFFVRkJRU3hEUVVGTk1FZ3NVVUZCUVVFc1EwRkJWeXhIUVVGQkxFZEJRMkpNTEUxQlFVRkJMRU5CUVU5NFJpeFRRVUZCUVN4RFFVRlZlVVlzVVVGQlFVRXNRMEZCVXl4NVFrRkJRU3hEUVVGQkxFVkJRVUVzUTBGQkswSnVTU3hKUVVGQlFTeERRVUZMYjBnc1RVRkJRVUVzUTBGQlQyTXNUVUZCUVVFc1EwRkJUMFVzVlVGQlFVRXNRMEZCVnl3d1FrRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUU0UWl4RFFVTm9TRVlzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVjVSaXhSUVVGQlFTeERRVUZUTEhsQ1FVRkJMRU5CUVVFc1IwRkRNMEpFTEUxQlFVRkJMRU5CUVZOQkxFMUJRVUZCTEVOQlFVOUZMRlZCUVVGQkxFTkJRVmNzTUVKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUlM5Q0xFbEJRVWsxUlN4UlFVRkJRU3hEUVVGWE1FVXNUVUZCUVVFc1EwRkJUM0JETEU5QlFVRkJMRU5CUVZGSkxFZEJRVUZCTEVOQlJUbENMRWRCUVN0RUxFTkJRVUVzUlVGQk0wUnBRaXhYUVVGQlFTeERRVUZaTVVjc1QwRkJRVUVzUTBGQlVTd3lRa0ZCUVN4RFFVRkJMRU5CUVRaQ2RVWXNUVUZCUVVFc1JVRkJRVUVzUTBGQlowSnVSeXhOUVVGQlFTeERRVUZQYTBZc1MwRkJRVUVzUTBGQlRYSkRMRk5CUVVGQkxFTkJRVlY1Uml4UlFVRkJRU3hEUVVGVExHdENRVUZCTEVOQlFVRXNRMEZCY1VJc1EwRkRkRWgwU1N4TlFVRkJRU3hEUVVGUGEwWXNTMEZCUVVFc1EwRkJUWEpETEZOQlFVRkJMRU5CUVZWRExFZEJRVUZCTEVOQlFVa3NhMEpCUVVFc1EwRkJRU3hEUVVNelFpeEpRVUZKZFVRc1IwRkJRVUVzUTBGQlRXNUNMRXRCUVVGQkxFTkJRVTEwUlN4UFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4dFEwRkJRVUVzUlVGQk9FTXJReXhSUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTTVSQ3hKUVVGTExFbEJRVWx1UkN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVFpHTEVkQlFVRkJMRU5CUVVsR0xFMUJRVUZCTEVOQlFWRXpSaXhEUVVGQlFTeEZRVUZCUVN4RFFVTTFRalpHTEVkQlFVRkJMRU5CUVVrM1JpeERRVUZCUVN4RFFVRkJRU3hEUVVGSGNVTXNVMEZCUVVFc1EwRkJWVU1zUjBGQlFVRXNRMEZCU1N3d1FrRkJRU3hEUVVGQkxFTkJSWHBDU0N4UFFVRkJRU3hEUVVGUk1FSXNUVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRlJhRU40UlN4VlFVRkJRU3hEUVVGWFJ5eE5RVUZCUVN4RFFVRlRMRU5CUVVWTExFOUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkpiMFVzUzBGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsUExFOUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkhUaXhSUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZCU1dsRkxGRkJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkpReXhQUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUXpOR0xFbEJWMGxETEVsQlFVRkJMRU5CV0VGRExFbEJRVUZCTEVOQlFVOHpTU3hKUVVGQlFTeERRVUZMUXl4aFFVRkJRU3hEUVVGakxFTkJRekZDUXl4UFFVRkJRU3hEUVVGVFRDeE5RVUZCUVN4RFFVRlBTeXhQUVVGQlFTeEZRVUZYTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldVNHNUVUZCUVVFc1EwRkJUMDBzVlVGQlFVRXNRMEZCV1d0RExGRkJRVUZCTEVOQlFWVXNRMEZEZUVVc1EwRkJSVzVETEU5QlFVRkJMRU5CUVZNc1NVRkJRU3hEUVVGTlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNhMEpCUVVFc1EwRkJRU3hEUVVGelFra3NTVUZCUVVFc1EwRkJUVmdzVFVGQlFVRXNRMEZCVDNsRkxFdEJRVUZCTEVOQlFVRkJMRU5CUTNwRkxFTkJRVVZ3UlN4UFFVRkJRU3hEUVVGVExGTkJRVUVzUTBGQlYwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMSEZDUVVGQkxFTkJRWFZDSzBNc1MwRkJRVUVzUTBGQlR5eERRVUZGZDBNc2JVSkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFOUJRVUZCTEVWQlFTdENPVVlzVFVGQlFVRXNRMEZCVDJkR0xFOUJRVUZCTEVOQlFVRkJMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlEycElMRU5CUVVVelJTeFBRVUZCUVN4RFFVRlRMRk5CUVVFc1EwRkJWME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEc5Q1FVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWx1UkhWSkxFbEJRVUZCTEVOQlFVdHFSeXhUUVVGQlFTeERRVUZWUXl4SFFVRkJRU3hEUVVGSkxGbEJRVUVzUTBGQlFTeERRVVZtTTBNc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTEyUXl4TlFVRkJRU3hEUVVGUEswa3NUVUZCUVVFc1EwRkJRVUVzUlVGQlV5OUpMRTFCUVVGQkxFTkJRVThyU1N4TlFVRkJRU3hEUVVGUGNra3NUVUZCUVVFc1EwRkJUMjlKTEVsQlFVRkJMRU5CUVVGQkxFTkJSWEJFTEVsQlFVbEZMRmxCUVVGQkxFTkJRV1ZHTEVsQlFVRkJMRU5CUVV0MlJTeEpRVUZCUVN4RFFVRkxMSE5DUVVGQkxFTkJRVUVzUTBGRk4wSXNTVUZCU3l4SlFVRkpNRVVzUjBGQlFVRXNTVUZCVDJwS0xFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVUZWTEVOQlF6ZENiVVVzU1VGQlFVRXNRMEZCVVRGSkxFbEJRVUZCTEVOQlFVdHZReXhMUVVGQlFTeERRVUZOZGtNc1RVRkJRVUVzUTBGQlR6QkZMRkZCUVVGQkxFTkJRVk4xUlN4SFFVRkJRU3hEUVVGQlFTeERRVUZMU2l4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZoTjBrc1RVRkJRVUVzUTBGQlR6QkZMRkZCUVVGQkxFTkJRVk4xUlN4SFFVRkJRU3hEUVVGQlFTeERRVUZMU2l4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRGNFWXNTVUZCU1Vzc1UwRkJRVUVzUTBGQldXeEtMRTFCUVVGQkxFTkJRVTh3UlN4UlFVRkJRU3hEUVVGVGRVVXNSMEZCUVVFc1EwRkJRVUVzUTBGQlN6VkhMRXRCUVVGQkxFVkJRVk5zUXl4SlFVRkJRU3hEUVVGTFowb3NaMEpCUVVGQkxFTkJRV2xDUml4SFFVRkJRU3hEUVVGQlFTeERRVUZMZWtnc1YwRkJRVUVzUlVGQlFVRXNRMEZEY2tVMFNDeExRVUZCUVN4RFFVRlJTaXhaUVVGQlFTeERRVUZoT1VZc1YwRkJRVUVzUTBGQldTeERRVU5xUXpkRExFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzTWtKQlFVRXNRMEZCUVN4RFFVRXJRbWxETEZGQlFVRkJMRU5CUVZVc1EwRkRNVVVzUTBGQlJXNURMRTlCUVVGQkxFTkJRVk1zVDBGQlFTeERRVUZUTWtJc1NVRkJRVUVzUTBGQlRXdElMRk5CUVVGQkxFTkJRVmMxU1N4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c2EwSkJRVUVzUTBGQmIwSTRTU3hIUVVGQlFTeERRVUZMU2l4SFFVRkJRU3hEUVVGSmVrZ3NWMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpNMFpqTEVsQlFVRkJMRU5CUVU4NFJ5eExRVUZCUVN4RFFVRk5iRWNzVjBGQlFVRXNRMEZCV1d4RUxFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVUZUZFVVc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkROME16Unl4SlFVRkJRU3hEUVVGTFR5eFRRVUZCUVN4RFFVRlZReXhIUVVGQlFTeERRVUZKTEdsQ1FVRkJMRU5CUVVFc1EwRkRaak5ETEVsQlFVRkJMRU5CUVV0dlF5eExRVUZCUVN4RFFVRk5ka01zVFVGQlFVRXNRMEZCVHpCRkxGRkJRVUZCTEVOQlFWTjFSU3hIUVVGQlFTeERRVUZCUVN4RFFVRkxTaXhKUVVGQlFTeERRVUZCUVN4RlFVRlBUeXhMUVVGQlFTeERRVUZOYkVjc1YwRkJRVUVzUTBGQldTeERRVUZGTjBNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRk5MRWxCUVVGQkxFTkJRVTFZTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVRlRkVVVzUjBGQlFVRXNRMEZCUVVFc1EwRkJTMG9zU1VGQlFVRXNRMEZCVFhaSkxGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eHBRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWc1NVb3NTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBNa2tzVVVGQlFVRXNRMEZCUVVFc1JVRkJZVE5KTEUxQlFVRkJMRU5CUVU4eVNTeFJRVUZCUVN4RFFVRlRha1FzVVVGQlFVRXNRMEZCVTNWRUxFZEJRVUZCTEVOQlFVRkJMRWRCUTNoRU0wY3NTVUZCUVVFc1EwRkJTM0ZITEZGQlFVRkJMRU5CUVVGQkxFTkJRVmNzUTBGQlFTeERRVUZCTEVOQlNYaENMRWxCUVVzc1NVRkJTVTBzUjBGQlFVRXNTVUZCVDJwS0xFMUJRVUZCTEVOQlFVODBTU3hQUVVGQlFTeERRVU51UWtVc1NVRkJRVUVzUTBGQlMzWkZMRWxCUVVGQkxFTkJRVXNzY1VKQlFVRXNRMEZCUVN4RFFVRjFRbkpDTEZkQlFVRkJMRU5CUVZsc1JDeE5RVUZCUVN4RFFVRlBORWtzVDBGQlFVRXNRMEZCVVVzc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxhRVVzVDBGR1FVZ3NTVUZCUVVFc1EwRkJTelZHTEZkQlFVRkJMRU5CUVZrc1EwRkJSVGRETEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNhMEpCUVVFc1EwRkJRU3hEUVVGelFpdEpMRXRCUVVGQkxFTkJRVThzUTBGQlJYcElMRWxCUVVGQkxFTkJRVTBzVDBGQlFTeERRVUZUTUVnc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlYxUXNTVUZCUVVFc1EwRkJTek5ITEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJXaElNa2NzU1VGQlFVRXNRMEZIV0dwS0xFMUJRVUZCTEVOQlFVOUhMRTFCUVVGQkxFTkJRVk1zUTBGQlJYbEZMRXRCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZKUXl4UlFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGQlFTeERRVUZOT0VVc1VVRkJRVUVzUlVGQldYaEpMRXRCUVVGQkxFVkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlEzSkVMRWxCUVVsNVNTeE5RVUZCUVN4RFFVRlRkRW9zU1VGQlFVRXNRMEZCUzBNc1lVRkJRVUVzUTBGQll5eERRVU0xUWtNc1QwRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVOURMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhqUVVGQkxFTkJRVUVzUTBGQmEwSnBReXhSUVVGQlFTeERRVUZWTEVOQlF6ZEVMRU5CUVVWdVF5eFBRVUZCUVN4RFFVRlRMRWxCUVVFc1EwRkJUVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEc5Q1FVRkJMRU5CUVVFc1EwRkJkMEpKTEVsQlFVRkJMRU5CUVUxWUxFMUJRVUZCTEVOQlFVOTVSU3hMUVVGQlFTeEZRVUZUTEVWQlFVRXNRMEZCUVN4RFFVTndSaXhEUVVGRmNFVXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVTlETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4MVFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZKTDBNc1NVRkJTeXhKUVVGSk5FVXNUMEZCUVVFc1NVRkJWMjVHTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVTjJRaXRGTEUxQlFVRkJMRU5CUVU5c1JpeEpRVUZCUVN4RFFVRkxMSGRDUVVGQkxFTkJRVUVzUTBGQk1FSnlRaXhYUVVGQlFTeERRVUZaTEVOQlFVVTNReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExIRkNRVUZCTEVOQlFYVkNLMFVzVjBGQlFVRXNRMEZCWVVnc1QwRkJRVUVzUTBGQlFVRXNRMEZCVjNoRkxFbEJRVUZCTEVOQlFVMTNSU3hQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVZOdVNpeFBRVTVCYzBVc1RVRkJRVUVzUTBGQlR6RkpMR2RDUVVGQlFTeERRVUZwUWl4VlFVRkJMRU5CUVZsRExFdEJRVUZCTEVWQlFVRkJMRU5CUXpWQ1FTeExRVUZCUVN4RFFVRk5jVWdzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVjVSaXhSUVVGQlFTeERRVUZUTEhGQ1FVRkJMRU5CUVVFc1JVRkRhRU5yUWl4UlFVRkJRU3hEUVVGVGVFa3NTMEZCUVVFc1EwRkJUWEZJTEUxQlFVRkJMRU5CUVU5d1F5eFBRVUZCUVN4RFFVRlJjRVVzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKTDBJMFNDeE5RVUZCUVN4RFFVZFlOVW9zUzBGQlFVRXNRMEZCVFhOR0xFOUJRVUZCTEVOQlFWTnVSaXhOUVVGQlFTeERRVUZUTEVOQlFVVjVSU3hMUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCU1c1RkxGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkROME1zU1VGQlNXOUtMRk5CUVVGQkxFTkJRVmt4U2l4TlFVRkJRU3hEUVVGUE1Fb3NVMEZCUVVFc1JVRkJZVU1zVVVGQlFVRXNRMEZCVTI1R0xFbEJRVUZCTEVOQlEzcERReXhMUVVGQlFTeERRVUZSZWtVc1RVRkJRVUVzUTBGQlQzbEZMRXRCUVVGQkxFVkJRVk1zUlVGQlFTeERRVVUxUW5wRkxFMUJRVUZCTEVOQlFVOU5MRlZCUVVGQkxFTkJRV0ZPTEUxQlFVRkJMRU5CUVU5TkxGVkJRVUZCTEVWQlFXTXNSVUZCUVN4RFFVTjZRMDRzVFVGQlFVRXNRMEZCVDAwc1ZVRkJRVUVzUTBGQlYyZEVMRXRCUVVGQkxFTkJRVkYwUkN4TlFVRkJRU3hEUVVGUFRTeFZRVUZCUVN4RFFVRlhaMFFzUzBGQlFVRXNSVUZCVXl4RlFVRkJMRU5CUTNKRWRFUXNUVUZCUVVFc1EwRkJUMDBzVlVGQlFVRXNRMEZCVjJkRUxFdEJRVUZCTEVOQlFVMUhMRXRCUVVGQkxFTkJRVkY2UkN4TlFVRkJRU3hEUVVGUFRTeFZRVUZCUVN4RFFVRlhaMFFzUzBGQlFVRXNRMEZCVFVjc1MwRkJRVUVzUlVGQlV5eE5RVUZCTEVOQlEycEZla1FzVFVGQlFVRXNRMEZCVDAwc1ZVRkJRVUVzUTBGQlYyZEVMRXRCUVVGQkxFTkJRVTFKTEUxQlFVRkJMRU5CUVZNeFJDeE5RVUZCUVN4RFFVRlBUU3hWUVVGQlFTeERRVUZYWjBRc1MwRkJRVUVzUTBGQlRVa3NUVUZCUVVFc1JVRkJWU3hOUVVGQkxFTkJSVzVGTEVsQlFVbHJSeXhMUVVGQlFTeERRVUZSZWtvc1NVRkJRVUVzUTBGQlMwTXNZVUZCUVVFc1EwRkJZeXhEUVVNelFrTXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVTlETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4alFVRkJMRU5CUVVFc1EwRkJhMEpwUXl4UlFVRkJRU3hEUVVGVkxFTkJRemRFTEVOQlEwbHVReXhQUVVGQlFTeERRVUZUTEV0QlFVRXNRMEZCVDBNc1ZVRkJRVUVzUTBGQldTeERRVUZGTmtJc1JVRkJRVUVzUTBGQlNTeGxRVUZCTEVOQlFXbENOVUlzUzBGQlFVRXNRMEZCVHl4eFFrRkJRU3hEUVVGQkxFTkJRWGxDYVVNc1VVRkJRVUVzUTBGQlZTeERRVU42Uml4RFFVTkpia01zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NZVUZCUVN4RFFVRmxOVUlzUzBGQlFVRXNRMEZCVHl4dFFrRkJRU3hEUVVGQkxFTkJRWFZDYVVNc1VVRkJRVUVzUTBGQlZTeERRVU55Uml4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0RExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpiVUlzUzBGQlFVRXNRMEZCVHl4RFFVRkZkVWNzUzBGQlFVRXNRMEZCVHl4VFFVRkJMRU5CUVZjdlJpeFBRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVmR1UkN4SlFVRkJRU3hEUVVGTk9FUXNTMEZCUVVFc1EwRkJRVUVzUTBGRE0wWXNRMEZCUlhCRkxFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxReXhWUVVGQlFTeERRVUZaTEVOQlFVVTJRaXhGUVVGQlFTeERRVUZKTEdWQlFVRXNRMEZCYVVJMVFpeExRVUZCUVN4RFFVRlBMSGREUVVGQkxFTkJRVUVzUTBGQlFTeERRVU14UkN4RFFVRkZSaXhQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVUZGTmtJc1JVRkJRVUVzUTBGQlNTeGpRVUZCTEVOQlFXZENOVUlzUzBGQlFVRXNRMEZCVHl4dFEwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlIycEZMRU5CUTBsR0xFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVTJRaXhGUVVGQlFTeERRVUZKTEdkQ1FVRkJMRU5CUVd0Q05VSXNTMEZCUVVFc1EwRkJUeXh6UWtGQlFTeERRVUZCTEVOQlFUQkNhVU1zVVVGQlFVRXNRMEZCVlN4RFFVTXpSakpETEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJNa0o0UWl4UFFXNUNRWGxGTEV0QlFVRkJMRU5CUVUxeVJpeEpRVUZCUVN4RFFVRkxMR2RDUVVGQkxFTkJRVUVzUTBGQmEwSjFSaXhoUVVGQlFTeERRVUZqT1Vvc1RVRkJRVUVzUTBGQlQwMHNWVUZCUVVFc1EwRkJRVUVzUTBGRmJFUnpTaXhMUVVGQlFTeERRVUZOY2tZc1NVRkJRVUVzUTBGQlN5eG5Ra0ZCUVN4RFFVRkJMRU5CUVd0Q2VFUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZEYmtRMFNTeExRVUZCUVN4RFFVRk5ja1lzU1VGQlFVRXNRMEZCU3l4blFrRkJRU3hEUVVGQkxFTkJRV3RDTVVJc1UwRkJRVUVzUTBGQlZUSkdMRTFCUVVGQkxFTkJRVThzWlVGQlFTeERRVUZCTEVOQlF6bERiMElzUzBGQlFVRXNRMEZCVFhKR0xFbEJRVUZCTEVOQlFVc3NaMEpCUVVFc1EwRkJRU3hEUVVGclFqRkNMRk5CUVVGQkxFTkJRVlV5Uml4TlFVRkJRU3hEUVVGUExHbENRVUZCTEVOQlFVRXNRMEZGTVVOdlFpeExRVUZCUVN4RFFVRk5ja1lzU1VGQlFVRXNRMEZCU3l4blFrRkJRU3hEUVVGQkxFTkJRV3RDTVVJc1UwRkJRVUVzUTBGQlZYbEdMRkZCUVVGQkxFTkJRVk1zWlVGQlFTeERRVUZCTEVOQlEyaEVjMElzUzBGQlFVRXNRMEZCVFhKR0xFbEJRVUZCTEVOQlFVc3NaMEpCUVVFc1EwRkJRU3hEUVVGclFsSXNSMEZCUVVFc1EwRkJTU3hEUVVGRlRDeE5RVUZCUVN4RFFVRlJNVVFzVFVGQlFVRXNRMEZCVDAwc1ZVRkJRVUVzUTBGQlYyZEVMRXRCUVVGQkxFTkJRVTFKTEUxQlFVRkJMRU5CUVZGRUxFdEJRVUZCTEVOQlFVOTZSQ3hOUVVGQlFTeERRVUZQVFN4VlFVRkJRU3hEUVVGWFowUXNTMEZCUVVFc1EwRkJUVWNzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSE1VZHRSeXhMUVVGQlFTeERRVUZOY2tZc1NVRkJRVUVzUTBGQlN5eG5Ra0ZCUVN4RFFVRkJMRU5CUVd0Q1VpeEhRVUZCUVN4RFFVRkpMRU5CUVVWTUxFMUJRVUZCTEVOQlFWRXNiMEpCUVVFc1EwRkJjMEpFTEV0QlFVRkJMRU5CUVU4c2IwSkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVbG9SbTFITEV0QlFVRkJMRU5CUVUxeVJpeEpRVUZCUVN4RFFVRkxMR1ZCUVVFc1EwRkJRU3hEUVVGcFFuaEVMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZORExFdEJRVUZCTEVWQlFVRkJMRU5CUTJ4RU5Fa3NTMEZCUVVFc1EwRkJUWFpHTEUxQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjFaeFJpeFRRVUZCUVN4RFFVRlZhRW9zVFVGQlFVRXNRMEZCVDJ0S0xFdEJRVUZCTEVOQlFVRkJMRU5CUTFaQkxFdEJRVUZCTEVOQlIxZ3ZTaXhaUVVGQlFTeERRVUZoUnl4TlFVRkJRU3hEUVVGVExFTkJRVVVyUWl4TFFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlNUSkRMRkZCUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZKY1VZc1VVRkJRVUVzUTBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOMlJDeEpRVWRKUXl4TlFVRkJRU3hEUVVoQmRFZ3NVVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRMWgxU0N4aFFVRkJRU3hEUVVGQlFTeERRVUZuUWl4RFFVRkJMRU5CUTJoQ1F5eGpRVUZCUVN4RFFVRkJRU3hEUVVGclFpeERRVUZCTEVOQlNXeENReXhOUVVGQlFTeERRVUZUYUVzc1NVRkJRVUVzUTBGQlMwTXNZVUZCUVVFc1EwRkJZeXhEUVVNMVFrTXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVTlETEZWQlFVRkJMRU5CUVZsT0xFMUJRVUZCTEVOQlFVOU5MRlZCUVVGQkxFTkJRVmxyUXl4UlFVRkJRU3hEUVVGVkxFTkJRM0pFTEVOQlEwbHVReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExITkNRVUZCTEVOQlFVRXNRMEZCTWtKcFF5eFJRVUZCUVN4RFFVRlZMRU5CUTNaRkxFTkJRVVZ1UXl4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMRzlDUVVGQkxFTkJRWE5DZDBJc1MwRkJRVUVzUTBGQlR5OUNMRTFCUVVGQkxFTkJRVThyUWl4TFFVRkJRU3hGUVVGVExFVkJRVUVzUTBGQlNYRkpMRTFCUVVGQkxFTkJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRiRWNzUTBGRFNTOUtMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c2NVSkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVbHNSQ3hEUVVGRlJpeFBRVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEhGQ1FVRkJMRU5CUVhWQ01rWXNWMEZCUVVFc1EwRkJZU3hqUVVGQkxFTkJRV2RDYTBVc1RVRkJRVUVzUTBGQlFVRXNRMEZCVVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOeVJ5eERRVU5KTDBvc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXgxUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkpiRVEwU2l4TlFVRkJRU3hEUVVGUGRFZ3NVMEZCUVVFc1EwRkJWVU1zUjBGQlFVRXNRMEZCU1N4alFVRkJMRU5CUVVFc1EwRkRja0lzU1VGQlNYVklMRkZCUVVGQkxFTkJRVmRHTEUxQlFVRkJMRU5CUVU5SExGbEJRVUZCTEVOQlFXRXNUMEZCUVN4RFFVRkJMRU5CUTI1RFNDeE5RVUZCUVN4RFFVRlBjRWtzUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUTFZMVFpeEpRVUZCUVN4RFFVRkxiMGdzVFVGQlFVRXNRMEZCVHpoRExGRkJRVUZCTEVOQlFVRkJMRWRCUTJKR0xFMUJRVUZCTEVOQlFVOXdTU3hMUVVGQlFTeERRVUZSTlVJc1NVRkJRVUVzUTBGQlMyOUxMRXRCUVVGQkxFTkJRVTB6U2l4UFFVRkJRU3hEUVVGUmVVb3NVVUZCUVVFc1EwRkJVMGNzUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkJUVU1zUTBGQlFVRXNSVUZEYUVNc1JVRkJRU3hGUVVGYVFTeERRVUZCUVN4RFFVRkZReXhKUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxxUWxBc1RVRkJRVUVzUTBGQlQyeEZMRTlCUVVGQkxFTkJRVkVyUkN4TlFVRkJRU3hEUVVGVExFOUJRVUVzUTBGRmVFSXNTVUZCU1hSR0xGRkJRVUZCTEVOQlFWZDVSaXhOUVVGQlFTeERRVUZQTlVZc1NVRkJRVUVzUTBGQlN5eDNRa0ZCUVN4RFFVRkJMRU5CUTNaQ2IwY3NTMEZCUVVFc1EwRkJVVklzVFVGQlFVRXNRMEZCVHpWR0xFbEJRVUZCTEVOQlFVc3NjVUpCUVVFc1EwRkJRU3hEUVVOd1FrMHNUVUZCUVVFc1EwRkJVM05HTEUxQlFVRkJMRU5CUVU4MVJpeEpRVUZCUVN4RFFVRkxMSE5DUVVGQkxFTkJRVUVzUTBGRGNrSnBSU3hOUVVGQlFTeERRVUZUTWtJc1RVRkJRVUVzUTBGQlR6VkdMRWxCUVVGQkxFTkJRVXNzYzBKQlFVRXNRMEZCUVN4RFFVZDZRaXhIUVVaQmRrVXNUVUZCUVVFc1EwRkJUekJGTEZGQlFVRkJMRU5CUVZjeFJTeE5RVUZCUVN4RFFVRlBNRVVzVVVGQlFVRXNSVUZCV1N4RlFVRkJMRU5CUldwRGEwY3NTMEZCUVVFc1EwRkJUVU1zVDBGQlFVRXNRMEZCVVRkTExFMUJRVUZCTEVOQlFVOHdSU3hSUVVGQlFTeERRVUZCUVN4RFFVRlhMRU5CUTJoRExFbEJRVWx2Unl4TFFVRkJRU3hEUVVGUk9Vc3NUVUZCUVVFc1EwRkJUekJGTEZGQlFVRkJMRU5CUTI1Q01VVXNUVUZCUVVFc1EwRkJUekJGTEZGQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVOc1FpeEpRVUZMTEVsQlFVbHNSU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYTkxMRXRCUVVGQkxFTkJRVTB6UlN4TlFVRkJRU3hEUVVGUk0wWXNRMEZCUVVFc1JVRkJRVUVzUTBGRE9VSlNMRTFCUVVGQkxFTkJRVTh3UlN4UlFVRkJRU3hEUVVGVGIwY3NTMEZCUVVFc1EwRkJUWFJMTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVMXpTeXhMUVVGQlFTeERRVUZOZEVzc1EwRkJRVUVzUTBGQlFVRXNRMEZKTVVNc1NVRkJTeXhKUVVGSlFTeERRVUZCUVN4SlFVRkxVaXhOUVVGQlFTeERRVUZQTUVVc1VVRkJRVUVzUTBGQlZTeERRVU16UWl4SlFVRkpkVU1zVFVGQlFVRXNRMEZCVTNaRExGRkJRVUZCTEVOQlFWTjRRaXhYUVVGQlFTeERRVUZaTEVOQlFVVTNReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExIRkNRVUZCTEVOQlFYVkNkMElzUzBGQlFVRXNRMEZCVDNaQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlEzaEhlVWNzVFVGQlFVRXNRMEZCVDJwRkxGTkJRVUZCTEVOQlFWbG9SQ3hOUVVGQlFTeERRVUZQTUVVc1VVRkJRVUVzUTBGQlUyeEZMRU5CUVVGQkxFTkJRVUZCTEVOQlEyNURlVWNzVFVGQlFVRXNRMEZCVDJ4R0xFdEJRVUZCTEVOQlFWRjJRaXhEUVVGQlFTeERRVWR1UWl4SlFVRkxMRWxCUVVscFN5eERRVUZCUVN4SlFVRkxUaXhOUVVGQlFTeERRVUZQY0Vrc1MwRkJRVUVzUTBGRGFrSTBTU3hMUVVGQlFTeERRVUZOTlVrc1MwRkJRVUVzUlVGQlV5OUNMRTFCUVVGQkxFTkJRVTh3UlN4UlFVRkJRU3hEUVVGVEswWXNRMEZCUVVFc1EwRkJRVUVzUTBGREwwSkZMRXRCUVVGQkxFTkJRVTFKTEdGQlFVRkJMRU5CUVdNc1NVRkJTVU1zVjBGQlFVRXNRMEZCV1N4UlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVsNFF5eEpRVUZKUXl4TlFVRkJRU3hEUVVGQlFTeERRVUZYT1Vzc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTEyUXl4TlFVRkJRU3hEUVVGUEswb3NVVUZCUVVFc1EwRkJRVUVzUlVGQlowTXNRMEZCUVN4RlFVRnVRaTlLTEUxQlFVRkJMRU5CUVU4clNpeFJRVUZCUVN4RFFVVnFSSEJJTEU5QlFVRkJMRU5CUVZWM1NDeE5RVUZCUVN4RFFVRlBka29zVDBGQlFVRXNRMEZCVVN4elFrRkJRU3hEUVVGQkxFTkJSemRDYVVVc1RVRkJRVUVzUTBGQlQzRkVMRk5CUVVGQkxFTkJRVlZ1Unl4TFFVRkJRU3hGUVVGQlFTeERRVU5pTEVsQlFVc3NTVUZCU1haQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKYlVNc1QwRkJRVUVzUTBGQlVYZEVMRTFCUVVGQkxFTkJRVkV6Uml4RFFVRkJRU3hGUVVGQlFTeERRVU16UW0xRExFOUJRVUZCTEVOQlFWRnVReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhaU3hYUVVGQlFTeERRVUZaUXl4WFFVRkJRU3hGUVVGQlFTeERRVUZqYTBVc1VVRkJRVUVzUTBGQlV6TkVMRXRCUVVGQkxFTkJRVTFRTEZkQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlNYSkViVUlzVDBGQlFVRXNRMEZCVVc1RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjeVNDeFRRVUZCUVN4RFFVRlZMRU5CUVVNc1UwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSWRFSjRSaXhQUVVGQlFTeERRVUZSYmtNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjNWRUxFZEJRVUZCTEVOQlFVa3NRMEZCUlRoQ0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJVM1JETEVsQmIwTlpha01zUjBGQlFVRXNRMEZCUzNOSUxFMUJRVUZCTEVOQmNFTmlReXhSUVVGQlFTeERRVUZYYmtzc1MwRkJRVUVzUlVGQlFVRXNRMEZEV0dsS0xHRkJRVUZCTEVOQlFVRkJMRU5CUVdkQ0xFTkJRVUVzUTBGRFF5eFhRVUZCTEVWQlFXSnFTaXhMUVVGQlFTeERRVUZOYVVrc1IwRkJRVUVzUlVGQmMwSnBRaXhqUVVGQlFTeERRVUZwUW5aSUxFOUJRVUZCTEVOQlFWRjNSQ3hOUVVGQlFTeERRVUZUTEVOQlFVRXNSVUZET1VRclJDeGpRVUZCUVN4RlFVRkJRU3hEUVVOQlJDeGhRVUZCUVN4RFFVRkJRU3hEUVVGblFpeERRVUZCTEVWQlJVVXNVMEZCUVN4RlFVRmlha29zUzBGQlFVRXNRMEZCVFdsSkxFZEJRVUZCTEVWQlFXOUNhVUlzWTBGQlFVRXNRMEZCYVVJc1EwRkJRU3hGUVVOb1JFRXNZMEZCUVVFc1JVRkJRVUVzUTBGRFFVUXNZVUZCUVVFc1EwRkJRVUVzUTBGQlowSXNRMEZCUVN4RlFVVllha29zUzBGQlFVRXNRMEZCVFdsSkxFZEJRVUZCTEVOQlNWaG5RaXhoUVVGQlFTeEhRVU5CUkN4TlFVRkJRU3hEUVVGVGRFWXNVVUZCUVVFc1EwRkJVMGdzU1VGQlFVRXNRMEZCU3l3MlFrRkJRU3hEUVVGQkxFTkJRMnhDY0VVc1NVRkJRVUVzUTBGQlMyOUlMRTFCUVVGQkxFTkJRVTk1UXl4TlFVRkJRU3hEUVVGQlFTeEZRVU5pUVN4TlFVRkJRU3hEUVVGUGJrZ3NVMEZCUVVFc1EwRkJWWGRDTEUxQlFVRkJMRU5CUVU4c05FSkJRVUVzUTBGQlFTeERRVWMxUWpGQ0xFOUJRVUZCTEVOQlFWRjFTQ3hqUVVGQlFTeERRVUZCUVN4RFFVRm5RbkpJTEZOQlFVRkJMRU5CUVZWRExFZEJRVUZCTEVOQlFVa3NORUpCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGTE9VTXdSaXhOUVVGQlFTeERRVUZQZWtnc1owSkJRVUZCTEVOQlFXbENMRTlCUVVFc1EwRkJVME1zUzBGQlFVRXNSVUZCUVVFc1EwRkROMElzU1VGQlNXZEtMRTFCUVVGQkxFTkJRV3RETEUxQlFVRXNSVUZCZWtKSExFMUJRVUZCTEVOQlFVOXNSU3hQUVVGQlFTeERRVUZSSzBRc1RVRkJRVUVzUTBGRGVFSkJMRTFCUVVGQkxFTkJRMEZ2UWl4VlFVRkJRU3hEUVVGWGNFSXNUVUZCUVVFc1EwRkJRVUVzUTBGSFdIRkNMRkZCUVVGQkxFTkJRVk55UWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUxcVFrd3NVVUZCUVVFc1EwRkJVMjVHTEVsQlFVRkJMRU5CUVV0VUxFZEJRVUZCTEVOQlFVa3NRMEZCUlhWSUxGRkJRVUZCTEVOQlFWVXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkZPVUlzU1VGQlNVTXNZVUZCUVVFc1EwRkJaMElzU1VGQlFTeERRVU5vUWpOSUxFZEJRVUZCTEVOQlFVMTFSeXhOUVVGQlFTeERRVUZQZUVjc1VVRkJRVUVzUlVGQlFVRXNRMEZCVjBNc1IwRkJRVUVzUTBGRGVFSnpTQ3hOUVVGQlFTeERRVUZUZGtJc1VVRkJRVUVzUTBGQlUyNUdMRWxCUVVGQkxFTkJRVXRuU0N4WlFVRkJRU3hEUVVGbGNrSXNUVUZCUVVFc1EwRkJUM2hITEZGQlFVRkJMRVZCUVVGQkxFTkJRVmRETEVkQlFVRkJMRU5CUlhCRVFTeEhRVUZCUVN4RFFVRk5jMGdzVFVGQlFVRXNRMEZEVG5oSExGRkJRVUZCTEVOQlFWTllMRWRCUVVGQkxFTkJRVWtzUTBGQlJVZ3NSMEZCUVVFc1EwRkJRVUVzUTBGQlRXTXNVVUZCUVVFc1EwRkJVMllzVVVGQlFVRXNSVUZCUVVFc1EwRkJWMFFzVFVGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVkc1JHZENMRkZCUVVGQkxFTkJRVk5ZTEVkQlFVRkJMRU5CUVVrc1EwRkJSVWdzUjBGQlFVRXNRMEZCUzNWSExFMUJRVUZCTEVOQlFVOTRSeXhSUVVGQlFTeEZRVUZCUVN4RFFVRlhSQ3hOUVVGQlFTeERRVUZUTEVsQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkxia1F5U0N4UlFVRkJRU3hEUVVGWExFbEJRVUVzUTBGRFVHeENMRTFCUVVGQkxFTkJRVTl6UWl4TlFVRkJRU3hEUVVGUExFMUJRVUVzUTBGQlFTeEhRVU5rWkN4TFFVRkJRU3hEUVVGTk5Vb3NaMEpCUVVGQkxFTkJRV2xDTEZOQlFVRXNRMEZCVjI5TExGRkJRVUZCTEVOQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGQkxFTkJRelZEZEVjc1RVRkJRVUVzUTBGQlQyUXNSMEZCUVVFc1EwRkJTU3hEUVVGRk9FSXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4wUW01Q0xGRkJRVUZCTEVOQlFWTllMRWRCUVVGQkxFTkJRVWtzUTBGQlJUaENMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZEZUVJd1JpeGhRVUZCUVN4RlFVRkJRU3hEUVVOQmNFSXNUVUZCUVVFc1EwRkJUMnhGTEU5QlFVRkJMRU5CUVZFclJDeE5RVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJRU3hEUVVGQkxFTkJTelZDYjBJc1ZVRkJRVUVzUTBGQllTeEpRVUZCTEVOQlEySlVMRXRCUVVGQkxFTkJRVTFsTEcxQ1FVRkJRU3hEUVVGdlFpeFRRVUZCTEVOQlFWZFFMRkZCUVVGQkxFTkJRVUZCTEVOQlFWVXNRMEZCUVN4RFFVRkJMRU5CUXk5RGRFY3NUVUZCUVVFc1EwRkJUM05FTEZOQlFVRkJMRU5CUVZVc1EwRkJReXhUUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5zUW5wRUxGRkJRVUZCTEVOQlFWTjVSQ3hUUVVGQlFTeERRVUZWTEVOQlFVTXNVMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRjRUpuUXl4TlFVRkJRU3hEUVVGUGJFVXNUMEZCUVVFc1EwRkJVU3RFTEUxQlFVRkJMRU5CUVZNc1QwRkJRU3hEUVVGQkxFTkJjMFkxUWl4UFFTOUVRVWNzVFVGQlFVRXNRMEZCVDNkQ0xGbEJRVUZCTEVOQlFXRXNUMEZCUVN4RFFVRlRNMHNzUzBGQlFVRXNSVUZCUVVFc1EwRkxla0lzUjBGS1NVRXNTMEZCUVVFc1EwRkJUWEZJTEUxQlFVRkJMRVZCUVZWSExFMUJRVUZCTEVWQlFXMURMRTlCUVVFc1JVRkJla0l5UWl4TlFVRkJRU3hEUVVGUGJFVXNUMEZCUVVFc1EwRkJVU3RFTEUxQlFVRkJMRVZCUTNwRGNVSXNVVUZCUVVFc1JVRkJRVUVzUTBGSFFYSkxMRXRCUVVGQkxFTkJRVTF4U0N4TlFVRkJRU3hEUVVGUGVFWXNVMEZCUVVFc1EwRkJWWGxHTEZGQlFVRkJMRU5CUVZNc2NVSkJRVUVzUTBGQlFTeERRVUYzUWl4RFFVTjRSQ3hKUVVGSk0wZ3NTVUZCUVVFc1EwRkJUMWdzVFVGQlFVRXNRMEZCVHpCRkxGRkJRVUZCTEVOQlFWTXhSQ3hMUVVGQlFTeERRVUZOY1Vnc1RVRkJRVUVzUTBGQlQzUkhMRXRCUVVGQkxFTkJRVUZCTEVOQlEycENMRkZCUVVFc1JVRkJia0l2UWl4TlFVRkJRU3hEUVVGUEswb3NVVUZCUVVFc1JVRkRTRmtzUzBGQlFVRXNRMEZCVFRWSkxFdEJRVUZCTEVOQlFVMHlSQ3hSUVVGQlFTeERRVUZUTDBVc1NVRkJRVUVzUTBGQlFVRXNRMEZEY2tKblN5eExRVUZCUVN4RFFVRk5OVWtzUzBGQlFVRXNRMEZCVVRSSkxFdEJRVUZCTEVOQlFVMDFTU3hMUVVGQlFTeERRVUZOTmtvc1QwRkJRVUVzUTBGQlVXcE1MRWxCUVVGQkxFTkJRVTBzUlVGQlFTeERRVUZCTEVOQlR6VkRaMHNzUzBGQlFVRXNRMEZCVFRWSkxFdEJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFXTndRaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkNFFtZExMRXRCUVVGQkxFTkJRVTFKTEdGQlFVRkJMRU5CUVdNc1NVRkJTVU1zVjBGQlFVRXNRMEZCV1N4UlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWb1EwTXNUVUZCUVVFc1JVRkRRVWNzVlVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5XbXBDTEUxQlFVRkJMRU5CUVU4d1FpeGxRVUZCUVN4RFFVRm5RaXhQUVVGQkxFTkJRVk0zU3l4TFFVRkJRU3hGUVVGQlFTeERRVU5ETEUxQlFVRXNSVUZCZWtKdFNpeE5RVUZCUVN4RFFVRlBiRVVzVDBGQlFVRXNRMEZCVVN0RUxFMUJRVUZCTEVWQlEyWnZRaXhWUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXRTVkN4TFFVRkJRU3hEUVVGTk5Vb3NaMEpCUVVGQkxFTkJRV2xDTEZGQlFVRXNRMEZCVlVNc1MwRkJRVUVzUlVGQlFVRXNRMEZETjBJc1NVRkJTWGxGTEUxQlFVRkJMRU5CUVZOclJpeExRVUZCUVN4RFFVRk5OVWtzUzBGQlFVRXNRMEZCVFhsSkxFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUlM5Q0wwVXNUVUZCUVVFc1EwRkJVM1JHTEVsQlFVRkJMRU5CUVV0dlN5eExRVUZCUVN4RFFVRk5NMG9zVDBGQlFVRXNRMEZCVVRaRkxFMUJRVUZCTEVOQlFWRXhSQ3hMUVVGQlFTeEZRVU5VTEVWQlFVRXNSVUZCYUVKQkxFdEJRVUZCTEVOQlFVMHlTU3hKUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVkcVFtcEdMRTFCUVVGQkxFTkJRVk4wUml4SlFVRkJRU3hEUVVGTGIwc3NTMEZCUVVFc1EwRkJUWFZDTEVsQlFVRkJMRU5CUVV0eVJ5eE5RVUZCUVN4RFFVRlJNVVFzUzBGQlFVRXNSVUZEZEVKQkxFdEJRVUZCTEVOQlFVMHlTU3hKUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVkYVR5eE5RVUZCUVN4RlFVTnpRaXhSUVVGQkxFVkJRVzVDYWt3c1RVRkJRVUVzUTBGQlR5dEtMRkZCUVVGQkxFZEJRMUIwUlN4TlFVRkJRU3hEUVVGVGRFWXNTVUZCUVVFc1EwRkJTMjlMTEV0QlFVRkJMRU5CUVUxM1FpeExRVUZCUVN4RFFVRk5kRWNzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGdVJYcENMRU5CUVVOQkxFMUJRVUZCTEVWQlFVRkJMRU5CUTFZdlF5eFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkRXQ3RETEUxQlFVRkJMRU5CUVZOQkxFMUJRVUZCTEVOQlFVOHJSU3hMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVTjBRaXhKUVVGTExFbEJRVWw2U1N4TFFVRkJRU3hKUVVGVE1FUXNUVUZCUVVFc1EwRkJVU3hEUVVOMFFqRkVMRXRCUVVGQkxFTkJRVkZCTEV0QlFVRkJMRU5CUVUweVNTeEpRVUZCUVN4RlFVRkJRU3hEUVVOa0xFbEJRVXNzU1VGQlNXeExMRU5CUVVGQkxFbEJRVXRTTEUxQlFVRkJMRU5CUVU4d1JTeFJRVUZCUVN4RFFVTmlNVVVzVFVGQlFVRXNRMEZCVHpCRkxGRkJRVUZCTEVOQlFWTnNSU3hEUVVGQlFTeERRVUZCUVN4RlFVRk5kVUlzUzBGQlFVRXNSMEZEZEVKQkxFdEJRVUZCTEVOQlFWRjJRaXhEUVVGQlFTeERRVUZCUVN4RFFVbG9RbXRETEZGQlFVRkJMRU5CUVZNeVF5eEpRVUZCUVN4RFFVRkxkRVFzUzBGQlFVRXNRMEZCUVVFc1EwRkhiRUp2U1N4TlFVRkJRU3hEUVVGUGNFa3NTMEZCUVVFc1EwRkJVVmNzVVVGQlFVRXNRMEZEWm1sSkxFdEJRVUZCTEVOQlFVMDFTU3hMUVVGQlFTeERRVUZSTUVRc1RVRkJRVUVzUTBGQlFVRXNSVUYzUkdSQkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVTkxUnl4SlFVRkJRU3hEUVVGTExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVdDZRa01zVFVGQlFVRXNRMEZCVDJ4TUxHZENRVUZCUVN4RFFVRnBRaXhSUVVGQkxFTkJRVlZETEV0QlFVRkJMRVZCUVVGQkxFTkJRekZDYlVvc1RVRkJRVUVzUTBGQlQzTkNMRTFCUVVGQkxFTkJRVThzVFVGQlFTeERRVUZCTEVWQlEyUkdMR0ZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTVVJ3UWl4TlFVRkJRU3hEUVVkWWRFc3NUVUZCUVVFc1EwRkJUMGNzVFVGQlFVRXNRMEZCVXl4RFFVRkZOa2tzU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVsc1J5eFBRVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRMnBETEVsQlFVbDFTaXhaUVVGQlFTeERRVUZsTDB3c1NVRkJRVUVzUTBGQlMwTXNZVUZCUVVFc1EwRkJZeXhEUVVOc1EwTXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4bFFVRkJMRU5CUVVFc1EwRkJiVUpwUXl4UlFVRkJRU3hEUVVGVkxFTkJReTlFTEVOQlFVVnVReXhQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHOUNRVUZCTEVOQlFVRXNRMEZCZDBKSkxFbEJRVUZCTEVOQlFVMVlMRTFCUVVGQkxFTkJRVTgyU1N4SlFVRkJRU3hEUVVGQlFTeERRVU14UlN4RFFVRkZlRWtzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eDFRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkRlRU1zUTBGQlJVWXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVFpDTEVWQlFVRkJMRU5CUVVrc2NVSkJRVUVzUTBGQmRVSTFRaXhMUVVGQlFTeERRVUZQTEV0QlFVRXNRMEZCUVN4RFFVRlRTU3hKUVVGQlFTeERRVUZOTEU5QlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVsNFJuZE1MR0ZCUVVGQkxFTkJRV2RDUkN4WlFVRkJRU3hEUVVGaFJTeGhRVUZCUVN4RFFVRmpMSGRDUVVGQkxFTkJRVUVzUTBGRkwwTkdMRmxCUVVGQkxFTkJRV0ZGTEdGQlFVRkJMRU5CUVdNc2MwSkJRVUVzUTBGQlFTeERRVUYzUW5KTUxHZENRVUZCUVN4RFFVRnBRaXhQUVVGQkxFTkJRVk5ETEV0QlFVRkJMRVZCUVVGQkxFTkJRM3BGYTB3c1dVRkJRVUVzUTBGQllUZElMRTFCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMnBDTEVsQlFVc3NTVUZCU1RSRExFMUJRVUZCTEVsQlFWVnFTQ3hOUVVGQlFTeERRVUZQTWtNc1QwRkJRVUVzUTBGRGRFSjNTaXhoUVVGQlFTeERRVUZqYWtvc1YwRkJRVUVzUTBGQldTeERRVU4wUWpkRExFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzYlVKQlFVRXNRMEZCUVN4RFFVRjFRa2tzU1VGQlFVRXNRMEZCVFhOSExFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTVGRGTEUxQlFVOHNRMEZEU0hCQ0xFOUJRVUZCTEVOQlFWTnhSeXhaUVVGQlFTeERRVUZqUnl4TlFVRkJRU3hEUVVGUkxFbEJRVWxETEU5QlFVRkJMRU5CUVZFc1EwRkJRME1zVDBGQlFVRXNRMEZCVTBNc1RVRkJRVUVzUjBGQlFVRXNRMEZEYWtSTUxHRkJRVUZCTEVOQlFXTndUQ3huUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVFF5eExRVUZCUVN4RlFVRkJRU3hEUVVOb1EwRXNTMEZCUVVFc1EwRkJUWEZJTEUxQlFVRkJMRU5CUVU5NFJpeFRRVUZCUVN4RFFVRlZlVVlzVVVGQlFVRXNRMEZCVXl4bFFVRkJMRU5CUVVFc1IwRkRhRU5wUlN4UFFVRkJRU3hEUVVGUmRrd3NTMEZCUVVFc1EwRkJUWEZJTEUxQlFVRkJMRU5CUVU4NVJ5eFhRVUZCUVN4RFFVRkJRU3hEUVVOeVFqSkxMRmxCUVVGQkxFTkJRV0UzU0N4TlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTlxUTNoRkxGVkJRVUZCTEVOQlFWZEhMRTFCUVVGQkxFTkJRVk1zUTBGQlJXMURMRVZCUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKYzBJc1MwRkJRVUVzUTBGQlR5eFhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTJwRGVrUXNUVUZCUVVFc1EwRkJVMEVzVFVGQlFVRXNSVUZCVlN4RlFVRkJMRVZCUTFwdFF5eEZRVUZCUVN4RFFVRkxia01zVFVGQlFVRXNRMEZCVDIxRExFVkJRVUZCTEVWQlFVMHNZVUZCUVN4RFFVTjZRaXhKUVVGSmMwc3NWVUZCUVVFc1EwRkJZWFJOTEVsQlFVRkJMRU5CUVV0RExHRkJRVUZCTEVOQlFXTXNRMEZEYUVORExFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlEzaENOa0lzUlVGQlFVRXNRMEZCU1c1RExFMUJRVUZCTEVOQlFVOXRReXhGUVVGQlFTeERRVUZCUVN4RFFVTmFTeXhSUVVGQlFTeERRVUZWTEVOQlExUXNRMEZEU1c1RExFOUJRVUZCTEVOQlFWTXNUMEZCUVN4RFFVRlRUU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hwUzBGQlFVRXNSVUZMVEZnc1RVRkJRVUVzUTBGQlQzbEVMRXRCUVVGQkxFVkJRVk1zWVVGQlFTeERRVUZCTEhjNVJFRkJRU3hEUVVGQkxFTkJRVUVzUTBGeFJHcERMRU5CUTBsd1JDeFBRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJUME1zVlVGQlFVRXNRMEZCV1N4RFFVTjRRalpDTEVWQlFVRkJMRU5CUVVrc2JVSkJRVUVzUTBGQlFTeERRVU5NU3l4UlFVRkJRU3hEUVVGVkxFTkJRMVFzUTBGRFNXNURMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSYlVNc1VVRkJRVUVzUTBGQlZTeERRVU4yUWl4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NXVUZCUVN4RFFVRmpjME1zUzBGQlFVRXNRMEZCVHl4TlFVRkJMRU5CUVVFc1EwRkJWVGxFTEVsQlFVRkJMRU5CUVUwc1VVRkJRU3hEUVVGQkxFTkJRelZGTEVOQlFVVk9MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVUyUWl4RlFVRkJRU3hEUVVGSkxGbEJRVUVzUTBGQlkzTkRMRXRCUVVGQkxFTkJRVThzVFVGQlFTeERRVUZCTEVOQlFWVTVSQ3hKUVVGQlFTeERRVUZOTEZGQlFVRXNRMEZCUVN4RFFVTTFSU3hEUVVGRlRpeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZOa0lzUlVGQlFVRXNRMEZCU1N4aFFVRkJMRU5CUVVFc1EwRkJhVUpSTEU5QlFVRkJMRU5CUVZONFF5eEpRVUZCUVN4RFFVRkxkVTBzVlVGQlFVRXNRMEZCUVVFc1EwRkRkRVVzUTBGQlJYSk5MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVUyUWl4RlFVRkJRU3hEUVVGSkxHbENRVUZCTEVOQlFVRXNRMEZCY1VKUkxFOUJRVUZCTEVOQlFWTjRReXhKUVVGQlFTeERRVUZMZDAwc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVY3NSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkRia1lzUTBGQlJYUk5MRTlCUVVGQkxFTkJRVk1zVVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVUyUWl4RlFVRkJRU3hEUVVGSkxHMUNRVUZCTEVOQlFYRkNjME1zUzBGQlFVRXNRMEZCVHl4bFFVRkJMRU5CUVVFc1EwRkJiVUk1UkN4SlFVRkJRU3hEUVVGTkxFdEJRVUVzUTBGQlFTeERRVU0xUml4RFFVRkZUaXhQUVVGQlFTeERRVUZUTEZGQlFVRXNRMEZCVlVNc1ZVRkJRVUVzUTBGQldTeERRVUZGTmtJc1JVRkJRVUVzUTBGQlNTeHhRa0ZCUVN4RFFVRjFRbk5ETEV0QlFVRkJMRU5CUVU4c1owSkJRVUVzUTBGQlFTeERRVUZ2UWpsRUxFbEJRVUZCTEVOQlFVMHNVVUZCUVN4RFFVRkJMRU5CUXk5R0xFTkJRVVZPTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVVMlFpeEZRVUZCUVN4RFFVRkpMRmxCUVVFc1EwRkJZM05ETEV0QlFVRkJMRU5CUVU4c1lVRkJRU3hEUVVGQkxFTkJRV2xDT1VRc1NVRkJRVUVzUTBGQlRTeE5RVUZCTEVOQlFVRXNRMEZEYmtZc1EwRkJSVTRzVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NZMEZCUVN4RFFVRm5Rbk5ETEV0QlFVRkJMRU5CUVU4c1lVRkJRU3hEUVVGQkxFTkJRV2xDT1VRc1NVRkJRVUVzUTBGQlRTeFJRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUnpkR0xFTkJRMGxPTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUmJVTXNVVUZCUVVFc1EwRkJWU3hEUVVOMlFpeERRVUZGYmtNc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzV1VGQlFTeERRVUZqYzBNc1MwRkJRVUVzUTBGQlR5eE5RVUZCTEVOQlFVRXNRMEZCVldwRExGRkJRVUZCTEVOQlFWVXNRMEZCUXl4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0TkxFbEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOMlJ5eERRVUZGVGl4UFFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3hqUVVGQkxFTkJRV2RDYzBNc1MwRkJRVUVzUTBGQlR5eFJRVUZCTEVOQlFVRXNRMEZCV1dwRExGRkJRVUZCTEVOQlFWVXNRMEZCUXl4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUVUxTkxFbEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNMVJ5eERRVUZGVGl4UFFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3hwUWtGQlFTeERRVUZ0UW5ORExFdEJRVUZCTEVOQlFVOHNWMEZCUVN4RFFVRkJMRU5CUVdWcVF5eFJRVUZCUVN4RFFVRlZMRU5CUVVNc1EwRkJSVzVETEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFRTeEpRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGFrZ3NRMEZCUlU0c1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzVjBGQlFTeERRVUZoYzBNc1MwRkJRVUVzUTBGQlR5eGhRVUZCTEVOQlFVRXNRMEZCYVVKcVF5eFJRVUZCUVN4RFFVRlZMRU5CUVVNc1EwRkJSVzVETEU5QlFVRkJMRU5CUVZNc1MwRkJRU3hEUVVGUFRTeEpRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGREwwY3NRMEZCUlU0c1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJUWkNMRVZCUVVGQkxFTkJRVWtzVjBGQlFTeERRVUZoYzBNc1MwRkJRVUVzUTBGQlR5eFhRVUZCTEVOQlFVRXNRMEZCWldwRExGRkJRVUZCTEVOQlFWVXNRMEZCUXl4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5TkxFbEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNM1J5eERRVUZGVGl4UFFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3hqUVVGQkxFTkJRV2RDYzBNc1MwRkJRVUVzUTBGQlR5eGxRVUZCTEVOQlFVRXNRMEZCYlVKcVF5eFJRVUZCUVN4RFFVRlZMRU5CUVVNc1EwRkJSVzVETEU5QlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGTFRTeEpRVUZCUVN4RFFVRk5MRXRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGJFZ3NRMEZCUlU0c1QwRkJRVUVzUTBGQlV5eFBRVUZCTEVOQlFWTkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJYTk5MRWxCUVVGQkxFTkJRVTBzVDBGQlFTeERRVUZUZWtzc1JVRkJRVUVzUTBGQlNTeHBRa0ZCUVN4RFFVRnRRbk5ETEV0QlFVRkJMRU5CUVU4c2JVSkJRVUVzUTBGQmNVSXhReXhMUVVGQlFTeERRVUZQTEZOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUXpOSExFTkJRVVV4UWl4UFFVRkJRU3hEUVVGVExFOUJRVUVzUTBGQlUwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRmMwMHNTVUZCUVVFc1EwRkJUU3hQUVVGQkxFTkJRVk42U3l4RlFVRkJRU3hEUVVGSkxHbENRVUZCTEVOQlFXMUNjME1zUzBGQlFVRXNRMEZCVHl4cFFrRkJRU3hEUVVGdFFqRkRMRXRCUVVGQkxFTkJRVThzVTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEZWtjc1EwRkJSVEZDTEU5QlFVRkJMRU5CUVZNc1QwRkJRU3hEUVVGVFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWelRTeEpRVUZCUVN4RFFVRk5MRTlCUVVFc1EwRkJVM3BMTEVWQlFVRkJMRU5CUVVrc2EwSkJRVUVzUTBGQmIwSnpReXhMUVVGQlFTeERRVUZQTEcxQ1FVRkJMRU5CUVhGQ01VTXNTMEZCUVVFc1EwRkJUeXhUUVVGQkxFTkJRVUVzUTBGQlFTeERRVU0xUnl4RFFVRkZNVUlzVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlRaQ0xFVkJRVUZCTEVOQlFVa3NhVUpCUVVFc1EwRkJiVUp6UXl4TFFVRkJRU3hEUVVGUExGbEJRVUVzUTBGQlFTeERRVUZuUW1wRExGRkJRVUZCTEVOQlFWVXNRMEZCUXl4RFFVRkZia01zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVV0TkxFbEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOc1NDeERRVUZGVGl4UFFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRk5rSXNSVUZCUVVFc1EwRkJTU3h0UWtGQlFTeERRVUZ4UW5ORExFdEJRVUZCTEVOQlFVOHNZMEZCUVN4RFFVRkJMRU5CUVd0Q2FrTXNVVUZCUVVFc1EwRkJWU3hEUVVGRExFTkJRVVZ1UXl4UFFVRkJRU3hEUVVGVExFZEJRVUVzUTBGQlMwMHNTVUZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzUklMRU5CUVVWT0xFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZReXhWUVVGQlFTeERRVUZaTEVOQlFVVTJRaXhGUVVGQlFTeERRVUZKTEc5Q1FVRkJMRU5CUVhOQ2MwTXNTMEZCUVVFc1EwRkJUeXhsUVVGQkxFTkJRVUVzUTBGQmJVSnFReXhSUVVGQlFTeERRVUZWTEVOQlFVTXNRMEZCUlc1RExFOUJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRlRWdzUTBGQlJVNHNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVFpDTEVWQlFVRkJMRU5CUVVrc2EwSkJRVUVzUTBGQmIwSnpReXhMUVVGQlFTeERRVUZQTEdGQlFVRXNRMEZCUVN4RFFVRnBRbXBETEZGQlFVRkJMRU5CUVZVc1EwRkJReXhEUVVGRmJrTXNUMEZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVXROTEVsQlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUzNCSkxFTkJRMGxPTEU5QlFVRkJMRU5CUVZNc1MwRkJRU3hEUVVGUFF5eFZRVUZCUVN4RFFVRlpMRU5CUTNoQ05rSXNSVUZCUVVFc1EwRkJTU3gxUWtGQlFTeERRVUZCTEVOQlEweExMRkZCUVVGQkxFTkJRVlVzUTBGRFZDeERRVU5KYmtNc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGRE0wSTJRaXhGUVVGQlFTeERRVUZKTEc5Q1FVRkJMRU5CUVhOQ01Fc3NWMEZCUVVFc1EwRkJZU3hEUVVGQkxFTkJRVWRvVEN4SlFVRkJRU3hEUVVGTkxGbEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVZFMVJEUkxMRlZCUVVGQkxFTkJRVmMzVEN4UFFVRkJRU3hEUVVGUkxEaENRVUZCTEVOQlFVRXNRMEZEZWtKRExFOUJRVUZCTEVOQlFWRnBUU3hKUVVGQlFTeEZRVUZCUVN4RFFVTldRU3hKUVVGQlFTeERRVUZMTDBrc1IwRkJRVUVzUTBGQlNTeERRVUZGWjBvc1ZVRkJRVUVzUTBGQldVUXNTVUZCUVVFc1EwRkJTeTlMTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMmhETUVzc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzYzBKQlFVRXNRMEZCUVN4RFFVRjNRblpDTEZOQlFVRkJMRU5CUVZrc1VVRkJRU3hEUVVOd1JIbEtMRlZCUVVGQkxFTkJRVmRzU1N4SlFVRkJRU3hEUVVGTExHRkJRVUVzUTBGQlFTeERRVUZsZGtJc1UwRkJRVUVzUTBGQldTeFJRVUZCTEVOQlF6TkRlVW9zVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NZVUZCUVN4RFFVRkJMRU5CUVdWMlFpeFRRVUZCUVN4RFFVRlpMRkZCUVVFc1EwRkZNME1zU1VGQlNXZExMRWxCUVVGQkxFTkJRVTgzVFN4SlFVRkJRU3hEUVVOUU9FMHNXVUZCUVVFc1EwRkJaVklzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NjVUpCUVVFc1EwRkJRU3hEUVcxSGJrTXNUMEZzUjBFd1NTeFpRVUZCUVN4RFFVRmhReXhQUVVGQlFTeERRVUZSTEVsQlFVRXNRMEZEYWtJc1NVRkJTVU1zVFVGQlFVRXNRMEZCVTBZc1dVRkJRVUVzUTBGQllVY3NZVUZCUVVFc1EwRkJZM3BFTEZGQlFVRkJMRU5CUlhoRGQwUXNUVUZCUVVFc1EwRkJUek5KTEVsQlFVRkJMRU5CUVV0NFFpeFRRVUZCUVN4RFFVRlpMRVZCUVVFc1EwRkRjRUpuU3l4SlFVRkJRU3hEUVVGTGVrc3NTMEZCUVVFc1EwRkJUWFpETEUxQlFVRkJMRU5CUVU5dFJpeFBRVUZCUVN4RFFVRkJRU3hIUVVOc1FtZEpMRTFCUVVGQkxFTkJRVTh6U1N4SlFVRkJRU3hEUVVGTGVFSXNVMEZCUVVFc1EwRkJXV2hFTEUxQlFVRkJMRU5CUVU5dFJpeFBRVUZCUVN4RFFVRlJia01zVTBGQlFVRXNRMEZCUVVFc1EwRkhNME50U3l4TlFVRkJRU3hEUVVGUFJTeFZRVUZCUVN4RFFVRmhMRWxCUVVFc1EwRkZjRUphTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMR0ZCUVVFc1EwRkJRU3hEUVVGbGVFUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVXl4SlFVRkJMRU5CUTNKRWIwMHNUVUZCUVVFc1EwRkJUMGNzVjBGQlFVRXNRMEZCV1N4TlFVRkJMRU5CUVVFc1EwRkJVU3hEUVVGQkxFTkJRVThzU1VGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnVReXhEUVVGQkxFTkJRVUVzUTBGRlNHSXNWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc1pVRkJRU3hEUVVGQkxFTkJRV2xDZUVRc1owSkJRVUZCTEVOQlFXbENMRTlCUVVFc1EwRkJVeXhKUVVGQkxFTkJRM1pFYjAwc1RVRkJRVUVzUTBGQlQwY3NWMEZCUVVFc1EwRkJXU3hSUVVGQkxFTkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVOHNTVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOeVF5eERRVUZCTEVOQlFVRXNRMEZGU0dJc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzYTBKQlFVRXNRMEZCUVN4RFFVRnZRbmhFTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTXNTVUZCUVN4RFFVTXhSRzlOTEUxQlFVRkJMRU5CUVU5SExGZEJRVUZCTEVOQlFWa3NWMEZCUVN4RFFVRkJMRU5CUVdFc1EwRkJRU3hEUVVGUExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEZUVNc1EwRkJRU3hEUVVGQkxFTkJSVWhpTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMRmxCUVVFc1EwRkJRU3hEUVVGamVFUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVXl4SlFVRkJMRU5CUTNCRWIwMHNUVUZCUVVFc1EwRkJUMGNzVjBGQlFVRXNRMEZCV1N4aFFVRkJMRU5CUVVFc1EwRkJaU3hEUVVGQkxFTkJRVThzU1VGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXhReXhEUVVGQkxFTkJRVUVzUTBGRlNHSXNWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc1dVRkJRU3hEUVVGQkxFTkJRV040UkN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRMRWxCUVVFc1EwRkRjRVJ2VFN4TlFVRkJRU3hEUVVGUFJ5eFhRVUZCUVN4RFFVRlpMRmRCUVVFc1EwRkJRU3hEUVVGaExFTkJRVUVzUTBGQlR5eEpRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNoRExFTkJRVUVzUTBGQlFTeERRVVZJWWl4VlFVRkJRU3hEUVVGWGJFa3NTVUZCUVVFc1EwRkJTeXhsUVVGQkxFTkJRVUVzUTBGQmFVSjRSQ3huUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVExFbEJRVUVzUTBGRGRrUnZUU3hOUVVGQlFTeERRVUZQUnl4WFFVRkJRU3hEUVVGWkxHVkJRVUVzUTBGQlFTeERRVUZwUWl4RFFVRkJMRU5CUVU4c1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU0xUXl4RFFVRkJMRU5CUVVFc1EwRkZTR0lzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NiMEpCUVVFc1EwRkJRU3hEUVVGelFuaEVMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZNc1NVRkJRU3hEUVVNMVJHOU5MRTFCUVVGQkxFTkJRVTlITEZkQlFVRkJMRU5CUVZrc2JVSkJRVUVzUTBGQlFTeERRVUZ4UWl4RFFVRkJMRU5CUVVFc1EwRkJRU3hMUVVGQkxFVkJRV1ZPTEVsQlFVRkJMRU5CUVV0UExFMUJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlF6ZEVMRU5CUVVFc1EwRkJRU3hEUVVWSVpDeFZRVUZCUVN4RFFVRlhiRWtzU1VGQlFVRXNRMEZCU3l4elFrRkJRU3hEUVVGQkxFTkJRWGRDZUVRc1owSkJRVUZCTEVOQlFXbENMRTlCUVVFc1EwRkJVeXhKUVVGQkxFTkJRemxFYjAwc1RVRkJRVUVzUTBGQlQwY3NWMEZCUVVFc1EwRkJXU3h4UWtGQlFTeERRVUZCTEVOQlFYVkNMRU5CUVVFc1EwRkJRU3hEUVVGQkxFdEJRVUVzUlVGQlpVNHNTVUZCUVVFc1EwRkJTMDhzVFVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZETDBRc1EwRkJRU3hEUVVGQkxFTkJSVWhrTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMR3RDUVVGQkxFTkJRVUVzUTBGQmIwSXlSQ3hUUVVGQlFTeERRVUZWYmtjc1MwRkJRVUVzUlVGQlFVRXNRMEZETVVOdlRDeE5RVUZCUVN4RFFVRlBSeXhYUVVGQlFTeERRVUZaTEZkQlFVRXNRMEZCUVN4RFFVRmhMRU5CUVVFc1EwRkJUM1pNTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpORE1Fc3NWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc2EwSkJRVUVzUTBGQlFTeERRVUZ2UWpKRUxGTkJRVUZCTEVOQlFWVnVSeXhMUVVGQlFTeEZRVUZCUVN4RFFVTXhRMjlNTEUxQlFVRkJMRU5CUVU5SExGZEJRVUZCTEVOQlFWa3NWMEZCUVN4RFFVRkJMRU5CUVdFc1EwRkJRU3hEUVVGUGRrd3NTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhNME13U3l4VlFVRkJRU3hEUVVGWGJFa3NTVUZCUVVFc1EwRkJTeXh0UWtGQlFTeERRVUZCTEVOQlFYRkNNa1FzVTBGQlFVRXNRMEZCVlc1SExFdEJRVUZCTEVWQlFVRkJMRU5CUXpORGIwd3NUVUZCUVVFc1EwRkJUek5KTEVsQlFVRkJMRU5CUVV0c1FpeExRVUZCUVN4RFFVRk5hMHNzVlVGQlFVRXNRMEZCWVhwTUxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMjVETUVzc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzWTBGQlFTeERRVUZCTEVOQlFXZENNa1FzVTBGQlFVRXNRMEZCVlc1SExFdEJRVUZCTEVWQlFVRkJMRU5CUTNSRGIwd3NUVUZCUVVFc1EwRkJUMGNzVjBGQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVVFc1EwRkJXU3hEUVVGQkxFTkJRVTkyVEN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjeFF6QkxMRlZCUVVGQkxFTkJRVmRzU1N4SlFVRkJRU3hEUVVGTExHdENRVUZCTEVOQlFVRXNRMEZCYjBJeVJDeFRRVUZCUVN4RFFVRlZia2NzUzBGQlFVRXNSVUZCUVVFc1EwRkRNVU52VEN4TlFVRkJRU3hEUVVGUFJ5eFhRVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFTkJRVUVzUTBGQlQzWk1MRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSekZETUVzc1ZVRkJRVUVzUTBGQlYyeEpMRWxCUVVGQkxFTkJRVXNzWVVGQlFTeERRVUZCTEVOQlFXVjRSQ3huUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVExFbEJRVUVzUTBGRGNrUXNTVUZCU1VVc1IwRkJRVUVzUTBGQlRYZE5MRTFCUVVGQkxFTkJRVThzWVVGQlFTeERRVUZsTEZOQlFVRXNRMEZCUVN4RFFVVTFRbFFzU1VGQlFVRXNRMEZCUzNwR0xFMUJRVUZCTEVOQlFVOTBSeXhIUVVGQlFTeERRVUZCUVN4RlFVTm9RbXROTEUxQlFVRkJMRU5CUVU5SExGZEJRVUZCTEVOQlFWa3NXVUZCUVN4RFFVRkJMRU5CUVdNc1EwRkJRU3hEUVVGUGNrMHNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRla01zUTBGQlFTeERRVUZCTEVOQlJVaDNUQ3hWUVVGQlFTeERRVUZYYkVrc1NVRkJRVUVzUTBGQlN5eGxRVUZCTEVOQlFVRXNRMEZCYVVKNFJDeG5Ra0ZCUVVFc1EwRkJhVUlzVDBGQlFTeERRVUZUTEVsQlFVRXNRMEZEZGtSdlRTeE5RVUZCUVN4RFFVRlBSeXhYUVVGQlFTeERRVUZaTEZGQlFVRXNRMEZCUVN4RFFVRlZMRU5CUVVFc1EwRkJUeXhKUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEzSkRMRU5CUVVFc1EwRkJRU3hEUVVWSVlpeFZRVUZCUVN4RFFVRlhiRWtzU1VGQlFVRXNRMEZCU3l4aFFVRkJMRU5CUVVFc1EwRkJaWGhFTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTXNTVUZCUVN4RFFVTnlSRzlOTEUxQlFVRkJMRU5CUVU5SExGZEJRVUZCTEVOQlFWa3NUVUZCUVN4RFFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGUExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEYmtNc1EwRkJRU3hEUVVGQkxFTkJSVWhpTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMR0ZCUVVFc1EwRkJRU3hEUVVGbGVFUXNaMEpCUVVGQkxFTkJRV2xDTEU5QlFVRXNRMEZCVXl4SlFVRkJMRU5CUTNKRWIwMHNUVUZCUVVFc1EwRkJUMGNzVjBGQlFVRXNRMEZCV1N4TlFVRkJMRU5CUVVFc1EwRkJVU3hEUVVGQkxFTkJRVThzU1VGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnVReXhEUVVGQkxFTkJRVUVzUTBGRlNHSXNWVUZCUVVFc1EwRkJWMnhKTEVsQlFVRkJMRU5CUVVzc2EwSkJRVUVzUTBGQlFTeERRVUZ2UW5oRUxHZENRVUZCUVN4RFFVRnBRaXhQUVVGQkxFTkJRVk1zU1VGQlFTeERRVU14Ukc5TkxFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRVmtzWVVGQlFTeERRVUZCTEVOQlFXVXNRMEZCUVN4RFFVRlBMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSE4wTmlMRlZCUVVGQkxFTkJRVmRzU1N4SlFVRkJRU3hEUVVGTExHOUNRVUZCTEVOQlFVRXNRMEZCYzBKNFJDeG5Ra0ZCUVVFc1EwRkJhVUlzVDBGQlFTeERRVUZUTEVsQlFVRXNRMEZETlVSdlRTeE5RVUZCUVN4RFFVRlBSeXhYUVVGQlFTeERRVUZaTEdWQlFVRXNRMEZCUVN4RFFVRnBRaXhEUVVGQkxFTkJRVThzU1VGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVY3ZRMklzVlVGQlFVRXNRMEZCVjJ4SkxFbEJRVUZCTEVOQlFVc3NjVUpCUVVFc1EwRkJRU3hEUVVGMVFuaEVMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZNc1NVRkJRU3hEUVVNM1JHOU5MRTFCUVVGQkxFTkJRVTlITEZkQlFVRkJMRU5CUVZrc1lVRkJRU3hEUVVGQkxFTkJRV1VzUTBGQlFTeERRVUZQTEVsQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkhOME5pTEZWQlFVRkJMRU5CUVZkc1NTeEpRVUZCUVN4RFFVRkxMRzFDUVVGQkxFTkJRVUVzUTBGQmNVSjRSQ3huUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVExFbEJRVUVzUTBGRE0wUnZUU3hOUVVGQlFTeERRVUZQUnl4WFFVRkJRU3hEUVVGWkxHTkJRVUVzUTBGQlFTeERRVUZuUWl4RFFVRkJMRU5CUVU4c1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGTDBNc1EwRkJRU3hEUVVGQkxFTkJSVWxpTEZWQlFVRkJMRU5CUjFnMVRTeFhRVUZCUVN4RFFVRlplVU1zU1VGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsdlNDeFRRVUZCUVN4RFFVRkJRU3hEUVVOdVFpeEpRVUZKWjBVc1YwRkJRVUVzUTBGQll5eEZRVUZCTEVOQlEyUkRMR0ZCUVVGQkxFTkJRV2xDTlV3c1MwRkJRVUVzUlVGRFZqVkNMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUVdNc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eG5Ra0ZCUVN4RFFVRkJMRU5CUVc5Q1NTeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlZiMElzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGFFYzJUQ3hqUVVGQlFTeERRVUZyUWpkTUxFdEJRVUZCTEVWQlExZzFRaXhKUVVGQlFTeERRVUZMUXl4aFFVRkJRU3hEUVVGakxFTkJRVVZETEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGUlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNaMEpCUVVFc1EwRkJRU3hEUVVGdlFra3NTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVTI5Q0xFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnk5R09Fd3NhMEpCUVVGQkxFTkJRWE5DT1V3c1MwRkJRVUVzUlVGRFpqVkNMRWxCUVVGQkxFTkJRVXRETEdGQlFVRkJMRU5CUVdNc1EwRkJSVU1zVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5eG5Ra0ZCUVN4RFFVRkJMRU5CUVc5Q1NTeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZUYjBJc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZSTDBZclRDeFhRVUZCUVN4RFFVRmpMRU5CUVVNdlRDeExRVUZCUVN4RFFVRlBMMElzVFVGQlFVRXNSMEZCUVVFc1EwRkRkRUpCTEUxQlFVRkJMRU5CUVZOQkxFMUJRVUZCTEVWQlFWVXNSVUZCUVN4RFFVTnVRaXhKUVVGSkswNHNTVUZCUVVFc1EwRkJUelZPTEVsQlFVRkJMRU5CUVV0RExHRkJRVUZCTEVOQlFXTXNRMEZCUlVNc1QwRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhwUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFXTjBSU3hQUVdKQmJVNHNWMEZCUVVFc1EwRkJXWEpKTEVsQlFVRkJMRU5CUVVzd1NTeEpRVUZCUVN4RFFVRkJRU3hEUVVOaU5VNHNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxMlF5eE5RVUZCUVN4RFFVRlBhVW9zUjBGQlFVRXNRMEZCUVVFc1EwRkRiRUk0UlN4SlFVRkJRU3hEUVVGTE4wc3NWMEZCUVVFc1EwRkJXU3hEUVVOaWVVc3NZVUZCUVVFc1EwRkJZek5PTEUxQlFVRkJMRU5CUVU5cFNpeEhRVUZCUVN4RFFVRkJRU3hEUVVOeVFqUkZMR3RDUVVGQlFTeERRVUZ0UWl4TFFVRkJMRU5CUVVFc1EwRkRia0pITEdGQlFVRkJMRU5CUVdOcVRTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbHNRbWROTEVsQlFVRkJMRU5CUVVzM1N5eFhRVUZCUVN4RFFVRlpMRU5CUTJJNFN5eGhRVUZCUVN4RFFVRmphazBzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIWm1kTkxFbEJRVUZCTEVOQlFVRkJMRU5CUjFCRkxGbEJRVUZCTEVOQlFXZENiRTBzUzBGQlFVRXNSVUZCUVVFc1EwRkRhRUlzU1VGSlNXZE5MRWxCUVVGQkxFTkJTa0Y0UkN4TFFVRkJRU3hEUVVGUmNFc3NTVUZCUVVFc1EwRkJTME1zWVVGQlFVRXNRMEZCWXl4RFFVRkZReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHdENRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNaRmJVNHNWMEZCUVVFc1EwRkJXWEpKTEVsQlFVRkJMRU5CUVV0clJpeExRVUZCUVN4RFFVRkJRU3hEUVVWcVFrRXNTMEZCUVVFc1EwRkJUWEpJTEZkQlFVRkJMRU5CUVZreVN5eHJRa0ZCUVVFc1EwRkJiVUlzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZGY2tNc1NVRkJTeXhKUVVGSmNrNHNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsMVFpeExRVUZCUVN4RFFVRk5iMFVzVFVGQlFVRXNRMEZCVVROR0xFTkJRVUZCTEVWQlFVRkJMRU5CUXpsQ2RVNHNTVUZCUVVFc1EwRkJUM2hFTEV0QlFVRkJMRU5CUVUxeVNDeFhRVUZCUVN4RFFVRlpORXNzVjBGQlFVRXNRMEZCV1M5TUxFdEJRVUZCTEVOQlFVMTJRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVYyUTBFc1EwRkJRVUVzUlVGQlMzVkNMRXRCUVVGQkxFTkJRVTF2UlN4TlFVRkJRU3hEUVVGVExFTkJRVUVzUlVGRGNFSTBTQ3hKUVVGQlFTeERRVUZMTjBzc1YwRkJRVUVzUTBGQldUSkxMR3RDUVVGQlFTeERRVUZ0UWl4SFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVrMVF5eFBRVVJCZEVRc1MwRkJRVUVzUTBGQlRYSklMRmRCUVVGQkxFTkJRVmt5U3l4clFrRkJRVUVzUTBGQmJVSXNSMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRPVUowUkN4TFFVRkJRU3hEUVVGQlFTeERRVWRRTWtRc1lVRkJRVUVzUTBGQmFVSnVUU3hMUVVGQlFTeEZRVUZCUVN4RFFVTnFRaXhKUVVsSlowMHNTVUZCUVVFc1EwRktRVWtzVFVGQlFVRXNRMEZCVTJoUExFbEJRVUZCTEVOQlFVdERMR0ZCUVVGQkxFTkJRV01zUTBGQlJVTXNUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4clFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU40UlcxT0xGZEJRVUZCTEVOQlFWbHlTU3hKUVVGQlFTeERRVUZMT0Vrc1RVRkJRVUVzUTBGQlFVRXNRMEZGYWtKQkxFMUJRVUZCTEVOQlFVOXFUQ3hYUVVGQlFTeERRVUZaTWtzc2EwSkJRVUZCTEVOQlFXMUNMRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJSWFJETEVsQlFVbHlUaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZEVWl4SlFVRkxMRWxCUVVsNVNTeEhRVUZCUVN4SlFVRlBiRWdzUzBGQlFVRXNRMEZEV21kTkxFbEJRVUZCTEVOQlFVOUpMRTFCUVVGQkxFTkJRVTlxVEN4WFFVRkJRU3hEUVVGWk5Fc3NWMEZCUVVFc1EwRkJXUzlNTEV0QlFVRkJMRU5CUVUxclNDeEhRVUZCUVN4RFFVRkJRU3hEUVVGTkxFTkJRVVZCTEVkQlFVRkJMRU5CUVVGQkxFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlEyaEVla2tzUTBGQlFVRXNSVUZCUzJkR0xFMUJRVUZCTEVOQlFVODBTU3hKUVVGQlFTeERRVUZMY2swc1MwRkJRVUVzUTBGQlFVRXNRMEZCVDI5RkxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RlFVTnFRelJJTEVsQlFVRkJMRU5CUVVzM1N5eFhRVUZCUVN4RFFVRlpNa3NzYTBKQlFVRkJMRU5CUVcxQ0xFZEJRVUVzUTBGQlFTeERRVUZCTEVOQlJYaERjazRzUTBGQlFVRXNSVUZCUVVFc1EwRkhTaXhQUVVSQk1rNHNUVUZCUVVFc1EwRkJUMnBNTEZkQlFVRkJMRU5CUVZreVN5eHJRa0ZCUVVFc1EwRkJiVUlzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZETDBKTkxFMUJRVUZCTEVOQlFVRkJMRU5CUjFCSUxHRkJRVUZCTEVOQlFXbENhazBzUzBGQlFVRXNSVUZEUnl4UlFVRkJMRVZCUVVFc1QwRkJWRUVzUzBGQlFVRXNRMEZEUVRSTUxHRkJRVUZCTEVOQlFXTTFUQ3hMUVVGQlFTeERRVUZCUVN4RFFVVm9RalpKTEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRTVTU3hMUVVGQlFTeERRVUZCUVN4RFFVTmFhMDBzV1VGQlFVRXNRMEZCWVd4TkxFdEJRVUZCTEVOQlFVRkJMRU5CUlVNc1VVRkJRU3hGUVVGQkxFOUJRVlJCTEV0QlFVRkJMRU5CUTB4dFRTeGhRVUZCUVN4RFFVRmpiazBzUzBGQlFVRXNRMEZCUVVFc1EwRkhaRFpNTEdOQlFVRkJMRU5CUVdVM1RDeExRVUZCUVN4RFFVRkJRU3hEUVVreFFuTk5MRk5CUVVGQkxFTkJRVmxzVHl4SlFVRkJRU3hEUVVGTFF5eGhRVUZCUVN4RFFVRmpMRU5CUXk5Q1F5eFBRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJUME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEcxQ1FVRkJMRU5CUVVFc1EwRkJkVUpwUXl4UlFVRkJRU3hEUVVGVkxFTkJRMnhGTEVOQlEwbHVReXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHbENRVUZCTEVOQlFXMUNLME1zUzBGQlFVRXNRMEZCVHl4RFFVRkZaMHdzVlVGQlFVRXNRMEZLTjBRc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVTFVTEVOQlEwbHFUeXhQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExHOUNRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVXhReXhEUVVOSlJpeFBRVUZCUVN4RFFVRlRMRTFCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEdsQ1FVRkJMRU5CUVcxQ0swTXNTMEZCUVVFc1EwRkJUeXhEUVVGRlowd3NWVUZCUVVFc1EwRldOMFFzVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZWTmtVNVRDeFJRVUZCUVN4RFFVRlZMRU5CUTNoR2Qwd3NZVUZCUVVFc1EwRkJZekZNTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVFRGQ2JrTXNTVUZCUVVFc1EwRkJTMjlETEV0QlFVRkJMRU5CUVUxdFNDeFRRVUZCUVN4RFFVRkJRU3hGUVVOWVFTeFRRVUZCUVN4RFFVRlZhRW9zVFVGQlFVRXNRMEZCVHpKT0xGTkJRVUZCTEVOQlFVRkJMRU5CUjNKQ0xFbEJRMGxGTEU5QlFVRkJMRU5CUTBGRExHRkJRVUZCTEVOQlJrRkRMRWxCUVVGQkxFTkJRVTlLTEZOQlFVRkJMRU5CUVZVNVNpeEpRVUZCUVN4RFFVRkxMR3RDUVVGQkxFTkJRVUVzUTBGSmRFSnRTeXhMUVVGQlFTeEZRVVJUUkN4SlFVRkJRU3hEUVVGTE9Vc3NVVUZCUVVFc1JVRkJRVUVzUTBGQlYwUXNUVUZCUVVFc1EwRkRha0l5U3l4VFFVRkJRU3hEUVVGVk9Vb3NTVUZCUVVFc1EwRkJTeXhyUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZEZGtKdlN5eFBRVUZCUVN4RFFVRlZUaXhUUVVGQlFTeERRVUZWT1Vvc1NVRkJRVUVzUTBGQlN5eHhRa0ZCUVN4RFFVRkJMRU5CUjNwQ2NVc3NUVUZCUVVFc1JVRkdhVUpETEZGQlFVRkJMRU5CTTBKS0xFMUJRVUVzUTBGQlFTeERRVFJDVEVvc1NVRkJRVUVzUTBGQlN6ZE9MRTlCUVVGQkxFTkJRVkVzYTBKQlFVRXNRMEZCUVN4RFFVTmFOazRzU1VGQlFVRXNRMEZCU3pkT0xFOUJRVUZCTEVOQlFWRXNiVUpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSWFJDYTA4c1VVRkJRVUVzUTBGQldURkdMRXRCUVVGQkxFVkJRVUZCTEVOQlExb3NTVUZCU1RKR0xFdEJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVVGQkxFTkJRVTgzUml4TFFVRkJRU3hEUVVGTmVrWXNVVUZCUVVFc1JVRkJRVUVzUTBGQlYwTXNSMEZCUVVFc1EwRkJUVFpMTEVsQlFVRkJMRU5CUVVzNVN5eFJRVUZCUVN4RlFVRkJRU3hEUVVGWFF5eEhRVUZCUVN4RlFVRlBhVXdzVVVGQlFVRXNRMEZvUTNwRUxFMUJRVUVzUTBGQlFTeERRVUZCTEVOQlowTnBSaXhEUVVGQkxFTkJRekZHU3l4SFFVRkJRU3hEUVVGTlJpeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZCUVN4RFFVRlBOMFlzUzBGQlFVRXNRMEZCVFhwR0xGRkJRVUZCTEVWQlFVRkJMRU5CUVZkMVNDeE5RVUZCUVN4RFFVRlRkVVFzU1VGQlFVRXNRMEZCU3psTExGRkJRVUZCTEVWQlFVRkJMRU5CUVZkRExFZEJRVUZCTEVWQlFVOXBUQ3hSUVVGQlFTeERRV3BETVVRc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGcFEydEdMRU5CUVVFc1EwRkRMMFo2Uml4TFFVRkJRU3hEUVVGTmRVUXNTMEZCUVVFc1EwRkJVWGhOTEVsQlFVRkJMRU5CUVV0M1RTeExRVUZCUVN4RFFVRk5kVU1zUjBGQlFVRXNRMEZCUzBnc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRTJRamxDU1N4WFFVRkJRU3hEUVVGbEwwWXNTMEZCUVVFc1JVRkJRVUVzUTBGRFppeEpRVUZMTEVsQlFVazFTU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNUUkpMRXRCUVVGQkxFTkJRVTExUkN4TFFVRkJRU3hEUVVGTmVFY3NUVUZCUVVFc1EwRkJVVE5HTEVOQlFVRkJMRVZCUVVGQkxFTkJReTlDVEN4SlFVRkJRU3hEUVVGTGIwTXNTMEZCUVVFc1EwRkJUV2ROTEU5QlFVRkJMRU5CUVZGdVJpeExRVUZCUVN4RFFVRk5kVVFzUzBGQlFVRXNRMEZCVFc1TkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWswVHl4VlFVRkJRU3hEUVVGQlFTeEhRVU53UTJJc1QwRkJRVUVzUTBGQlVXNUdMRXRCUVVGQkxFTkJRVTExUkN4TFFVRkJRU3hEUVVGTmJrMHNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1hWRUxFZEJRVUZCTEVOQlFVa3NRMEZCUlRoQ0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkRka013U1N4UFFVRkJRU3hEUVVGUmJrWXNTMEZCUVVFc1EwRkJUWFZFTEV0QlFVRkJMRU5CUVUxdVRTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZKTkU4c1ZVRkJRVUVzUTBGQllXaEhMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU3pkRGFVY3NVMEZCUVVFc1EwRkJZV3BITEV0QlFVRkJMRVZCUVVGQkxFTkJRMklzU1VGQlNXdEhMRmxCUVVGQkxFTkJRV1ZzUnl4TFFVRkJRU3hEUVVGTk5VY3NVVUZCUVVFc1EwRkRla0lzU1VGQlN5eEpRVUZKYUVNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWs0VHl4WlFVRkJRU3hEUVVGaGJrb3NUVUZCUVVFc1EwRkJVVE5HTEVOQlFVRkJMRVZCUVVGQkxFTkJRMnBET0U4c1dVRkJRVUVzUTBGQllUbFBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZHhReXhUUVVGQlFTeERRVUZWZVVZc1VVRkJRVUVzUTBGQlV5eHBRa0ZCUVN4RFFVRkJMRWRCUTI1RFowZ3NXVUZCUVVFc1EwRkJZVGxQTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWQxUkN4SFFVRkJRU3hEUVVGSkxFTkJRVVU0UWl4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlFTeERRVUZCTEVOQlJTOUNlVW9zV1VGQlFVRXNRMEZCWVRsUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkSkxFOUJRVUZCTEVOQlFWRXNiVUpCUVVFc1EwRkJRU3hEUVVGeFFrTXNUMEZCUVVFc1EwRkJVVFpHTEVOQlFVRkJMRVZCUVVGQkxFTkJRelZEZGtjc1NVRkJRVUVzUTBGQlMyOURMRXRCUVVGQkxFTkJRVTF0UlN4RFFVRkJRU3hEUVVGRk9FSXNUVUZCUVVFc1EwRkJUelJITEZWQlFVRkJMRU5CUVVGQkxFZEJRM0pDTVVrc1EwRkJRVUVzUTBGQlJUaENMRTFCUVVGQkxFTkJRVTgwUnl4VlFVRkJRU3hEUVVGaGFFY3NTMEZCUVVFc1EwRkRkRUl4UXl4RFFVRkJRU3hEUVVGRk9FSXNUVUZCUVVFc1EwRkJUM3BGTEVkQlFVRkJMRU5CUVVrc1EwRkJSVGhDTEU5QlFVRkJMRU5CUVZNc1RVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CYVVVMVF5eFBRV3BEUVRaSUxGZEJRVUZCTEVOQlFWbHlTU3hKUVVGQlFTeERRVUZCUVN4TFFVRkxhMHNzUTBGQlFVRXNRMEZCUVVFc1EwRkZha0pzUWl4VFFVRkJRU3hEUVVGVmJrSXNUMEZCUVVFc1EwRkJVV3hOTEV0QlFVRkJMRVZCUVVGQkxFTkJPVVZFTEVOQlFVRXNTVUZCUVN4RFFVTmlMRWxCUVVzc1NVRkJTVklzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbHJUaXhYUVVGQlFTeERRVUZaZGtnc1RVRkJRVUVzUTBGQlVUTkdMRU5CUVVGQkxFVkJRVUZCTEVOQlEzQkRhMDhzUzBGQlFVRXNRMEZCVFhoTUxGZEJRVUZCTEVOQlFWa3NRMEZEWkN4RFFVRkZOME1zVDBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVVzeVFpeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZUZUVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJTMFlzVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTEhkQ1FVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeEhRVFJGYmtWcFVDeERRWFpGWVN4RFFVRkJMRWxCUVVFc1EwRkRZaXhKUVVGTExFbEJRVWxvVUN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVzlQTEUxQlFVRkJMRU5CUVU5NlNTeE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOd1F5eEpRVUZKYjBRc1IwRkJRVUVzUTBGQlRXZE1MRTFCUVVGQkxFTkJRVTl3VHl4RFFVRkJRU3hEUVVGQlFTeERRVUZIYlVRc1VVRkJRVUVzUlVGQlFVRXNRMEZCVjBNc1IwRkJRVUVzUTBGQlRUWkxMRWxCUVVGQkxFTkJRVXM1U3l4UlFVRkJRU3hGUVVGQlFTeERRVUZYUXl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlNTeEpRVUZCTEVOQlF6TkVORVVzVFVGQlFVRXNRMEZCVTIxSExFOUJRVUZCTEVOQlFWRjZUQ3hYUVVGQlFTeERRVUZaTEVOQlFVVTNReXhQUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExEWkRRVUZCTEVOQlFTdERLME1zUzBGQlFVRXNRMEZCVHl4RFFVRkZUU3hIUVVGQlFTeERRVUZCUVN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVU1U0RSRkxFMUJRVUZCTEVOQlFVOVpMRXRCUVVGQkxFTkJRVkYzUml4TlFVRkJRU3hEUVVGUGNFOHNRMEZCUVVFc1EwRkJRVUVzUTBGRGRFSnZUeXhOUVVGQlFTeERRVUZQY0U4c1EwRkJRVUVzUTBGQlFVRXNRMEZCUjJkSkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRWRCYTBWMlFtbElMRU5CUlVGc1FpeFBRVUZCUVN4RFFVRlZSeXhMUVVGQlFTeERRVUZOT1U0c1QwRkJRVUVzUTBGQlVTeDVRa0ZCUVN4RFFVRkJMRU5CUTNoQ05FNHNZVUZCUVVFc1EwRkJaMEpITEU5QlFVRkJMRU5CUVZFdlRpeFBRVUZCUVN4RFFVRlJMRFJDUVVGQkxFTkJRVUVzUTBGSGFFTjVUaXhUUVVGQlFTeERRVUZWZEU0c1owSkJRVUZCTEVOQlFXbENMRTlCUVVFc1EwRkJVME1zUzBGQlFVRXNSVUZCUVVFc1EwRkRhRU1zU1VGQlNYRklMRTFCUVVGQkxFTkJRVk55U0N4TFFVRkJRU3hEUVVGTmNVZ3NUVUZCUVVFc1EwRkRaa0VzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVjVSaXhSUVVGQlFTeERRVUZUTERKQ1FVRkJMRU5CUVVFc1IwRkRja0p1U1N4SlFVRkJRU3hEUVVGTGIwTXNTMEZCUVVFc1EwRkJUVGhHTEUxQlFVRkJMRU5CUVU5bExFdEJRVUZCTEVOQlFVMTFSQ3hMUVVGQlFTeERRVUZCUVN4RlFVTjZRbTFETEZGQlFVRkJMRU5CUVZONlJ5eE5RVUZCUVN4RFFVRlBaU3hMUVVGQlFTeERRVUZCUVN4RFFVZG9RbVlzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVjVSaXhSUVVGQlFTeERRVUZUTEdWQlFVRXNRMEZCUVN4RlFVTXhRalpITEZkQlFVRkJMRU5CUVZrNVJ5eE5RVUZCUVN4RFFVRlBaU3hMUVVGQlFTeERRVUZCUVN4RFFVTnVRbWxITEZOQlFVRkJMRU5CUVZWb1NDeE5RVUZCUVN4RFFVRlBaU3hMUVVGQlFTeERRVUZCUVN4SFFUVkRaaXhEUVVGRFFTeExRVUZCUVN4RlFVRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNUVkpMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSk5Fa3NTMEZCUVVFc1EwRkJUWFZFTEV0QlFVRkJMRU5CUVUxNFJ5eE5RVUZCUVN4RFFVRlJNMFlzUTBGQlFVRXNSVUZCUVVFc1EwRkRhRU1yVGl4UFFVRkJRU3hEUVVGUmJrWXNTMEZCUVVFc1EwRkJUWFZFTEV0QlFVRkJMRU5CUVUxdVRTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZKTkU4c1ZVRkJRVUVzUlVGQlkyaEhMRXRCUVVGQkxFZEJRM1JEYlVZc1QwRkJRVUVzUTBGQlVXNUdMRXRCUVVGQkxFTkJRVTExUkN4TFFVRkJRU3hEUVVGTmJrMHNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1RKSUxGTkJRVUZCTEVOQlFWVXNRMEZCUXl4VFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFOUJRelZDYjBjc1QwRkJRVUVzUTBGQlVXNUdMRXRCUVVGQkxFTkJRVTExUkN4TFFVRkJRU3hEUVVGTmJrMHNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1RSUExGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJNa05tTDBjc1RVRkJRVUVzUTBGQlQyVXNTMEZCUVVFc1EwRkJRVUVzUTBGMFEyNUNMRU5CUVVOQkxFdEJRVUZCTEVWQlFVRkJMRU5CUTJJc1NVRkJTV3RITEZsQlFVRkJMRU5CUVdWc1J5eExRVUZCUVN4RFFVRk5OVWNzVVVGQlFVRXNRMEZEZWtJc1NVRkJTeXhKUVVGSmFFTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrNFR5eFpRVUZCUVN4RFFVRmhia29zVFVGQlFVRXNRMEZCVVROR0xFTkJRVUZCTEVWQlFVRkJMRU5CUTJwRE9FOHNXVUZCUVVFc1EwRkJZVGxQTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWR4UXl4VFFVRkJRU3hEUVVGVmVVWXNVVUZCUVVFc1EwRkJVeXhwUWtGQlFTeERRVUZCTEVkQlEyNURaMGdzV1VGQlFVRXNRMEZCWVRsUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjeVNDeFRRVUZCUVN4RFFVRlZMRU5CUVVNc1UwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRk0wSnRTQ3haUVVGQlFTeERRVUZoT1U4c1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBrc1QwRkJRVUVzUTBGQlVTeHRRa0ZCUVN4RFFVRkJMRU5CUVhGQ1F5eFBRVUZCUVN4RFFVRlJOa1lzUTBGQlFVRXNSVUZCUVVFc1EwRkROME5CTEVOQlFVRkJMRU5CUVVVNFFpeE5RVUZCUVN4RFFVRlBORWNzVlVGQlFVRXNSVUZCWTJoSExFdEJRVUZCTEVkQlFVRkJMRTlCUTJoQ01VTXNRMEZCUVVFc1EwRkJSVGhDTEUxQlFVRkJMRU5CUVU4MFJ5eFZRVUZCUVN4RFFVTm9RakZKTEVOQlFVRkJMRU5CUVVVNFFpeE5RVUZCUVN4RFFVRlBUQ3hUUVVGQlFTeERRVUZWTEVOQlFVTXNVMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVWQk9FSmtSU3hOUVVGQlFTeERRVUZQWlN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHlRbVlzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVXlSaXhOUVVGQlFTeERRVUZQTEdGQlFVRXNRMEZCUVN4RFFVTjRRa2dzVFVGQlFVRXNRMEZCVDNoR0xGTkJRVUZCTEVOQlFWVXlSaXhOUVVGQlFTeERRVUZQTEdWQlFVRXNRMEZCUVN4RFFYSkdha0lzUTBGQlFTeEpRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkphRWtzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbG5UeXhoUVVGQlFTeERRVUZqY2trc1RVRkJRVUVzUTBGQlVUTkdMRU5CUVVGQkxFVkJRVUZCTEVOQlEzUkRaMDhzWVVGQlFVRXNRMEZCWTJoUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkMVJDeEhRVUZCUVN4RFFVRkpMRU5CUTJwQ1NDeEhRVUZCUVN4RFFVRkxORXNzWVVGQlFVRXNRMEZCWTJoUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjMFNTeExRVUZCUVN4RFFVRk5la1lzVVVGQlFVRXNSVUZCUVVFc1EwRkJWME1zUjBGQlFVRXNRMEZCVFRaTExFbEJRVUZCTEVOQlFVczVTeXhSUVVGQlFTeEZRVUZCUVN4RFFVRlhReXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCU1N4SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFZEJiVVoyUlRoTUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzB4eVFpeFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiLyogcmVtb3ZlZDogY29uc3QgXyRUZW1wbGF0ZV8xMj1yZXF1aXJlKFwiLi9UZW1wbGF0ZVwiKTsgKi87dmFyIF8kQ29sb3JQaWNrZXJfNT1mdW5jdGlvbigpe2xldCBzZWxmPXt9O3JldHVybiBzZWxmLmZ1bmM9bmV3IF8kRnVuY183LHNlbGYuZWxlbWVudE1vZGlmaWVyPW5ldyBfJFRlbXBsYXRlXzEyLHNlbGYuZWxlbWVudE1vZGlmaWVyLmVsZW1lbnRMaWJyYXJ5KCksc2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uPXt4OjAseTowfSxzZWxmLm9wYWNpdHlJbmRpY2F0b3JQb3NpdGlvbj17eDowLHk6MH0sc2VsZi5jb252ZXJ0VG89XCJSR0JcIixzZWxmLmluaXQ9KHBhcmFtcz0+KHNlbGYucGlja2VyPXNlbGYuZWxlbWVudE1vZGlmaWVyLmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcImNvbG9yLXBpY2tlclwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjb2xvci1waWNrZXItc2V0dGVyc1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjb2xvci1waWNrZXItY29sb3JzLXdpbmRvd1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJjYW52YXNcIixhdHRyaWJ1dGVzOntpZDpcImNvbG9yLXBpY2tlci1jb2xvcnNcIn19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2lkOlwiY29sb3ItcGlja2VyLWNvbG9yLWluZGljYXRvclwifX1dfSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcImNvbG9yLXBpY2tlci1vcGFjaXRpZXMtd2luZG93XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImNhbnZhc1wiLGF0dHJpYnV0ZXM6e2lkOlwiY29sb3ItcGlja2VyLW9wYWNpdGllc1wifX0se2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJjb2xvci1waWNrZXItb3BhY2l0eS1pbmRpY2F0b3JcIn19XX1dfSx7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2lkOlwiY29sb3ItcGlja2VyLXJlc3VsdFwifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzcGFuXCIsYXR0cmlidXRlczp7aWQ6XCJwaWNrZWQtY29sb3JcIn19LHtlbGVtZW50Olwic3BhblwiLGF0dHJpYnV0ZXM6e2lkOlwicGlja2VkLWNvbG9yLXdpbmRvd1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJzZWxlY3RcIixhdHRyaWJ1dGVzOntpZDpcInBpY2tlZC1jb2xvci1zZXR0ZXJcIn0sb3B0aW9uczpbXCJSR0JcIixcIkhFWFwiLFwiSFNMXCJdfSx7ZWxlbWVudDpcInNwYW5cIixhdHRyaWJ1dGVzOntpZDpcInBpY2tlZC1jb2xvci12YWx1ZVwifX1dfV19XX0pLHNlbGYuY29sb3JXaW5kb3c9c2VsZi5waWNrZXIuZmluZChcIiNjb2xvci1waWNrZXItY29sb3JzLXdpbmRvd1wiKSxzZWxmLm9wYWNpdHlXaW5kb3c9c2VsZi5waWNrZXIuZmluZChcIiNjb2xvci1waWNrZXItb3BhY2l0aWVzLXdpbmRvd1wiKSxzZWxmLmNvbG9yQ2FudmFzPXNlbGYucGlja2VyLmZpbmQoXCIjY29sb3ItcGlja2VyLWNvbG9yc1wiKSxzZWxmLm9wYWNpdHlDYW52YXM9c2VsZi5waWNrZXIuZmluZChcIiNjb2xvci1waWNrZXItb3BhY2l0aWVzXCIpLHNlbGYuY29sb3JNYXJrZXI9c2VsZi5waWNrZXIuZmluZChcIiNjb2xvci1waWNrZXItY29sb3ItaW5kaWNhdG9yXCIpLHNlbGYub3BhY2l0eU1hcmtlcj1zZWxmLnBpY2tlci5maW5kKFwiI2NvbG9yLXBpY2tlci1vcGFjaXR5LWluZGljYXRvclwiKSxzZWxmLndpZHRoPXBhcmFtcy53aWR0aCxzZWxmLmhlaWdodD1wYXJhbXMuaGVpZ2h0LHNlbGYucGlja2VkQ29sb3I9cGFyYW1zLmNvbG9yfHxcInJnYigwLCAwLCAwKVwiLHNlbGYuY29sb3JXaW5kb3cuY3NzKHtoZWlnaHQ6c2VsZi5oZWlnaHQrXCJweFwifSksc2VsZi5jb2xvckNhbnZhcy53aWR0aD1zZWxmLndpZHRoLHNlbGYuY29sb3JDYW52YXMuaGVpZ2h0PXNlbGYuaGVpZ2h0LHNlbGYub3BhY2l0eVdpbmRvdy5jc3Moe2hlaWdodDpzZWxmLmhlaWdodCtcInB4XCJ9KSxzZWxmLm9wYWNpdHlDYW52YXMuaGVpZ2h0PXNlbGYuaGVpZ2h0LHNlbGYub3BhY2l0eUNhbnZhcy53aWR0aD0yMCxzZWxmLmNvbG9yQ29udGV4dD1zZWxmLmNvbG9yQ2FudmFzLmdldENvbnRleHQoXCIyZFwiKSxzZWxmLm9wYWNpdHlDb250ZXh0PXNlbGYub3BhY2l0eUNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiksc2VsZi5waWNrZXIuZmluZChcIiNwaWNrZWQtY29sb3ItdmFsdWVcIikuaW5uZXJUZXh0PXNlbGYucGlja2VkQ29sb3Isc2VsZi5waWNrZXIuZmluZChcIiNwaWNrZWQtY29sb3Itc2V0dGVyXCIpLm9uQ2hhbmdlZCh2YWx1ZT0+e3NlbGYuY29udmVydFRvPXZhbHVlLHNlbGYucmVwbHkoKX0pLHNlbGYubGlzdGVuKCksc2VsZi5waWNrZXIpKSxzZWxmLmNhbGlicmF0ZUNvbG9yPSgoKT0+e2xldCBjb2xvckdyYWRpZW50PXNlbGYuY29sb3JDb250ZXh0LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsMCxzZWxmLndpZHRoLDApO2NvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKDAsXCJyZ2IoMjU1LCAwLCAwKVwiKSxjb2xvckdyYWRpZW50LmFkZENvbG9yU3RvcCguMTUsXCJyZ2IoMjU1LCAwLCAyNTUpXCIpLGNvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKC4zMyxcInJnYigwLCAwLCAyNTUpXCIpLGNvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKC40OSxcInJnYigwLCAyNTUsIDI1NSlcIiksY29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoLjY3LFwicmdiKDAsIDI1NSwgMClcIiksY29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoLjg3LFwicmdiKDI1NSwgMjU1LCAwKVwiKSxjb2xvckdyYWRpZW50LmFkZENvbG9yU3RvcCgxLFwicmdiKDI1NSwgMCwgMClcIiksc2VsZi5jb2xvckNvbnRleHQuZmlsbFN0eWxlPWNvbG9yR3JhZGllbnQsc2VsZi5jb2xvckNvbnRleHQuZmlsbFJlY3QoMCwwLHNlbGYud2lkdGgsc2VsZi5oZWlnaHQpLChjb2xvckdyYWRpZW50PXNlbGYuY29sb3JDb250ZXh0LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsMCwwLHNlbGYuaGVpZ2h0KSkuYWRkQ29sb3JTdG9wKDAsXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDEpXCIpLGNvbG9yR3JhZGllbnQuYWRkQ29sb3JTdG9wKC41LFwicmdiYSgyNTUsIDI1NSwgMjU1LCAwKVwiKSxjb2xvckdyYWRpZW50LmFkZENvbG9yU3RvcCguNSxcInJnYmEoMCwgMCwgMCwgMClcIiksY29sb3JHcmFkaWVudC5hZGRDb2xvclN0b3AoMSxcInJnYmEoMCwgMCwgMCwgMSlcIiksc2VsZi5jb2xvckNvbnRleHQuZmlsbFN0eWxlPWNvbG9yR3JhZGllbnQsc2VsZi5jb2xvckNvbnRleHQuZmlsbFJlY3QoMCwwLHNlbGYud2lkdGgsc2VsZi5oZWlnaHQpfSksc2VsZi5jYWxpYnJhdGVPcGFjaXR5PSgoKT0+e2xldCByZ2JhO3NlbGYub3BhY2l0eUNvbnRleHQuY2xlYXJSZWN0KDAsMCxzZWxmLm9wYWNpdHlDYW52YXMud2lkdGgsc2VsZi5oZWlnaHQpO2xldCBvcGFjaXR5R3JhZGllbnQ9c2VsZi5vcGFjaXR5Q29udGV4dC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLDAsMCxzZWxmLm9wYWNpdHlDYW52YXMuaGVpZ2h0KTtmb3IobGV0IGk9MTAwO2k+PTA7aS0tKXJnYmE9c2VsZi5hZGRPcGFjaXR5KHNlbGYucGlja2VkQ29sb3IsaS8xMDApLG9wYWNpdHlHcmFkaWVudC5hZGRDb2xvclN0b3AoaS8xMDAscmdiYSk7c2VsZi5vcGFjaXR5Q29udGV4dC5maWxsU3R5bGU9b3BhY2l0eUdyYWRpZW50LHNlbGYub3BhY2l0eUNvbnRleHQuY2xlYXJSZWN0KDAsMCxzZWxmLm9wYWNpdHlDYW52YXMud2lkdGgsc2VsZi5vcGFjaXR5Q2FudmFzLmhlaWdodCksc2VsZi5vcGFjaXR5Q29udGV4dC5maWxsUmVjdCgwLDAsc2VsZi5vcGFjaXR5Q2FudmFzLndpZHRoLHNlbGYub3BhY2l0eUNhbnZhcy5oZWlnaHQpfSksc2VsZi5saXN0ZW49KCgpPT57bGV0IGlzQ29sb3JNb3VzZURvd249ITEsaXNPcGFjaXR5TW91c2VEb3duPSExO3NlbGYucGlja2VyLm5vdEJ1YmJsZWRFdmVudChcImNsaWNrXCIsZXZlbnQ9Pnshc2VsZi5hZGRlZHx8aXNDb2xvck1vdXNlRG93bnx8aXNPcGFjaXR5TW91c2VEb3dufHxzZWxmLmRpc3Bvc2UoKX0pLHNlbGYuY29sb3JDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGV2ZW50PT57bGV0IGN1cnJlbnRYPWV2ZW50LmNsaWVudFgtc2VsZi5jb2xvckNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0LGN1cnJlbnRZPWV2ZW50LmNsaWVudFktc2VsZi5jb2xvckNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7aXNDb2xvck1vdXNlRG93bj1jdXJyZW50WD4wJiZjdXJyZW50WDxzZWxmLmNvbG9yQ2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoJiZjdXJyZW50WT4wJiZjdXJyZW50WTxzZWxmLmNvbG9yQ2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodH0pLHNlbGYuY29sb3JDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLGV2ZW50PT57aWYoaXNDb2xvck1vdXNlRG93bil7c2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uLng9ZXZlbnQuY2xpZW50WC1zZWxmLmNvbG9yQ2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQsc2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uLnk9ZXZlbnQuY2xpZW50WS1zZWxmLmNvbG9yQ2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCxzZWxmLmNvbG9yTWFya2VyLmNzcyh7dG9wOnNlbGYuY29sb3JJbmRpY2F0b3JQb3NpdGlvbi55K1wicHhcIixsZWZ0OnNlbGYuY29sb3JJbmRpY2F0b3JQb3NpdGlvbi54K1wicHhcIn0pO2xldCBwaWNrZWQ9c2VsZi5nZXRQaWNrZWRDb2xvcigpO3NlbGYucGlja2VkQ29sb3I9YHJnYigke3BpY2tlZC5yfSwgJHtwaWNrZWQuZ30sICR7cGlja2VkLmJ9KWAsc2VsZi5yZXBseSgpfX0pLHNlbGYuY29sb3JDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixldmVudD0+e2lzQ29sb3JNb3VzZURvd249ITEsc2VsZi5jYWxpYnJhdGVPcGFjaXR5KCl9KSxzZWxmLm9wYWNpdHlDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGV2ZW50PT57bGV0IGN1cnJlbnRYPWV2ZW50LmNsaWVudFgtc2VsZi5vcGFjaXR5Q2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQsY3VycmVudFk9ZXZlbnQuY2xpZW50WS1zZWxmLm9wYWNpdHlDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wO2lzT3BhY2l0eU1vdXNlRG93bj1jdXJyZW50WD4wJiZjdXJyZW50WDxzZWxmLm9wYWNpdHlDYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgmJmN1cnJlbnRZPjAmJmN1cnJlbnRZPHNlbGYub3BhY2l0eUNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHR9KSxzZWxmLm9wYWNpdHlDYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLGV2ZW50PT57aWYoaXNPcGFjaXR5TW91c2VEb3duKXtzZWxmLm9wYWNpdHlJbmRpY2F0b3JQb3NpdGlvbi54PWV2ZW50LmNsaWVudFgtc2VsZi5vcGFjaXR5Q2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQsc2VsZi5vcGFjaXR5SW5kaWNhdG9yUG9zaXRpb24ueT1ldmVudC5jbGllbnRZLXNlbGYub3BhY2l0eUNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3Asc2VsZi5vcGFjaXR5TWFya2VyLmNzcyh7dG9wOnNlbGYub3BhY2l0eUluZGljYXRvclBvc2l0aW9uLnkrXCJweFwifSk7bGV0IHBpY2tlZD1zZWxmLmdldFBpY2tlZE9wYWNpdHkoKTtzZWxmLnBpY2tlZENvbG9yPWByZ2IoJHtwaWNrZWQucn0sICR7cGlja2VkLmd9LCAke3BpY2tlZC5ifSwgJHtwaWNrZWQuYX0pYCxzZWxmLnJlcGx5KCl9fSksc2VsZi5vcGFjaXR5Q2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsZXZlbnQ9Pntpc09wYWNpdHlNb3VzZURvd249ITF9KX0pLHNlbGYucmVwbHk9KCgpPT57c2VsZi5jb252ZXJDb2xvcigpLHNlbGYucGlja2VyLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiY29sb3JDaGFuZ2VkXCIpKSxzZWxmLnBpY2tlci5maW5kKFwiI3BpY2tlZC1jb2xvclwiKS5jc3Moe2JhY2tncm91bmRDb2xvcjpzZWxmLmNvbnZlcnRlZENvbG9yfSksc2VsZi5waWNrZXIuZmluZChcIiNwaWNrZWQtY29sb3ItdmFsdWVcIikuaW5uZXJUZXh0PXNlbGYuY29udmVydGVkQ29sb3J9KSxzZWxmLmNvbnZlckNvbG9yPSgoKT0+e1wiSEVYXCI9PXNlbGYuY29udmVydFRvP3NlbGYuY29udmVydGVkQ29sb3I9c2VsZi5yZ2JUb0hleChzZWxmLnBpY2tlZENvbG9yKTpcIkhTTFwiPT1zZWxmLmNvbnZlcnRUbz9zZWxmLmNvbnZlcnRlZENvbG9yPXNlbGYucmdiVG9IU0woc2VsZi5waWNrZWRDb2xvcik6XCJSR0JcIj09c2VsZi5jb252ZXJ0VG8mJihzZWxmLmNvbnZlcnRlZENvbG9yPXNlbGYucGlja2VkQ29sb3IpfSksc2VsZi5vbkNoYW5nZWQ9KGNhbGxCYWNrPT57c2VsZi5waWNrZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNvbG9yQ2hhbmdlZFwiLGV2ZW50PT57Y2FsbEJhY2soc2VsZi5jb252ZXJ0ZWRDb2xvcil9KX0pLHNlbGYuZ2V0UGlja2VkQ29sb3I9KCgpPT57bGV0IGltYWdlRGF0YT1zZWxmLmNvbG9yQ29udGV4dC5nZXRJbWFnZURhdGEoc2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uLngsc2VsZi5jb2xvckluZGljYXRvclBvc2l0aW9uLnksMSwxKTtyZXR1cm57cjppbWFnZURhdGEuZGF0YVswXSxnOmltYWdlRGF0YS5kYXRhWzFdLGI6aW1hZ2VEYXRhLmRhdGFbMl19fSksc2VsZi5nZXRQaWNrZWRPcGFjaXR5PSgoKT0+e2xldCBpbWFnZURhdGE9c2VsZi5vcGFjaXR5Q29udGV4dC5nZXRJbWFnZURhdGEoc2VsZi5vcGFjaXR5SW5kaWNhdG9yUG9zaXRpb24ueCxzZWxmLm9wYWNpdHlJbmRpY2F0b3JQb3NpdGlvbi55LDEsMSksYWxwaGE9TWF0aC5jZWlsKGltYWdlRGF0YS5kYXRhWzNdLzI1NSoxMDApLzEwMDtyZXR1cm57cjppbWFnZURhdGEuZGF0YVswXSxnOmltYWdlRGF0YS5kYXRhWzFdLGI6aW1hZ2VEYXRhLmRhdGFbMl0sYTphbHBoYX19KSxzZWxmLmRyYXc9KHBhcmFtcz0+e3NlbGYuaW5pdChwYXJhbXMpLHNlbGYuY2FsaWJyYXRlQ29sb3IoKSxzZWxmLmNhbGlicmF0ZU9wYWNpdHkoKTtsZXQgaW50ZXJ2YWw9c2V0VGltZW91dCgoKT0+e3NlbGYuYWRkZWQ9ITAsY2xlYXJUaW1lb3V0KGludGVydmFsKX0sMmUzKTtyZXR1cm4gc2VsZi5waWNrZXJ9KSxzZWxmLmRpc3Bvc2U9KCgpPT57Y2xlYXJJbnRlcnZhbChzZWxmLmludGVydmFsKSxzZWxmLnBpY2tlci5yZW1vdmUoKX0pLHNlbGYuY29sb3JUeXBlPSgoY29sb3I9XCIjZmZmZmZmXCIpPT57bGV0IHR5cGU9XCJzdHJpbmdcIjtpZigwPT1jb2xvci5pbmRleE9mKFwiI1wiKSYmKGNvbG9yLmxlbmd0aC0xKSUzPT0wKXR5cGU9XCJoZXhcIjtlbHNlIGlmKDA9PWNvbG9yLmluZGV4T2YoXCJyZ2JhXCIpKXtsZXQgdmFsdWVzPXNlbGYuZnVuYy5pbkJldHdlZW4oY29sb3IsXCJyZ2JhKFwiLFwiKVwiKTstMSE9dmFsdWVzJiY0PT12YWx1ZXMuc3BsaXQoXCIsXCIpLmxlbmd0aCYmKHR5cGU9XCJyZ2JhXCIpfWVsc2UgaWYoMD09Y29sb3IuaW5kZXhPZihcInJnYlwiKSl7bGV0IHZhbHVlcz1zZWxmLmZ1bmMuaW5CZXR3ZWVuKGNvbG9yLFwicmdiKFwiLFwiKVwiKTstMSE9dmFsdWVzJiYzPT12YWx1ZXMuc3BsaXQoXCIsXCIpLmxlbmd0aCYmKHR5cGU9XCJyZ2JcIil9ZWxzZSBpZigwPT1jb2xvci5pbmRleE9mKFwiaHNsYVwiKSl7bGV0IHZhbHVlcz1zZWxmLmZ1bmMuaW5CZXR3ZWVuKGNvbG9yLFwiaHNsYShcIixcIilcIik7LTEhPXZhbHVlcyYmND09dmFsdWVzLnNwbGl0KFwiLFwiKS5sZW5ndGgmJih0eXBlPVwiaHNsYVwiKX1lbHNlIGlmKDA9PWNvbG9yLmluZGV4T2YoXCJoc2xcIikpe2xldCB2YWx1ZXM9c2VsZi5mdW5jLmluQmV0d2Vlbihjb2xvcixcImhzbChcIixcIilcIik7LTEhPXZhbHVlcyYmMz09dmFsdWVzLnNwbGl0KFwiLFwiKS5sZW5ndGgmJih0eXBlPVwiaHNsXCIpfXJldHVybiB0eXBlfSksc2VsZi5oZXhUb1JHQj0oKGhleD1cIiNmZmZmZmZcIixhbHBoYT0hMCk9PntsZXQgcj0wLGc9MCxiPTAsYT0yNTU7cmV0dXJuIDQ9PWhleC5sZW5ndGg/KHI9XCIweFwiK2hleFsxXStoZXhbMV0sZz1cIjB4XCIraGV4WzJdK2hleFsyXSxiPVwiMHhcIitoZXhbM10raGV4WzNdKTo1PT1oZXgubGVuZ3RoPyhyPVwiMHhcIitoZXhbMV0raGV4WzFdLGc9XCIweFwiK2hleFsyXStoZXhbMl0sYj1cIjB4XCIraGV4WzNdK2hleFszXSxhPVwiMHhcIitoZXhbNF0raGV4WzRdKTo3PT1oZXgubGVuZ3RoPyhyPVwiMHhcIitoZXhbMV0raGV4WzJdLGc9XCIweFwiK2hleFszXStoZXhbNF0sYj1cIjB4XCIraGV4WzVdK2hleFs2XSk6OT09aGV4Lmxlbmd0aCYmKHI9XCIweFwiK2hleFsxXStoZXhbMl0sZz1cIjB4XCIraGV4WzNdK2hleFs0XSxiPVwiMHhcIitoZXhbNV0raGV4WzZdLGE9XCIweFwiK2hleFs3XStoZXhbOF0pLGE9KyhhLzI1NSkudG9GaXhlZCgzKSwwPT1hbHBoYT9gcmdiKCR7K3J9LCAkeytnfSwgJHsrYn0pYDpgcmdiKCR7K3J9LCAkeytnfSwgJHsrYn0sICR7YX0pYH0pLHNlbGYuaGV4VG9IU0w9KChoZXg9XCIjZmZmZmZmXCIsYWxwaGE9ITApPT57bGV0IGNvbG9yPXNlbGYuaGV4VG9SR0IoaGV4LGFscGhhKTtyZXR1cm4gY29sb3I9c2VsZi5yZ2JUb0hTTChjb2xvcixhbHBoYSl9KSxzZWxmLnJnYlRvSGV4PSgocmdiPVwicmdiKDAsIDAsIDApXCIsYWxwaGE9ITApPT57bGV0IHN0YXJ0PXJnYi5pbmRleE9mKFwiKFwiKSsxLGVuZD1yZ2IuaW5kZXhPZihcIilcIiksW3IsZyxiLGFdPXJnYi5zbGljZShzdGFydCxlbmQpLnNwbGl0KFwiLFwiKTtzZWxmLmZ1bmMuaXNzZXQoYSl8fChhPTEpLHI9KCtyKS50b1N0cmluZygxNiksZz0oK2cpLnRvU3RyaW5nKDE2KSxiPSgrYikudG9TdHJpbmcoMTYpLGE9TWF0aC5yb3VuZCgyNTUqYSkudG9TdHJpbmcoMTYpLDE9PXIubGVuZ3RoJiYocj1gMCR7cn1gKSwxPT1nLmxlbmd0aCYmKGc9YDAke2d9YCksMT09Yi5sZW5ndGgmJihiPWAwJHtifWApLDE9PWEubGVuZ3RoJiYoYT1gMCR7YX1gKTtsZXQgaGV4PVwiI1wiO3JldHVybiBoZXgrPTAhPWFscGhhP2Ake3J9JHtnfSR7Yn0ke2F9YDpgJHtyfSR7Z30ke2J9YH0pLHNlbGYucmdiVG9IU0w9KChyZ2I9XCJyZ2IoMCwgMCwgMClcIixhbHBoYT0hMCk9PntsZXQgc3RhcnQ9cmdiLmluZGV4T2YoXCIoXCIpKzEsZW5kPXJnYi5pbmRleE9mKFwiKVwiKSxbcixnLGIsYV09cmdiLnNsaWNlKHN0YXJ0LGVuZCkuc3BsaXQoXCIsXCIpO2NvbnNvbGUubG9nKHIsZyxiKSxzZWxmLmZ1bmMuaXNzZXQoYSl8fChhPTEpLHIvPTIyNSxnLz0yMjUsYi89MjI1O2xldCBjbWluPU1hdGgubWluKHIsZyxiKSxjbWF4PU1hdGgubWF4KHIsZyxiKSxkZWx0YT1jbWF4LWNtaW4saD0wLHM9MCxsPTA7MD09ZGVsdGE/aD0wOmNtYXg9PXI/aD0oZy1iKS9kZWx0YSU2OmNtYXg9PWc/aD0oYi1yKS9kZWx0YSsyOmNtYXg9PWcmJihoPShyLWcpL2RlbHRhKzQpLChoPU1hdGgucm91bmQoNjAqaCkpPDAmJihoKz0zNjApLGw9KGNtYXgrY21pbikvMixzPTA9PWRlbHRhPzA6ZGVsdGEvKDEtTWF0aC5hYnMoMipsLTEpKSxsPSsoMTAwKmwpLnRvRml4ZWQoMSkscz0rKDEwMCpzKS50b0ZpeGVkKDEpO2xldCBoc2w9XCJoc2xcIjtyZXR1cm4gaHNsKz0wPT1hbHBoYT9gKCR7aH0sICR7c30lLCAke2x9JSlgOmAoJHtofSwgJHtzfSUsICR7bH0lLCAke2F9KWB9KSxzZWxmLmhzbFRvUkdCPSgoaHNsPVwiaHNsKDAsIDAlLCAwJSlcIixhbHBoYT0hMCk9PntsZXQgcmdiPVwicmdiXCIsc3RhcnQ9aHNsLmluZGV4T2YoXCIoXCIpKzEsZW5kPWhzbC5pbmRleE9mKFwiKVwiKSxbaCxzLGwsYV09aHNsLnNsaWNlKHN0YXJ0LGVuZCkuc3BsaXQoXCIsXCIpO3NlbGYuZnVuYy5pc3NldChhKXx8KGE9MSksY29uc29sZS5sb2coaCxzLGwpLGguaW5kZXhPZihcImRlZ1wiKT4tMT9oPWguc3Vic3RyKDAsaC5sZW5ndGgtMyk6aC5pbmRleE9mKFwicmFkXCIpPi0xP2g9TWF0aC5yb3VuZChoLnN1YnN0cigwLGgubGVuZ3RoLTMpKigxODAvTWF0aC5QSSkpOmguaW5kZXhPZihcInR1cm5cIik+LTEmJihoPU1hdGgucm91bmQoMzYwKmguc3Vic3RyKDAsaC5sZW5ndGgtNCkpKSxoPj0zNjAmJihoJT0zNjApLHM9cy5yZXBsYWNlKFwiJVwiLFwiXCIpLzEwMCxsPWwucmVwbGFjZShcIiVcIixcIlwiKS8xMDA7bGV0IGM9KDEtTWF0aC5hYnMoMipsLTEpKSpzLHg9YyooMS1NYXRoLmFicyhoLzYwJTItMSkpLG09bC1jLzIscj0wLGc9MCxiPTA7cmV0dXJuIDA8PWgmJmg8NjA/KHI9YyxnPXgsYj0wKTo2MDw9aCYmaDwxMjA/KHI9eCxnPWMsYj0wKToxMjA8PWgmJmg8MTgwPyhyPTAsZz1jLGI9eCk6MTgwPD1oJiZoPDI0MD8ocj0wLGc9eCxiPWMpOjI0MDw9aCYmaDwzMDA/KHI9eCxnPTAsYj1jKTozMDA8PWgmJmg8MzYwJiYocj1jLGc9MCxiPXgpLHI9TWF0aC5yb3VuZCgyNTUqKHIrbSkpLGc9TWF0aC5yb3VuZCgyNTUqKGcrbSkpLGI9TWF0aC5yb3VuZCgyNTUqKGIrbSkpLHJnYis9MD09YWxwaGE/YCgke3J9LCAke2d9LCAke2J9KWA6YCgke3J9LCAke2d9LCAke2J9LCAke2F9KWB9KSxzZWxmLmhzbFRvSGV4PSgoaHNsPVwiXCIsYWxwaGE9ITApPT57bGV0IGNvbG9yPXNlbGYuaHNsVG9SR0IoaHNsLGFscGhhKTtyZXR1cm4gc2VsZi5yZ2JUb0hleChjb2xvcixhbHBoYSl9KSxzZWxmLmFkZE9wYWNpdHk9KChjb2xvcj1cInJnYigwLCAwLCAwKVwiLG9wYWNpdHk9LjUpPT57bGV0IHN0YXJ0PWNvbG9yLmluZGV4T2YoXCIoXCIpKzEsZW5kPWNvbG9yLmluZGV4T2YoXCIpXCIpLHBvaW50cz1jb2xvci5zbGljZShzdGFydCxlbmQpLnNwbGl0KFwiLFwiKTtyZXR1cm4gcG9pbnRzWzNdPW9wYWNpdHksYHJnYmEoJHtwb2ludHMuam9pbihcIixcIil9KWB9KSxzZWxmLmdldE9wYWNpdHk9KChjb2xvcj1cInJnYigwLCAwLCAwKVwiKT0+e2NvbG9yPXNlbGYuZnVuYy5pbkJldHdlZW4oY29sb3IsXCIoXCIsXCIpXCIpO2xldFtyLGcsYixhXT1jb2xvci5zcGxpdChcIixcIik7cmV0dXJuIGEudHJpbSgpfSksc2VsZi5pbnZlcnRDb2xvcj0oKGNvbG9yPVwiI2ZmZmZmZlwiKT0+e2xldCBpbnZlcnQsdHlwZT1zZWxmLmNvbG9yVHlwZShjb2xvcik7aWYoXCJoZXhcIj09dHlwZSljb2xvcj1jb2xvci5yZXBsYWNlKFwiI1wiLFwiXCIpLGludmVydD1cIiNcIitzZWxmLmludmVydEhleChjb2xvcik7ZWxzZSBpZihcInJnYlwiPT10eXBlKWNvbG9yPXNlbGYucmdiVG9IZXgoY29sb3IpLnJlcGxhY2UoXCIjXCIsXCJcIiksaW52ZXJ0PXNlbGYuaW52ZXJ0SGV4KGNvbG9yKSxpbnZlcnQ9c2VsZi5oZXhUb1JHQihpbnZlcnQpO2Vsc2UgaWYoXCJyZ2JhXCI9PXR5cGUpe2xldCBvcGFjaXR5PXNlbGYuZ2V0T3BhY2l0eShjb2xvcik7Y29sb3I9c2VsZi5yZ2JUb0hleChjb2xvcikucmVwbGFjZShcIiNcIixcIlwiKSxpbnZlcnQ9c2VsZi5pbnZlcnRIZXgoY29sb3IpLGludmVydD1zZWxmLmhleFRvUkdCKGludmVydCksaW52ZXJ0PXNlbGYuYWRkT3BhY2l0eShpbnZlcnQsb3BhY2l0eSl9cmV0dXJuIGludmVydH0pLHNlbGYuaW52ZXJ0SGV4PSgoaGV4PVwiZmZmZmZmXCIpPT4oMTY3NzcyMTVeTnVtYmVyKGAweDEke2hleH1gKSkudG9TdHJpbmcoMTYpLnN1YnN0cigxKS50b1VwcGVyQ2FzZSgpKSxzZWxmfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtOdmJHOXlVR2xqYTJWeUxtcHpJbDBzSW01aGJXVnpJanBiSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKelpXeG1JaXdpWm5WdVl5SXNJa1oxYm1NaUxDSmxiR1Z0Wlc1MFRXOWthV1pwWlhJaUxDSlVaVzF3YkdGMFpTSXNJbVZzWlcxbGJuUk1hV0p5WVhKNUlpd2lZMjlzYjNKSmJtUnBZMkYwYjNKUWIzTnBkR2x2YmlJc0luZ2lMQ0o1SWl3aWIzQmhZMmwwZVVsdVpHbGpZWFJ2Y2xCdmMybDBhVzl1SWl3aVkyOXVkbVZ5ZEZSdklpd2lhVzVwZENJc0luQmhjbUZ0Y3lJc0luQnBZMnRsY2lJc0ltTnlaV0YwWlVWc1pXMWxiblFpTENKbGJHVnRaVzUwSWl3aVlYUjBjbWxpZFhSbGN5SXNJbU5zWVhOeklpd2lZMmhwYkdSeVpXNGlMQ0pwWkNJc0ltOXdkR2x2Ym5NaUxDSmpiMnh2Y2xkcGJtUnZkeUlzSW1acGJtUWlMQ0p2Y0dGamFYUjVWMmx1Wkc5M0lpd2lZMjlzYjNKRFlXNTJZWE1pTENKdmNHRmphWFI1UTJGdWRtRnpJaXdpWTI5c2IzSk5ZWEpyWlhJaUxDSnZjR0ZqYVhSNVRXRnlhMlZ5SWl3aWQybGtkR2dpTENKb1pXbG5hSFFpTENKd2FXTnJaV1JEYjJ4dmNpSXNJbU52Ykc5eUlpd2lZM056SWl3aVkyOXNiM0pEYjI1MFpYaDBJaXdpWjJWMFEyOXVkR1Y0ZENJc0ltOXdZV05wZEhsRGIyNTBaWGgwSWl3aWFXNXVaWEpVWlhoMElpd2liMjVEYUdGdVoyVmtJaXdpZG1Gc2RXVWlMQ0p5WlhCc2VTSXNJbXhwYzNSbGJpSXNJbU5oYkdsaWNtRjBaVU52Ykc5eUlpd2lZMjlzYjNKSGNtRmthV1Z1ZENJc0ltTnlaV0YwWlV4cGJtVmhja2R5WVdScFpXNTBJaXdpWVdSa1EyOXNiM0pUZEc5d0lpd2labWxzYkZOMGVXeGxJaXdpWm1sc2JGSmxZM1FpTENKallXeHBZbkpoZEdWUGNHRmphWFI1SWl3aWNtZGlZU0lzSW1Oc1pXRnlVbVZqZENJc0ltOXdZV05wZEhsSGNtRmthV1Z1ZENJc0lta2lMQ0poWkdSUGNHRmphWFI1SWl3aWFYTkRiMnh2Y2sxdmRYTmxSRzkzYmlJc0ltbHpUM0JoWTJsMGVVMXZkWE5sUkc5M2JpSXNJbTV2ZEVKMVltSnNaV1JGZG1WdWRDSXNJbVYyWlc1MElpd2lZV1JrWldRaUxDSmthWE53YjNObElpd2lZV1JrUlhabGJuUk1hWE4wWlc1bGNpSXNJbU4xY25KbGJuUllJaXdpWTJ4cFpXNTBXQ0lzSW1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDSXNJbXhsWm5RaUxDSmpkWEp5Wlc1MFdTSXNJbU5zYVdWdWRGa2lMQ0owYjNBaUxDSndhV05yWldRaUxDSm5aWFJRYVdOclpXUkRiMnh2Y2lJc0luSWlMQ0puSWl3aVlpSXNJbWRsZEZCcFkydGxaRTl3WVdOcGRIa2lMQ0poSWl3aVkyOXVkbVZ5UTI5c2IzSWlMQ0prYVhOd1lYUmphRVYyWlc1MElpd2lRM1Z6ZEc5dFJYWmxiblFpTENKaVlXTnJaM0p2ZFc1a1EyOXNiM0lpTENKamIyNTJaWEowWldSRGIyeHZjaUlzSW5KbllsUnZTR1Y0SWl3aWNtZGlWRzlJVTB3aUxDSmpZV3hzUW1GamF5SXNJbWx0WVdkbFJHRjBZU0lzSW1kbGRFbHRZV2RsUkdGMFlTSXNJbVJoZEdFaUxDSmhiSEJvWVNJc0lrMWhkR2dpTENKalpXbHNJaXdpWkhKaGR5SXNJbWx1ZEdWeWRtRnNJaXdpYzJWMFZHbHRaVzkxZENJc0ltTnNaV0Z5VkdsdFpXOTFkQ0lzSW1Oc1pXRnlTVzUwWlhKMllXd2lMQ0p5WlcxdmRtVWlMQ0pqYjJ4dmNsUjVjR1VpTENKMGVYQmxJaXdpYVc1a1pYaFBaaUlzSW14bGJtZDBhQ0lzSW5aaGJIVmxjeUlzSW1sdVFtVjBkMlZsYmlJc0luTndiR2wwSWl3aWFHVjRWRzlTUjBJaUxDSm9aWGdpTENKMGIwWnBlR1ZrSWl3aWFHVjRWRzlJVTB3aUxDSnlaMklpTENKemRHRnlkQ0lzSW1WdVpDSXNJbk5zYVdObElpd2lhWE56WlhRaUxDSjBiMU4wY21sdVp5SXNJbkp2ZFc1a0lpd2lZMjl1YzI5c1pTSXNJbXh2WnlJc0ltTnRhVzRpTENKdGFXNGlMQ0pqYldGNElpd2liV0Y0SWl3aVpHVnNkR0VpTENKb0lpd2ljeUlzSW13aUxDSmhZbk1pTENKb2Myd2lMQ0pvYzJ4VWIxSkhRaUlzSW5OMVluTjBjaUlzSWxCSklpd2ljbVZ3YkdGalpTSXNJbU1pTENKdElpd2lhSE5zVkc5SVpYZ2lMQ0p2Y0dGamFYUjVJaXdpY0c5cGJuUnpJaXdpYW05cGJpSXNJbWRsZEU5d1lXTnBkSGtpTENKMGNtbHRJaXdpYVc1MlpYSjBRMjlzYjNJaUxDSnBiblpsY25RaUxDSnBiblpsY25SSVpYZ2lMQ0pPZFcxaVpYSWlMQ0owYjFWd2NHVnlRMkZ6WlNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc01FUkJObWRDUVVFc2JVSkJRVTlETEVOQk1XZENVQ3hWUVVGQkxFTkJSVWtzU1VGQlNVTXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJjV2RDV0N4UFFYQm5Ra0ZCTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVOHNTVUZCU1VNc1VVRkJRVUVzUTBGRGFFSkdMRWxCUVVGQkxFTkJRVXRITEdWQlFVRkJMRU5CUVd0Q0xFbEJRVWxETEdGQlFVRkJMRU5CUXpOQ1NpeEpRVUZCUVN4RFFVRkxSeXhsUVVGQlFTeERRVUZuUWtVc1kwRkJRVUVzUlVGQlFVRXNRMEZEY2tKTUxFbEJRVUZCTEVOQlFVdE5MSE5DUVVGQlFTeERRVUY1UWl4RFFVRkZReXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZEZWtOU0xFbEJRVUZCTEVOQlFVdFRMSGRDUVVGQlFTeERRVUV5UWl4RFFVRkZSaXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZETTBOU0xFbEJRVUZCTEVOQlFVdFZMRk5CUVVGQkxFTkJRVmtzUzBGQlFTeERRVVZxUWxZc1NVRkJRVUVzUTBGQlMxY3NTVUZCUVVFc1JVRkJVVU1zVFVGQlFVRXNSMEZEVkZvc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJVMklzU1VGQlFVRXNRMEZCUzBjc1pVRkJRVUVzUTBGQlowSlhMR0ZCUVVGQkxFTkJRV01zUTBGRE4wTkRMRTlCUVVGQkxFTkJRVk1zUzBGQlFTeERRVUZQUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZETEV0QlFVRkJMRU5CUVU4c1kwRkJRU3hEUVVGQkxFTkJRV3RDUXl4UlFVRkJRU3hEUVVGVkxFTkJRemRFTEVOQlEwbElMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEVWQlFVRkJMRU5CUVVrc2MwSkJRVUVzUTBGQlFTeERRVUV3UWtRc1VVRkJRVUVzUTBGQlZTeERRVU51UlN4RFFVTkpTQ3hQUVVGQlFTeERRVUZUTEUxQlFVRXNRMEZCVVVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4RlFVRkJRU3hEUVVGSkxEUkNRVUZCTEVOQlFVRXNRMEZCWjBORUxGRkJRVUZCTEVOQlFWVXNRMEZEZWtVc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4UlFVRkJMRU5CUVZWRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVjc1JVRkJRVUVzUTBGQlNTeHhRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkRka01zUTBGQlJVb3NUMEZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUlVGQlFVRXNRMEZCU1N3NFFrRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJ6ZERMRU5CUTBsS0xFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRVZCUVVGQkxFTkJRVWtzSzBKQlFVRXNRMEZCUVN4RFFVRnRRMFFzVVVGQlFVRXNRMEZCVlN4RFFVTTFSU3hEUVVGRlNDeFBRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhGUVVGQlFTeERRVUZKTEhkQ1FVRkJMRU5CUVVFc1EwRkJRU3hEUVVOMlF5eERRVUZGU2l4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlJ5eEZRVUZCUVN4RFFVRkpMR2REUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUzNKRUxFTkJRMGxLTEU5QlFVRkJMRU5CUVZNc1MwRkJRU3hEUVVGUFF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFVkJRVUZCTEVOQlFVa3NjVUpCUVVFc1EwRkJRU3hEUVVGNVFrUXNVVUZCUVVFc1EwRkJWU3hEUVVOcVJTeERRVUZGU0N4UFFVRkJRU3hEUVVGVExFMUJRVUVzUTBGQlVVTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlJ5eEZRVUZCUVN4RFFVRkpMR05CUVVFc1EwRkJRU3hEUVVGQkxFTkJRM0pETEVOQlEwbEtMRTlCUVVGQkxFTkJRVk1zVFVGQlFTeERRVUZSUXl4VlFVRkJRU3hEUVVGWkxFTkJRVVZITEVWQlFVRkJMRU5CUVVrc2NVSkJRVUVzUTBGQlFTeERRVUY1UWtRc1VVRkJRVUVzUTBGQlZTeERRVU5zUlN4RFFVRkZTQ3hQUVVGQlFTeERRVUZUTEZGQlFVRXNRMEZCVlVNc1ZVRkJRVUVzUTBGQldTeERRVUZGUnl4RlFVRkJRU3hEUVVGSkxIRkNRVUZCTEVOQlFVRXNRMEZCZVVKRExFOUJRVUZCTEVOQlFWTXNRMEZCUXl4TFFVRkJMRU5CUVU4c1MwRkJRU3hEUVVGUExFdEJRVUVzUTBGQlFTeERRVUZCTEVOQlEzaEdMRU5CUVVWTUxFOUJRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRlJReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRVZCUVVGQkxFTkJRVWtzYjBKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZSTjBSdVFpeEpRVUZCUVN4RFFVRkxjVUlzVjBGQlFVRXNRMEZCWTNKQ0xFbEJRVUZCTEVOQlFVdGhMRTFCUVVGQkxFTkJRVTlUTEVsQlFVRkJMRU5CUVVzc05rSkJRVUVzUTBGQlFTeERRVU53UTNSQ0xFbEJRVUZCTEVOQlFVdDFRaXhoUVVGQlFTeERRVUZuUW5aQ0xFbEJRVUZCTEVOQlFVdGhMRTFCUVVGQkxFTkJRVTlUTEVsQlFVRkJMRU5CUVVzc1owTkJRVUVzUTBGQlFTeERRVU4wUTNSQ0xFbEJRVUZCTEVOQlFVdDNRaXhYUVVGQlFTeERRVUZqZUVJc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJUMU1zU1VGQlFVRXNRMEZCU3l4elFrRkJRU3hEUVVGQkxFTkJRM0JEZEVJc1NVRkJRVUVzUTBGQlMzbENMR0ZCUVVGQkxFTkJRV2RDZWtJc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJUMU1zU1VGQlFVRXNRMEZCU3l4NVFrRkJRU3hEUVVGQkxFTkJRM1JEZEVJc1NVRkJRVUVzUTBGQlN6QkNMRmRCUVVGQkxFTkJRV014UWl4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRlBVeXhKUVVGQlFTeERRVUZMTEN0Q1FVRkJMRU5CUVVFc1EwRkRjRU4wUWl4SlFVRkJRU3hEUVVGTE1rSXNZVUZCUVVFc1EwRkJaMEl6UWl4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRlBVeXhKUVVGQlFTeERRVUZMTEdsRFFVRkJMRU5CUVVFc1EwRkRkRU4wUWl4SlFVRkJRU3hEUVVGTE5FSXNTMEZCUVVFc1EwRkJVV2hDTEUxQlFVRkJMRU5CUVU5blFpeExRVUZCUVN4RFFVTndRalZDTEVsQlFVRkJMRU5CUVVzMlFpeE5RVUZCUVN4RFFVRlRha0lzVFVGQlFVRXNRMEZCVDJsQ0xFMUJRVUZCTEVOQlEzSkNOMElzU1VGQlFVRXNRMEZCU3poQ0xGZEJRVUZCTEVOQlFXTnNRaXhOUVVGQlFTeERRVUZQYlVJc1MwRkJRVUVzUlVGQlV5eGpRVUZCTEVOQlEyNURMMElzU1VGQlFVRXNRMEZCUzNGQ0xGZEJRVUZCTEVOQlFWbFhMRWRCUVVGQkxFTkJRVWtzUTBGQlJVZ3NUVUZCUVVFc1EwRkJVVGRDTEVsQlFVRkJMRU5CUVVzMlFpeE5RVUZCUVN4RFFVRlRMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRemRETjBJc1NVRkJRVUVzUTBGQlMzZENMRmRCUVVGQkxFTkJRVmxKTEV0QlFVRkJMRU5CUVZFMVFpeEpRVUZCUVN4RFFVRkxORUlzUzBGQlFVRXNRMEZET1VJMVFpeEpRVUZCUVN4RFFVRkxkMElzVjBGQlFVRXNRMEZCV1Vzc1RVRkJRVUVzUTBGQlV6ZENMRWxCUVVGQkxFTkJRVXMyUWl4TlFVRkJRU3hEUVVNdlFqZENMRWxCUVVGQkxFTkJRVXQxUWl4aFFVRkJRU3hEUVVGalV5eEhRVUZCUVN4RFFVRkpMRU5CUVVWSUxFMUJRVUZCTEVOQlFWRTNRaXhKUVVGQlFTeERRVUZMTmtJc1RVRkJRVUVzUTBGQlV5eEpRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXZRemRDTEVsQlFVRkJMRU5CUVV0NVFpeGhRVUZCUVN4RFFVRmpTU3hOUVVGQlFTeERRVUZUTjBJc1NVRkJRVUVzUTBGQlN6WkNMRTFCUVVGQkxFTkJRMnBETjBJc1NVRkJRVUVzUTBGQlMzbENMR0ZCUVVGQkxFTkJRV05ITEV0QlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVjelFqVkNMRWxCUVVGQkxFTkJRVXRwUXl4WlFVRkJRU3hEUVVGbGFrTXNTVUZCUVVFc1EwRkJTM2RDTEZkQlFVRkJMRU5CUVZsVkxGVkJRVUZCTEVOQlFWY3NTVUZCUVN4RFFVRkJMRU5CUTJoRWJFTXNTVUZCUVVFc1EwRkJTMjFETEdOQlFVRkJMRU5CUVdsQ2JrTXNTVUZCUVVFc1EwRkJTM2xDTEdGQlFVRkJMRU5CUVdOVExGVkJRVUZCTEVOQlFWY3NTVUZCUVN4RFFVRkJMRU5CUlhCRWJFTXNTVUZCUVVFc1EwRkJTMkVzVFVGQlFVRXNRMEZCVDFNc1NVRkJRVUVzUTBGQlN5eHhRa0ZCUVN4RFFVRkJMRU5CUVhWQ1l5eFRRVUZCUVN4RFFVRlpjRU1zU1VGQlFVRXNRMEZCU3poQ0xGZEJRVUZCTEVOQlEzcEVPVUlzU1VGQlFVRXNRMEZCUzJFc1RVRkJRVUVzUTBGQlQxTXNTVUZCUVVFc1EwRkJTeXh6UWtGQlFTeERRVUZCTEVOQlFYZENaU3hUUVVGQlFTeERRVUZWUXl4TFFVRkJRU3hGUVVGQlFTeERRVU12UTNSRExFbEJRVUZCTEVOQlFVdFZMRk5CUVVGQkxFTkJRVmswUWl4TFFVRkJRU3hEUVVOcVFuUkRMRWxCUVVGQkxFTkJRVXQxUXl4TFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkVWRrTXNTVUZCUVVFc1EwRkJTM2RETEUxQlFVRkJMRVZCUVVGQkxFTkJSVVY0UXl4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRvUW1Jc1NVRkJRVUVzUTBGQlMzbERMR05CUVVGQkxFVkJRV2xDTEVsQlFVRXNRMEZEYkVJc1NVRkJTVU1zWVVGQlFVRXNRMEZCWjBJeFF5eEpRVUZCUVN4RFFVRkxhVU1zV1VGQlFVRXNRMEZCWVZVc2IwSkJRVUZCTEVOQlFYRkNMRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWN6UXl4SlFVRkJRU3hEUVVGTE5FSXNTMEZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVUVzUTBGSE4wVmpMR0ZCUVVGQkxFTkJRV05GTEZsQlFVRkJMRU5CUVdFc1EwRkJRU3hEUVVGSExHZENRVUZCTEVOQlFVRXNRMEZET1VKR0xHRkJRVUZCTEVOQlFXTkZMRmxCUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZOTEd0Q1FVRkJMRU5CUVVFc1EwRkRha05HTEdGQlFVRkJMRU5CUVdORkxGbEJRVUZCTEVOQlFXRXNSMEZCUVN4RFFVRk5MR2RDUVVGQkxFTkJRVUVzUTBGRGFrTkdMR0ZCUVVGQkxFTkJRV05GTEZsQlFVRkJMRU5CUVdFc1IwRkJRU3hEUVVGTkxHdENRVUZCTEVOQlFVRXNRMEZEYWtOR0xHRkJRVUZCTEVOQlFXTkZMRmxCUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZOTEdkQ1FVRkJMRU5CUVVFc1EwRkRha05HTEdGQlFVRkJMRU5CUVdORkxGbEJRVUZCTEVOQlFXRXNSMEZCUVN4RFFVRk5MR3RDUVVGQkxFTkJRVUVzUTBGRGFrTkdMR0ZCUVVGQkxFTkJRV05GTEZsQlFVRkJMRU5CUVdFc1EwRkJRU3hEUVVGSExHZENRVUZCTEVOQlFVRXNRMEZGT1VJMVF5eEpRVUZCUVN4RFFVRkxhVU1zV1VGQlFVRXNRMEZCWVZrc1UwRkJRVUVzUTBGQldVZ3NZVUZCUVVFc1EwRkRPVUl4UXl4SlFVRkJRU3hEUVVGTGFVTXNXVUZCUVVFc1EwRkJZV0VzVVVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGSE9VTXNTVUZCUVVFc1EwRkJTelJDTEV0QlFVRkJMRU5CUVU4MVFpeEpRVUZCUVN4RFFVRkxOa0lzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGJFUmhMR0ZCUVVGQkxFTkJRV2RDTVVNc1NVRkJRVUVzUTBGQlMybERMRmxCUVVGQkxFTkJRV0ZWTEc5Q1FVRkJRU3hEUVVGeFFpeERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkhMRU5CUVVFc1EwRkJSek5ETEVsQlFVRkJMRU5CUVVzMlFpeE5RVUZCUVN4RFFVRkJRU3hGUVVOMlJHVXNXVUZCUVVFc1EwRkJZU3hEUVVGQkxFTkJRVWNzZDBKQlFVRXNRMEZCUVN4RFFVTTVRa1lzWVVGQlFVRXNRMEZCWTBVc1dVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlFVc3NkMEpCUVVFc1EwRkJRU3hEUVVOb1EwWXNZVUZCUVVFc1EwRkJZMFVzV1VGQlFVRXNRMEZCWVN4RlFVRkJMRU5CUVVzc2EwSkJRVUVzUTBGQlFTeERRVU5vUTBZc1lVRkJRVUVzUTBGQlkwVXNXVUZCUVVFc1EwRkJZU3hEUVVGQkxFTkJRVWNzYTBKQlFVRXNRMEZCUVN4RFFVVTVRalZETEVsQlFVRkJMRU5CUVV0cFF5eFpRVUZCUVN4RFFVRmhXU3hUUVVGQlFTeERRVUZaU0N4aFFVRkJRU3hEUVVNNVFqRkRMRWxCUVVGQkxFTkJRVXRwUXl4WlFVRkJRU3hEUVVGaFlTeFJRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWM1UXl4SlFVRkJRU3hEUVVGTE5FSXNTMEZCUVVFc1EwRkJUelZDTEVsQlFVRkJMRU5CUVVzMlFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDBSRGRDTEVsQlFVRkJMRU5CUVVzclF5eG5Ra0ZCUVVFc1JVRkJiVUlzU1VGQlFTeERRVU53UWl4SlFVRkpReXhKUVVGQlFTeERRVVZLYUVRc1NVRkJRVUVzUTBGQlMyMURMR05CUVVGQkxFTkJRV1ZqTEZOQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGSExFTkJRVUVzUTBGQlIycEVMRWxCUVVGQkxFTkJRVXQ1UWl4aFFVRkJRU3hEUVVGalJ5eExRVUZCUVN4RFFVRlBOVUlzU1VGQlFVRXNRMEZCU3paQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUTI1RkxFbEJRVWx4UWl4bFFVRkJRU3hEUVVGclFteEVMRWxCUVVGQkxFTkJRVXR0UXl4alFVRkJRU3hEUVVGbFVTeHZRa0ZCUVVFc1EwRkJjVUlzUTBGQlFTeERRVUZITEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVjelF5eEpRVUZCUVN4RFFVRkxlVUlzWVVGQlFVRXNRMEZCWTBrc1RVRkJRVUVzUTBGQlFVRXNRMEZGTTBZc1NVRkJTeXhKUVVGSmMwSXNRMEZCUVVFc1EwRkJTU3hIUVVGQkxFTkJRVXRCTEVOQlFVRkJMRVZCUVVzc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RlFVRkJRU3hEUVVOMFFrZ3NTVUZCUVVFc1EwRkJUMmhFTEVsQlFVRkJMRU5CUVV0dlJDeFZRVUZCUVN4RFFVRlhjRVFzU1VGQlFVRXNRMEZCU3poQ0xGZEJRVUZCTEVOQlFXRnhRaXhEUVVGQlFTeERRVUZKTEVkQlFVRXNRMEZCUVN4RFFVTTNRMFFzWlVGQlFVRXNRMEZCWjBKT0xGbEJRVUZCTEVOQlFXRlBMRU5CUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZMU0N4SlFVRkJRU3hEUVVGQlFTeERRVWN4UTJoRUxFbEJRVUZCTEVOQlFVdHRReXhqUVVGQlFTeERRVUZsVlN4VFFVRkJRU3hEUVVGWlN5eGxRVUZCUVN4RFFVTm9RMnhFTEVsQlFVRkJMRU5CUVV0dFF5eGpRVUZCUVN4RFFVRmxZeXhUUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVkcVJDeEpRVUZCUVN4RFFVRkxlVUlzWVVGQlFVRXNRMEZCWTBjc1MwRkJRVUVzUTBGQlR6VkNMRWxCUVVGQkxFTkJRVXQ1UWl4aFFVRkJRU3hEUVVGalNTeE5RVUZCUVN4RFFVRkJRU3hEUVVOcVJqZENMRWxCUVVGQkxFTkJRVXR0UXl4alFVRkJRU3hEUVVGbFZ5eFJRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWM1UXl4SlFVRkJRU3hEUVVGTGVVSXNZVUZCUVVFc1EwRkJZMGNzUzBGQlFVRXNRMEZCVHpWQ0xFbEJRVUZCTEVOQlFVdDVRaXhoUVVGQlFTeERRVUZqU1N4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkd1JqZENMRWxCUVVGQkxFTkJRVXQzUXl4TlFVRkJRU3hGUVVGVExFbEJRVUVzUTBGRFZpeEpRVUZKWVN4blFrRkJRVUVzUTBGQlFVRXNRMEZCYlVJc1EwRkJRU3hEUVVOdVFrTXNhMEpCUVVGQkxFTkJRVUZCTEVOQlFYRkNMRU5CUVVFc1EwRkZla0owUkN4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRlBNRU1zWlVGQlFVRXNRMEZCWjBJc1QwRkJRU3hEUVVGVFF5eExRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVU0zUW5oRUxFbEJRVUZCTEVOQlFVdDVSQ3hMUVVGQlFTeEZRVUZWU2l4blFrRkJRVUVzUlVGQmNVSkRMR3RDUVVGQlFTeEZRVU53UTNSRUxFbEJRVUZCTEVOQlFVc3dSQ3hQUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVGhDWWpGRUxFbEJRVUZCTEVOQlFVdDNRaXhYUVVGQlFTeERRVUZaYlVNc1owSkJRVUZCTEVOQlFXbENMRmRCUVVFc1EwRXhRbFpJTEV0QlFVRkJMRVZCUVVGQkxFTkJRM0JDTEVsQlFVbEpMRkZCUVVGQkxFTkJRVmRLTEV0QlFVRkJMRU5CUVUxTExFOUJRVUZCTEVOQlFWVTNSQ3hKUVVGQlFTeERRVUZMZDBJc1YwRkJRVUVzUTBGQldYTkRMSEZDUVVGQlFTeEZRVUZCUVN4RFFVRjNRa01zU1VGQlFVRXNRMEZEY0VWRExGRkJRVUZCTEVOQlFWZFNMRXRCUVVGQkxFTkJRVTFUTEU5QlFVRkJMRU5CUVZWcVJTeEpRVUZCUVN4RFFVRkxkMElzVjBGQlFVRXNRMEZCV1hORExIRkNRVUZCUVN4RlFVRkJRU3hEUVVGM1Fra3NSMEZCUVVFc1EwRkhlRVZpTEdkQ1FVRkJRU3hEUVVGdlFrOHNVVUZCUVVFc1EwRkJWeXhEUVVGQkxFVkJRVXRCTEZGQlFVRkJMRU5CUVZjMVJDeEpRVUZCUVN4RFFVRkxkMElzVjBGQlFVRXNRMEZCV1hORExIRkNRVUZCUVN4RlFVRkJRU3hEUVVGM1FteERMRXRCUVVGQkxFVkJRVk52UXl4UlFVRkJRU3hEUVVGWExFTkJRVUVzUlVGQlMwRXNVVUZCUVVFc1EwRkJWMmhGTEVsQlFVRkJMRU5CUVV0M1FpeFhRVUZCUVN4RFFVRlpjME1zY1VKQlFVRkJMRVZCUVVGQkxFTkJRWGRDYWtNc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnpRbnBMTjBJc1NVRkJRVUVzUTBGQlMzZENMRmRCUVVGQkxFTkJRVmx0UXl4blFrRkJRVUVzUTBGQmFVSXNWMEZCUVN4RFFXNUNWa2dzUzBGQlFVRXNSVUZCUVVFc1EwRkRjRUlzUjBGQlNVZ3NaMEpCUVVGQkxFTkJRV3RDTEVOQlEyeENja1FzU1VGQlFVRXNRMEZCUzAwc2MwSkJRVUZCTEVOQlFYVkNReXhEUVVGQlFTeERRVUZKYVVRc1MwRkJRVUVzUTBGQlRVc3NUMEZCUVVFc1EwRkJWVGRFTEVsQlFVRkJMRU5CUVV0M1FpeFhRVUZCUVN4RFFVRlpjME1zY1VKQlFVRkJMRVZCUVVGQkxFTkJRWGRDUXl4SlFVRkJRU3hEUVVONlJpOUVMRWxCUVVGQkxFTkJRVXROTEhOQ1FVRkJRU3hEUVVGMVFrVXNRMEZCUVVFc1EwRkJTV2RFTEV0QlFVRkJMRU5CUVUxVExFOUJRVUZCTEVOQlFWVnFSU3hKUVVGQlFTeERRVUZMZDBJc1YwRkJRVUVzUTBGQldYTkRMSEZDUVVGQlFTeEZRVUZCUVN4RFFVRjNRa2tzUjBGQlFVRXNRMEZEZWtac1JTeEpRVUZCUVN4RFFVRkxNRUlzVjBGQlFVRXNRMEZCV1Uwc1IwRkJRVUVzUTBGQlNTeERRVUZGYTBNc1IwRkJRVUVzUTBGQlMyeEZMRWxCUVVGQkxFTkJRVXROTEhOQ1FVRkJRU3hEUVVGMVFrVXNRMEZCUVVFc1EwRkJTU3hKUVVGQkxFTkJRVTExUkN4SlFVRkJRU3hEUVVGTkwwUXNTVUZCUVVFc1EwRkJTMDBzYzBKQlFVRkJMRU5CUVhWQ1F5eERRVUZCUVN4RFFVRkpMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJSWGhITEVsQlFVazBSQ3hOUVVGQlFTeERRVUZUYmtVc1NVRkJRVUVzUTBGQlMyOUZMR05CUVVGQkxFVkJRVUZCTEVOQlEyeENjRVVzU1VGQlFVRXNRMEZCU3poQ0xGZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFbEJRVUZCTEVWQlFYRkNjVU1zVFVGQlFVRXNRMEZCVDBVc1EwRkJRVUVzUTBGQlFVRXNSVUZCUVVFc1JVRkJUVVlzVFVGQlFVRXNRMEZCVDBjc1EwRkJRVUVzUTBGQlFVRXNSVUZCUVVFc1JVRkJUVWdzVFVGQlFVRXNRMEZCVDBrc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRE0wUjJSU3hKUVVGQlFTeERRVUZMZFVNc1MwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZaWW5aRExFbEJRVUZCTEVOQlFVdDNRaXhYUVVGQlFTeERRVUZaYlVNc1owSkJRVUZCTEVOQlFXbENMRk5CUVVFc1EwRlNXa2dzUzBGQlFVRXNSVUZCUVVFc1EwRkRiRUpJTEdkQ1FVRkJRU3hEUVVGQlFTeERRVUZ0UWl4RFFVRkJMRU5CUTI1Q2NrUXNTVUZCUVVFc1EwRkJTeXRETEdkQ1FVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVdkRFZDOURMRWxCUVVGQkxFTkJRVXQ1UWl4aFFVRkJRU3hEUVVGamEwTXNaMEpCUVVGQkxFTkJRV2xDTEZkQlFVRXNRMEY0UWxaSUxFdEJRVUZCTEVWQlFVRkJMRU5CUTNSQ0xFbEJRVWxKTEZGQlFVRkJMRU5CUVZkS0xFdEJRVUZCTEVOQlFVMUxMRTlCUVVGQkxFTkJRVlUzUkN4SlFVRkJRU3hEUVVGTGVVSXNZVUZCUVVFc1EwRkJZM0ZETEhGQ1FVRkJRU3hGUVVGQlFTeERRVUYzUWtNc1NVRkJRVUVzUTBGRGRFVkRMRkZCUVVGQkxFTkJRVmRTTEV0QlFVRkJMRU5CUVUxVExFOUJRVUZCTEVOQlFWVnFSU3hKUVVGQlFTeERRVUZMZVVJc1lVRkJRVUVzUTBGQlkzRkRMSEZDUVVGQlFTeEZRVUZCUVN4RFFVRjNRa2tzUjBGQlFVRXNRMEZITVVWYUxHdENRVUZCUVN4RFFVRnpRazBzVVVGQlFVRXNRMEZCVnl4RFFVRkJMRVZCUVV0QkxGRkJRVUZCTEVOQlFWYzFSQ3hKUVVGQlFTeERRVUZMZVVJc1lVRkJRVUVzUTBGQlkzRkRMSEZDUVVGQlFTeEZRVUZCUVN4RFFVRjNRbXhETEV0QlFVRkJMRVZCUVZOdlF5eFJRVUZCUVN4RFFVRlhMRU5CUVVFc1JVRkJTMEVzVVVGQlFVRXNRMEZCVjJoRkxFbEJRVUZCTEVOQlFVdDVRaXhoUVVGQlFTeERRVUZqY1VNc2NVSkJRVUZCTEVWQlFVRkJMRU5CUVhkQ2FrTXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZ2UWk5TE4wSXNTVUZCUVVFc1EwRkJTM2xDTEdGQlFVRkJMRU5CUVdOclF5eG5Ra0ZCUVVFc1EwRkJhVUlzVjBGQlFTeERRV3BDVmtnc1MwRkJRVUVzUlVGQlFVRXNRMEZEZEVJc1IwRkJTVVlzYTBKQlFVRkJMRU5CUVc5Q0xFTkJRM0JDZEVRc1NVRkJRVUVzUTBGQlMxTXNkMEpCUVVGQkxFTkJRWGxDUml4RFFVRkJRU3hEUVVGSmFVUXNTMEZCUVVFc1EwRkJUVXNzVDBGQlFVRXNRMEZCVlRkRUxFbEJRVUZCTEVOQlFVdDVRaXhoUVVGQlFTeERRVUZqY1VNc2NVSkJRVUZCTEVWQlFVRkJMRU5CUVhkQ1F5eEpRVUZCUVN4RFFVTTNSaTlFTEVsQlFVRkJMRU5CUVV0VExIZENRVUZCUVN4RFFVRjVRa1FzUTBGQlFVRXNRMEZCU1dkRUxFdEJRVUZCTEVOQlFVMVRMRTlCUVVGQkxFTkJRVlZxUlN4SlFVRkJRU3hEUVVGTGVVSXNZVUZCUVVFc1EwRkJZM0ZETEhGQ1FVRkJRU3hGUVVGQlFTeERRVUYzUWtrc1IwRkJRVUVzUTBGRE4wWnNSU3hKUVVGQlFTeERRVUZMTWtJc1lVRkJRVUVzUTBGQlkwc3NSMEZCUVVFc1EwRkJTU3hEUVVGRmEwTXNSMEZCUVVFc1EwRkJTMnhGTEVsQlFVRkJMRU5CUVV0VExIZENRVUZCUVN4RFFVRjVRa1FzUTBGQlFVRXNRMEZCU1N4SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWb1JTeEpRVUZKTWtRc1RVRkJRVUVzUTBGQlUyNUZMRWxCUVVGQkxFTkJRVXQzUlN4blFrRkJRVUVzUlVGQlFVRXNRMEZEYkVKNFJTeEpRVUZCUVN4RFFVRkxPRUlzVjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzU1VGQlFVRXNSVUZCY1VKeFF5eE5RVUZCUVN4RFFVRlBSU3hEUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hGUVVGTlJpeE5RVUZCUVN4RFFVRlBSeXhEUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hGUVVGTlNDeE5RVUZCUVN4RFFVRlBTU3hEUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hGUVVGTlNpeE5RVUZCUVN4RFFVRlBUU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU40UlhwRkxFbEJRVUZCTEVOQlFVdDFReXhMUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFWVmlka01zU1VGQlFVRXNRMEZCUzNsQ0xHRkJRVUZCTEVOQlFXTnJReXhuUWtGQlFVRXNRMEZCYVVJc1UwRkJRU3hEUVU1YVNDeExRVUZCUVN4RlFVRkJRU3hEUVVOd1FrWXNhMEpCUVVGQkxFTkJRVUZCTEVOQlFYRkNMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVkUzUW5SRUxFbEJRVUZCTEVOQlFVdDFReXhMUVVGQlFTeEZRVUZSTEVsQlFVRXNRMEZEVkhaRExFbEJRVUZCTEVOQlFVc3dSU3hYUVVGQlFTeEZRVUZCUVN4RFFVTk1NVVVzU1VGQlFVRXNRMEZCUzJFc1RVRkJRVUVzUTBGQlR6aEVMR0ZCUVVGQkxFTkJRV01zU1VGQlNVTXNWMEZCUVVFc1EwRkJXU3hqUVVGQkxFTkJRVUVzUTBGQlFTeERRVU14UXpWRkxFbEJRVUZCTEVOQlFVdGhMRTFCUVVGQkxFTkJRVTlUTEVsQlFVRkJMRU5CUVVzc1pVRkJRU3hEUVVGQkxFTkJRV2xDVlN4SFFVRkJRU3hEUVVGSkxFTkJRVVUyUXl4bFFVRkJRU3hEUVVGcFFqZEZMRWxCUVVGQkxFTkJRVXM0UlN4alFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTTVSRGxGTEVsQlFVRkJMRU5CUVV0aExFMUJRVUZCTEVOQlFVOVRMRWxCUVVGQkxFTkJRVXNzY1VKQlFVRXNRMEZCUVN4RFFVRjFRbU1zVTBGQlFVRXNRMEZCV1hCRExFbEJRVUZCTEVOQlFVczRSU3hqUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjM1JEbEZMRWxCUVVGQkxFTkJRVXN3UlN4WFFVRkJRU3hGUVVGakxFbEJRVUVzUTBGRFR5eExRVUZCTEVWQlFXeENNVVVzU1VGQlFVRXNRMEZCUzFVc1UwRkJRVUVzUTBGRFRGWXNTVUZCUVVFc1EwRkJTemhGTEdOQlFVRkJMRU5CUVdsQ09VVXNTVUZCUVVFc1EwRkJTeXRGTEZGQlFVRkJMRU5CUVZNdlJTeEpRVUZCUVN4RFFVRkxPRUlzVjBGQlFVRXNRMEZCUVVFc1EwRkZiRUlzUzBGQlFTeEZRVUZzUWpsQ0xFbEJRVUZCTEVOQlFVdFZMRk5CUVVGQkxFTkJRMVpXTEVsQlFVRkJMRU5CUVVzNFJTeGpRVUZCUVN4RFFVRnBRamxGTEVsQlFVRkJMRU5CUVV0blJpeFJRVUZCUVN4RFFVRlRhRVlzU1VGQlFVRXNRMEZCU3poQ0xGZEJRVUZCTEVOQlFVRkJMRU5CUld4Q0xFdEJRVUVzUlVGQmJFSTVRaXhKUVVGQlFTeERRVUZMVlN4VFFVRkJRU3hIUVVOV1ZpeEpRVUZCUVN4RFFVRkxPRVVzWTBGQlFVRXNRMEZCYVVJNVJTeEpRVUZCUVN4RFFVRkxPRUlzVjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKYmtNNVFpeEpRVUZCUVN4RFFVRkxjVU1zVTBGQlFVRXNSVUZCWVRSRExGRkJRVUZCTEVWQlFVRkJMRU5CUTJScVJpeEpRVUZCUVN4RFFVRkxZU3hOUVVGQlFTeERRVUZQT0VNc1owSkJRVUZCTEVOQlFXbENMR05CUVVFc1EwRkJaMEpJTEV0QlFVRkJMRVZCUVVGQkxFTkJRM3BEZVVJc1VVRkJRVUVzUTBGQlUycEdMRWxCUVVGQkxFTkJRVXM0UlN4alFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbDBRamxGTEVsQlFVRkJMRU5CUVV0dlJTeGpRVUZCUVN4RlFVRnBRaXhKUVVGQkxFTkJRMnhDTEVsQlFVbGpMRk5CUVVGQkxFTkJRVmxzUml4SlFVRkJRU3hEUVVGTGFVTXNXVUZCUVVFc1EwRkJZV3RFTEZsQlFVRkJMRU5CUVdGdVJpeEpRVUZCUVN4RFFVRkxUU3h6UWtGQlFVRXNRMEZCZFVKRExFTkJRVUZCTEVOQlFVZFFMRWxCUVVGQkxFTkJRVXROTEhOQ1FVRkJRU3hEUVVGMVFrVXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlEyaElMRTFCUVU4c1EwRkJSVFpFTEVOQlFVRkJMRU5CUVVkaExGTkJRVUZCTEVOQlFWVkZMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVbGtMRU5CUVVGQkxFTkJRVWRaTEZOQlFVRkJMRU5CUVZWRkxFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUVVsaUxFTkJRVUZCTEVOQlFVZFhMRk5CUVVGQkxFTkJRVlZGTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJ6TkZjRVlzU1VGQlFVRXNRMEZCUzNkRkxHZENRVUZCUVN4RlFVRnRRaXhKUVVGQkxFTkJRM0JDTEVsQlFVbFZMRk5CUVVGQkxFTkJRVmxzUml4SlFVRkJRU3hEUVVGTGJVTXNZMEZCUVVFc1EwRkJaV2RFTEZsQlFVRkJMRU5CUVdGdVJpeEpRVUZCUVN4RFFVRkxVeXgzUWtGQlFVRXNRMEZCZVVKR0xFTkJRVUZCTEVOQlFVZFFMRWxCUVVGQkxFTkJRVXRUTEhkQ1FVRkJRU3hEUVVGNVFrUXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlJXeElOa1VzUzBGQlFVRXNRMEZCVVVNc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJUMHdzVTBGQlFVRXNRMEZCVlVVc1NVRkJRVUVzUTBGQlN5eERRVUZCTEVOQlFVRXNRMEZCU3l4SFFVRkJMRU5CUVU4c1IwRkJRU3hEUVVGQkxFTkJRVkVzUjBGQlFTeERRVU16UkN4TlFVRlBMRU5CUVVWbUxFTkJRVUZCTEVOQlFVZGhMRk5CUVVGQkxFTkJRVlZGTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVWxrTEVOQlFVRkJMRU5CUVVkWkxGTkJRVUZCTEVOQlFWVkZMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVbGlMRU5CUVVGQkxFTkJRVWRYTEZOQlFVRkJMRU5CUVZWRkxFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUVVsWUxFTkJRVUZCTEVOQlFVZFpMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMnhHY2tZc1NVRkJRVUVzUTBGQlMzZEdMRWxCUVVGQkxFVkJRVkUxUlN4TlFVRkJRU3hGUVVGQlFTeERRVU5VV2l4SlFVRkJRU3hEUVVGTFZ5eEpRVUZCUVN4RFFVRkxReXhOUVVGQlFTeERRVUZCUVN4RFFVTldXaXhKUVVGQlFTeERRVUZMZVVNc1kwRkJRVUVzUlVGQlFVRXNRMEZEVEhwRExFbEJRVUZCTEVOQlFVc3JReXhuUWtGQlFVRXNSVUZCUVVFc1EwRkZUQ3hKUVVGSk1FTXNVVUZCUVVFc1EwRkJWME1zVlVGQlFVRXNRMEZCVnl4SlFVRkJMRU5CUTNSQ01VWXNTVUZCUVVFc1EwRkJTM2xFTEV0QlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5pYTBNc1dVRkJRVUVzUTBGQllVWXNVVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEWkN4SFFVRkJMRU5CUVVFc1EwRkZTQ3hQUVVGUGVrWXNTVUZCUVVFc1EwRkJTMkVzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGFFSmlMRWxCUVVGQkxFTkJRVXN3UkN4UFFVRkJRU3hGUVVGVkxFbEJRVUVzUTBGRFdHdERMR0ZCUVVGQkxFTkJRV00xUml4SlFVRkJRU3hEUVVGTGVVWXNVVUZCUVVFc1EwRkJRVUVzUTBGRGJrSjZSaXhKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGUFowWXNUVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhhRUkzUml4SlFVRkJRU3hEUVVGTE9FWXNVMEZCUVVFc1JVRkJXU3hEUVVGREwwUXNTMEZCUVVFc1EwRkJVU3hUUVVGQkxFZEJRVUVzUTBGRGRFSXNTVUZCU1dkRkxFbEJRVUZCTEVOQlFVOHNVVUZCUVN4RFFVTllMRWRCUVRCQ0xFTkJRVUVzUlVGQmRFSm9SU3hMUVVGQlFTeERRVUZOYVVVc1QwRkJRVUVzUTBGQlVTeEhRVUZCTEVOQlFVRXNSVUZCUVN4RFFVRmpha1VzUzBGQlFVRXNRMEZCVFd0RkxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RlFVRkxMRU5CUVVFc1JVRkJTeXhEUVVGQkxFTkJRM0pFUml4SlFVRkJRU3hEUVVGUExFdEJRVUVzUTBGQlFTeExRVVZPTEVkQlFUWkNMRU5CUVVFc1JVRkJla0pvUlN4TFFVRkJRU3hEUVVGTmFVVXNUMEZCUVVFc1EwRkJVU3hOUVVGQkxFTkJRVUVzUTBGQll5eERRVU5xUXl4SlFVRkpSU3hOUVVGQlFTeERRVUZUYkVjc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTMnRITEZOQlFVRkJMRU5CUVZWd1JTeExRVUZCUVN4RFFVRlBMRTlCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5zUXl4RFFVRkJMRVZCUVZodFJTeE5RVUZCUVN4RlFVRTBReXhEUVVGQkxFVkJRVFZDUVN4TlFVRkJRU3hEUVVGUFJTeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTFNDeE5RVUZCUVN4SFFVTnNRMFlzU1VGQlFVRXNRMEZCVHl4TlFVRkJMRU5CUVVFc1EwRkJRU3hMUVVkV0xFZEJRVFJDTEVOQlFVRXNSVUZCZUVKb1JTeExRVUZCUVN4RFFVRk5hVVVzVDBGQlFVRXNRMEZCVVN4TFFVRkJMRU5CUVVFc1EwRkJZU3hEUVVOb1F5eEpRVUZKUlN4TlFVRkJRU3hEUVVGVGJFY3NTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCUzJ0SExGTkJRVUZCTEVOQlFWVndSU3hMUVVGQlFTeERRVUZQTEUxQlFVRXNRMEZCVVN4SFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOcVF5eERRVUZCTEVWQlFWaHRSU3hOUVVGQlFTeEZRVUUwUXl4RFFVRkJMRVZCUVRWQ1FTeE5RVUZCUVN4RFFVRlBSU3hMUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRkxTQ3hOUVVGQlFTeEhRVU5zUTBZc1NVRkJRVUVzUTBGQlR5eExRVUZCTEVOQlFVRXNRMEZCUVN4TFFVZFdMRWRCUVRaQ0xFTkJRVUVzUlVGQmVrSm9SU3hMUVVGQlFTeERRVUZOYVVVc1QwRkJRVUVzUTBGQlVTeE5RVUZCTEVOQlFVRXNRMEZCWXl4RFFVTnFReXhKUVVGSlJTeE5RVUZCUVN4RFFVRlRiRWNzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMydEhMRk5CUVVGQkxFTkJRVlZ3UlN4TFFVRkJRU3hEUVVGUExFOUJRVUVzUTBGQlV5eEhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTnNReXhEUVVGQkxFVkJRVmh0UlN4TlFVRkJRU3hGUVVFMFF5eERRVUZCTEVWQlFUVkNRU3hOUVVGQlFTeERRVUZQUlN4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVUZMU0N4TlFVRkJRU3hIUVVOc1EwWXNTVUZCUVVFc1EwRkJUeXhOUVVGQkxFTkJRVUVzUTBGQlFTeExRVWRXTEVkQlFUUkNMRU5CUVVFc1JVRkJlRUpvUlN4TFFVRkJRU3hEUVVGTmFVVXNUMEZCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVUVzUTBGQllTeERRVU5vUXl4SlFVRkpSU3hOUVVGQlFTeERRVUZUYkVjc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTMnRITEZOQlFVRkJMRU5CUVZWd1JTeExRVUZCUVN4RFFVRlBMRTFCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5xUXl4RFFVRkJMRVZCUVZodFJTeE5RVUZCUVN4RlFVRTBReXhEUVVGQkxFVkJRVFZDUVN4TlFVRkJRU3hEUVVGUFJTeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTFNDeE5RVUZCUVN4SFFVTnNRMFlzU1VGQlFVRXNRMEZCVHl4TFFVRkJMRU5CUVVFc1EwRkpaaXhQUVVGUFFTeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRZTDBZc1NVRkJRVUVzUTBGQlMzRkhMRkZCUVVGQkxFVkJRVmNzUTBGQlEwTXNSMEZCUVVFc1EwRkJUU3hUUVVGQkxFTkJRVmRxUWl4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNSMEZCUVN4RFFVTjBReXhKUVVGSmFFSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMFVzUTBGQlFVRXNRMEZCU1N4SFFVRkJMRU5CZVVJM1FpeFBRWGhDYTBJc1EwRkJRU3hGUVVGa05rSXNSMEZCUVVFc1EwRkJTVXdzVFVGQlFVRXNSVUZEU2pWQ0xFTkJRVUZCTEVOQlFVa3NTVUZCUVN4RFFVRlBhVU1zUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkRlRUpvUXl4RFFVRkJRU3hEUVVGSkxFbEJRVUVzUTBGQlQyZERMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlEzaENMMElzUTBGQlFVRXNRMEZCU1N4SlFVRkJMRU5CUVU4clFpeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVGTFFTeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hGUVVWTUxFTkJRVUVzUlVGQlpFRXNSMEZCUVVFc1EwRkJTVXdzVFVGQlFVRXNSVUZEVkRWQ0xFTkJRVUZCTEVOQlFVa3NTVUZCUVN4RFFVRlBhVU1zUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkRlRUpvUXl4RFFVRkJRU3hEUVVGSkxFbEJRVUVzUTBGQlQyZERMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlEzaENMMElzUTBGQlFVRXNRMEZCU1N4SlFVRkJMRU5CUVU4clFpeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVGTFFTeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVONFFqZENMRU5CUVVGQkxFTkJRVWtzU1VGQlFTeERRVUZQTmtJc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUzBFc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNSVUZGVEN4RFFVRkJMRVZCUVdSQkxFZEJRVUZCTEVOQlFVbE1MRTFCUVVGQkxFVkJRMVExUWl4RFFVRkJRU3hEUVVGSkxFbEJRVUVzUTBGQlQybERMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlEzaENhRU1zUTBGQlFVRXNRMEZCU1N4SlFVRkJMRU5CUVU5blF5eEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVGTFFTeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVONFFpOUNMRU5CUVVGQkxFTkJRVWtzU1VGQlFTeERRVUZQSzBJc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUzBFc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNSVUZGVEN4RFFVRkJMRVZCUVdSQkxFZEJRVUZCTEVOQlFVbE1MRTFCUVVGQkxFZEJRMVExUWl4RFFVRkJRU3hEUVVGSkxFbEJRVUVzUTBGQlQybERMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlEzaENhRU1zUTBGQlFVRXNRMEZCU1N4SlFVRkJMRU5CUVU5blF5eEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVGTFFTeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVONFFpOUNMRU5CUVVGQkxFTkJRVWtzU1VGQlFTeERRVUZQSzBJc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUzBFc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZEZUVJM1FpeERRVUZCUVN4RFFVRkpMRWxCUVVFc1EwRkJUelpDTEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJRVXRCTEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRk5VSTNRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGTlFTeERRVUZCUVN4RFFVRkpMRWRCUVVFc1JVRkJTemhDTEU5QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGQkxFTkJSVllzUTBGQlFTeEZRVUZVYkVJc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1NVRkJRVUVzUlVGQlFVRXNRMEZEWldoQ0xFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVOURMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVVGQkxFTkJRVTlETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVsQlFVRkJMRVZCUVVGQkxFTkJSMlJHTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVRkJMRU5CUVU5RExFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVOURMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVUxRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTVE5EZWtVc1NVRkJRVUVzUTBGQlMzZEhMRkZCUVVGQkxFVkJRVmNzUTBGQlEwWXNSMEZCUVVFc1EwRkJUU3hUUVVGQkxFTkJRVmRxUWl4TFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNSMEZCUVN4RFFVTjBReXhKUVVGSmRFUXNTMEZCUVVFc1EwRkJVUzlDTEVsQlFVRkJMRU5CUVV0eFJ5eFJRVUZCUVN4RFFVRlRReXhIUVVGQlFTeERRVUZMYWtJc1MwRkJRVUVzUTBGQlFVRXNRMEZGTDBJc1QwRkVRWFJFTEV0QlFVRkJMRU5CUVZFdlFpeEpRVUZCUVN4RFFVRkxaMFlzVVVGQlFVRXNRMEZCVTJwRUxFdEJRVUZCTEVOQlFVOXpSQ3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxxUTNKR0xFbEJRVUZCTEVOQlFVc3JSU3hSUVVGQlFTeEZRVUZYTEVOQlFVTXdRaXhIUVVGQlFTeERRVUZOTEdOQlFVRXNRMEZCWjBKd1FpeExRVUZCUVN4RFFVRkJRU3hEUVVGUkxFTkJRVUVzUjBGQlFTeERRVU16UXl4SlFVRkpjVUlzUzBGQlFVRXNRMEZCVVVRc1IwRkJRVUVzUTBGQlNWUXNUMEZCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVUVzUTBGQlR5eERRVUZCTEVOQlF6TkNWeXhIUVVGQlFTeERRVUZOUml4SFFVRkJRU3hEUVVGSlZDeFBRVUZCUVN4RFFVRlJMRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRMnBDTTBJc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUjBVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzJkRExFZEJRVUZCTEVOQlFVbEhMRXRCUVVGQkxFTkJRVTFHTEV0QlFVRkJMRU5CUVU5RExFZEJRVUZCTEVOQlFVRkJMRU5CUVV0UUxFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkJMRU5CUlRGRGNFY3NTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCU3pSSExFdEJRVUZCTEVOQlFVMXdReXhEUVVGQlFTeERRVUZCUVN4SFFVTnFRa0VzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkhVa29zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRVRXNRMEZCUVVFc1JVRkJSM2xETEZGQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGQkxFTkJRMnhDZUVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJUVUVzUTBGQlFVRXNSVUZCUjNkRExGRkJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUTJ4Q2RrTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFVFc1EwRkJRVUVzUlVGQlIzVkRMRkZCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlEyeENja01zUTBGQlFVRXNRMEZCU1dFc1NVRkJRVUVzUTBGQlMzbENMRXRCUVVGQkxFTkJRVlVzUjBGQlFTeERRVUZLZEVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCVTNGRExGRkJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVRkJMRU5CUldwQ0xFTkJRVUVzUlVGQlducERMRU5CUVVGQkxFTkJRVVUwUWl4TlFVRkJRU3hIUVVOR05VSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJVVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIU1N4RFFVRkJMRVZCUVZwRExFTkJRVUZCTEVOQlFVVXlRaXhOUVVGQlFTeEhRVU5HTTBJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlVVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhTU3hEUVVGQkxFVkJRVnBETEVOQlFVRkJMRU5CUVVVd1FpeE5RVUZCUVN4SFFVTkdNVUlzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCVVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRlNTeERRVUZCTEVWQlFWcEZMRU5CUVVGQkxFTkJRVVYzUWl4TlFVRkJRU3hIUVVOR2VFSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJVVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIV2l4SlFVRkpOa0lzUjBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CVVZZc1QwRk9TVUVzUjBGQlFVRXNSVUZFVXl4RFFVRkJMRVZCUVZScVFpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVU5WYUVJc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1VNc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1VNc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1VVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZIV2tvc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1VNc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1VNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZOTVVKMlJTeEpRVUZCUVN4RFFVRkxaMFlzVVVGQlFVRXNSVUZCVnl4RFFVRkRlVUlzUjBGQlFVRXNRMEZCVFN4alFVRkJMRU5CUVdkQ2NFSXNTMEZCUVVFc1EwRkJRVUVzUTBGQlVTeERRVUZCTEVkQlFVRXNRMEZETTBNc1NVRkJTWEZDTEV0QlFVRkJMRU5CUVZGRUxFZEJRVUZCTEVOQlFVbFVMRTlCUVVGQkxFTkJRVkVzUjBGQlFTeERRVUZCTEVOQlFVOHNRMEZCUVN4RFFVTXpRbGNzUjBGQlFVRXNRMEZCVFVZc1IwRkJRVUVzUTBGQlNWUXNUMEZCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5xUWpOQ0xFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVkRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0blF5eEhRVUZCUVN4RFFVRkpSeXhMUVVGQlFTeERRVUZOUml4TFFVRkJRU3hEUVVGUFF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGTFVDeExRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVVdlExa3NUMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCU1RWRExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRMkoyUlN4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRkxORWNzUzBGQlFVRXNRMEZCVFhCRExFTkJRVUZCTEVOQlFVRkJMRWRCUTJwQ1FTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVkU1NpeERRVUZCUVN4RlFVRkxMRWRCUVVFc1EwRkRURU1zUTBGQlFVRXNSVUZCU3l4SFFVRkJMRU5CUTB4RExFTkJRVUZCTEVWQlFVc3NSMEZCUVN4RFFVVk1MRWxCUVVreVF5eEpRVUZCUVN4RFFVRlBOVUlzU1VGQlFVRXNRMEZCU3paQ0xFZEJRVUZCTEVOQlFVazVReXhEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVOMFFqWkRMRWxCUVVGQkxFTkJRVTg1UWl4SlFVRkJRU3hEUVVGTEswSXNSMEZCUVVFc1EwRkJTV2hFTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlEzUkNLME1zUzBGQlFVRXNRMEZCVVVZc1NVRkJRVUVzUTBGQlQwWXNTVUZCUVVFc1EwRkRaa3NzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUTBwRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVTktReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZKU3l4RFFVRkJMRVZCUVZSSUxFdEJRVUZCTEVOQlEwRkRMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVVZEU0N4SlFVRkJRU3hGUVVGUkwwTXNRMEZCUVVFc1EwRkRZbXRFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVTFxUkN4RFFVRkJRU3hEUVVGSlF5eERRVUZCUVN4RlFVRkxLME1zUzBGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUlc1Q1JpeEpRVUZCUVN4RlFVRlJPVU1zUTBGQlFVRXNRMEZEWW1sRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0b1JDeERRVUZCUVN4RFFVRkpSaXhEUVVGQlFTeEZRVUZMYVVRc1MwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlJXcENSaXhKUVVGQlFTeEZRVUZST1VNc1EwRkJRVUVzUjBGRFltbEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdHNSQ3hEUVVGQlFTeERRVUZKUXl4RFFVRkJRU3hGUVVGTFowUXNTMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWN4UWtNc1EwRkJRVUVzUTBGQlNXcERMRWxCUVVGQkxFTkJRVXQ1UWl4TFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGQlNsRXNRMEZCUVVFc1EwRkJRVUVzUlVGRlVDeERRVUZCTEVkQlEwcEJMRU5CUVVGQkxFVkJRVXNzUjBGQlFTeERRVUZCTEVOQlIxUkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdE1MRWxCUVVGQkxFTkJRVTlHTEVsQlFVRkJMRVZCUVZFc1EwRkJRU3hEUVVWd1FrMHNRMEZCUVVFc1EwRkJZU3hEUVVGQkxFVkJRVlJHTEV0QlFVRkJMRU5CUVdFc1EwRkJRU3hEUVVGSlFTeExRVUZCUVN4RlFVRlRMRU5CUVVFc1EwRkJTV2hETEVsQlFVRkJMRU5CUVV0dlF5eEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJTVVFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWdVJFRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVlN4SFFVRkJMRU5CUVVwQkxFTkJRVUZCTEVWQlFWTnNRaXhQUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVTjJRbWxDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWVXNSMEZCUVN4RFFVRktRU3hEUVVGQlFTeEZRVUZUYWtJc1QwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlFVRXNRMEZGZGtJc1NVRkJTVzlDTEVkQlFVRkJMRU5CUVUwc1MwRkJRU3hEUVU5V0xFOUJURWxCTEVkQlFVRkJMRVZCUkZNc1EwRkJRU3hGUVVGVWRFTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkRWMnRETEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVMURMRU5CUVVGQkxFTkJRVUZCTEVkQlFVRkJMRVZCUVU5RExFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlIySkdMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVUxRExFTkJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFVkJRVTlETEVOQlFVRkJMRU5CUVVGQkxFZEJRVUZCTEVWQlFVOW9SQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0MlEzcEZMRWxCUVVGQkxFTkJRVXMwU0N4UlFVRkJRU3hGUVVGWExFTkJRVU5FTEVkQlFVRkJMRU5CUVUwc1owSkJRVUVzUTBGQmEwSjBReXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUVVFc1IwRkJRU3hEUVVNM1F5eEpRVUZKYjBJc1IwRkJRVUVzUTBGQlRTeExRVUZCTEVOQlEwNURMRXRCUVVGQkxFTkJRVkZwUWl4SFFVRkJRU3hEUVVGSk0wSXNUMEZCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVUVzUTBGQlR5eERRVUZCTEVOQlF6TkNWeXhIUVVGQlFTeERRVUZOWjBJc1IwRkJRVUVzUTBGQlNUTkNMRTlCUVVGQkxFTkJRVkVzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZEYWtKMVFpeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGSGFFUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMydEVMRWRCUVVGQkxFTkJRVWxtTEV0QlFVRkJMRU5CUVUxR0xFdEJRVUZCTEVOQlFVOURMRWRCUVVGQkxFTkJRVUZCTEVOQlFVdFFMRXRCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlJURkRjRWNzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlN6UkhMRXRCUVVGQkxFTkJRVTF3UXl4RFFVRkJRU3hEUVVGQlFTeEhRVU5xUWtFc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZIVW5WRExFOUJRVUZCTEVOQlFWRkRMRWRCUVVGQkxFTkJRVWxOTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVUZCTEVOQlJXUkdMRU5CUVVGQkxFTkJRVVYyUWl4UFFVRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlFTeERRVUZCTEVOQlFWVXNRMEZCUVN4RFFVTndRblZDTEVOQlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFVVk5MRTFCUVVGQkxFTkJRVThzUTBGQlFTeERRVUZIVGl4RFFVRkJRU3hEUVVGRmRFSXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUTBGRGRFSnpRaXhEUVVGQlFTeERRVUZGZGtJc1QwRkJRVUVzUTBGQlVTeExRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRlZMRU5CUVVFc1EwRkRla0oxUWl4RFFVRkJRU3hEUVVGSmFrTXNTVUZCUVVFc1EwRkJTM2xDTEV0QlFVRkJMRU5CUVUxUkxFTkJRVUZCTEVOQlFVVk5MRTFCUVVGQkxFTkJRVThzUTBGQlFTeERRVUZIVGl4RFFVRkJRU3hEUVVGRmRFSXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUlVGQlRTeEhRVUZCTEVOQlFVMVlMRWxCUVVGQkxFTkJRVXQzUXl4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTnNSRkFzUTBGQlFVRXNRMEZCUlhaQ0xFOUJRVUZCTEVOQlFWRXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJWeXhEUVVGQkxFZEJRekZDZFVJc1EwRkJRVUVzUTBGQlNXcERMRWxCUVVGQkxFTkJRVXQ1UWl4TFFVRkJRU3hEUVVGclF5eEhRVUZCTEVOQlFUVkNVU3hEUVVGQlFTeERRVUZGVFN4TlFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlIwNHNRMEZCUVVFc1EwRkJSWFJDTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVYwUTNOQ0xFTkJRVUZCTEVWQlFVc3NSMEZCUVN4SFFVTk1RU3hEUVVGQlFTeEZRVUZMTEVkQlFVRXNRMEZCUVN4RFFVVlVReXhEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRlR5eFBRVUZCUVN4RFFVRlJMRWRCUVVFc1EwRkJTeXhGUVVGQkxFTkJRVUVzUTBGQlRTeEhRVUZCTEVOQlEzcENUaXhEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRlRTeFBRVUZCUVN4RFFVRlJMRWRCUVVFc1EwRkJTeXhGUVVGQkxFTkJRVUVzUTBGQlRTeEhRVUZCTEVOQlJYcENMRWxCUVVsRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGSk1VTXNTVUZCUVVFc1EwRkJTMjlETEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSlJDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hGUVVGTlJDeERRVUZCUVN4RFFVTm9RMnBJTEVOQlFVRkJMRU5CUVVsNVNDeERRVUZCUVN4RlFVRkxMRU5CUVVFc1EwRkJTVEZETEVsQlFVRkJMRU5CUVV0dlF5eEhRVUZCUVN4RFFVRkxTQ3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGNrTlZMRU5CUVVGQkxFTkJRVWxTTEVOQlFVRkJMRU5CUVVsUExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVTmFNMFFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUTBwRExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVTktReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEV3UWxJc1QwRjRRa2tzUTBGQlFTeEZRVUZMWjBRc1EwRkJRVUVzUlVGQlMwRXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFVkJRMlJzUkN4RFFVRkJRU3hEUVVGSk1rUXNRMEZCUVVFc1EwRkJSekZFTEVOQlFVRkJMRU5CUVVrdlJDeERRVUZCUVN4RFFVRkhaMFVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRVZCUTFnc1JVRkJRU3hGUVVGTlowUXNRMEZCUVVFc1JVRkJTMEVzUTBGQlFVRXNRMEZCU1N4SFFVRkJMRVZCUTNSQ2JFUXNRMEZCUVVFc1EwRkJTVGxFTEVOQlFVRkJMRU5CUVVjclJDeERRVUZCUVN4RFFVRkpNRVFzUTBGQlFVRXNRMEZCUjNwRUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RlFVTllMRWRCUVVFc1JVRkJUMmRFTEVOQlFVRkJMRVZCUVV0QkxFTkJRVUZCTEVOQlFVa3NSMEZCUVN4RlFVTjJRbXhFTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkpNRVFzUTBGQlFVRXNRMEZCUjNwRUxFTkJRVUZCTEVOQlFVbG9SU3hEUVVGQlFTeEZRVU5ZTEVkQlFVRXNSVUZCVDJkSUxFTkJRVUZCTEVWQlFVdEJMRU5CUVVGQkxFTkJRVWtzUjBGQlFTeEZRVU4yUW14RUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZKTDBRc1EwRkJRVUVzUTBGQlIyZEZMRU5CUVVGQkxFTkJRVWw1UkN4RFFVRkJRU3hGUVVOWUxFZEJRVUVzUlVGQlQxUXNRMEZCUVVFc1JVRkJTMEVzUTBGQlFVRXNRMEZCU1N4SFFVRkJMRVZCUTNaQ2JFUXNRMEZCUVVFc1EwRkJTVGxFTEVOQlFVRkJMRU5CUVVjclJDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCU1hsRUxFTkJRVUZCTEVWQlExZ3NSMEZCUVN4RlFVRlBWQ3hEUVVGQlFTeEZRVUZMUVN4RFFVRkJRU3hEUVVGSkxFZEJRVUVzUjBGRGRrSnNSQ3hEUVVGQlFTeERRVUZKTWtRc1EwRkJRVUVzUTBGQlJ6RkVMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGSmFFVXNRMEZCUVVFc1EwRkJRVUVzUTBGRmRFSTRSQ3hEUVVGQlFTeERRVUZKYVVJc1NVRkJRVUVzUTBGQlMzbENMRXRCUVVGQkxFTkJRV2RDTEVkQlFVRXNSVUZCVkRGRExFTkJRVUZCTEVOQlFVazBSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVOd1FqTkVMRU5CUVVGQkxFTkJRVWxuUWl4SlFVRkJRU3hEUVVGTGVVSXNTMEZCUVVFc1EwRkJaMElzUjBGQlFTeEZRVUZVZWtNc1EwRkJRVUVzUTBGQlNUSkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUTNCQ01VUXNRMEZCUVVFc1EwRkJTV1VzU1VGQlFVRXNRMEZCUzNsQ0xFdEJRVUZCTEVOQlFXZENMRWRCUVVFc1JVRkJWSGhETEVOQlFVRkJMRU5CUVVrd1JDeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRvUW5oQ0xFZEJRVUZCTEVWQlJGTXNRMEZCUVN4RlFVRlVjRUlzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZEVjJoQ0xFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVTFETEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVMURMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJSMXBHTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVWQlFVMURMRU5CUVVGQkxFTkJRVUZCTEVWQlFVRkJMRVZCUVUxRExFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFVkJRVTFGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlRYSkRla1VzU1VGQlFVRXNRMEZCUzJ0SkxGRkJRVUZCTEVWQlFWY3NRMEZCUTFBc1IwRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVbDBReXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUVVFc1IwRkJRU3hEUVVNdlFpeEpRVUZKZEVRc1MwRkJRVUVzUTBGQlVTOUNMRWxCUVVGQkxFTkJRVXMwU0N4UlFVRkJRU3hEUVVGVFJDeEhRVUZCUVN4RFFVRkxkRU1zUzBGQlFVRXNRMEZCUVVFc1EwRkRMMElzVDBGQlQzSkdMRWxCUVVGQkxFTkJRVXNyUlN4UlFVRkJRU3hEUVVGVGFFUXNTMEZCUVVFc1EwRkJUM05FTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjJoRGNrWXNTVUZCUVVFc1EwRkJTMjlFTEZWQlFVRkJMRVZCUVdFc1EwRkJRM0pDTEV0QlFVRkJMRU5CUVZFc1kwRkJRU3hEUVVGblFtOUhMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeEhRVUZCTEVOQlEycEVMRWxCUVVsNlFpeExRVUZCUVN4RFFVRlJNMFVzUzBGQlFVRXNRMEZCVFdsRkxFOUJRVUZCTEVOQlFWRXNSMEZCUVN4RFFVRkJMRU5CUVU4c1EwRkJRU3hEUVVNM1FsY3NSMEZCUVVFc1EwRkJUVFZGTEV0QlFVRkJMRU5CUVUxcFJTeFBRVUZCUVN4RFFVRlJMRWRCUVVFc1EwRkJRU3hEUVVOd1FtOURMRTFCUVVGQkxFTkJRVk55Unl4TFFVRkJRU3hEUVVGTk5rVXNTMEZCUVVFc1EwRkJUVVlzUzBGQlFVRXNRMEZCVDBNc1IwRkJRVUVzUTBGQlFVRXNRMEZCUzFBc1MwRkJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVRXNRMEZMTTBNc1QwRktRV2RETEUxQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGQkxFTkJRVXRFTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlFVRkJMRVZCUldWRExFMUJRVUZCTEVOQlFVOURMRWxCUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVzelEzSkpMRWxCUVVGQkxFTkJRVXR6U1N4VlFVRkJRU3hGUVVGaExFTkJRVU4yUnl4TFFVRkJRU3hEUVVGUkxHTkJRVUVzUjBGQlFTeERRVU4yUWtFc1MwRkJRVUVzUTBGQlVTOUNMRWxCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVV0clJ5eFRRVUZCUVN4RFFVRlZjRVVzUzBGQlFVRXNRMEZCVHl4SFFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGQkxFTkJRM2hETEVkQlFVRXNRMEZCUzNORExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVkRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVzeFF5eExRVUZCUVN4RFFVRk5jVVVzUzBGQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVVFc1EwRkRMMElzVDBGQlR6TkNMRU5CUVVGQkxFTkJRVVU0UkN4SlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkaWRra3NTVUZCUVVFc1EwRkJTM2RKTEZkQlFVRkJMRVZCUVdNc1EwRkJRM3BITEV0QlFVRkJMRU5CUVZFc1UwRkJRU3hIUVVGQkxFTkJRM2hDTEVsQlEwa3dSeXhOUVVGQlFTeERRVVJCTVVNc1NVRkJRVUVzUTBGQlR5OUdMRWxCUVVGQkxFTkJRVXM0Uml4VFFVRkJRU3hEUVVGVkwwUXNTMEZCUVVFc1EwRkJRVUVzUTBGRk1VSXNSMEZCV1N4TFFVRkJMRVZCUVZKblJTeEpRVUZCUVN4RFFVTkJhRVVzUzBGQlFVRXNRMEZCVVVFc1MwRkJRVUVzUTBGQlRXZEhMRTlCUVVGQkxFTkJRVkVzUjBGQlFTeERRVUZMTEVWQlFVRXNRMEZCUVN4RFFVTXpRbFVzVFVGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVUxNlNTeEpRVUZCUVN4RFFVRkxNRWtzVTBGQlFVRXNRMEZCVlROSExFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJSVGRDTEVkQlFWa3NTMEZCUVN4RlFVRlNaMFVzU1VGQlFVRXNRMEZEVEdoRkxFdEJRVUZCTEVOQlFWRXZRaXhKUVVGQlFTeERRVUZMSzBVc1VVRkJRVUVzUTBGQlUyaEVMRXRCUVVGQkxFTkJRVUZCTEVOQlFVOW5SeXhQUVVGQlFTeERRVUZSTEVkQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkRNVU5WTEUxQlFVRkJMRU5CUVZONlNTeEpRVUZCUVN4RFFVRkxNRWtzVTBGQlFVRXNRMEZCVlROSExFdEJRVUZCTEVOQlFVRkJMRU5CUTNoQ01FY3NUVUZCUVVFc1EwRkJVM3BKTEVsQlFVRkJMRU5CUVV0eFJ5eFJRVUZCUVN4RFFVRlRiME1zVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGRmRFSXNSMEZCV1N4TlFVRkJMRVZCUVZJeFF5eEpRVUZCUVN4RFFVRm5RaXhEUVVOeVFpeEpRVUZKYjBNc1QwRkJRVUVzUTBGQlZXNUpMRWxCUVVGQkxFTkJRVXR6U1N4VlFVRkJRU3hEUVVGWGRrY3NTMEZCUVVFc1EwRkJRVUVzUTBGRE9VSkJMRXRCUVVGQkxFTkJRVkV2UWl4SlFVRkJRU3hEUVVGTEswVXNVVUZCUVVFc1EwRkJVMmhFTEV0QlFVRkJMRU5CUVVGQkxFTkJRVTluUnl4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlN5eEZRVUZCTEVOQlFVRXNRMEZETVVOVkxFMUJRVUZCTEVOQlFWTjZTU3hKUVVGQlFTeERRVUZMTUVrc1UwRkJRVUVzUTBGQlZUTkhMRXRCUVVGQkxFTkJRVUZCTEVOQlEzaENNRWNzVFVGQlFVRXNRMEZCVTNwSkxFbEJRVUZCTEVOQlFVdHhSeXhSUVVGQlFTeERRVUZUYjBNc1RVRkJRVUVzUTBGQlFVRXNRMEZEZGtKQkxFMUJRVUZCTEVOQlFWTjZTU3hKUVVGQlFTeERRVUZMYjBRc1ZVRkJRVUVzUTBGQlYzRkdMRTFCUVVGQkxFTkJRVkZPTEU5QlFVRkJMRU5CUVVGQkxFTkJSWEpETEU5QlFVOU5MRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjFoNlNTeEpRVUZCUVN4RFFVRkxNRWtzVTBGQlFVRXNSVUZCV1N4RFFVRkRjRU1zUjBGQlFVRXNRMEZCVFN4UlFVRkJMRWRCUVVFc1EwRkRWU3hSUVVGQkxFTkJRWFJDY1VNc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1IwRkJRVUVzUlVGQllYSkRMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVzFDVVN4UlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVUZKWlN4TlFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeERRVUZIWlN4WFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVYzFSRFZKTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwibGV0IEljb25zPXtcImFkZHJlc3MtYm9va1wiOlwiZmFzLCBmYS1hZGRyZXNzLWJvb2tcIixhbWF6b246XCJmYXMsIGZhLWFtYXpvblwiLGFtYnVsYW5jZTpcImZhcywgZmEtYW1idWxhbmNlXCIsYW5kcm9pZDpcImZhcywgZmEtYW5kcm9pZFwiLGFwcGxlOlwiZmFzLCBmYS1hcHBsZVwiLGFzdGVyaXNrOlwiZmFzLCBmYS1hc3Rlcmlza1wiLGF0OlwiZmFzLCBmYS1hdFwiLGJhY2t3YXJkOlwiZmFzLCBmYS1iYWNrd2FyZFwiLGJhbms6XCJmYXMsIGZhLWJhbmtcIixiYXR0ZXJ5OlwiZmFzLCBmYS1iYXR0ZXJ5XCIsYmVkOlwiZmFzLCBmYS1iZWRcIixiZWxsOlwiZmFzLCBmYS1iZWxsXCIsYmljeWNsZTpcImZhcywgZmEtYmljeWNsZVwiLFwiYmlydGhkYXktY2FrZVwiOlwiZmFzLCBmYS1iaXJ0aGRheS1jYWtlXCIsYml0YnVja2V0OlwiZmFzLCBmYS1iaXRidWNrZXRcIixiaXRjb2luOlwiZmFzLCBmYS1iaXRjb2luXCIsYmx1ZXRvb3RoOlwiZmFzLCBmYS1ibHVldG9vdGhcIixib2x0OlwiZmFzLCBmYS1ib2x0XCIsYm9vazpcImZhcywgZmEtYm9va1wiLGJ1czpcImZhcywgZmEtYnVzXCIsY2FiOlwiZmFzLCBmYS1jYWJcIixjYWxjdWxhdG9yOlwiZmFzLCBmYS1jYWxjdWxhdG9yXCIsY2FtZXJhOlwiZmFzLCBmYS1jYW1lcmFcIixjYXI6XCJmYXMsIGZhLWNhclwiLGNlcnRpZmljYXRlOlwiZmFzLCBmYS1jZXJ0aWZpY2F0ZVwiLGNoaWxkOlwiZmFzLCBmYS1jaGlsZFwiLGNocm9tZTpcImZhcywgZmEtY2hyb21lXCIsY2xvdWQ6XCJmYXMsIGZhLWNsb3VkXCIsY29mZmVlOlwiZmFzLCBmYS1jb2ZmZWVcIixjb21tZW50OlwiZmFzLCBmYS1jb21tZW50XCIsY29tcGFzczpcImZhcywgZmEtY29tcGFzc1wiLGNvcHk6XCJmYXMsIGZhLWNvcHlcIixjb3B5cmlnaHQ6XCJmYXMsIGZhLWNvcHlyaWdodFwiLGNsb25lOlwiZmFzLCBmYS1jbG9uZVwiLFwiY3JlZGl0LWNhcmRcIjpcImZhcywgZmEtY3JlZGl0LWNhcmRcIixjdWJlOlwiZmFzLCBmYS1jdWJlXCIsZGVza3RvcDpcImZhcywgZmEtZGVza3RvcFwiLGRpYW1vbmQ6XCJmYXMsIGZhLWRpYW1vbmRcIixkb3dubG9hZDpcImZhcywgZmEtZG93bmxvYWRcIixcImRyaXZlcnMtbGljZW5zZVwiOlwiZmFzLCBmYS1kcml2ZXJzLWxpY2Vuc2VcIixkcm9wYm94OlwiZmFzLCBmYS1kcm9wYm94XCIsZHJ1cGFsOlwiZmFzLCBmYS1kcnVwYWxcIixlZGdlOlwiZmFzLCBmYS1lZGdlXCIsZWRpdDpcImZhcywgZmEtZWRpdFwiLGVqZWN0OlwiZmFzLCBmYS1lamVjdFwiLFwiZWxsaXBzaXMtaFwiOlwiZmFzLCBmYS1lbGxpcHNpcy1oXCIsZW52ZWxvcGU6XCJmYXMsIGZhLWVudmVsb3BlXCIsZXJhc2VyOlwiZmFzLCBmYS1lcmFzZXJcIixleGNoYW5nZTpcImZhcywgZmEtZXhjaGFuZ2VcIixleGNsYW1hdGlvbjpcImZhcywgZmEtZXhjbGFtYXRpb25cIixleHBhbmQ6XCJmYXMsIGZhLWV4cGFuZFwiLGV5ZTpcImZhcywgZmEtZXllXCIsXCJleWUtc2xhc2hcIjpcImZhcywgZmEtZXllLXNsYXNoXCIsZmF4OlwiZmFzLCBmYS1mYXhcIixmZW1hbGU6XCJmYXMsIGZhLWZlbWFsZVwiLGZpbGU6XCJmYXMsIGZhLWZpbGVcIixmaWxtOlwiZmFzLCBmYS1maWxtXCIsZmlyZTpcImZhcywgZmEtZmlyZVwiLGZsYWc6XCJmYXMsIGZhLWZsYWdcIixmbGlja3I6XCJmYXMsIGZhLWZsaWNrclwiLGZvbGRlcjpcImZhcywgZmEtZm9sZGVyXCIsZm9yd2FyZDpcImZhcywgZmEtZm9yd2FyZFwiLGZvdXJzcXVhcmU6XCJmYXMsIGZhLWZvdXJzcXVhcmVcIixnaWZ0OlwiZmFzLCBmYS1naWZ0XCIsZ2xhc3M6XCJmYXMsIGZhLWdsYXNzXCIsZ2xvYmU6XCJmYXMsIGZhLWdsb2JlXCIsZ29vZ2xlOlwiZmFzLCBmYS1nb29nbGVcIixcImdyYWR1YXRpb24tY2FwXCI6XCJmYXMsIGZhLWdyYWR1YXRpb24tY2FwXCIsZ3JvdXA6XCJmYXMsIGZhLWdyb3VwXCIsaGFzaHRhZzpcImZhcywgZmEtaGFzaHRhZ1wiLGhlYWRwaG9uZXM6XCJmYXMsIGZhLWhlYWRwaG9uZXNcIixoZWFydDpcImZhcywgZmEtaGVhcnRcIixoaXN0b3J5OlwiZmFzLCBmYS1oaXN0b3J5XCIsaG9tZTpcImZhcywgZmEtaG9tZVwiLGhvdGVsOlwiZmFzLCBmYS1ob3RlbFwiLGhvdXJnbGFzczpcImZhcywgZmEtaG91cmdsYXNzXCIsaW1hZ2U6XCJmYXMsIGZhLWltYWdlXCIsaW1kYjpcImZhcywgZmEtaW1kYlwiLGluYm94OlwiZmFzLCBmYS1pbmJveFwiLGluZHVzdHJ5OlwiZmFzLCBmYS1pbmR1c3RyeVwiLGluZm86XCJmYXMsIGZhLWluZm9cIixpbnN0YWdyYW06XCJmYXMsIGZhLWluc3RhZ3JhbVwiLGtleTpcImZhcywgZmEta2V5XCIsbGFuZ3VhZ2U6XCJmYXMsIGZhLWxhbmd1YWdlXCIsbGFwdG9wOlwiZmFzLCBmYS1sYXB0b3BcIixsZWFmOlwiZmFzLCBmYS1sZWFmXCIsbGVnYWw6XCJmYXMsIGZhLWxlZ2FsXCIsXCJsaWZlLWJvdXlcIjpcImZhcywgZmEtbGlmZS1ib3V5XCIsbGlua2VkaW46XCJmYXMsIGZhLWxpbmtlZGluXCIsbGludXg6XCJmYXMsIGZhLWxpbnV4XCIsbG9jazpcImZhcywgZmEtbG9ja1wiLG1hZ2ljOlwiZmFzLCBmYS1tYWdpY1wiLG1hZ25ldDpcImZhcywgZmEtbWFnbmV0XCIsbWFsZTpcImZhcywgZmEtbWFsZVwiLG1hcDpcImZhcywgZmEtbWFwXCIsbWljcm9waG9uZTpcImZhcywgZmEtbWljcm9waG9uZVwiLG1vYmlsZTpcImZhcywgZmEtbW9iaWxlXCIsbW9uZXk6XCJmYXMsIGZhLW1vbmV5XCIsbW90b3JjeWNsZTpcImZhcywgZmEtbW90b3JjeWNsZVwiLG11c2ljOlwiZmFzLCBmYS1tdXNpY1wiLG9wZXJhOlwiZmFzLCBmYS1vcGVyYVwiLFwicGFpbnQtYnJ1c2hcIjpcImZhcywgZmEtcGFpbnQtYnJ1c2hcIixcInBhcGVyLXBsYW5lXCI6XCJmYXMsIGZhLXBhcGVyLXBsYW5lXCIscGF1c2U6XCJmYXMsIGZhLXBhdXNlXCIscGF3OlwiZmFzLCBmYS1wYXdcIixwYXlwYWw6XCJmYXMsIGZhLXBheXBhbFwiLHBlbjpcImZhcywgZmEtcGVuXCIscGVuY2lsOlwiZmFzLCBmYS1wZW5jaWxcIixwaG9uZTpcImZhcywgZmEtcGhvbmVcIixwaG90bzpcImZhcywgZmEtcGhvdG9cIixwaW50ZXJlc3Q6XCJmYXMsIGZhLXBpbnRlcmVzdFwiLHBsYW5lOlwiZmFzLCBmYS1wbGFuZVwiLHBsYXk6XCJmYXMsIGZhLXBsYXlcIixwbHVnOlwiZmFzLCBmYS1wbHVnXCIscGx1czpcImZhcywgZmEtcGx1c1wiLHBvZGNhc3Q6XCJmYXMsIGZhLXBvZGNhc3RcIixxdWVzdGlvbjpcImZhcywgZmEtcXVlc3Rpb25cIixxdW9yYTpcImZhcywgZmEtcXVvcmFcIixyZWN5Y2xlOlwiZmFzLCBmYS1yZWN5Y2xlXCIscmVkZGl0OlwiZmFzLCBmYS1yZWRkaXRcIixyZWRvOlwiZmFzLCBmYS1yZWRvXCIscmVmcmVzaDpcImZhcywgZmEtcmVmcmVzaFwiLHJlcGx5OlwiZmFzLCBmYS1yZXBseVwiLHJlc2lzdGFuY2U6XCJmYXMsIGZhLXJlc2lzdGFuY2VcIixyZXR3ZWV0OlwiZmFzLCBmYS1yZXR3ZWV0XCIscm9hZDpcImZhcywgZmEtcm9hZFwiLHJvY2tldDpcImZhcywgZmEtcm9ja2V0XCIscnNzOlwiZmFzLCBmYS1yc3NcIixzYWZhcmk6XCJmYXMsIGZhLXNhZmFyaVwiLHNjcmliZTpcImZhcywgZmEtc2NyaWJlXCIsc2VhcmNoOlwiZmFzLCBmYS1zZWFyY2hcIixzZW5kOlwiZmFzLCBmYS1zZW5kXCIsc2VydmVyOlwiZmFzLCBmYS1zZXJ2ZXJcIixzaGlwOlwiZmFzLCBmYS1zaGlwXCIsXCJzaWduLWluXCI6XCJmYXMsIGZhLXNpZ24taW5cIixzaXRlbWFwOlwiZmFzLCBmYS1zaXRlbWFwXCIsc2t5YXRsYXM6XCJmYXMsIGZhLXNreWF0bGFzXCIsc2t5cGU6XCJmYXMsIGZhLXNreXBlXCIsc2xpZGVzaGFyZTpcImZhcywgZmEtc2xpZGVzaGFyZVwiLHNuYXBjaGF0OlwiZmFzLCBmYS1zbmFwY2hhdFwiLHNvcnQ6XCJmYXMsIGZhLXNvcnRcIixzb3VuZGNsb3VkOlwiZmFzLCBmYS1zb3VuZGNsb3VkXCIsc3Bvb246XCJmYXMsIGZhLXNwb29uXCIsc3BvdGlmeTpcImZhcywgZmEtc3BvdGlmeVwiLHNxdWFyZTpcImZhcywgZmEtc3F1YXJlXCIsXCJzdGFjay1leGNoYW5nZVwiOlwiZmFzLCBmYS1zdGFjay1leGNoYW5nZVwiLHN0YXI6XCJmYXMsIGZhLXN0YXJcIixzdGVhbTpcImZhcywgZmEtc3RlYW1cIixcInN0aWNreS1ub3RlXCI6XCJmYXMsIGZhLXN0aWNreS1ub3RlXCIsc3RvcDpcImZhcywgZmEtc3RvcFwiLFwic3RyZWV0LXZpZXdcIjpcImZhcywgZmEtc3RyZWV0LXZpZXdcIixzdWJ3YXk6XCJmYXMsIGZhLXN1YndheVwiLHN1aXRjYXNlOlwiZmFzLCBmYS1zdWl0Y2FzZVwiLHN1cHBvcnQ6XCJmYXMsIGZhLXN1cHBvcnRcIix0YXNrczpcImZhcywgZmEtdGFza3NcIix0YXhpOlwiZmFzLCBmYS10YXhpXCIsdGVsZWdyYW06XCJmYXMsIGZhLXRlbGVncmFtXCIsdGVsZXZpc2lvbjpcImZhcywgZmEtdGVsZXZpc2lvblwiLHRlcm1pbmFsOlwiZmFzLCBmYS10ZXJtaW5hbFwiLHRoZXJtb21ldGVyOlwiZmFzLCBmYS10aGVybW9tZXRlclwiLHRpY2tldDpcImZhcywgZmEtdGlja2V0XCIsdGltZXM6XCJmYXMsIGZhLXRpbWVzXCIsdHJhaW46XCJmYXMsIGZhLXRyYWluXCIsdHJhc2g6XCJmYXMsIGZhLXRyYXNoXCIsdHJlZTpcImZhcywgZmEtdHJlZVwiLHRyb3BoeTpcImZhcywgZmEtdHJvcGh5XCIsdHJ1Y2s6XCJmYXMsIGZhLXRydWNrXCIsdHVtYmxyOlwiZmFzLCBmYS10dW1ibHJcIix0djpcImZhcywgZmEtdHZcIix0d2l0dGVyOlwiZmFzLCBmYS10d2l0dGVyXCIsdW1icmVsbGE6XCJmYXMsIGZhLXVtYnJlbGxhXCIsdW5pdmVyc2l0eTpcImZhcywgZmEtdW5pdmVyc2l0eVwiLHVubG9jazpcImZhcywgZmEtdW5sb2NrXCIsdXBsb2FkOlwiZmFzLCBmYS11cGxvYWRcIix1c2I6XCJmYXMsIGZhLXVzYlwiLHVzZXI6XCJmYXMsIGZhLXVzZXJcIixcInZpZGVvLWNhbWVyYVwiOlwiZmFzLCBmYS12aWRlby1jYW1lcmFcIix2aW1lbzpcImZhcywgZmEtdmltZW9cIix3YXJuaW5nOlwiZmFzLCBmYS13YXJuaW5nXCIsd2VjaGF0OlwiZmFzLCBmYS13ZWNoYXRcIix3ZWlibzpcImZhcywgZmEtd2VpYm9cIix3aGF0c2FwcDpcImZhcywgZmEtd2hhdHNhcHBcIix3aGVlbGNoYWlyOlwiZmFzLCBmYS13aGVlbGNoYWlyXCIsd2lmaTpcImZhcywgZmEtd2lmaVwiLFwid2lraXBlZGlhLXdcIjpcImZhcywgZmEtd2lraXBlZGlhLXdcIix3b3JkcHJlc3M6XCJmYXMsIGZhLXdvcmRwcmVzc1wiLHllbHA6XCJmYXMsIGZhLXllbHBcIix5b2FzdDpcImZhcywgZmEteW9hc3RcIix5b3V0dWJlOlwiZmFzLCBmYS15b3V0dWJlXCIsdW5kbzpcImZhcywgZmEtdW5kb1wifTt2YXIgXyRJY29uc180PUljb25zO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa2xqYjI1ekxtcHpJbDBzSW01aGJXVnpJanBiSWtsamIyNXpJaXdpWVdSa2NtVnpjeTFpYjI5cklpd2lZVzFoZW05dUlpd2lZVzFpZFd4aGJtTmxJaXdpWVc1a2NtOXBaQ0lzSW1Gd2NHeGxJaXdpWVhOMFpYSnBjMnNpTENKaGRDSXNJbUpoWTJ0M1lYSmtJaXdpWW1GdWF5SXNJbUpoZEhSbGNua2lMQ0ppWldRaUxDSmlaV3hzSWl3aVltbGplV05zWlNJc0ltSnBjblJvWkdGNUxXTmhhMlVpTENKaWFYUmlkV05yWlhRaUxDSmlhWFJqYjJsdUlpd2lZbXgxWlhSdmIzUm9JaXdpWW05c2RDSXNJbUp2YjJzaUxDSmlkWE1pTENKallXSWlMQ0pqWVd4amRXeGhkRzl5SWl3aVkyRnRaWEpoSWl3aVkyRnlJaXdpWTJWeWRHbG1hV05oZEdVaUxDSmphR2xzWkNJc0ltTm9jbTl0WlNJc0ltTnNiM1ZrSWl3aVkyOW1abVZsSWl3aVkyOXRiV1Z1ZENJc0ltTnZiWEJoYzNNaUxDSmpiM0I1SWl3aVkyOXdlWEpwWjJoMElpd2lZMnh2Ym1VaUxDSmpjbVZrYVhRdFkyRnlaQ0lzSW1OMVltVWlMQ0prWlhOcmRHOXdJaXdpWkdsaGJXOXVaQ0lzSW1SdmQyNXNiMkZrSWl3aVpISnBkbVZ5Y3kxc2FXTmxibk5sSWl3aVpISnZjR0p2ZUNJc0ltUnlkWEJoYkNJc0ltVmtaMlVpTENKbFpHbDBJaXdpWldwbFkzUWlMQ0psYkd4cGNITnBjeTFvSWl3aVpXNTJaV3h2Y0dVaUxDSmxjbUZ6WlhJaUxDSmxlR05vWVc1blpTSXNJbVY0WTJ4aGJXRjBhVzl1SWl3aVpYaHdZVzVrSWl3aVpYbGxJaXdpWlhsbExYTnNZWE5vSWl3aVptRjRJaXdpWm1WdFlXeGxJaXdpWm1sc1pTSXNJbVpwYkcwaUxDSm1hWEpsSWl3aVpteGhaeUlzSW1ac2FXTnJjaUlzSW1admJHUmxjaUlzSW1admNuZGhjbVFpTENKbWIzVnljM0YxWVhKbElpd2laMmxtZENJc0ltZHNZWE56SWl3aVoyeHZZbVVpTENKbmIyOW5iR1VpTENKbmNtRmtkV0YwYVc5dUxXTmhjQ0lzSW1keWIzVndJaXdpYUdGemFIUmhaeUlzSW1obFlXUndhRzl1WlhNaUxDSm9aV0Z5ZENJc0ltaHBjM1J2Y25raUxDSm9iMjFsSWl3aWFHOTBaV3dpTENKb2IzVnlaMnhoYzNNaUxDSnBiV0ZuWlNJc0ltbHRaR0lpTENKcGJtSnZlQ0lzSW1sdVpIVnpkSEo1SWl3aWFXNW1ieUlzSW1sdWMzUmhaM0poYlNJc0ltdGxlU0lzSW14aGJtZDFZV2RsSWl3aWJHRndkRzl3SWl3aWJHVmhaaUlzSW14bFoyRnNJaXdpYkdsbVpTMWliM1Y1SWl3aWJHbHVhMlZrYVc0aUxDSnNhVzUxZUNJc0lteHZZMnNpTENKdFlXZHBZeUlzSW0xaFoyNWxkQ0lzSW0xaGJHVWlMQ0p0WVhBaUxDSnRhV055YjNCb2IyNWxJaXdpYlc5aWFXeGxJaXdpYlc5dVpYa2lMQ0p0YjNSdmNtTjVZMnhsSWl3aWJYVnphV01pTENKdmNHVnlZU0lzSW5CaGFXNTBMV0p5ZFhOb0lpd2ljR0Z3WlhJdGNHeGhibVVpTENKd1lYVnpaU0lzSW5CaGR5SXNJbkJoZVhCaGJDSXNJbkJsYmlJc0luQmxibU5wYkNJc0luQm9iMjVsSWl3aWNHaHZkRzhpTENKd2FXNTBaWEpsYzNRaUxDSndiR0Z1WlNJc0luQnNZWGtpTENKd2JIVm5JaXdpY0d4MWN5SXNJbkJ2WkdOaGMzUWlMQ0p4ZFdWemRHbHZiaUlzSW5GMWIzSmhJaXdpY21WamVXTnNaU0lzSW5KbFpHUnBkQ0lzSW5KbFpHOGlMQ0p5WldaeVpYTm9JaXdpY21Wd2JIa2lMQ0p5WlhOcGMzUmhibU5sSWl3aWNtVjBkMlZsZENJc0luSnZZV1FpTENKeWIyTnJaWFFpTENKeWMzTWlMQ0p6WVdaaGNta2lMQ0p6WTNKcFltVWlMQ0p6WldGeVkyZ2lMQ0p6Wlc1a0lpd2ljMlZ5ZG1WeUlpd2ljMmhwY0NJc0luTnBaMjR0YVc0aUxDSnphWFJsYldGd0lpd2ljMnQ1WVhSc1lYTWlMQ0p6YTNsd1pTSXNJbk5zYVdSbGMyaGhjbVVpTENKemJtRndZMmhoZENJc0luTnZjblFpTENKemIzVnVaR05zYjNWa0lpd2ljM0J2YjI0aUxDSnpjRzkwYVdaNUlpd2ljM0YxWVhKbElpd2ljM1JoWTJzdFpYaGphR0Z1WjJVaUxDSnpkR0Z5SWl3aWMzUmxZVzBpTENKemRHbGphM2t0Ym05MFpTSXNJbk4wYjNBaUxDSnpkSEpsWlhRdGRtbGxkeUlzSW5OMVluZGhlU0lzSW5OMWFYUmpZWE5sSWl3aWMzVndjRzl5ZENJc0luUmhjMnR6SWl3aWRHRjRhU0lzSW5SbGJHVm5jbUZ0SWl3aWRHVnNaWFpwYzJsdmJpSXNJblJsY20xcGJtRnNJaXdpZEdobGNtMXZiV1YwWlhJaUxDSjBhV05yWlhRaUxDSjBhVzFsY3lJc0luUnlZV2x1SWl3aWRISmhjMmdpTENKMGNtVmxJaXdpZEhKdmNHaDVJaXdpZEhKMVkyc2lMQ0owZFcxaWJISWlMQ0owZGlJc0luUjNhWFIwWlhJaUxDSjFiV0p5Wld4c1lTSXNJblZ1YVhabGNuTnBkSGtpTENKMWJteHZZMnNpTENKMWNHeHZZV1FpTENKMWMySWlMQ0oxYzJWeUlpd2lkbWxrWlc4dFkyRnRaWEpoSWl3aWRtbHRaVzhpTENKM1lYSnVhVzVuSWl3aWQyVmphR0YwSWl3aWQyVnBZbThpTENKM2FHRjBjMkZ3Y0NJc0luZG9aV1ZzWTJoaGFYSWlMQ0ozYVdacElpd2lkMmxyYVhCbFpHbGhMWGNpTENKM2IzSmtjSEpsYzNNaUxDSjVaV3h3SWl3aWVXOWhjM1FpTENKNWIzVjBkV0psSWl3aWRXNWtieUlzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEVsQlFVbEJMRXRCUVVGQkxFTkJRVkVzUTBGRldrTXNZMEZCUVVFc1EwRkJkMElzYzBKQlFVRXNRMEZEZUVKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4VFFVRkJRU3hEUVVGeFFpeHRRa0ZCUVN4RFFVTnlRa01zVDBGQlFVRXNRMEZCYlVJc2FVSkJRVUVzUTBGRGJrSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExGRkJRVUZCTEVOQlFXOUNMR3RDUVVGQkxFTkJRM0JDUXl4RlFVRkJRU3hEUVVGakxGbEJRVUVzUTBGRFpFTXNVVUZCUVVFc1EwRkJiMElzYTBKQlFVRXNRMEZEY0VKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEU5QlFVRkJMRU5CUVcxQ0xHbENRVUZCTEVOQlEyNUNReXhIUVVGQlFTeERRVUZsTEdGQlFVRXNRMEZEWmtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zVDBGQlFVRXNRMEZCYlVJc2FVSkJRVUVzUTBGRGJrSkRMR1ZCUVVGQkxFTkJRWGxDTEhWQ1FVRkJMRU5CUTNwQ1F5eFRRVUZCUVN4RFFVRnhRaXh0UWtGQlFTeERRVU55UWtNc1QwRkJRVUVzUTBGQmJVSXNhVUpCUVVFc1EwRkRia0pETEZOQlFVRkJMRU5CUVhGQ0xHMUNRVUZCTEVOQlEzSkNReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4SFFVRkJRU3hEUVVGbExHRkJRVUVzUTBGRFprTXNSMEZCUVVFc1EwRkJaU3hoUVVGQkxFTkJRMlpETEZWQlFVRkJMRU5CUVhOQ0xHOUNRVUZCTEVOQlEzUkNReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNSMEZCUVVFc1EwRkJaU3hoUVVGQkxFTkJRMlpETEZkQlFVRkJMRU5CUVhWQ0xIRkNRVUZCTEVOQlEzWkNReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1MwRkJRVUVzUTBGQmFVSXNaVUZCUVN4RFFVTnFRa01zVFVGQlFVRXNRMEZCYTBJc1owSkJRVUVzUTBGRGJFSkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eFBRVUZCUVN4RFFVRnRRaXhwUWtGQlFTeERRVU51UWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zVTBGQlFVRXNRMEZCY1VJc2JVSkJRVUVzUTBGRGNrSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExHRkJRVUZCTEVOQlFYVkNMSEZDUVVGQkxFTkJRM1pDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhQUVVGQlFTeERRVUZ0UWl4cFFrRkJRU3hEUVVOdVFrTXNUMEZCUVVFc1EwRkJiVUlzYVVKQlFVRXNRMEZEYmtKRExGRkJRVUZCTEVOQlFXOUNMR3RDUVVGQkxFTkJRM0JDUXl4cFFrRkJRVUVzUTBGQk1rSXNlVUpCUVVFc1EwRkRNMEpETEU5QlFVRkJMRU5CUVcxQ0xHbENRVUZCTEVOQlEyNUNReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNTVUZCUVVFc1EwRkJaMElzWTBGQlFTeERRVU5vUWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNXVUZCUVVFc1EwRkJjMElzYjBKQlFVRXNRMEZEZEVKRExGRkJRVUZCTEVOQlFXOUNMR3RDUVVGQkxFTkJRM0JDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zVVVGQlFVRXNRMEZCYjBJc2EwSkJRVUVzUTBGRGNFSkRMRmRCUVVGQkxFTkJRWFZDTEhGQ1FVRkJMRU5CUTNaQ1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1IwRkJRVUVzUTBGQlpTeGhRVUZCTEVOQlEyWkRMRmRCUVVGQkxFTkJRWEZDTEcxQ1FVRkJMRU5CUTNKQ1F5eEhRVUZCUVN4RFFVRmxMR0ZCUVVFc1EwRkRaa01zVFVGQlFVRXNRMEZCYTBJc1owSkJRVUVzUTBGRGJFSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zVDBGQlFVRXNRMEZCYlVJc2FVSkJRVUVzUTBGRGJrSkRMRlZCUVVGQkxFTkJRWE5DTEc5Q1FVRkJMRU5CUTNSQ1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eE5RVUZCUVN4RFFVRnJRaXhuUWtGQlFTeERRVU5zUWtNc1owSkJRVUZCTEVOQlFUQkNMSGRDUVVGQkxFTkJRekZDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhQUVVGQlFTeERRVUZ0UWl4cFFrRkJRU3hEUVVOdVFrTXNWVUZCUVVFc1EwRkJjMElzYjBKQlFVRXNRMEZEZEVKRExFdEJRVUZCTEVOQlFXbENMR1ZCUVVFc1EwRkRha0pETEU5QlFVRkJMRU5CUVcxQ0xHbENRVUZCTEVOQlEyNUNReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4VFFVRkJRU3hEUVVGeFFpeHRRa0ZCUVN4RFFVTnlRa01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNTVUZCUVVFc1EwRkJaMElzWTBGQlFTeERRVU5vUWtNc1MwRkJRVUVzUTBGQmFVSXNaVUZCUVN4RFFVTnFRa01zVVVGQlFVRXNRMEZCYjBJc2EwSkJRVUVzUTBGRGNFSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExGTkJRVUZCTEVOQlFYRkNMRzFDUVVGQkxFTkJRM0pDUXl4SFFVRkJRU3hEUVVGbExHRkJRVUVzUTBGRFprTXNVVUZCUVVFc1EwRkJiMElzYTBKQlFVRXNRMEZEY0VKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eFhRVUZCUVN4RFFVRnhRaXh0UWtGQlFTeERRVU55UWtNc1VVRkJRVUVzUTBGQmIwSXNhMEpCUVVFc1EwRkRjRUpETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFdEJRVUZCTEVOQlFXbENMR1ZCUVVFc1EwRkRha0pETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eEhRVUZCUVN4RFFVRmxMR0ZCUVVFc1EwRkRaa01zVlVGQlFVRXNRMEZCYzBJc2IwSkJRVUVzUTBGRGRFSkRMRTFCUVVGQkxFTkJRV3RDTEdkQ1FVRkJMRU5CUTJ4Q1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4VlFVRkJRU3hEUVVGelFpeHZRa0ZCUVN4RFFVTjBRa01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1lVRkJRVUVzUTBGQmRVSXNjVUpCUVVFc1EwRkRka0pETEdGQlFVRkJMRU5CUVhWQ0xIRkNRVUZCTEVOQlEzWkNReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eEhRVUZCUVN4RFFVRmxMR0ZCUVVFc1EwRkRaa01zVFVGQlFVRXNRMEZCYTBJc1owSkJRVUVzUTBGRGJFSkRMRWRCUVVGQkxFTkJRV1VzWVVGQlFTeERRVU5tUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNTMEZCUVVFc1EwRkJhVUlzWlVGQlFTeERRVU5xUWtNc1UwRkJRVUVzUTBGQmNVSXNiVUpCUVVFc1EwRkRja0pETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eFJRVUZCUVN4RFFVRnZRaXhyUWtGQlFTeERRVU53UWtNc1MwRkJRVUVzUTBGQmFVSXNaVUZCUVN4RFFVTnFRa01zVDBGQlFVRXNRMEZCYlVJc2FVSkJRVUVzUTBGRGJrSkRMRTFCUVVGQkxFTkJRV3RDTEdkQ1FVRkJMRU5CUTJ4Q1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4UFFVRkJRU3hEUVVGdFFpeHBRa0ZCUVN4RFFVTnVRa01zUzBGQlFVRXNRMEZCYVVJc1pVRkJRU3hEUVVOcVFrTXNWVUZCUVVFc1EwRkJjMElzYjBKQlFVRXNRMEZEZEVKRExFOUJRVUZCTEVOQlFXMUNMR2xDUVVGQkxFTkJRMjVDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNSMEZCUVVFc1EwRkJaU3hoUVVGQkxFTkJRMlpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNUVUZCUVVFc1EwRkJhMElzWjBKQlFVRXNRMEZEYkVKRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEUxQlFVRkJMRU5CUVd0Q0xHZENRVUZCTEVOQlEyeENReXhKUVVGQlFTeERRVUZuUWl4alFVRkJMRU5CUTJoQ1F5eFRRVUZCUVN4RFFVRnRRaXhwUWtGQlFTeERRVU51UWtNc1QwRkJRVUVzUTBGQmJVSXNhVUpCUVVFc1EwRkRia0pETEZGQlFVRkJMRU5CUVc5Q0xHdENRVUZCTEVOQlEzQkNReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eFZRVUZCUVN4RFFVRnpRaXh2UWtGQlFTeERRVU4wUWtNc1VVRkJRVUVzUTBGQmIwSXNhMEpCUVVFc1EwRkRjRUpETEVsQlFVRkJMRU5CUVdkQ0xHTkJRVUVzUTBGRGFFSkRMRlZCUVVGQkxFTkJRWE5DTEc5Q1FVRkJMRU5CUTNSQ1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4UFFVRkJRU3hEUVVGdFFpeHBRa0ZCUVN4RFFVTnVRa01zVFVGQlFVRXNRMEZCYTBJc1owSkJRVUVzUTBGRGJFSkRMR2RDUVVGQlFTeERRVUV3UWl4M1FrRkJRU3hEUVVNeFFrTXNTVUZCUVVFc1EwRkJaMElzWTBGQlFTeERRVU5vUWtNc1MwRkJRVUVzUTBGQmFVSXNaVUZCUVN4RFFVTnFRa01zWVVGQlFVRXNRMEZCZFVJc2NVSkJRVUVzUTBGRGRrSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExHRkJRVUZCTEVOQlFYVkNMSEZDUVVGQkxFTkJRM1pDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zVVVGQlFVRXNRMEZCYjBJc2EwSkJRVUVzUTBGRGNFSkRMRTlCUVVGQkxFTkJRVzFDTEdsQ1FVRkJMRU5CUTI1Q1F5eExRVUZCUVN4RFFVRnBRaXhsUVVGQkxFTkJRMnBDUXl4SlFVRkJRU3hEUVVGblFpeGpRVUZCTEVOQlEyaENReXhSUVVGQlFTeERRVUZ2UWl4clFrRkJRU3hEUVVOd1FrTXNWVUZCUVVFc1EwRkJjMElzYjBKQlFVRXNRMEZEZEVKRExGRkJRVUZCTEVOQlFXOUNMR3RDUVVGQkxFTkJRM0JDUXl4WFFVRkJRU3hEUVVGMVFpeHhRa0ZCUVN4RFFVTjJRa01zVFVGQlFVRXNRMEZCYTBJc1owSkJRVUVzUTBGRGJFSkRMRXRCUVVGQkxFTkJRV2xDTEdWQlFVRXNRMEZEYWtKRExFdEJRVUZCTEVOQlFXbENMR1ZCUVVFc1EwRkRha0pETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRWxCUVVGQkxFTkJRV2RDTEdOQlFVRXNRMEZEYUVKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhOUVVGQlFTeERRVUZyUWl4blFrRkJRU3hEUVVOc1FrTXNSVUZCUVVFc1EwRkJZeXhaUVVGQkxFTkJRMlJETEU5QlFVRkJMRU5CUVcxQ0xHbENRVUZCTEVOQlEyNUNReXhSUVVGQlFTeERRVUZ2UWl4clFrRkJRU3hEUVVOd1FrTXNWVUZCUVVFc1EwRkJjMElzYjBKQlFVRXNRMEZEZEVKRExFMUJRVUZCTEVOQlFXdENMR2RDUVVGQkxFTkJRMnhDUXl4TlFVRkJRU3hEUVVGclFpeG5Ra0ZCUVN4RFFVTnNRa01zUjBGQlFVRXNRMEZCWlN4aFFVRkJMRU5CUTJaRExFbEJRVUZCTEVOQlFXZENMR05CUVVFc1EwRkRhRUpETEdOQlFVRkJMRU5CUVhkQ0xITkNRVUZCTEVOQlEzaENReXhMUVVGQlFTeERRVUZwUWl4bFFVRkJMRU5CUTJwQ1F5eFBRVUZCUVN4RFFVRnRRaXhwUWtGQlFTeERRVU51UWtNc1RVRkJRVUVzUTBGQmEwSXNaMEpCUVVFc1EwRkRiRUpETEV0QlFVRkJMRU5CUVdsQ0xHVkJRVUVzUTBGRGFrSkRMRkZCUVVGQkxFTkJRVzlDTEd0Q1FVRkJMRU5CUTNCQ1F5eFZRVUZCUVN4RFFVRnpRaXh2UWtGQlFTeERRVU4wUWtNc1NVRkJRVUVzUTBGQlowSXNZMEZCUVN4RFFVTm9Ra01zWVVGQlFVRXNRMEZCZFVJc2NVSkJRVUVzUTBGRGRrSkRMRk5CUVVGQkxFTkJRWEZDTEcxQ1FVRkJMRU5CUTNKQ1F5eEpRVUZCUVN4RFFVRm5RaXhqUVVGQkxFTkJRMmhDUXl4TFFVRkJRU3hEUVVGcFFpeGxRVUZCTEVOQlEycENReXhQUVVGQlFTeERRVUZ0UWl4cFFrRkJRU3hEUVVOdVFrTXNTVUZCUVVFc1EwRkJaMElzWTBGQlFTeERRVUZCTEVOQlIyaENReXhoUVVGUFF5eERRVUZWYUUwc1MwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJsZXQgX19mdW5jXzE4PW5ldyhfJEZ1bmNfNyk7dmFyIF8kU2hhZG93XzE4PWZ1bmN0aW9uKGVsZW1lbnQpe2xldCBzZWxmPXtlbGVtZW50OmVsZW1lbnQuY2xvbmVOb2RlKCEwKSxjaGlsZHJlbjpbZWxlbWVudF0scHJvcGVydGllczp7fSxjaGlsZFByb3BlcnRpZXM6e30sdXBkYXRlTmV3RWxlbWVudENoaWxkUHJvcGVydGllczpmdW5jdGlvbihlbGVtZW50LHByb3BlcnR5Q29sbGVjdGlvbj17fSl7bGV0IGNoaWxkcmVuLHBvc2l0aW9ucztmb3IobGV0IGlkZW50aWZpZXIgaW4gcHJvcGVydHlDb2xsZWN0aW9uKWZvcihsZXQgY2hpbGRQcm9wZXJ0aWVzIG9mIHByb3BlcnR5Q29sbGVjdGlvbltpZGVudGlmaWVyXSl7cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKGNoaWxkUHJvcGVydGllcy5wb3NpdGlvbnMpLGNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcixlbGVtZW50LHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLnNldFByb3BlcnRpZXMoY2hpbGRQcm9wZXJ0aWVzLnByb3BlcnRpZXMpfX0sdXBkYXRlTmV3RWxlbWVudENoaWxkQXR0cmlidXRlczpmdW5jdGlvbihlbGVtZW50LGF0dHJpYnV0ZUNvbGxlY3Rpb249e30pe2xldCBjaGlsZHJlbixwb3NpdGlvbnM7Zm9yKGxldCBpZGVudGlmaWVyIGluIGF0dHJpYnV0ZUNvbGxlY3Rpb24pZm9yKGxldCBjaGlsZEF0cnJpYnV0ZXMgb2YgYXR0cmlidXRlQ29sbGVjdGlvbltpZGVudGlmaWVyXSl7cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKGNoaWxkQXRycmlidXRlcy5wb3NpdGlvbnMpLGNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcixlbGVtZW50LHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLnNldEF0dHJpYnV0ZXMoY2hpbGRBdHJyaWJ1dGVzLmF0dHJpYnV0ZXMpfX0sc2V0UG9zaXRpb25zOmZ1bmN0aW9uKHBvc2l0aW9ucz0xKXtyZXR1cm4gQXJyYXkuaXNBcnJheShwb3NpdGlvbnMpfHwocG9zaXRpb25zPV9fZnVuY18xOC5yYW5nZShwb3NpdGlvbnMpKSxwb3NpdGlvbnN9LGNyZWF0ZUVsZW1lbnQ6ZnVuY3Rpb24ocGFyYW1zPXtjaGlsZERldGFpbHM6e2F0dHJpYnV0ZXM6e30scHJvcGVydGllczp7fX0sZGV0YWlsczp7YXR0cmlidXRlczp7fSxwcm9wZXJ0aWVzOnt9fX0pe2xldCBlbGVtZW50PXRoaXMuZWxlbWVudC5jbG9uZU5vZGUoITApO3JldHVybiB0aGlzLmNoaWxkcmVuLnB1c2goZWxlbWVudCksdGhpcy5wcmVwYXJlRWxlbWVudChlbGVtZW50LHBhcmFtcyksZWxlbWVudH0scHJlcGFyZUVsZW1lbnQ6ZnVuY3Rpb24oZWxlbWVudCxwYXJhbXM9e2NoaWxkRGV0YWlsczp7YXR0cmlidXRlczp7fSxwcm9wZXJ0aWVzOnt9fSxkZXRhaWxzOnthdHRyaWJ1dGVzOnt9LHByb3BlcnRpZXM6e319fSl7bnVsbCE9cGFyYW1zLmNoaWxkRGV0YWlscyYmKG51bGwhPXBhcmFtcy5jaGlsZERldGFpbHMuYXR0cmlidXRlcyYmdGhpcy51cGRhdGVOZXdFbGVtZW50Q2hpbGRBdHRyaWJ1dGVzKGVsZW1lbnQscGFyYW1zLmNoaWxkRGV0YWlscy5hdHRyaWJ1dGVzKSxudWxsIT1wYXJhbXMuY2hpbGREZXRhaWxzLnByb3BlcnRpZXMmJnRoaXMudXBkYXRlTmV3RWxlbWVudENoaWxkUHJvcGVydGllcyhlbGVtZW50LHBhcmFtcy5jaGlsZERldGFpbHMucHJvcGVydGllcykpLG51bGwhPXBhcmFtcy5kZXRhaWxzJiYobnVsbCE9cGFyYW1zLmRldGFpbHMuYXR0cmlidXRlcyYmZWxlbWVudC5zZXRBdHRyaWJ1dGVzKHBhcmFtcy5kZXRhaWxzLmF0dHJpYnV0ZXMpLG51bGwhPXBhcmFtcy5kZXRhaWxzLnByb3BlcnRpZXMmJmVsZW1lbnQuc2V0UHJvcGVydGllcyhwYXJhbXMuZGV0YWlscy5wcm9wZXJ0aWVzKSksdGhpcy51cGRhdGVOZXdFbGVtZW50Q2hpbGRQcm9wZXJ0aWVzKGVsZW1lbnQsdGhpcy5jaGlsZFByb3BlcnRpZXMpLGVsZW1lbnQuc2V0UHJvcGVydGllcyh0aGlzLnByb3BlcnRpZXMpLHRoaXMubWFrZUNsb25lYWJsZShlbGVtZW50KX0scmVtb3ZlRWxlbWVudDpmdW5jdGlvbihlbGVtZW50KXtsZXQgY2hpbGRyZW49W10scG9zaXRpb249dGhpcy5jaGlsZHJlbi5pbmRleE9mKGVsZW1lbnQpO2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndDtpKyspcG9zaXRpb24hPWkmJmNoaWxkcmVuLnB1c2godGhpcy5jaGlsZHJlbltpXSk7dGhpcy5jaGlsZHJlbj1jaGlsZHJlbn0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKHBvc2l0aW9uLHBhcmFtcz17Y2hpbGREZXRhaWxzOnthdHRyaWJ1dGVzOnt9LHByb3BlcnRpZXM6e319LGRldGFpbHM6e2F0dHJpYnV0ZXM6e30scHJvcGVydGllczp7fX19KXtsZXQgZWxlbWVudD10aGlzLmNoaWxkcmVuW3Bvc2l0aW9uXS5jbG9uZU5vZGUoITApO3JldHVybiB0aGlzLmNoaWxkcmVuLnB1c2goZWxlbWVudCksdGhpcy5wcmVwYXJlRWxlbWVudChlbGVtZW50LHBhcmFtcyksZWxlbWVudH0sbWFrZUNsb25lYWJsZTpmdW5jdGlvbihlbGVtZW50KXtsZXQgcG9zaXRpb249dGhpcy5jaGlsZHJlbi5pbmRleE9mKGVsZW1lbnQpOy0xIT1wb3NpdGlvbiYmKGVsZW1lbnQudW5pdENsb25lPShwYXJhbXM9PnRoaXMuY2xvbmVFbGVtZW50KHBvc2l0aW9uLHBhcmFtcykpKX0sbGVuZ3RoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2hpbGRyZW4ubGVuZ3RofSxzZXRQcm9wZXJ0aWVzOmZ1bmN0aW9uKHByb3BlcnRpZXM9e30pe2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXRoaXMuY2hpbGRyZW5baV0uc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzKTt0aGlzLmVsZW1lbnQuc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzKTtmb3IobGV0IGkgaW4gcHJvcGVydGllcyl0aGlzLnByb3BlcnRpZXNbaV09cHJvcGVydGllc1tpXX0sY3NzOmZ1bmN0aW9uKHN0eWxlPXt9KXtmb3IobGV0IGk9MDtpPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO2krKyl0aGlzLmNoaWxkcmVuW2ldLmNzcyhzdHlsZSk7dGhpcy5lbGVtZW50LmNzcyhzdHlsZSl9LHNldEF0dHJpYnV0ZXM6ZnVuY3Rpb24oYXR0cmlidXRlcz17fSl7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspdGhpcy5jaGlsZHJlbltpXS5zZXRBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpO3RoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpfSxhZGRDbGFzc2VzOmZ1bmN0aW9uKGNsYXNzZXM9XCJcIil7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspdGhpcy5jaGlsZHJlbltpXS5hZGRDbGFzc2VzKGNsYXNzZXMpO3RoaXMuZWxlbWVudC5hZGRDbGFzc2VzKGNsYXNzZXMpfSxyZW1vdmVDbGFzc2VzOmZ1bmN0aW9uKGNsYXNzZXM9XCJcIil7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspdGhpcy5jaGlsZHJlbltpXS5yZW1vdmVDbGFzc2VzKGNsYXNzZXMpO3RoaXMuZWxlbWVudC5yZW1vdmVDbGFzc2VzKGNsYXNzZXMpfSxnZXRDaGlsZHJlbjpmdW5jdGlvbihpZGVudGlmaWVyPVwiXCIsZWxlbWVudCxwb3NpdGlvbnM9W10pe2xldCBjb2xsZWN0aW9uPVtdLGNoaWxkcmVuPWVsZW1lbnQuZmluZEFsbChpZGVudGlmaWVyKTtpZihjaGlsZHJlbi5sZW5ndGg+MClmb3IobGV0IGo9MDtqPHBvc2l0aW9ucy5sZW5ndGg7aisrKW51bGwhPWNoaWxkcmVuW3Bvc2l0aW9uc1tqXV0mJmNvbGxlY3Rpb24ucHVzaChjaGlsZHJlbltwb3NpdGlvbnNbal1dKTtyZXR1cm4gY29sbGVjdGlvbn0sY2hpbGRDc3M6ZnVuY3Rpb24oaWRlbnRpZmllcj1cIlwiLHN0eWxlPXt9LHBvc2l0aW9ucz1bXSl7bGV0IGNoaWxkcmVuO3Bvc2l0aW9ucz10aGlzLnNldFBvc2l0aW9ucyhwb3NpdGlvbnMpO2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXtjaGlsZHJlbj10aGlzLmdldENoaWxkcmVuKGlkZW50aWZpZXIsdGhpcy5jaGlsZHJlbltpXSxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5jc3Moc3R5bGUpfWNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmVsZW1lbnQscG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0uY3NzKHN0eWxlKX0sc2V0Q2hpbGRQcm9wZXJ0aWVzOmZ1bmN0aW9uKGlkZW50aWZpZXI9XCJcIixwcm9wZXJ0aWVzPXt9LHBvc2l0aW9ucz1bXSl7bGV0IGNoaWxkcmVuO3Bvc2l0aW9ucz10aGlzLnNldFBvc2l0aW9ucyhwb3NpdGlvbnMpO2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXtjaGlsZHJlbj10aGlzLmdldENoaWxkcmVuKGlkZW50aWZpZXIsdGhpcy5jaGlsZHJlbltpXSxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5zZXRQcm9wZXJ0aWVzKHByb3BlcnRpZXMpfWNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmVsZW1lbnQscG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0uc2V0UHJvcGVydGllcyhwcm9wZXJ0aWVzKTt0aGlzLmNoaWxkUHJvcGVydGllc1tpZGVudGlmaWVyXT10aGlzLmNoaWxkUHJvcGVydGllc1tpZGVudGlmaWVyXXx8W10sdGhpcy5jaGlsZFByb3BlcnRpZXNbaWRlbnRpZmllcl0ucHVzaCh7cHJvcGVydGllczpwcm9wZXJ0aWVzLHBvc2l0aW9uczpwb3NpdGlvbnN9KX0sc2V0Q2hpbGRBdHRyaWJ1dGVzOmZ1bmN0aW9uKGlkZW50aWZpZXI9XCJcIixhdHRyaWJ1dGVzPXt9LHBvc2l0aW9ucz1cIlwiKXtsZXQgY2hpbGRyZW47cG9zaXRpb25zPXRoaXMuc2V0UG9zaXRpb25zKHBvc2l0aW9ucyk7Zm9yKGxldCBpPTA7aTx0aGlzLmNoaWxkcmVuLmxlbmd0aDtpKyspe2NoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmNoaWxkcmVuW2ldLHBvc2l0aW9ucyk7Zm9yKGxldCBqPTA7ajxjaGlsZHJlbi5sZW5ndGg7aisrKWNoaWxkcmVuW2pdLnNldEF0dHJpYnV0ZXMoYXR0cmlidXRlcyl9Y2hpbGRyZW49dGhpcy5nZXRDaGlsZHJlbihpZGVudGlmaWVyLHRoaXMuZWxlbWVudCxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5zZXRBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpfSxhZGRDbGFzc2VzVG9DaGlsZDpmdW5jdGlvbihpZGVudGlmaWVyPVwiXCIsY2xhc3Nlcz1cIlwiLHBvc2l0aW9ucz1bXSl7bGV0IGNoaWxkcmVuO3Bvc2l0aW9ucz10aGlzLnNldFBvc2l0aW9ucyhwb3NpdGlvbnMpO2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXtjaGlsZHJlbj10aGlzLmdldENoaWxkcmVuKGlkZW50aWZpZXIsdGhpcy5jaGlsZHJlbltpXSxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5hZGRDbGFzc2VzKGNsYXNzZXMpfWNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmVsZW1lbnQscG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0uYWRkQ2xhc3NlcyhjbGFzc2VzKX0scmVtb3ZlQ2xhc3Nlc0Zyb21DaGlsZDpmdW5jdGlvbihpZGVudGlmaWVyPVwiXCIsY2xhc3Nlcz1cIlwiLHBvc2l0aW9ucz1bXSl7bGV0IGNoaWxkcmVuO3Bvc2l0aW9ucz10aGlzLnNldFBvc2l0aW9ucyhwb3NpdGlvbnMpO2ZvcihsZXQgaT0wO2k8dGhpcy5jaGlsZHJlbi5sZW5ndGg7aSsrKXtjaGlsZHJlbj10aGlzLmdldENoaWxkcmVuKGlkZW50aWZpZXIsdGhpcy5jaGlsZHJlbltpXSxwb3NpdGlvbnMpO2ZvcihsZXQgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyljaGlsZHJlbltqXS5yZW1vdmVDbGFzc2VzKGNsYXNzZXMpfWNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oaWRlbnRpZmllcix0aGlzLmVsZW1lbnQscG9zaXRpb25zKTtmb3IobGV0IGo9MDtqPGNoaWxkcmVuLmxlbmd0aDtqKyspY2hpbGRyZW5bal0ucmVtb3ZlQ2xhc3NlcyhjbGFzc2VzKX19O3JldHVybiBzZWxmfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWxOb1lXUnZkeTVxY3lKZExDSnVZVzFsY3lJNld5Sm1kVzVqSWl3aWNtVnhkV2x5WlNJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSmxiR1Z0Wlc1MElpd2ljMlZzWmlJc0ltTnNiMjVsVG05a1pTSXNJbU5vYVd4a2NtVnVJaXdpY0hKdmNHVnlkR2xsY3lJc0ltTm9hV3hrVUhKdmNHVnlkR2xsY3lJc0luVndaR0YwWlU1bGQwVnNaVzFsYm5SRGFHbHNaRkJ5YjNCbGNuUnBaWE1pTENKd2NtOXdaWEowZVVOdmJHeGxZM1JwYjI0aUxDSndiM05wZEdsdmJuTWlMQ0pwWkdWdWRHbG1hV1Z5SWl3aWRHaHBjeUlzSW5ObGRGQnZjMmwwYVc5dWN5SXNJbWRsZEVOb2FXeGtjbVZ1SWl3aWFpSXNJbXhsYm1kMGFDSXNJbk5sZEZCeWIzQmxjblJwWlhNaUxDSjFjR1JoZEdWT1pYZEZiR1Z0Wlc1MFEyaHBiR1JCZEhSeWFXSjFkR1Z6SWl3aVlYUjBjbWxpZFhSbFEyOXNiR1ZqZEdsdmJpSXNJbU5vYVd4a1FYUnljbWxpZFhSbGN5SXNJbk5sZEVGMGRISnBZblYwWlhNaUxDSmhkSFJ5YVdKMWRHVnpJaXdpUVhKeVlYa2lMQ0pwYzBGeWNtRjVJaXdpY21GdVoyVWlMQ0pqY21WaGRHVkZiR1Z0Wlc1MElpd2ljR0Z5WVcxeklpd2lZMmhwYkdSRVpYUmhhV3h6SWl3aVpHVjBZV2xzY3lJc0luQjFjMmdpTENKd2NtVndZWEpsUld4bGJXVnVkQ0lzSW5WdVpHVm1hVzVsWkNJc0ltMWhhMlZEYkc5dVpXRmliR1VpTENKeVpXMXZkbVZGYkdWdFpXNTBJaXdpY0c5emFYUnBiMjRpTENKcGJtUmxlRTltSWl3aWFTSXNJbXhsYm1kMElpd2lZMnh2Ym1WRmJHVnRaVzUwSWl3aWRXNXBkRU5zYjI1bElpd2lZM056SWl3aWMzUjViR1VpTENKaFpHUkRiR0Z6YzJWeklpd2lZMnhoYzNObGN5SXNJbkpsYlc5MlpVTnNZWE56WlhNaUxDSmpiMnhzWldOMGFXOXVJaXdpWm1sdVpFRnNiQ0lzSW1Ob2FXeGtRM056SWl3aWMyVjBRMmhwYkdSUWNtOXdaWEowYVdWeklpd2ljMlYwUTJocGJHUkJkSFJ5YVdKMWRHVnpJaXdpWVdSa1EyeGhjM05sYzFSdlEyaHBiR1FpTENKeVpXMXZkbVZEYkdGemMyVnpSbkp2YlVOb2FXeGtJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkRRU3hKUVVGSlFTeFRRVUZCUVN4RFFVRlBMRWxCUkVWRExGRkJRVkVzUTBGQlFTeERRVzFSY2tKRExHVkJRVTlETEVOQmFGRlFMRk5CUVdkQ1F5eFBRVUZCUVN4RFFVRkJRU3hEUVVOYUxFbEJRVWxETEVsQlFVRkJMRU5CUVU4c1EwRkJSVVFzVDBGQlFVRXNRMEZCVTBFc1QwRkJRVUVzUTBGQlVVVXNVMEZCUVVFc1EwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVRXNRMEZCVDBNc1VVRkJRVUVzUTBGQlZTeERRVUZEU0N4UFFVRkJRU3hEUVVGQlFTeERRVUZWU1N4VlFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlNVTXNaVUZCUVVFc1EwRkJhVUlzUlVGQlFTeERRVVZ5UjBNc0swSkJRVUZCTEVOQlFYVkRMRk5CUVZWT0xFOUJRVUZCTEVOQlFWTlBMR3RDUVVGQlFTeERRVUZ4UWl4RlFVRkJMRU5CUVVFc1EwRkRNMFVzU1VGQlNVb3NVVUZCUVVFc1EwRkJWVXNzVTBGQlFVRXNRMEZEWkN4SlFVRkxMRWxCUVVsRExGVkJRVUZCTEVsQlFXTkdMR3RDUVVGQlFTeERRVU51UWl4SlFVRkxMRWxCUVVsR0xHVkJRVUZCTEVsQlFXMUNSU3hyUWtGQlFVRXNRMEZCYlVKRkxGVkJRVUZCTEVOQlFVRkJMRU5CUVdFc1EwRkRlRVJFTEZOQlFVRkJMRU5CUVZsRkxFbEJRVUZCTEVOQlFVdERMRmxCUVVGQkxFTkJRV0ZPTEdWQlFVRkJMRU5CUVdkQ1J5eFRRVUZCUVN4RFFVRkJRU3hEUVVNNVEwd3NVVUZCUVVFc1EwRkJWMDhzU1VGQlFVRXNRMEZCUzBVc1YwRkJRVUVzUTBGQldVZ3NWVUZCUVVFc1EwRkJXVlFzVDBGQlFVRXNRMEZCVTFFc1UwRkJRVUVzUTBGQlFVRXNRMEZEYWtRc1NVRkJTeXhKUVVGSlN5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1ZZc1VVRkJRVUVzUTBGQlUxY3NUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRha05XTEZGQlFVRkJMRU5CUVZOVkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRkxHRkJRVUZCTEVOQlFXTldMR1ZCUVVGQkxFTkJRV2RDUkN4VlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVUweFJGa3NLMEpCUVVGQkxFTkJRWFZETEZOQlFWVm9RaXhQUVVGQlFTeERRVUZUYVVJc2JVSkJRVUZCTEVOQlFYTkNMRVZCUVVFc1EwRkJRU3hEUVVNMVJTeEpRVUZKWkN4UlFVRkJRU3hEUVVGVlN5eFRRVUZCUVN4RFFVTmtMRWxCUVVzc1NVRkJTVU1zVlVGQlFVRXNTVUZCWTFFc2JVSkJRVUZCTEVOQlEyNUNMRWxCUVVzc1NVRkJTVU1zWlVGQlFVRXNTVUZCYlVKRUxHMUNRVUZCUVN4RFFVRnZRbElzVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVONlJFUXNVMEZCUVVFc1EwRkJXVVVzU1VGQlFVRXNRMEZCUzBNc1dVRkJRVUVzUTBGQllVOHNaVUZCUVVFc1EwRkJaMEpXTEZOQlFVRkJMRU5CUVVGQkxFTkJRemxEVEN4UlFVRkJRU3hEUVVGWFR5eEpRVUZCUVN4RFFVRkxSU3hYUVVGQlFTeERRVUZaU0N4VlFVRkJRU3hEUVVGWlZDeFBRVUZCUVN4RFFVRlRVU3hUUVVGQlFTeERRVUZCUVN4RFFVTnFSQ3hKUVVGTExFbEJRVWxMTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpWaXhSUVVGQlFTeERRVUZUVnl4TlFVRkJRU3hEUVVGUlJDeERRVUZCUVN4RlFVRkJRU3hEUVVOcVExWXNVVUZCUVVFc1EwRkJVMVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMDBzWVVGQlFVRXNRMEZCWTBRc1pVRkJRVUVzUTBGQlowSkZMRlZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUVEZFVkN4WlFVRkJRU3hEUVVGdlFpeFRRVUZWU0N4VFFVRkJRU3hEUVVGWkxFTkJRVUVzUTBGQlFTeERRVXQwUXl4UFFVcExZU3hMUVVGQlFTeERRVUZOUXl4UFFVRkJRU3hEUVVGUlpDeFRRVUZCUVN4RFFVRkJRU3hIUVVObVFTeFRRVUZCUVN4RFFVRlpXaXhUUVVGQlFTeERRVUZMTWtJc1MwRkJRVUVzUTBGQlRXWXNVMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY0VKQkxGTkJRVUZCTEVOQlFVRkJMRU5CUjFoblFpeGhRVUZCUVN4RFFVRnhRaXhUUVVGVlF5eE5RVUZCUVN4RFFVRlRMRU5CUVVWRExGbEJRVUZCTEVOQlFXTXNRMEZCUlU0c1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVbG9RaXhWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRk5kVUlzVDBGQlFVRXNRMEZCVXl4RFFVRkZVQ3hWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCU1doQ0xGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVNdlNDeEpRVUZKU2l4UFFVRkJRU3hEUVVGVlZTeEpRVUZCUVN4RFFVRkxWaXhQUVVGQlFTeERRVUZSUlN4VFFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUVN4RFFVbHlReXhQUVVoQlVTeEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUZVVJc1NVRkJRVUVzUTBGQlN6VkNMRTlCUVVGQkxFTkJRVUZCTEVOQlJXNUNWU3hKUVVGQlFTeERRVUZMYlVJc1kwRkJRVUVzUTBGQlpUZENMRTlCUVVGQkxFTkJRVk41UWl4TlFVRkJRU3hEUVVGQlFTeERRVU4wUW5wQ0xFOUJRVUZCTEVOQlFVRkJMRU5CUjFnMlFpeGpRVUZCUVN4RFFVRnpRaXhUUVVGVk4wSXNUMEZCUVVFc1EwRkJVM2xDTEUxQlFVRkJMRU5CUVZNc1EwRkJSVU1zV1VGQlFVRXNRMEZCWXl4RFFVRkZUaXhWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCU1doQ0xGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVUxMVFpeFBRVUZCUVN4RFFVRlRMRU5CUVVWUUxGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkphRUlzVlVGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRemxITUVJc1NVRkJRVUVzUlVGQmRrSk1MRTFCUVVGQkxFTkJRVTlETEZsQlFVRkJMRWRCUXl0Q1NTeEpRVUZCUVN4RlFVRnNRMHdzVFVGQlFVRXNRMEZCVDBNc1dVRkJRVUVzUTBGQllVNHNWVUZCUVVFc1JVRkRjRUpXTEVsQlFVRkJMRU5CUVV0TkxDdENRVUZCUVN4RFFVRm5RMmhDTEU5QlFVRkJMRU5CUVZONVFpeE5RVUZCUVN4RFFVRlBReXhaUVVGQlFTeERRVUZoVGl4VlFVRkJRU3hEUVVGQlFTeERRVWRvUTFVc1NVRkJRVUVzUlVGQmJFTk1MRTFCUVVGQkxFTkJRVTlETEZsQlFVRkJMRU5CUVdGMFFpeFZRVUZCUVN4RlFVTndRazBzU1VGQlFVRXNRMEZCUzBvc0swSkJRVUZCTEVOQlFXZERUaXhQUVVGQlFTeERRVUZUZVVJc1RVRkJRVUVzUTBGQlQwTXNXVUZCUVVFc1EwRkJZWFJDTEZWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYQkVNRUlzU1VGQlFVRXNSVUZCYkVKTUxFMUJRVUZCTEVOQlFVOUZMRTlCUVVGQkxFZEJRekJDUnl4SlFVRkJRU3hGUVVFM1Frd3NUVUZCUVVFc1EwRkJUMFVzVDBGQlFVRXNRMEZCVVZBc1ZVRkJRVUVzUlVGRFpuQkNMRTlCUVVGQkxFTkJRVkZ0UWl4aFFVRkJRU3hEUVVGalRTeE5RVUZCUVN4RFFVRlBSU3hQUVVGQlFTeERRVUZSVUN4VlFVRkJRU3hEUVVGQlFTeERRVWRTVlN4SlFVRkJRU3hGUVVFM1Frd3NUVUZCUVVFc1EwRkJUMFVzVDBGQlFVRXNRMEZCVVhaQ0xGVkJRVUZCTEVWQlEyWktMRTlCUVVGQkxFTkJRVkZsTEdGQlFVRkJMRU5CUVdOVkxFMUJRVUZCTEVOQlFVOUZMRTlCUVVGQkxFTkJRVkYyUWl4VlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVazNRMDBzU1VGQlFVRXNRMEZCUzBvc0swSkJRVUZCTEVOQlFXZERUaXhQUVVGQlFTeERRVUZUVlN4SlFVRkJRU3hEUVVGTFRDeGxRVUZCUVN4RFFVRkJRU3hEUVVOdVJFd3NUMEZCUVVFc1EwRkJVV1VzWVVGQlFVRXNRMEZCWTB3c1NVRkJRVUVzUTBGQlMwNHNWVUZCUVVFc1EwRkJRVUVzUTBGRk0wSk5MRWxCUVVGQkxFTkJRVXR4UWl4aFFVRkJRU3hEUVVGakwwSXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIZGtKblF5eGhRVUZCUVN4RFFVRnhRaXhUUVVGVmFFTXNUMEZCUVVFc1EwRkJRVUVzUTBGRE0wSXNTVUZCU1Vjc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlExZzRRaXhSUVVGQlFTeERRVUZYZGtJc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJVeXRDTEU5QlFVRkJMRU5CUVZGc1F5eFBRVUZCUVN4RFFVRkJRU3hEUVVOeVF5eEpRVUZMTEVsQlFVbHRReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYcENMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZOcFF5eExRVUZCUVN4RFFVRlBSQ3hEUVVGQlFTeEZRVUZCUVN4RFFVTnFRMFlzVVVGQlFVRXNSVUZCV1VVc1EwRkJRVUVzUlVGRFdtaERMRkZCUVVGQkxFTkJRVk41UWl4SlFVRkJRU3hEUVVGTGJFSXNTVUZCUVVFc1EwRkJTMUFzVVVGQlFVRXNRMEZCVTJkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0JEZWtJc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJWMEVzVVVGQlFVRXNRMEZCUVVFc1EwRkhjRUpyUXl4WlFVRkJRU3hEUVVGdlFpeFRRVUZWU2l4UlFVRkJRU3hEUVVGVlVpeE5RVUZCUVN4RFFVRlRMRU5CUVVWRExGbEJRVUZCTEVOQlFXTXNRMEZCUlU0c1ZVRkJRVUVzUTBGQldTeEZRVUZCTEVOQlFVbG9RaXhWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRk5kVUlzVDBGQlFVRXNRMEZCVXl4RFFVRkZVQ3hWUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCU1doQ0xGVkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVONFNTeEpRVUZKU2l4UFFVRkJRU3hEUVVGVlZTeEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUT0VJc1VVRkJRVUVzUTBGQlFVRXNRMEZCVlM5Q0xGTkJRVUZCTEVOQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGQkxFTkJTV2hFTEU5QlNFRlJMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZONVFpeEpRVUZCUVN4RFFVRkxOVUlzVDBGQlFVRXNRMEZCUVVFc1EwRkZia0pWTEVsQlFVRkJMRU5CUVV0dFFpeGpRVUZCUVN4RFFVRmxOMElzVDBGQlFVRXNRMEZCVTNsQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUTNSQ2VrSXNUMEZCUVVFc1EwRkJRVUVzUTBGSFdDdENMR0ZCUVVGQkxFTkJRWEZDTEZOQlFWVXZRaXhQUVVGQlFTeERRVUZCUVN4RFFVTXpRaXhKUVVGSmFVTXNVVUZCUVVFc1EwRkJWM1pDTEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTXJRaXhQUVVGQlFTeERRVUZSYkVNc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRjRUlzUTBGQlFTeEZRVUZpYVVNc1VVRkJRVUVzUjBGSlNtcERMRTlCUVVGQkxFTkJRVkZ6UXl4VFFVRkJRU3hGUVVGaFlpeE5RVUZCUVN4RlFVTldaaXhKUVVGQlFTeERRVUZMTWtJc1dVRkJRVUVzUTBGQllVb3NVVUZCUVVFc1EwRkJWVklzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpNME5ZTEUxQlFVRkJMRU5CUVdNc1ZVRkJRU3hEUVVOV0xFOUJRVTlLTEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTlhMRTFCUVVGQkxFTkJRVUZCTEVOQlIzcENReXhoUVVGQlFTeERRVUZ4UWl4VFFVRlZXQ3hWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCUVN4RFFVTjRReXhKUVVGTExFbEJRVWtyUWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWHBDTEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTlhMRTFCUVVGQkxFTkJRVkZ4UWl4RFFVRkJRU3hGUVVGQlFTeERRVU4wUTNwQ0xFbEJRVUZCTEVOQlFVdFFMRkZCUVVGQkxFTkJRVk5uUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIY0VJc1lVRkJRVUVzUTBGQlkxZ3NWVUZCUVVFc1EwRkJRVUVzUTBGRmJrTk5MRWxCUVVGQkxFTkJRVXRXTEU5QlFVRkJMRU5CUVZGbExHRkJRVUZCTEVOQlFXTllMRlZCUVVGQkxFTkJRVUZCTEVOQlF6TkNMRWxCUVVzc1NVRkJTU3RDTEVOQlFVRkJMRWxCUVVzdlFpeFZRVUZCUVN4RFFVTldUU3hKUVVGQlFTeERRVUZMVGl4VlFVRkJRU3hEUVVGWEswSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN5OUNMRlZCUVVGQkxFTkJRVmNyUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbDRRMGtzUjBGQlFVRXNRMEZCVnl4VFFVRlZReXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUVN4RFFVTjZRaXhKUVVGTExFbEJRVWxNTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpla0lzU1VGQlFVRXNRMEZCUzFBc1VVRkJRVUVzUTBGQlUxY3NUVUZCUVVFc1EwRkJVWEZDTEVOQlFVRkJMRVZCUVVGQkxFTkJRM1JEZWtJc1NVRkJRVUVzUTBGQlMxQXNVVUZCUVVFc1EwRkJVMmRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRKTEVkQlFVRkJMRU5CUVVsRExFdEJRVUZCTEVOQlFVRkJMRU5CUlhwQ09VSXNTVUZCUVVFc1EwRkJTMVlzVDBGQlFVRXNRMEZCVVhWRExFZEJRVUZCTEVOQlFVbERMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNKQ2NrSXNZVUZCUVVFc1EwRkJjVUlzVTBGQlZVTXNWVUZCUVVFc1EwRkJZU3hGUVVGQkxFTkJRVUVzUTBGRGVFTXNTVUZCU3l4SlFVRkpaU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYcENMRWxCUVVGQkxFTkJRVXRRTEZGQlFVRkJMRU5CUVZOWExFMUJRVUZCTEVOQlFWRnhRaXhEUVVGQlFTeEZRVUZCUVN4RFFVTjBRM3BDTEVsQlFVRkJMRU5CUVV0UUxGRkJRVUZCTEVOQlFWTm5ReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhhRUlzWVVGQlFVRXNRMEZCWTBNc1ZVRkJRVUVzUTBGQlFVRXNRMEZGYmtOV0xFbEJRVUZCTEVOQlFVdFdMRTlCUVVGQkxFTkJRVkZ0UWl4aFFVRkJRU3hEUVVGalF5eFZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWN2UW5GQ0xGVkJRVUZCTEVOQlFXdENMRk5CUVZWRExFOUJRVUZCTEVOQlFWVXNSVUZCUVN4RFFVRkJMRU5CUTJ4RExFbEJRVXNzU1VGQlNWQXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsNlFpeEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUVnl4TlFVRkJRU3hEUVVGUmNVSXNRMEZCUVVFc1JVRkJRVUVzUTBGRGRFTjZRaXhKUVVGQlFTeERRVUZMVUN4UlFVRkJRU3hEUVVGVFowTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwMHNWVUZCUVVFc1EwRkJWME1zVDBGQlFVRXNRMEZCUVVFc1EwRkZhRU5vUXl4SlFVRkJRU3hEUVVGTFZpeFBRVUZCUVN4RFFVRlJlVU1zVlVGQlFVRXNRMEZCVjBNc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhOVUpETEdGQlFVRkJMRU5CUVhGQ0xGTkJRVlZFTEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVGQkxFTkJRM0pETEVsQlFVc3NTVUZCU1ZBc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWw2UWl4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSY1VJc1EwRkJRVUVzUlVGQlFVRXNRMEZEZEVONlFpeEpRVUZCUVN4RFFVRkxVQ3hSUVVGQlFTeERRVUZUWjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjFFc1lVRkJRVUVzUTBGQlkwUXNUMEZCUVVFc1EwRkJRVUVzUTBGRmJrTm9ReXhKUVVGQlFTeERRVUZMVml4UFFVRkJRU3hEUVVGUk1rTXNZVUZCUVVFc1EwRkJZMFFzVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSEwwSTVRaXhYUVVGQlFTeERRVUZ0UWl4VFFVRlZTQ3hWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCU1ZRc1QwRkJRVUVzUTBGQlUxRXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGREwwUXNTVUZCU1c5RExGVkJRVUZCTEVOQlFXRXNSVUZCUVN4RFFVTmlla01zVVVGQlFVRXNRMEZCVjBnc1QwRkJRVUVzUTBGQlVUWkRMRTlCUVVGQkxFTkJRVkZ3UXl4VlFVRkJRU3hEUVVGQlFTeERRVU12UWl4SFFVRkpUaXhSUVVGQlFTeERRVUZUVnl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRGJFSXNTVUZCU3l4SlFVRkpSQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVd3NVMEZCUVVFc1EwRkJWVTBzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZEU21sQ0xFbEJRVUZCTEVWQlFURkNNMElzVVVGQlFVRXNRMEZCVTBzc1UwRkJRVUVzUTBGQlZVc3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZEYmtJclFpeFZRVUZCUVN4RFFVRlhhRUlzU1VGQlFVRXNRMEZCUzNwQ0xGRkJRVUZCTEVOQlFWTkxMRk5CUVVGQkxFTkJRVlZMTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1M5RExFOUJRVThyUWl4VlFVRkJRU3hEUVVGQlFTeERRVWRZUlN4UlFVRkJRU3hEUVVGblFpeFRRVUZWY2tNc1ZVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlFVa3JRaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCU1doRExGTkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUnk5RUxFbEJRVWxNTEZGQlFVRkJMRU5CUmtwTExGTkJRVUZCTEVOQlFWbEZMRWxCUVVGQkxFTkJRVXRETEZsQlFVRkJMRU5CUVdGSUxGTkJRVUZCTEVOQlFVRkJMRU5CUnpsQ0xFbEJRVXNzU1VGQlNUSkNMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVrSXNTVUZCUVVFc1EwRkJTMUFzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVYRkNMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3NRMEZETTBOb1F5eFJRVUZCUVN4RFFVRlhUeXhKUVVGQlFTeERRVUZMUlN4WFFVRkJRU3hEUVVGWlNDeFZRVUZCUVN4RFFVRlpReXhKUVVGQlFTeERRVUZMVUN4UlFVRkJRU3hEUVVGVFowTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNUTkNMRk5CUVVGQkxFTkJRVUZCTEVOQlJURkVMRWxCUVVzc1NVRkJTVXNzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFdMRkZCUVVGQkxFTkJRVk5YTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTJwRFZpeFJRVUZCUVN4RFFVRlRWU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhNRUlzUjBGQlFVRXNRMEZCU1VNc1MwRkJRVUVzUTBGQlFVRXNRMEZKZUVKeVF5eFJRVUZCUVN4RFFVRlhUeXhKUVVGQlFTeERRVUZMUlN4WFFVRkJRU3hEUVVGWlNDeFZRVUZCUVN4RFFVRlpReXhKUVVGQlFTeERRVUZMVml4UFFVRkJRU3hEUVVGVFVTeFRRVUZCUVN4RFFVRkJRU3hEUVVWMFJDeEpRVUZMTEVsQlFVbExMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU5xUTFZc1VVRkJRVUVzUTBGQlUxVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ6QkNMRWRCUVVGQkxFTkJRVWxETEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYaENUeXhyUWtGQlFVRXNRMEZCTUVJc1UwRkJWWFJETEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGSlRDeFZRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJTVWtzVTBGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUVVFc1EwRkhPVVVzU1VGQlNVd3NVVUZCUVVFc1EwRkdTa3NzVTBGQlFVRXNRMEZCV1VVc1NVRkJRVUVzUTBGQlMwTXNXVUZCUVVFc1EwRkJZVWdzVTBGQlFVRXNRMEZCUVVFc1EwRkhPVUlzU1VGQlN5eEpRVUZKTWtJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWw2UWl4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSY1VJc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTXpRMmhETEZGQlFVRkJMRU5CUVZkUExFbEJRVUZCTEVOQlFVdEZMRmRCUVVGQkxFTkJRVmxJTEZWQlFVRkJMRU5CUVZsRExFbEJRVUZCTEVOQlFVdFFMRkZCUVVGQkxFTkJRVk5uUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZKTTBJc1UwRkJRVUVzUTBGQlFVRXNRMEZGTVVRc1NVRkJTeXhKUVVGSlN5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1ZZc1VVRkJRVUVzUTBGQlUxY3NUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRha05XTEZGQlFVRkJMRU5CUVZOVkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRkxHRkJRVUZCTEVOQlFXTllMRlZCUVVGQkxFTkJRVUZCTEVOQlNXeERSQ3hSUVVGQlFTeERRVUZYVHl4SlFVRkJRU3hEUVVGTFJTeFhRVUZCUVN4RFFVRlpTQ3hWUVVGQlFTeERRVUZaUXl4SlFVRkJRU3hEUVVGTFZpeFBRVUZCUVN4RFFVRlRVU3hUUVVGQlFTeERRVUZCUVN4RFFVTjBSQ3hKUVVGTExFbEJRVWxMTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpWaXhSUVVGQlFTeERRVUZUVnl4TlFVRkJRU3hEUVVGUlJDeERRVUZCUVN4RlFVRkJRU3hEUVVOcVExWXNVVUZCUVVFc1EwRkJVMVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMFVzWVVGQlFVRXNRMEZCWTFnc1ZVRkJRVUVzUTBGQlFVRXNRMEZIT1VKTkxFbEJRVUZCTEVOQlFVdE1MR1ZCUVVGQkxFTkJRV2RDU1N4VlFVRkJRU3hEUVVGQlFTeERRVUZqUXl4SlFVRkJRU3hEUVVGTFRDeGxRVUZCUVN4RFFVRm5Ra2tzVlVGQlFVRXNRMEZCUVVFc1JVRkJaU3hGUVVGQkxFTkJRM1pGUXl4SlFVRkJRU3hEUVVGTFRDeGxRVUZCUVN4RFFVRm5Ra2tzVlVGQlFVRXNRMEZCUVVFc1EwRkJXVzFDTEVsQlFVRkJMRU5CUVVzc1EwRkJSWGhDTEZWQlFVRkJMRU5CUVVGQkxGVkJRVUZCTEVOQlFWbEpMRk5CUVVGQkxFTkJRVUZCTEZOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNoRWQwTXNhMEpCUVVGQkxFTkJRVEJDTEZOQlFWVjJReXhWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCU1Zjc1ZVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlFVbGFMRk5CUVVGQkxFTkJRVmtzUlVGQlFTeERRVUZCTEVOQlJ6bEZMRWxCUVVsTUxGRkJRVUZCTEVOQlJrcExMRk5CUVVGQkxFTkJRVmxGTEVsQlFVRkJMRU5CUVV0RExGbEJRVUZCTEVOQlFXRklMRk5CUVVGQkxFTkJRVUZCTEVOQlJ6bENMRWxCUVVzc1NVRkJTVEpDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpla0lzU1VGQlFVRXNRMEZCUzFBc1VVRkJRVUVzUTBGQlUxY3NUVUZCUVVFc1EwRkJVWEZDTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXNzUTBGRE0wTm9ReXhSUVVGQlFTeERRVUZYVHl4SlFVRkJRU3hEUVVGTFJTeFhRVUZCUVN4RFFVRlpTQ3hWUVVGQlFTeERRVUZaUXl4SlFVRkJRU3hEUVVGTFVDeFJRVUZCUVN4RFFVRlRaME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJTVE5DTEZOQlFVRkJMRU5CUVVGQkxFTkJSVEZFTEVsQlFVc3NTVUZCU1Vzc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxXTEZGQlFVRkJMRU5CUVZOWExFMUJRVUZCTEVOQlFWRkVMRU5CUVVGQkxFVkJRVUZCTEVOQlEycERWaXhSUVVGQlFTeERRVUZUVlN4RFFVRkJRU3hEUVVGQlFTeERRVUZIVFN4aFFVRkJRU3hEUVVGalF5eFZRVUZCUVN4RFFVRkJRU3hEUVVsc1EycENMRkZCUVVGQkxFTkJRVmRQTEVsQlFVRkJMRU5CUVV0RkxGZEJRVUZCTEVOQlFWbElMRlZCUVVGQkxFTkJRVmxETEVsQlFVRkJMRU5CUVV0V0xFOUJRVUZCTEVOQlFWTlJMRk5CUVVGQkxFTkJRVUZCTEVOQlJYUkVMRWxCUVVzc1NVRkJTVXNzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFdMRkZCUVVGQkxFTkJRVk5YTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTJwRFZpeFJRVUZCUVN4RFFVRlRWU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhUU3hoUVVGQlFTeERRVUZqUXl4VlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbHNRelpDTEdsQ1FVRkJRU3hEUVVGNVFpeFRRVUZWZUVNc1ZVRkJRVUVzUTBGQllTeEZRVUZCTEVOQlFVbHBReXhQUVVGQlFTeERRVUZWTEVWQlFVRXNRMEZCU1d4RExGTkJRVUZCTEVOQlFWa3NSVUZCUVN4RFFVRkJMRU5CUnpGRkxFbEJRVWxNTEZGQlFVRkJMRU5CUmtwTExGTkJRVUZCTEVOQlFWbEZMRWxCUVVGQkxFTkJRVXRETEZsQlFVRkJMRU5CUVdGSUxGTkJRVUZCTEVOQlFVRkJMRU5CUnpsQ0xFbEJRVXNzU1VGQlNUSkNMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVrSXNTVUZCUVVFc1EwRkJTMUFzVVVGQlFVRXNRMEZCVTFjc1RVRkJRVUVzUTBGQlVYRkNMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3NRMEZETTBOb1F5eFJRVUZCUVN4RFFVRlhUeXhKUVVGQlFTeERRVUZMUlN4WFFVRkJRU3hEUVVGWlNDeFZRVUZCUVN4RFFVRlpReXhKUVVGQlFTeERRVUZMVUN4UlFVRkJRU3hEUVVGVFowTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNUTkNMRk5CUVVGQkxFTkJRVUZCTEVOQlJURkVMRWxCUVVzc1NVRkJTVXNzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFdMRkZCUVVGQkxFTkJRVk5YTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTJwRFZpeFJRVUZCUVN4RFFVRlRWU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhORUlzVlVGQlFVRXNRMEZCVjBNc1QwRkJRVUVzUTBGQlFVRXNRMEZKTDBKMlF5eFJRVUZCUVN4RFFVRlhUeXhKUVVGQlFTeERRVUZMUlN4WFFVRkJRU3hEUVVGWlNDeFZRVUZCUVN4RFFVRlpReXhKUVVGQlFTeERRVUZMVml4UFFVRkJRU3hEUVVGVFVTeFRRVUZCUVN4RFFVRkJRU3hEUVVWMFJDeEpRVUZMTEVsQlFVbExMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU5xUTFZc1VVRkJRVUVzUTBGQlUxVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ6UkNMRlZCUVVGQkxFTkJRVmRETEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNTOUNVU3h6UWtGQlFVRXNRMEZCT0VJc1UwRkJWWHBETEZWQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGSmFVTXNUMEZCUVVFc1EwRkJWU3hGUVVGQkxFTkJRVWxzUXl4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlFTeERRVWN2UlN4SlFVRkpUQ3hSUVVGQlFTeERRVVpLU3l4VFFVRkJRU3hEUVVGWlJTeEpRVUZCUVN4RFFVRkxReXhaUVVGQlFTeERRVUZoU0N4VFFVRkJRU3hEUVVGQlFTeERRVWM1UWl4SlFVRkxMRWxCUVVreVFpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1hwQ0xFbEJRVUZCTEVOQlFVdFFMRkZCUVVGQkxFTkJRVk5YTEUxQlFVRkJMRU5CUVZGeFFpeERRVUZCUVN4RlFVRkJRU3hEUVVGTExFTkJRek5EYUVNc1VVRkJRVUVzUTBGQlYwOHNTVUZCUVVFc1EwRkJTMFVzVjBGQlFVRXNRMEZCV1Vnc1ZVRkJRVUVzUTBGQldVTXNTVUZCUVVFc1EwRkJTMUFzVVVGQlFVRXNRMEZCVTJkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVrelFpeFRRVUZCUVN4RFFVRkJRU3hEUVVVeFJDeEpRVUZMTEVsQlFVbExMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlZpeFJRVUZCUVN4RFFVRlRWeXhOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVU5xUTFZc1VVRkJRVUVzUTBGQlUxVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ6aENMR0ZCUVVGQkxFTkJRV05FTEU5QlFVRkJMRU5CUVVGQkxFTkJTV3hEZGtNc1VVRkJRVUVzUTBGQlYwOHNTVUZCUVVFc1EwRkJTMFVzVjBGQlFVRXNRMEZCV1Vnc1ZVRkJRVUVzUTBGQldVTXNTVUZCUVVFc1EwRkJTMVlzVDBGQlFVRXNRMEZCVTFFc1UwRkJRVUVzUTBGQlFVRXNRMEZGZEVRc1NVRkJTeXhKUVVGSlN5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1ZZc1VVRkJRVUVzUTBGQlUxY3NUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRha05XTEZGQlFVRkJMRU5CUVZOVkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjNFFpeGhRVUZCUVN4RFFVRmpSQ3hQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRzUXl4UFFVRlBla01zU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwibGV0IF9fYXJyYXlMaWJyYXJ5XzE3PV8kQXJyYXlMaWJyYXJ5XzE0KCk7dmFyIF8kT2JqZWN0c0xpYnJhcnlfMTc9ZnVuY3Rpb24oKXtsZXQgc2VsZj17c2l6ZTpvYmplY3Q9PntsZXQgYnl0ZXM9MDtpZihcInN0cmluZ1wiPT10eXBlb2Ygb2JqZWN0KWJ5dGVzKz0yKm9iamVjdC5sZW5ndGg7ZWxzZSBpZihcIm51bWJlclwiPT10eXBlb2Ygb2JqZWN0KWJ5dGVzKz04O2Vsc2UgaWYoXCJib29sZWFuXCI9PXR5cGVvZiBvYmplY3QpYnl0ZXMrPTQ7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2Ygb2JqZWN0KWZvcihsZXQgaSBpbiBvYmplY3QpYnl0ZXMrPXJvdWdoT2JqZWN0U2l6ZShvYmplY3RbaV0pO3JldHVybiBieXRlc30sZXh0cmFjdEZyb21Kc29uQXJyYXk6KG1ldGEsc291cmNlKT0+e2xldCBrZXlzPU9iamVjdC5rZXlzKG1ldGEpLHZhbHVlcz1PYmplY3QudmFsdWVzKG1ldGEpLGVTb3VyY2U9W107aWYobnVsbCE9c291cmNlKWZvcihsZXQgb2JqIG9mIHNvdXJjZSl7bGV0IG9iamVjdD17fTtmb3IobGV0IGkgaW4ga2V5cylfX2FycmF5TGlicmFyeV8xNy5jb250YWlucyhPYmplY3Qua2V5cyhvYmopLHZhbHVlc1tpXSkmJihvYmplY3Rba2V5c1tpXV09b2JqW3ZhbHVlc1tpXV0pO2VTb3VyY2UucHVzaChvYmplY3QpfXJldHVybiBlU291cmNlfSxmaW5kOihvYmosY2FsbGJhY2spPT57Zm9yKGxldCBpIGluIG9iailpZigxPT1jYWxsYmFjayhvYmpbaV0pKXJldHVybiBvYmpbaV19LGZpbmRBbGw6KG9iaixjYWxsYmFjayk9PntsZXQgdmFsdWVzPXt9O2ZvcihsZXQgaSBpbiBvYmopMT09Y2FsbGJhY2sob2JqW2ldKSYmKHZhbHVlc1tpXT1vYmpbaV0pO3JldHVybiB2YWx1ZXN9fTtyZXR1cm4gc2VsZi5tYWtlSXRlcmFibGU9KG9iaj0+KG9ialtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKigpe2xldCBwcm9wZXJ0aWVzPU9iamVjdC5rZXlzKG9iaik7Zm9yKGxldCBwIG9mIHByb3BlcnRpZXMpeWllbGQgdGhpc1twXX0sb2JqKSksc2VsZi5tYXg9KG9iamVjdD0+KG9iamVjdD1zZWxmLnNvcnQob2JqZWN0LHt2YWx1ZTohMH0pLHNlbGYuZ2V0SW5kZXgob2JqZWN0KSkpLHNlbGYubWluPShvYmplY3Q9PihvYmplY3Q9c2VsZi5zb3J0KG9iamVjdCx7dmFsdWU6ITF9KSxzZWxmLmdldEluZGV4KG9iamVjdCkpKSxzZWxmLm9uQ2hhbmdlZD0oKG9iaixjYWxsYmFjayk9Pntjb25zdCBoYW5kbGVyPXtnZXQodGFyZ2V0LHByb3BlcnR5LHJlY2VpdmVyKXt0cnl7cmV0dXJuIG5ldyBQcm94eSh0YXJnZXRbcHJvcGVydHldLGhhbmRsZXIpfWNhdGNoKGVycil7cmV0dXJuIFJlZmxlY3QuZ2V0KHRhcmdldCxwcm9wZXJ0eSxyZWNlaXZlcil9fSxkZWZpbmVQcm9wZXJ0eToodGFyZ2V0LHByb3BlcnR5LGRlc2NyaXB0b3IpPT4oY2FsbGJhY2sodGFyZ2V0LHByb3BlcnR5KSxSZWZsZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxwcm9wZXJ0eSxkZXNjcmlwdG9yKSksZGVsZXRlUHJvcGVydHk6KHRhcmdldCxwcm9wZXJ0eSk9PihjYWxsYmFjayh0YXJnZXQscHJvcGVydHkpLFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LHByb3BlcnR5KSl9O3JldHVybiBuZXcgUHJveHkob2JqLGhhbmRsZXIpfSksc2VsZi50b0FycmF5PSgob2JqZWN0LG5hbWVkKT0+e3ZhciBhcnJheT1bXTtyZXR1cm4gT2JqZWN0LmtleXMob2JqZWN0KS5tYXAoa2V5PT57MT09bmFtZWQ/YXJyYXlba2V5XT1vYmplY3Rba2V5XTphcnJheS5wdXNoKG9iamVjdFtrZXldKX0pLGFycmF5fSksc2VsZi52YWx1ZU9mT2JqZWN0QXJyYXk9KChhcnJheSxuYW1lKT0+e3ZhciBuZXdBcnJheT1bXTtmb3IobGV0IGkgaW4gYXJyYXkpbmV3QXJyYXkucHVzaChhcnJheVtpXVtuYW1lXSk7cmV0dXJuIG5ld0FycmF5fSksc2VsZi5rZXlzT2ZPYmplY3RBcnJheT0oKGFycmF5PVtdKT0+e3ZhciBuZXdBcnJheT1bXTtmb3IobGV0IGkgaW4gYXJyYXkpbmV3QXJyYXk9bmV3QXJyYXkuY29uY2F0KE9iamVjdC5rZXlzKGFycmF5W2ldKSk7cmV0dXJuIF9fYXJyYXlMaWJyYXJ5XzE3LnRvU2V0KG5ld0FycmF5KX0pLHNlbGYub2JqZWN0T2ZPYmplY3RBcnJheT0oKGFycmF5PVtdLGlkLG5hbWUpPT57dmFyIG9iamVjdD17fTtmb3IobGV0IGkgaW4gYXJyYXkpb2JqZWN0W2FycmF5W2ldW2lkXV09YXJyYXlbaV1bbmFtZV07cmV0dXJuIG9iamVjdH0pLHNlbGYuY29weT0oKGZyb20sdG8pPT57T2JqZWN0LmtleXMoZnJvbSkubWFwKGtleT0+e3RvW2tleV09ZnJvbVtrZXldfSl9KSxzZWxmLmZvckVhY2g9KChvYmplY3QsY2FsbGJhY2spPT57Zm9yKGxldCBrZXkgaW4gb2JqZWN0KWNhbGxiYWNrKG9iamVjdFtrZXldLGtleSl9KSxzZWxmLmVhY2g9ZnVuY3Rpb24ob2JqZWN0LGNhbGxiYWNrKXtsZXQgbmV3T2JqZWN0PXt9O2ZvcihsZXQga2V5IGluIG9iamVjdCluZXdPYmplY3Rba2V5XT1jYWxsYmFjayhvYmplY3Rba2V5XSxrZXkpO3JldHVybiBuZXdPYmplY3R9LHNlbGYuaXNTdWJPYmplY3Q9KChkYXRhLHNhbXBsZSk9PntsZXQgZmxhZztmb3IobGV0IG5hbWUgaW4gc2FtcGxlKWlmKCEoZmxhZz1KU09OLnN0cmluZ2lmeShzYW1wbGVbbmFtZV0pPT1KU09OLnN0cmluZ2lmeShkYXRhW25hbWVdKSkpYnJlYWs7cmV0dXJuIGZsYWd9KSxzZWxmLmdldFN1Yk9iamVjdD0oKGRhdGE9W10sc2FtcGxlPXt9KT0+e2xldCBtYXRjaGVkPVtdLGZsYWc9ITA7Zm9yKGxldCBpIGluIGRhdGEpKGZsYWc9c2VsZi5pc1N1Yk9iamVjdChkYXRhW2ldLHNhbXBsZSkpJiZtYXRjaGVkLnB1c2goZGF0YVtpXSk7cmV0dXJuIG1hdGNoZWR9KSxzZWxmLnNvcnQ9KChkYXRhPXt9LHBhcmFtcz17aXRlbXM6W10sZGVzY2VuZDohMSxrZXk6ITEsdmFsdWU6ITF9KT0+e3BhcmFtcy5pdGVtPXBhcmFtcy5pdGVtfHxcIlwiLHBhcmFtcy5kZXNjZW5kPXBhcmFtcy5kZXNjZW5kfHwhMTtsZXQgc29ydGVkPVtdLG5EYXRhPXt9O2ZvcihsZXRba2V5LHZhbHVlXW9mIE9iamVjdC5lbnRyaWVzKGRhdGEpKXNvcnRlZC5wdXNoKHtrZXk6a2V5LHZhbHVlOnZhbHVlfSk7bnVsbCE9cGFyYW1zLmtleSYmKGNvbnNvbGUubG9nKFwiSGVsbG9cIiksc29ydGVkLnNvcnQoKGEsYik9PntsZXQgdmFsdWU9YS5rZXk+PWIua2V5O3JldHVybiAxPT1wYXJhbXMua2V5JiYodmFsdWU9IXZhbHVlKSx2YWx1ZX0pKSxudWxsIT1wYXJhbXMudmFsdWUmJnNvcnRlZC5zb3J0KChhLGIpPT57bGV0IHZhbHVlPWEudmFsdWU+PWIudmFsdWU7cmV0dXJuIDE9PXBhcmFtcy52YWx1ZSYmKHZhbHVlPSF2YWx1ZSksdmFsdWV9KSxudWxsIT1wYXJhbXMuaXRlbXMmJnNvcnRlZC5zb3J0KChhLGIpPT57bGV0IGdyZWF0ZXI9MCxsZXNzZXI9MDtmb3IobGV0IGl0ZW0gb2YgcGFyYW1zLml0ZW1zKWEudmFsdWVbaXRlbV0+PWIudmFsdWVbaXRlbV0/Z3JlYXRlcisrOmxlc3NlcisrO2xldCB2YWx1ZT1ncmVhdGVyPj1sZXNzZXI7cmV0dXJuIDE9PXBhcmFtcy5kZXNjZW5kJiYodmFsdWU9IXZhbHVlKSx2YWx1ZX0pO2ZvcihsZXR7a2V5OmtleSx2YWx1ZTp2YWx1ZX1vZiBzb3J0ZWQpbkRhdGFba2V5XT12YWx1ZTtyZXR1cm4gbkRhdGF9KSxzZWxmLnJldmVyc2U9KChkYXRhPXt9KT0+e2xldCBrZXlzPU9iamVjdC5rZXlzKGRhdGEpLnJldmVyc2UoKSxuZXdPYmplY3Q9e307Zm9yKGxldCBpIG9mIGtleXMpbmV3T2JqZWN0W2ldPWRhdGFbaV07cmV0dXJuIG5ld09iamVjdH0pLHNlbGYuZ2V0SW5kZXg9KChkYXRhPXt9KT0+e2xldCBrZXk9T2JqZWN0LmtleXMoZGF0YSkuc2hpZnQoKTtyZXR1cm57a2V5OmtleSx2YWx1ZTpkYXRhW2tleV19fSksc2VsZi5nZXRMYXN0PSgoZGF0YT17fSk9PntsZXQga2V5PU9iamVjdC5rZXlzKGRhdGEpLnBvcCgpO3JldHVybntrZXk6a2V5LHZhbHVlOmRhdGFba2V5XX19KSxzZWxmLmdldEF0PSgoZGF0YT17fSxpbmRleCk9PntsZXQga2V5PU9iamVjdC5rZXlzKGRhdGEpW2luZGV4XTtyZXR1cm57a2V5OmtleSx2YWx1ZTpkYXRhW2tleV19fSksc2VsZi5rZXlPZj0oKGRhdGE9e30saXRlbSk9Pntmb3IobGV0IGkgaW4gZGF0YSlpZihKU09OLnN0cmluZ2lmeShkYXRhW2ldKT09SlNPTi5zdHJpbmdpZnkoaXRlbSkpcmV0dXJuIGk7cmV0dXJuLTF9KSxzZWxmLmxhc3RLZXlPZj0oKGRhdGE9e30saXRlbSk9PntsZXQgaW5kZXg9LTE7Zm9yKGxldCBpIGluIGRhdGEpSlNPTi5zdHJpbmdpZnkoZGF0YVtpXSk9PUpTT04uc3RyaW5naWZ5KGl0ZW0pJiYoaW5kZXg9aSk7cmV0dXJuIGluZGV4fSksc2VsZi5pbmNsdWRlcz0oKGRhdGE9e30saXRlbSk9Pi0xIT1zZWxmLmtleU9mKGRhdGEsaXRlbSkpLHNlbGZ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJazlpYW1WamRITk1hV0p5WVhKNUxtcHpJbDBzSW01aGJXVnpJanBiSW1GeWNtRjVUR2xpY21GeWVTSXNJbkpsY1hWcGNtVWlMQ0pCY25KaGVVeHBZbkpoY25raUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2ljMlZzWmlJc0luTnBlbVVpTENKdlltcGxZM1FpTENKaWVYUmxjeUlzSW14bGJtZDBhQ0lzSW1raUxDSnliM1ZuYUU5aWFtVmpkRk5wZW1VaUxDSmxlSFJ5WVdOMFJuSnZiVXB6YjI1QmNuSmhlU0lzSW0xbGRHRWlMQ0p6YjNWeVkyVWlMQ0pyWlhseklpd2lUMkpxWldOMElpd2lkbUZzZFdWeklpd2laVk52ZFhKalpTSXNJblZ1WkdWbWFXNWxaQ0lzSW05aWFpSXNJbU52Ym5SaGFXNXpJaXdpY0hWemFDSXNJbVpwYm1RaUxDSmpZV3hzWW1GamF5SXNJbVpwYm1SQmJHd2lMQ0p0WVd0bFNYUmxjbUZpYkdVaUxDSlRlVzFpYjJ3aUxDSnBkR1Z5WVhSdmNpSXNJbkJ5YjNCbGNuUnBaWE1pTENKd0lpd2lkR2hwY3lJc0ltMWhlQ0lzSW5OdmNuUWlMQ0oyWVd4MVpTSXNJbWRsZEVsdVpHVjRJaXdpYldsdUlpd2liMjVEYUdGdVoyVmtJaXdpYUdGdVpHeGxjaUlzSWx0dlltcGxZM1FnVDJKcVpXTjBYU0lzSW5SaGNtZGxkQ0lzSW5CeWIzQmxjblI1SWl3aWNtVmpaV2wyWlhJaUxDSlFjbTk0ZVNJc0ltVnljaUlzSWxKbFpteGxZM1FpTENKblpYUWlMQ0prWldacGJtVlFjbTl3WlhKMGVTSXNJbVJsYzJOeWFYQjBiM0lpTENKa1pXeGxkR1ZRY205d1pYSjBlU0lzSW5SdlFYSnlZWGtpTENKdVlXMWxaQ0lzSW1GeWNtRjVJaXdpYldGd0lpd2lhMlY1SWl3aWRtRnNkV1ZQWms5aWFtVmpkRUZ5Y21GNUlpd2libUZ0WlNJc0ltNWxkMEZ5Y21GNUlpd2lhMlY1YzA5bVQySnFaV04wUVhKeVlYa2lMQ0pqYjI1allYUWlMQ0owYjFObGRDSXNJbTlpYW1WamRFOW1UMkpxWldOMFFYSnlZWGtpTENKcFpDSXNJbU52Y0hraUxDSm1jbTl0SWl3aWRHOGlMQ0ptYjNKRllXTm9JaXdpWldGamFDSXNJbTVsZDA5aWFtVmpkQ0lzSW1selUzVmlUMkpxWldOMElpd2laR0YwWVNJc0luTmhiWEJzWlNJc0ltWnNZV2NpTENKS1UwOU9JaXdpYzNSeWFXNW5hV1o1SWl3aVoyVjBVM1ZpVDJKcVpXTjBJaXdpYldGMFkyaGxaQ0lzSW5CaGNtRnRjeUlzSW1sMFpXMXpJaXdpWkdWelkyVnVaQ0lzSW1sMFpXMGlMQ0p6YjNKMFpXUWlMQ0p1UkdGMFlTSXNJbVZ1ZEhKcFpYTWlMQ0pqYjI1emIyeGxJaXdpYkc5bklpd2lZU0lzSW1JaUxDSm5jbVZoZEdWeUlpd2liR1Z6YzJWeUlpd2ljbVYyWlhKelpTSXNJbk5vYVdaMElpd2laMlYwVEdGemRDSXNJbkJ2Y0NJc0ltZGxkRUYwSWl3aWFXNWtaWGdpTENKclpYbFBaaUlzSW14aGMzUkxaWGxQWmlJc0ltbHVZMngxWkdWeklsMHNJbTFoY0hCcGJtZHpJam9pUVVGRFFTeEpRVUZKUVN4cFFrRkJRVUVzUTBGRWFVSkRMR2xDUVVOR1F5eEZRVUZCUVN4RFFUSlNia0pETEhWQ1FVRlBReXhEUVhwU1VDeFZRVUZCTEVOQlEwa3NTVUZCU1VNc1NVRkJRVUVzUTBGQlR5eERRVVZZUXl4SlFVRkJRU3hEUVVGaFF5eE5RVUZCUVN4RlFVRkJRU3hEUVVOVUxFbEJRVWxETEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVOYUxFZEJRWEZDTEZGQlFVRXNSVUZCUVN4UFFVRldSQ3hOUVVGQlFTeERRVU5RUXl4TFFVRkJRU3hGUVVGNVFpeERRVUZCTEVOQlFXaENSQ3hOUVVGQlFTeERRVUZQUlN4TlFVRkJRU3hEUVVGQlFTeExRVVZtTEVkQlFYRkNMRkZCUVVFc1JVRkJRU3hQUVVGV1JpeE5RVUZCUVN4RFFVTmFReXhMUVVGQlFTeEZRVUZUTEVOQlFVRXNRMEZCUVN4TFFVVlNMRWRCUVhGQ0xGTkJRVUVzUlVGQlFTeFBRVUZXUkN4TlFVRkJRU3hEUVVOYVF5eExRVUZCUVN4RlFVRlRMRU5CUVVFc1EwRkJRU3hMUVVWU0xFZEJRWEZDTEZGQlFVRXNSVUZCUVN4UFFVRldSQ3hOUVVGQlFTeERRVU5hTEVsQlFVc3NTVUZCU1Vjc1EwRkJRVUVzU1VGQlMwZ3NUVUZCUVVFc1EwRkRWa01zUzBGQlFVRXNSVUZCVTBjc1pVRkJRVUVzUTBGQlowSktMRTFCUVVGQkxFTkJRVTlITEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYaERMRTlCUVU5R0xFdEJRVUZCTEVOQlFVRkJMRU5CUjFoSkxHOUNRVUZCUVN4RFFVRTBRaXhEUVVGRFF5eEpRVUZCUVN4RFFVRk5ReXhOUVVGQlFTeEhRVUZCUVN4RFFVTXZRaXhKUVVGSlF5eEpRVUZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZQUkN4SlFVRkJRU3hEUVVGTFJpeEpRVUZCUVN4RFFVRkJRU3hEUVVOdVFra3NUVUZCUVVFc1EwRkJVMFFzVFVGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUTBGQlQwb3NTVUZCUVVFc1EwRkJRVUVzUTBGRmRrSkxMRTlCUVVGQkxFTkJRVlVzUlVGQlFTeERRVU5rTEVkQlFXTkRMRWxCUVVGQkxFVkJRVlpNTEUxQlFVRkJMRU5CUTBFc1NVRkJTeXhKUVVGSlRTeEhRVUZCUVN4SlFVRlBUaXhOUVVGQlFTeERRVUZSTEVOQlEzQkNMRWxCUVVsUUxFMUJRVUZCTEVOQlFWTXNSVUZCUVN4RFFVTmlMRWxCUVVzc1NVRkJTVWNzUTBGQlFVRXNTVUZCUzBzc1NVRkJRVUVzUTBGRFRtWXNhVUpCUVVGQkxFTkJRV0Z4UWl4UlFVRkJRU3hEUVVGVFRDeE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMU3l4SFFVRkJRU3hEUVVGQlFTeERRVUZOU0N4TlFVRkJRU3hEUVVGUFVDeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEhRVU12UTBnc1RVRkJRVUVzUTBGQlQxRXNTVUZCUVVFc1EwRkJTMHdzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRWVXNSMEZCUVVFc1EwRkJTVWdzVFVGQlFVRXNRMEZCVDFBc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGNrTlJMRTlCUVVGQkxFTkJRVkZKTEVsQlFVRkJMRU5CUVV0bUxFMUJRVUZCTEVOQlFVRkJMRU5CUjNKQ0xFOUJRVTlYTEU5QlFVRkJMRU5CUVVGQkxFTkJSMWhMTEVsQlFVRkJMRU5CUVZrc1EwRkJRMGdzUjBGQlFVRXNRMEZCUzBrc1VVRkJRVUVzUjBGQlFVRXNRMEZEWkN4SlFVRkxMRWxCUVVsa0xFTkJRVUZCTEVsQlFVdFZMRWRCUVVGQkxFTkJRMVlzUjBGQmQwSXNRMEZCUVN4RlFVRndRa2tzVVVGQlFVRXNRMEZCVTBvc1IwRkJRVUVzUTBGQlNWWXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEWWl4UFFVRlBWU3hIUVVGQlFTeERRVUZKVml4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVdDJRbVVzVDBGQlFVRXNRMEZCWlN4RFFVRkRUQ3hIUVVGQlFTeERRVUZMU1N4UlFVRkJRU3hIUVVGQlFTeERRVU5xUWl4SlFVRkpVQ3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsUUxFTkJRVUZCTEVsQlFVdFZMRWRCUVVGQkxFTkJRMk1zUTBGQlFTeEZRVUZ3UWtrc1VVRkJRVUVzUTBGQlUwb3NSMEZCUVVFc1EwRkJTVllzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUjBGRFlrOHNUVUZCUVVFc1EwRkJUMUFzUTBGQlFVRXNRMEZCUVVFc1EwRkJTMVVzUjBGQlFVRXNRMEZCU1ZZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhlRUlzVDBGQlQwOHNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEUyVGxnc1QwRXhUa0ZhTEVsQlFVRkJMRU5CUVV0eFFpeFpRVUZCUVN4RlFVRm5RazRzUjBGQlFVRXNSMEZEYWtKQkxFZEJRVUZCTEVOQlFVbFBMRTFCUVVGQkxFTkJRVTlETEZGQlFVRkJMRU5CUVVGQkxFTkJRVmtzVjBGQlFTeERRVU51UWl4SlFVRkpReXhWUVVGQlFTeERRVUZoWWl4TlFVRkJRU3hEUVVGUFJDeEpRVUZCUVN4RFFVRkxTeXhIUVVGQlFTeERRVUZCUVN4RFFVTTNRaXhKUVVGTExFbEJRVWxWTEVOQlFVRkJMRWxCUVV0RUxGVkJRVUZCTEVOQlFVRkJMRTFCUTBwRkxFbEJRVUZCTEVOQlFVdEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjFwV0xFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMWhtTEVsQlFVRkJMRU5CUVVzeVFpeEhRVUZCUVN4RlFVRlBla0lzVFVGQlFVRXNSMEZEVWtFc1RVRkJRVUVzUTBGQlUwWXNTVUZCUVVFc1EwRkJTelJDTEVsQlFVRkJMRU5CUVVzeFFpeE5RVUZCUVN4RFFVRlJMRU5CUVVVeVFpeExRVUZCUVN4RFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlF6ZENOMElzU1VGQlFVRXNRMEZCU3poQ0xGRkJRVUZCTEVOQlFWTTFRaXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQ2UWtZc1NVRkJRVUVzUTBGQlN5dENMRWRCUVVGQkxFVkJRVTgzUWl4TlFVRkJRU3hIUVVOU1FTeE5RVUZCUVN4RFFVRlRSaXhKUVVGQlFTeERRVUZMTkVJc1NVRkJRVUVzUTBGQlN6RkNMRTFCUVVGQkxFTkJRVkVzUTBGQlJUSkNMRXRCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkROMEkzUWl4SlFVRkJRU3hEUVVGTE9FSXNVVUZCUVVFc1EwRkJVelZDTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNwQ1JpeEpRVUZCUVN4RFFVRkxaME1zVTBGQlFVRXNSVUZCV1N4RFFVRkRha0lzUjBGQlFVRXNRMEZCUzBrc1VVRkJRVUVzUjBGQlFVRXNRMEZEYmtJc1RVRkJUV01zVDBGQlFVRXNRMEZCVlN4RFFVTmFReXhIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUlF5eFJRVUZCUVN4RFFVRlZReXhSUVVGQlFTeERRVUZCUVN4RFFVTnNRaXhIUVVGQkxFTkJRMGtzVDBGQlR5eEpRVUZKUXl4TFFVRkJRU3hEUVVGTlNDeE5RVUZCUVN4RFFVRlBReXhSUVVGQlFTeERRVUZCUVN4RFFVRlhTQ3hQUVVGQlFTeERRVUZCUVN4RFFVTnlReXhOUVVGUFRTeEhRVUZCUVN4RFFVRkJRU3hEUVVOTUxFOUJRVTlETEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVbE9MRTFCUVVGQkxFTkJRVkZETEZGQlFVRkJMRU5CUVZWRExGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6ZERTeXhqUVVGQlFTeERRVUZqTEVOQlFVTlFMRTFCUVVGQkxFTkJRVkZETEZGQlFVRkJMRU5CUVZWUExGVkJRVUZCTEVsQlF6ZENlRUlzVVVGQlFVRXNRMEZCVTJkQ0xFMUJRVUZCTEVOQlFWRkRMRkZCUVVGQkxFTkJRVUZCTEVOQlExWkpMRTlCUVVGQkxFTkJRVkZGTEdOQlFVRkJMRU5CUVdWUUxFMUJRVUZCTEVOQlFWRkRMRkZCUVVGQkxFTkJRVlZQTEZWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJYQkVReXhqUVVGQlFTeERRVUZqTEVOQlFVTlVMRTFCUVVGQkxFTkJRVkZETEZGQlFVRkJMRWxCUTI1Q2FrSXNVVUZCUVVFc1EwRkJVMmRDTEUxQlFVRkJMRU5CUVZGRExGRkJRVUZCTEVOQlFVRkJMRU5CUTFaSkxFOUJRVUZCTEVOQlFWRkpMR05CUVVGQkxFTkJRV1ZVTEUxQlFVRkJMRU5CUVZGRExGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNUbERMRTlCUVU4c1NVRkJTVVVzUzBGQlFVRXNRMEZCVFhaQ0xFZEJRVUZCTEVOQlFVdHJRaXhQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWN4UW1wRExFbEJRVUZCTEVOQlFVczJReXhQUVVGQlFTeEZRVUZWTEVOQlFVTXpReXhOUVVGQlFTeERRVUZSTkVNc1MwRkJRVUVzUjBGQlFVRXNRMEZEY0VJc1NVRkJTVU1zUzBGQlFVRXNRMEZCVVN4RlFVRkJMRU5CVTFvc1QwRlNRWEJETEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdFNMRTFCUVVGQkxFTkJRVUZCTEVOQlFWRTRReXhIUVVGQlFTeERRVUZMUXl4SFFVRkJRU3hGUVVGQlFTeERRVU5TTEVOQlFVRXNSVUZCVkVnc1MwRkJRVUVzUTBGRFFVTXNTMEZCUVVFc1EwRkJUVVVzUjBGQlFVRXNRMEZCUVVFc1EwRkJUeTlETEUxQlFVRkJMRU5CUVU4clF5eEhRVUZCUVN4RFFVRkJRU3hEUVVkd1FrWXNTMEZCUVVFc1EwRkJUVGxDTEVsQlFVRkJMRU5CUVV0bUxFMUJRVUZCTEVOQlFVOHJReXhIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZHVRa1lzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSFdDOURMRWxCUVVGQkxFTkJRVXRyUkN4clFrRkJRVUVzUlVGQmNVSXNRMEZCUTBnc1MwRkJRVUVzUTBGQlQwa3NTVUZCUVVFc1IwRkJRVUVzUTBGRE9VSXNTVUZCU1VNc1VVRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpMME1zUTBGQlFVRXNTVUZCU3pCRExFdEJRVUZCTEVOQlExWkxMRkZCUVVGQkxFTkJRVk51UXl4SlFVRkJRU3hEUVVGTE9FSXNTMEZCUVVFc1EwRkJUVEZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWM0UXl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVXpRaXhQUVVGUFF5eFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRZY0VRc1NVRkJRVUVzUTBGQlMzRkVMR2xDUVVGQlFTeEZRVUZ2UWl4RFFVRkRUaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNSMEZCUVN4RFFVTTVRaXhKUVVGSlN5eFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkRaaXhKUVVGTExFbEJRVWt2UXl4RFFVRkJRU3hKUVVGTE1FTXNTMEZCUVVFc1EwRkRWa3NzVVVGQlFVRXNRMEZCVjBFc1VVRkJRVUVzUTBGQlUwVXNUVUZCUVVFc1EwRkJUek5ETEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdHhReXhMUVVGQlFTeERRVUZOTVVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmFrUXNUMEZCVDFZc2FVSkJRVUZCTEVOQlFXRTBSQ3hMUVVGQlFTeERRVUZOU0N4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjNVFuQkVMRWxCUVVGQkxFTkJRVXQzUkN4dFFrRkJRVUVzUlVGQmMwSXNRMEZCUTFRc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVbFZMRVZCUVVGQkxFTkJRVWxPTEVsQlFVRkJMRWRCUVVGQkxFTkJRM2hETEVsQlFVbHFSQ3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVsSExFTkJRVUZCTEVsQlFVc3dReXhMUVVGQlFTeERRVU5XTjBNc1RVRkJRVUVzUTBGQlR6WkRMRXRCUVVGQkxFTkJRVTB4UXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIYjBRc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJUMVlzUzBGQlFVRXNRMEZCVFRGRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjNFF5eEpRVUZCUVN4RFFVRkJRU3hEUVVWd1F5eFBRVUZQYWtRc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhXRVlzU1VGQlFVRXNRMEZCU3pCRUxFbEJRVUZCTEVWQlFVOHNRMEZCUTBNc1NVRkJRVUVzUTBGQlRVTXNSVUZCUVVFc1IwRkJRVUVzUTBGRFptcEVMRTFCUVVGQkxFTkJRVTlFTEVsQlFVRkJMRU5CUVV0cFJDeEpRVUZCUVN4RFFVRkJRU3hEUVVGTldDeEhRVUZCUVN4RFFVRkpReXhIUVVGQlFTeEZRVUZCUVN4RFFVTnNRbGNzUlVGQlFVRXNRMEZCUjFnc1IwRkJRVUVzUTBGQlFVRXNRMEZCVDFVc1NVRkJRVUVzUTBGQlMxWXNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKZGtKcVJDeEpRVUZCUVN4RFFVRkxOa1FzVDBGQlFVRXNSVUZCVlN4RFFVRkRNMFFzVFVGQlFVRXNRMEZCVVdsQ0xGRkJRVUZCTEVkQlFVRkJMRU5CUTNCQ0xFbEJRVXNzU1VGQlNUaENMRWRCUVVGQkxFbEJRVTh2UXl4TlFVRkJRU3hEUVVOYWFVSXNVVUZCUVVFc1EwRkJVMnBDTEUxQlFVRkJMRU5CUVU4clF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGTlFTeEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVazVRbXBFTEVsQlFVRkJMRU5CUVVzNFJDeEpRVUZCUVN4RFFVRlBMRk5CUVZVMVJDeE5RVUZCUVN4RFFVRlJhVUlzVVVGQlFVRXNRMEZCUVVFc1EwRkRNVUlzU1VGQlNUUkRMRk5CUVVGQkxFTkJRVmtzUlVGQlFTeERRVU5vUWl4SlFVRkxMRWxCUVVsa0xFZEJRVUZCTEVsQlFVOHZReXhOUVVGQlFTeERRVU5hTmtRc1UwRkJRVUVzUTBGQlZXUXNSMEZCUVVFc1EwRkJRVUVzUTBGQlR6bENMRkZCUVVGQkxFTkJRVk5xUWl4TlFVRkJRU3hEUVVGUEswTXNSMEZCUVVFc1EwRkJRVUVzUTBGQlRVRXNSMEZCUVVFc1EwRkJRVUVzUTBGRk0wTXNUMEZCVDJNc1UwRkJRVUVzUTBGQlFVRXNRMEZIV0M5RUxFbEJRVUZCTEVOQlFVdG5SU3hYUVVGQlFTeEZRVUZqTEVOQlFVTkRMRWxCUVVGQkxFTkJRVTFETEUxQlFVRkJMRWRCUVVGQkxFTkJRM1JDTEVsQlFVbERMRWxCUVVGQkxFTkJRMG9zU1VGQlN5eEpRVUZKYUVJc1NVRkJRVUVzU1VGQlVXVXNUVUZCUVVFc1EwRkZZaXhIUVVGQkxFVkJSRUZETEVsQlFVRkJMRU5CUVU5RExFbEJRVUZCTEVOQlFVdERMRk5CUVVGQkxFTkJRVlZJTEUxQlFVRkJMRU5CUVU5bUxFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVlZwUWl4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlZTaXhKUVVGQlFTeERRVUZMWkN4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVOb1JDeE5RVWRtTEU5QlFVOW5RaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkWWJrVXNTVUZCUVVFc1EwRkJTM05GTEZsQlFVRkJMRVZCUVdVc1EwRkJRMHdzU1VGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWTXNSVUZCUVN4SFFVRkJMRU5CUTNKRExFbEJRVWxMTEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVGSlNpeEpRVUZCUVN4RFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGRGVrSXNTVUZCU3l4SlFVRkpPVVFzUTBGQlFVRXNTVUZCU3pSRUxFbEJRVUZCTEVOQlFVRkJMRU5CUTFaRkxFbEJRVUZCTEVOQlFVOXVSU3hKUVVGQlFTeERRVUZMWjBVc1YwRkJRVUVzUTBGQldVTXNTVUZCUVVFc1EwRkJTelZFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWsyUkN4TlFVRkJRU3hEUVVGQlFTeEhRVVZxUTBzc1QwRkJRVUVzUTBGQlVYUkVMRWxCUVVGQkxFTkJRVXRuUkN4SlFVRkJRU3hEUVVGTE5VUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIZEVJc1QwRkJUMnRGTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIxaDJSU3hKUVVGQlFTeERRVUZMTkVJc1NVRkJRVUVzUlVGQlR5eERRVUZEY1VNc1NVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbFBMRTFCUVVGQkxFTkJRVk1zUTBGQlJVTXNTMEZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVWxETEU5QlFVRkJMRU5CUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZQZWtJc1IwRkJRVUVzUTBGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVU5d1FpeExRVUZCUVN4RFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeEhRVUZCTEVOQlF6ZEZNa01zVFVGQlFVRXNRMEZCVDBjc1NVRkJRVUVzUTBGQlQwZ3NUVUZCUVVFc1EwRkJUMGNzU1VGQlFVRXNSVUZCVVN4RlFVRkJMRU5CUXpkQ1NDeE5RVUZCUVN4RFFVRlBSU3hQUVVGQlFTeERRVUZWUml4TlFVRkJRU3hEUVVGUFJTeFBRVUZCUVN4RlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGRmJrTXNTVUZCU1VVc1RVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVbERMRXRCUVVGQkxFTkJRVkVzUlVGQlFTeERRVU42UWl4SlFVRkxMRWRCUVVFc1EwRkJTelZDTEVkQlFVRkJMRU5CUVV0d1FpeExRVUZCUVN4RFFVRkJRU3hIUVVGVmJFSXNUVUZCUVVFc1EwRkJUMjFGTEU5QlFVRkJMRU5CUVZGaUxFbEJRVUZCTEVOQlFVRkJMRU5CUTNCRFZ5eE5RVUZCUVN4RFFVRlBNMFFzU1VGQlFVRXNRMEZCU3l4RFFVRkZaME1zUjBGQlFVRXNRMEZCUVVFc1IwRkJRVUVzUTBGQlMzQkNMRXRCUVVGQkxFTkJRVUZCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIweG1MRWxCUVVGQkxFVkJRV1F3UkN4TlFVRkJRU3hEUVVGUGRrSXNSMEZCUVVFc1IwRkRVRGhDTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVa3NUMEZCUVN4RFFVRkJMRU5CUTFwS0xFMUJRVUZCTEVOQlFVOW9SQ3hKUVVGQlFTeERRVUZMTEVOQlFVTnhSQ3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hIUVVGQlFTeERRVU5hTEVsQlFVbHlSQ3hMUVVGQlFTeERRVUZUYjBRc1EwRkJRVUVzUTBGQlJXaERMRWRCUVVGQkxFVkJRVTlwUXl4RFFVRkJRU3hEUVVGRmFrTXNSMEZCUVVFc1EwRkZlRUlzVDBGRWEwSXNRMEZCUVN4RlFVRmtkVUlzVFVGQlFVRXNRMEZCVDNaQ0xFZEJRVUZCTEVkQlFXRndRaXhMUVVGQlFTeERRVUZCUVN4RFFVRlRRU3hMUVVGQlFTeERRVUZCUVN4RFFVTXhRa0VzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKUzJZc1NVRkJRVUVzUlVGQmFFSXdSQ3hOUVVGQlFTeERRVUZQTTBNc1MwRkJRVUVzUlVGRFVDdERMRTFCUVVGQkxFTkJRVTlvUkN4SlFVRkJRU3hEUVVGTExFTkJRVU54UkN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4SFFVRkJRU3hEUVVOYUxFbEJRVWx5UkN4TFFVRkJRU3hEUVVGVGIwUXNRMEZCUVVFc1EwRkJSWEJFTEV0QlFVRkJMRVZCUVZOeFJDeERRVUZCUVN4RFFVRkZja1FzUzBGQlFVRXNRMEZGTVVJc1QwRkViMElzUTBGQlFTeEZRVUZvUWpKRExFMUJRVUZCTEVOQlFVOHpReXhMUVVGQlFTeEhRVUZsUVN4TFFVRkJRU3hEUVVGQlFTeERRVUZUUVN4TFFVRkJRU3hEUVVGQlFTeERRVU0xUWtFc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpTMllzU1VGQlFVRXNSVUZCYUVJd1JDeE5RVUZCUVN4RFFVRlBReXhMUVVGQlFTeEZRVU5RUnl4TlFVRkJRU3hEUVVGUGFFUXNTVUZCUVVFc1EwRkJTeXhEUVVGRGNVUXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNSMEZCUVVFc1EwRkRXaXhKUVVGSlF5eFBRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJSME1zVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUXpGQ0xFbEJRVXNzU1VGQlNWUXNTVUZCUVVFc1NVRkJVVWdzVFVGQlFVRXNRMEZCVDBNc1MwRkJRVUVzUTBGRGFFSlJMRU5CUVVGQkxFTkJRVVZ3UkN4TFFVRkJRU3hEUVVGTk9FTXNTVUZCUVVFc1EwRkJRVUVzUlVGQlUwOHNRMEZCUVVFc1EwRkJSWEpFTEV0QlFVRkJMRU5CUVUwNFF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGUFVTeFBRVUZCUVN4RlFVRkJRU3hEUVVNdlFrTXNUVUZCUVVFc1JVRkJRVUVzUTBGRlZDeEpRVUZKZGtRc1MwRkJRVUVzUTBGQlVYTkVMRTlCUVVGQkxFVkJRVmRETEUxQlFVRkJMRU5CUlhaQ0xFOUJSSE5DTEVOQlFVRXNSVUZCYkVKYUxFMUJRVUZCTEVOQlFVOUZMRTlCUVVGQkxFZEJRV2xDTjBNc1MwRkJRVUVzUTBGQlFVRXNRMEZCVTBFc1MwRkJRVUVzUTBGQlFVRXNRMEZET1VKQkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV1lzU1VGQlN5eEhRVUZCTEVOQlFVbHZRaXhIUVVGQlFTeERRVUZGUVN4SFFVRkJRU3hEUVVGSGNFSXNTMEZCUVVFc1EwRkJSVUVzUzBGQlFVRXNRMEZCUVVFc1IwRkJWeXRETEUxQlFVRkJMRU5CUTNaQ1F5eExRVUZCUVN4RFFVRk5OVUlzUjBGQlFVRXNRMEZCUVVFc1EwRkJUM0JDTEV0QlFVRkJMRU5CUjJwQ0xFOUJRVTluUkN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFlOMFVzU1VGQlFVRXNRMEZCUzNGR0xFOUJRVUZCTEVWQlFWVXNRMEZCUTNCQ0xFbEJRVUZCTEVOQlFVOHNSVUZCUVN4SFFVRkJMRU5CUTI1Q0xFbEJRVWwyUkN4SlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMZFVRc1NVRkJRVUVzUTBGQlFVRXNRMEZCVFc5Q0xFOUJRVUZCTEVWQlFVRkJMRU5CUTNwQ2RFSXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRMmhDTEVsQlFVc3NTVUZCU1RGRUxFTkJRVUZCTEVsQlFVdExMRWxCUVVGQkxFTkJRMVp4UkN4VFFVRkJRU3hEUVVGVk1VUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN6UkVMRWxCUVVGQkxFTkJRVXMxUkN4RFFVRkJRU3hEUVVGQlFTeERRVVY0UWl4UFFVRlBNRVFzVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSFdDOUVMRWxCUVVGQkxFTkJRVXM0UWl4UlFVRkJRU3hGUVVGWExFTkJRVU50UXl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUjBGQlFTeERRVU53UWl4SlFVRkphRUlzUjBGQlFVRXNRMEZCVFhSRExFMUJRVUZCTEVOQlFVOUVMRWxCUVVGQkxFTkJRVXQxUkN4SlFVRkJRU3hEUVVGQlFTeERRVUZOY1VJc1MwRkJRVUVzUlVGQlFVRXNRMEZGTlVJc1RVRkJUeXhEUVVGRmNrTXNSMEZCUVVFc1EwRkJRVUVzUjBGQlFVRXNRMEZCUzNCQ0xFdEJRVUZCTEVOQlJFWnZReXhKUVVGQlFTeERRVUZMYUVJc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKY2tKcVJDeEpRVUZCUVN4RFFVRkxkVVlzVDBGQlFVRXNSVUZCVlN4RFFVRkRkRUlzU1VGQlFVRXNRMEZCVHl4RlFVRkJMRWRCUVVFc1EwRkRia0lzU1VGQlNXaENMRWRCUVVGQkxFTkJRVTEwUXl4TlFVRkJRU3hEUVVGUFJDeEpRVUZCUVN4RFFVRkxkVVFzU1VGQlFVRXNRMEZCUVVFc1EwRkJUWFZDTEVkQlFVRkJMRVZCUVVGQkxFTkJSVFZDTEUxQlFVOHNRMEZCUlhaRExFZEJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFTkJRVXR3UWl4TFFVRkJRU3hEUVVSR2IwTXNTVUZCUVVFc1EwRkJTMmhDTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTWEpDYWtRc1NVRkJRVUVzUTBGQlMzbEdMRXRCUVVGQkxFVkJRVkVzUTBGQlEzaENMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZKZVVJc1MwRkJRVUVzUjBGQlFVRXNRMEZEY2tJc1NVRkJTWHBETEVkQlFVRkJMRU5CUVUxMFF5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMZFVRc1NVRkJRVUVzUTBGQlFVRXNRMEZCVFhsQ0xFdEJRVUZCTEVOQlFVRkJMRU5CUlRWQ0xFMUJRVThzUTBGQlJYcERMRWRCUVVGQkxFTkJRVUZCTEVkQlFVRkJMRU5CUVV0d1FpeExRVUZCUVN4RFFVUkdiME1zU1VGQlFVRXNRMEZCUzJoQ0xFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1hKQ2FrUXNTVUZCUVVFc1EwRkJTekpHTEV0QlFVRkJMRVZCUVZFc1EwRkJRekZDTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlZTeEpRVUZCUVN4SFFVRkJRU3hEUVVWeVFpeEpRVUZMTEVsQlFVbDBSU3hEUVVGQlFTeEpRVUZMTkVRc1NVRkJRVUVzUTBGRFZpeEhRVUZKUnl4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlZTaXhKUVVGQlFTeERRVUZMTlVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJUeXRFTEVsQlFVRkJMRU5CUVV0RExGTkJRVUZCTEVOQlFWVk5MRWxCUVVGQkxFTkJRVUZCTEVOQlF6RkRMRTlCUVU5MFJTeERRVUZCUVN4RFFVbG1MRTFCUVVFc1EwRlFZU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVlZxUWt3c1NVRkJRVUVzUTBGQlN6UkdMRk5CUVVGQkxFVkJRVmtzUTBGQlF6TkNMRWxCUVVGQkxFTkJRVThzUlVGQlFTeERRVUZKVlN4SlFVRkJRU3hIUVVGQlFTeERRVU42UWl4SlFVRkpaU3hMUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRZaXhKUVVGTExFbEJRVWx5Uml4RFFVRkJRU3hKUVVGTE5FUXNTVUZCUVVFc1EwRkRUa2NzU1VGQlFVRXNRMEZCUzBNc1UwRkJRVUVzUTBGQlZVb3NTVUZCUVVFc1EwRkJTelZFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFVOHJSQ3hKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVlRTeEpRVUZCUVN4RFFVRkJRU3hIUVVNeFEyVXNTMEZCUVVFc1EwRkJVWEpHTEVOQlFVRkJMRU5CUVVGQkxFTkJTV2hDTEU5QlFVOXhSaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkWU1VWXNTVUZCUVVFc1EwRkJTelpHTEZGQlFVRkJMRVZCUVZjc1EwRkJRelZDTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlZTeEpRVUZCUVN4SFFVRkJRU3hEUVVOVkxFTkJRVUVzUlVGQk0wSXpSU3hKUVVGQlFTeERRVUZMTWtZc1MwRkJRVUVzUTBGQlRURkNMRWxCUVVGQkxFTkJRVTFWTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJYSkNNMFVzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwibGV0IF9fYXJyYXlMaWJyYXJ5XzE2PV8kQXJyYXlMaWJyYXJ5XzE0KCk7dmFyIF8kTWF0aHNMaWJyYXJ5XzE2PWZ1bmN0aW9uKCl7bGV0IHNlbGY9e3BsYWNlVW5pdDoobnVtLHZhbHVlLGNvdW50KT0+e251bT1NYXRoLmZsb29yKG51bSkudG9TdHJpbmcoKSx2YWx1ZT12YWx1ZXx8bnVtWzBdLGNvdW50PWNvdW50fHwwO2xldCBwb3M9LTE7Zm9yKGxldCBpPTA7aTxudW0ubGVuZ3RoO2krKyludW1baV09PXZhbHVlJiYoMD09Y291bnQmJihwb3M9aSksY291bnQtLSk7cmV0dXJuLTEhPXBvcyYmKHBvcz0xMCoqKG51bS5sZW5ndGgtcG9zLTEpKSxwb3N9LHJvdW5kOnBhcmFtcz0+KHBhcmFtcy5kaXI9cGFyYW1zLmRpcnx8XCJyb3VuZFwiLHBhcmFtcy50bz1wYXJhbXMudG98fDEsTWF0aFtwYXJhbXMuZGlyXShwYXJhbXMubnVtL3BhcmFtcy50bykqcGFyYW1zLnRvKSx2YXJpYW5jZTpkYXRhPT57bGV0IG1lYW49c2VsZi5tZWFuKGRhdGEpLHZhcmlhbmNlPTA7Zm9yKGxldCBpPTA7aTxkYXRhLmxlbmd0aDtpKyspdmFyaWFuY2UrPShkYXRhW2ldLW1lYW4pKioyO3JldHVybiB2YXJpYW5jZS9kYXRhLmxlbmd0aH0sc3RhbmRhcmREZXZpYXRpb246ZGF0YT0+e2xldCB2YXJpYW5jZT1zZWxmLnZhcmlhbmNlKGRhdGEpO3JldHVybiBNYXRoLnNxcnQodmFyaWFuY2UpfSxyYW5nZTpkYXRhPT57bGV0IG1pbj1NYXRoLm1pbiguLi5kYXRhKTtyZXR1cm4gTWF0aC5tYXgoLi4uZGF0YSktbWlufSxtZWFuOmRhdGE9PnNlbGYuc3VtKGRhdGEpL2RhdGEubGVuZ3RoLG1lZGlhbjpkYXRhPT57bGV0IG1lZGlhbixsZW5ndGg9ZGF0YS5sZW5ndGg7cmV0dXJuIG1lZGlhbj1sZW5ndGglMj09MD8oZGF0YVtsZW5ndGgvMi0xXStkYXRhW2xlbmd0aC8yXSkvMjpkYXRhW01hdGguZmxvb3IobGVuZ3RoLzIpXX0sbW9kZTpkYXRhPT57bGV0IHJlY29yZD17fTtmb3IobGV0IGk9MDtpPGRhdGEubGVuZ3RoO2krKyludWxsIT1yZWNvcmRbZGF0YVtpXV0/cmVjb3JkW2RhdGFbaV1dKys6cmVjb3JkW2RhdGFbaV1dPWk7bGV0IG1vZGUsbWF4PU1hdGgubWF4KC4uLk9iamVjdC52YWx1ZShyZWNvcmQpKTtmb3IobGV0IGkgaW4gcmVjb3JkKWlmKHJlY29yZFtpXT09bWF4KXttb2RlPWk7YnJlYWt9cmV0dXJuIG1vZGV9LG5vcm1hbGl6ZURhdGE6ZGF0YT0+e2RhdGEuc29ydCgoYSxiKT0+YS1iKTtmb3IodmFyIG1heD1kYXRhW2RhdGEubGVuZ3RoLTFdLG1pbj1kYXRhWzBdLG5vcm1hbGl6ZWQ9W10saT0wO2k8ZGF0YS5sZW5ndGg7aSsrKW5vcm1hbGl6ZWQucHVzaCgoZGF0YVtpXS1taW4pLyhtYXgtbWluKSk7cmV0dXJuIG5vcm1hbGl6ZWR9LG1pbmltdWltU3dhcHM6KGFycixvcmRlcik9Pnt2YXIgc3dhcD0wLGNoZWNrZWQ9W10sY291bnRlcj0wLGZpbmFsPVsuLi5hcnJdLnNvcnQoKGEsYik9PmEtYik7LTE9PW9yZGVyJiYoZmluYWw9ZmluYWwucmV2ZXJzZSgpKTtmb3IodmFyIGk9MDtpPGFyci5sZW5ndGg7aSsrKXt2YXIgZWxlbWVudD1hcnJbaV07aWYoaSE9ZWxlbWVudCYmIWNoZWNrZWRbaV0pe2Zvcihjb3VudGVyPTAsMD09YXJyWzBdJiYoZWxlbWVudD1pKTshY2hlY2tlZFtpXTspY2hlY2tlZFtpXT0hMCxlbGVtZW50PWFycltpPWZpbmFsLmluZGV4T2YoZWxlbWVudCldLGNvdW50ZXIrKzswIT1jb3VudGVyJiYoc3dhcCs9Y291bnRlci0xKX19cmV0dXJuIHN3YXB9LHByaW1lRmFjdG9yaXplOm51bWJlcj0+e2lmKFwibnVtYmVyXCIhPXR5cGVvZiBudW1iZXIpcmV0dXJuW107aWYoMT09KG51bWJlcj1NYXRoLmFicyhwYXJzZUludChudW1iZXIpKSl8fDA9PW51bWJlcilyZXR1cm5bXTtmb3IodmFyIGRpdmlkZW5kLGRpdmlkZXI9MixmYWN0b3JzPVtdOzEhPW51bWJlcjspLTE9PShkaXZpZGVuZD1udW1iZXIvZGl2aWRlcikudG9TdHJpbmcoKS5pbmRleE9mKFwiLlwiKT8obnVtYmVyPWRpdmlkZW5kLGZhY3RvcnMucHVzaChkaXZpZGVyKSk6ZGl2aWRlcisrO3JldHVybiBmYWN0b3JzfSxsY2Y6bnVtYmVycz0+e2lmKCFBcnJheS5pc0FycmF5KG51bWJlcnMpKXJldHVybltdO3ZhciBmYWN0b3JzPVtdLGNvbW1vbkZhY3RvcnM9W10sdmFsdWU9MTtmb3IodmFyIG51bWJlciBvZiBudW1iZXJzKXtpZihcIm51bWJlclwiIT10eXBlb2YgbnVtYmVyKXJldHVybltdO2ZhY3RvcnMucHVzaChzZWxmLnByaW1lRmFjdG9yaXplKG51bWJlcikpfW1haW46Zm9yKHZhciBmYWN0b3Igb2YgZmFjdG9yc1swXSlpZigtMT09Y29tbW9uRmFjdG9ycy5pbmRleE9mKGZhY3Rvcikpe2Zvcih2YXIgaSBvZiBmYWN0b3JzKWlmKC0xPT1pLmluZGV4T2YoZmFjdG9yKSljb250aW51ZSBtYWluO2NvbW1vbkZhY3RvcnMucHVzaChmYWN0b3IpLHZhbHVlKj1mYWN0b3J9cmV0dXJuIHZhbHVlfSxzdHJpcEludGVnZXI6bnVtYmVyPT5udW1iZXI9LTE9PShudW1iZXI9bnVtYmVyLnRvU3RyaW5nKCkpLmluZGV4T2YoXCIuXCIpP251bWJlcjpudW1iZXIuc2xpY2UoMCxudW1iZXIuaW5kZXhPZihcIi5cIikpLHN0cmlwRnJhY3Rpb246bnVtYmVyPT5udW1iZXI9LTE9PShudW1iZXI9bnVtYmVyLnRvU3RyaW5nKCkpLmluZGV4T2YoXCIuXCIpP1wiMFwiOm51bWJlci5zbGljZShudW1iZXIuaW5kZXhPZihcIi5cIikrMSksY2hhbmdlQmFzZToobnVtYmVyLGZyb20sdG8pPT5wYXJzZUZsb2F0KG51bWJlcixmcm9tKS50b1N0cmluZyh0byksbWF4OmFycmF5PT57dmFyIG1heD1hcnJheVswXTtyZXR1cm4gX19hcnJheUxpYnJhcnlfMTYuZWFjaChhcnJheSx2YWx1ZT0+e21heDx2YWx1ZSYmKG1heD12YWx1ZSl9KSxtYXh9LG1pbjphcnJheT0+e3ZhciBtYXg9YXJyYXlbMF07cmV0dXJuIF9fYXJyYXlMaWJyYXJ5XzE2LmVhY2goYXJyYXksdmFsdWU9PnttYXg+dmFsdWUmJihtYXg9dmFsdWUpfSksbWF4fSxzdW06YXJyYXk9PntsZXQgc3VtPTA7Zm9yKGxldCBpPTA7aTxhcnJheS5sZW5ndGg7aSsrKXtpZihpc05hTihNYXRoLmZsb29yKGFycmF5W2ldKSkpe3N1bT0hMTticmVha31zdW0rPWFycmF5W2ldLzF9cmV0dXJuIHN1bX0scHJvZHVjdDphcnJheT0+e2xldCBwcm9kdWN0PTE7Zm9yKGxldCBpPTA7aTxhcnJheS5sZW5ndGg7aSsrKXtpZihpc05hTihNYXRoLmZsb29yKGFycmF5W2ldKSkpe3Byb2R1Y3Q9ITE7YnJlYWt9cHJvZHVjdCo9YXJyYXlbaV19cmV0dXJuIHByb2R1Y3R9LGFkZDooLi4uYXJyYXlzKT0+e2xldCBuZXdBcnJheT1bXTtyZXR1cm4gYXJyYXlzWzBdLmZvckVhY2goKHZhbHVlLHBvc2l0aW9uKT0+e2FycmF5cy5mb3JFYWNoKChhcnJheSxsb2NhdGlvbik9PntpZigwIT1sb2NhdGlvbil7bGV0IGVsZW1lbnQ9QXJyYXkuaXNBcnJheShhcnJheSk/YXJyYXlbcG9zaXRpb25dOmFycmF5O3ZhbHVlKz0xPT1pc05hTihlbGVtZW50KT8wOmVsZW1lbnR9fSksbmV3QXJyYXkucHVzaCh2YWx1ZSl9KSxuZXdBcnJheX0sc3ViOiguLi5hcnJheXMpPT57bGV0IG5ld0FycmF5PVtdO3JldHVybiBhcnJheXNbMF0uZm9yRWFjaCgodmFsdWUscG9zaXRpb24pPT57YXJyYXlzLmZvckVhY2goKGFycmF5LGxvY2F0aW9uKT0+e2lmKDAhPWxvY2F0aW9uKXtsZXQgZWxlbWVudD1BcnJheS5pc0FycmF5KGFycmF5KT9hcnJheVtwb3NpdGlvbl06YXJyYXk7dmFsdWUtPTE9PWlzTmFOKGVsZW1lbnQpPzA6ZWxlbWVudH19KSxuZXdBcnJheS5wdXNoKHZhbHVlKX0pLG5ld0FycmF5fSxtdWw6KC4uLmFycmF5cyk9PntsZXQgbmV3QXJyYXk9W107cmV0dXJuIGFycmF5c1swXS5mb3JFYWNoKCh2YWx1ZSxwb3NpdGlvbik9PnthcnJheXMuZm9yRWFjaCgoYXJyYXksbG9jYXRpb24pPT57aWYoMCE9bG9jYXRpb24pe2xldCBlbGVtZW50PUFycmF5LmlzQXJyYXkoYXJyYXkpP2FycmF5W3Bvc2l0aW9uXTphcnJheTt2YWx1ZSo9MT09aXNOYU4oZWxlbWVudCk/MDplbGVtZW50fX0pLG5ld0FycmF5LnB1c2godmFsdWUpfSksbmV3QXJyYXl9LGRpdmlkZTooLi4uYXJyYXlzKT0+e2xldCBuZXdBcnJheT1bXTtyZXR1cm4gYXJyYXlzWzBdLmZvckVhY2goKHZhbHVlLHBvc2l0aW9uKT0+e2FycmF5cy5mb3JFYWNoKChhcnJheSxsb2NhdGlvbik9PntpZigwIT1sb2NhdGlvbil7bGV0IGVsZW1lbnQ9QXJyYXkuaXNBcnJheShhcnJheSk/YXJyYXlbcG9zaXRpb25dOmFycmF5O3ZhbHVlLz0xPT1pc05hTihlbGVtZW50KT8wOmVsZW1lbnR9fSksbmV3QXJyYXkucHVzaCh2YWx1ZSl9KSxuZXdBcnJheX0sYWJzOmFycmF5PT5fX2FycmF5TGlicmFyeV8xNi5lYWNoKGFycmF5LHZhbHVlPT4odmFsdWU9MT09aXNOYU4odmFsdWUpPzA6dmFsdWUsTWF0aC5hYnModmFsdWUpKSl9O3JldHVybiBzZWxmfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWsxaGRHaHpUR2xpY21GeWVTNXFjeUpkTENKdVlXMWxjeUk2V3lKaGNuSmhlVXhwWW5KaGNua2lMQ0p5WlhGMWFYSmxJaXdpUVhKeVlYbE1hV0p5WVhKNUlpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbk5sYkdZaUxDSndiR0ZqWlZWdWFYUWlMQ0p1ZFcwaUxDSjJZV3gxWlNJc0ltTnZkVzUwSWl3aVRXRjBhQ0lzSW1ac2IyOXlJaXdpZEc5VGRISnBibWNpTENKd2IzTWlMQ0pwSWl3aWJHVnVaM1JvSWl3aWNtOTFibVFpTENKd1lYSmhiWE1pTENKa2FYSWlMQ0owYnlJc0luWmhjbWxoYm1ObElpd2laR0YwWVNJc0ltMWxZVzRpTENKemRHRnVaR0Z5WkVSbGRtbGhkR2x2YmlJc0luTnhjblFpTENKeVlXNW5aU0lzSW0xcGJpSXNJbTFoZUNJc0luTjFiU0lzSW0xbFpHbGhiaUlzSW0xdlpHVWlMQ0p5WldOdmNtUWlMQ0oxYm1SbFptbHVaV1FpTENKUFltcGxZM1FpTENKdWIzSnRZV3hwZW1WRVlYUmhJaXdpYzI5eWRDSXNJbUVpTENKaUlpd2libTl5YldGc2FYcGxaQ0lzSW5CMWMyZ2lMQ0p0YVc1cGJYVnBiVk4zWVhCeklpd2lZWEp5SWl3aWIzSmtaWElpTENKemQyRndJaXdpWTJobFkydGxaQ0lzSW1OdmRXNTBaWElpTENKbWFXNWhiQ0lzSW5KbGRtVnljMlVpTENKbGJHVnRaVzUwSWl3aWFXNWtaWGhQWmlJc0luQnlhVzFsUm1GamRHOXlhWHBsSWl3aWJuVnRZbVZ5SWl3aVlXSnpJaXdpY0dGeWMyVkpiblFpTENKa2FYWnBaR1Z1WkNJc0ltUnBkbWxrWlhJaUxDSm1ZV04wYjNKeklpd2liR05tSWl3aWJuVnRZbVZ5Y3lJc0lrRnljbUY1SWl3aWFYTkJjbkpoZVNJc0ltTnZiVzF2YmtaaFkzUnZjbk1pTENKdFlXbHVJaXdpWm1GamRHOXlJaXdpYzNSeWFYQkpiblJsWjJWeUlpd2ljMnhwWTJVaUxDSnpkSEpwY0VaeVlXTjBhVzl1SWl3aVkyaGhibWRsUW1GelpTSXNJbVp5YjIwaUxDSndZWEp6WlVac2IyRjBJaXdpWVhKeVlYa2lMQ0psWVdOb0lpd2lhWE5PWVU0aUxDSndjbTlrZFdOMElpd2lZV1JrSWl3aVlYSnlZWGx6SWl3aWJtVjNRWEp5WVhraUxDSm1iM0pGWVdOb0lpd2ljRzl6YVhScGIyNGlMQ0pzYjJOaGRHbHZiaUlzSW5OMVlpSXNJbTExYkNJc0ltUnBkbWxrWlNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUTBFc1NVRkJTVUVzYVVKQlFVRkJMRU5CUkdsQ1F5eHBRa0ZEUmtNc1JVRkJRVUVzUTBFMlUyNUNReXh4UWtGQlQwTXNRMEV6VTFBc1ZVRkJRU3hEUVVOSkxFbEJRVWxETEVsQlFVRkJMRU5CUVU4c1EwRkZXRU1zVTBGQlFVRXNRMEZCYVVJc1EwRkJRME1zUjBGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlQwTXNTMEZCUVVFc1IwRkJRVUVzUTBGRE1VSkdMRWRCUVVGQkxFTkJRVTFITEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUtMRWRCUVVGQkxFTkJRVUZCTEVOQlFVdExMRkZCUVVGQkxFVkJRVUZCTEVOQlEzUkNTaXhMUVVGQlFTeERRVUZSUVN4TFFVRkJRU3hGUVVGVFJDeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVOeVFrVXNTMEZCUVVFc1EwRkJVVUVzUzBGQlFVRXNSVUZCVXl4RFFVRkJMRU5CUldwQ0xFbEJRVWxKTEVkQlFVRkJMRU5CUVVGQkxFTkJRVThzUTBGQlFTeERRVU5ZTEVsQlFVc3NTVUZCU1VNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxRTEVkQlFVRkJMRU5CUVVsUkxFMUJRVUZCTEVOQlFWRkVMRU5CUVVGQkxFVkJRVUZCTEVOQlEzaENVQ3hIUVVGQlFTeERRVUZKVHl4RFFVRkJRU3hEUVVGQlFTeEZRVUZOVGl4TFFVRkJRU3hIUVVOSExFTkJRVUVzUlVGQlZFTXNTMEZCUVVFc1IwRkRRVWtzUjBGQlFVRXNRMEZCVFVNc1EwRkJRVUVzUTBGQlFVRXNRMEZGVmt3c1MwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRk5VaXhOUVVGQkxFTkJSRmtzUTBGQlFTeEZRVUZTU1N4SFFVRkJRU3hIUVVGWFFTeEhRVUZCUVN4RFFVRk5MRVZCUVVFc1IwRkJUMDRzUjBGQlFVRXNRMEZCU1ZFc1RVRkJRVUVzUTBGQlUwWXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU40UTBFc1IwRkJRVUVzUTBGQlFVRXNRMEZIV0Vjc1MwRkJRVUVzUTBGQlkwTXNUVUZCUVVFc1IwRkRWa0VzVFVGQlFVRXNRMEZCVDBNc1IwRkJRVUVzUTBGQlRVUXNUVUZCUVVFc1EwRkJUME1zUjBGQlFVRXNSVUZCVHl4UFFVRkJMRU5CUXpOQ1JDeE5RVUZCUVN4RFFVRlBSU3hGUVVGQlFTeERRVUZMUml4TlFVRkJRU3hEUVVGUFJTeEZRVUZCUVN4RlFVRk5MRU5CUVVFc1EwRkZZbFFzU1VGQlFVRXNRMEZCUzA4c1RVRkJRVUVzUTBGQlQwTXNSMEZCUVVFc1EwRkJRVUVzUTBGQlMwUXNUVUZCUVVFc1EwRkJUMVlzUjBGQlFVRXNRMEZCVFZVc1RVRkJRVUVzUTBGQlQwVXNSVUZCUVVFc1EwRkJRVUVzUTBGQlRVWXNUVUZCUVVFc1EwRkJUMFVzUlVGQlFVRXNRMEZCUVVFc1EwRkpiRVZETEZGQlFVRkJMRU5CUVdsQ1F5eEpRVUZCUVN4RlFVRkJRU3hEUVVOaUxFbEJRVWxETEVsQlFVRkJMRU5CUVU5cVFpeEpRVUZCUVN4RFFVRkxhVUlzU1VGQlFVRXNRMEZCUzBRc1NVRkJRVUVzUTBGQlFVRXNRMEZEYWtKRUxGRkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVTm1MRWxCUVVzc1NVRkJTVTRzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFBMRWxCUVVGQkxFTkJRVXRPTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUXpkQ1RTeFJRVUZCUVN4RlFVRkJRU3hEUVVGaFF5eEpRVUZCUVN4RFFVRkxVQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkxVU3hKUVVGQlFTeEhRVUZUTEVOQlFVRXNRMEZGY0VNc1QwRkJUMFlzVVVGQlFVRXNRMEZCVjBNc1NVRkJRVUVzUTBGQlMwNHNUVUZCUVVFc1EwRkJRVUVzUTBGSE0wSlJMR2xDUVVGQlFTeERRVUV3UWtZc1NVRkJRVUVzUlVGQlFVRXNRMEZEZEVJc1NVRkJTVVFzVVVGQlFVRXNRMEZCVjJZc1NVRkJRVUVzUTBGQlMyVXNVVUZCUVVFc1EwRkJVME1zU1VGQlFVRXNRMEZCUVVFc1EwRkZOMElzVDBGRVZWZ3NTVUZCUVVFc1EwRkJTMk1zU1VGQlFVRXNRMEZCUzBvc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkplRUpMTEV0QlFVRkJMRU5CUVdOS0xFbEJRVUZCTEVWQlFVRkJMRU5CUTFZc1NVRkJTVXNzUjBGQlFVRXNRMEZCVFdoQ0xFbEJRVUZCTEVOQlFVdG5RaXhIUVVGQlFTeERRVUZCUVN4SFFVRlBUQ3hKUVVGQlFTeERRVUZCUVN4RFFVbDBRaXhQUVVoVldDeEpRVUZCUVN4RFFVRkxhVUlzUjBGQlFVRXNRMEZCUVVFc1IwRkJUMDRzU1VGQlFVRXNRMEZCUVVFc1EwRkZTa3NzUjBGQlFVRXNRMEZCUVVFc1EwRkpkRUpLTEVsQlFVRkJMRU5CUVdGRUxFbEJRVUZCTEVWQlEwTm9RaXhKUVVGQlFTeERRVUZMZFVJc1IwRkJRVUVzUTBGQlNWQXNTVUZCUVVFc1EwRkJRVUVzUTBGRlJrRXNTVUZCUVVFc1EwRkJTMDRzVFVGQlFVRXNRMEZKTVVKakxFMUJRVUZCTEVOQlFXVlNMRWxCUVVGQkxFVkJRVUZCTEVOQlExZ3NTVUZEU1ZFc1RVRkJRVUVzUTBGRVFXUXNUVUZCUVVFc1EwRkJVMDBzU1VGQlFVRXNRMEZCUzA0c1RVRkJRVUVzUTBGUmJFSXNUMEZNU1dNc1RVRkJRVUVzUTBGRVFXUXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFVkJRVXNzUTBGQlFTeERRVUZCTEVOQlEwcE5MRWxCUVVGQkxFTkJRVTFPTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZMVFN4SlFVRkJRU3hEUVVGTFRpeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hGUVVGTkxFTkJRVUVzUTBGRk9VTk5MRWxCUVVGQkxFTkJRVXRZTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUpMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVMHhRMlVzU1VGQlFVRXNRMEZCWVZRc1NVRkJRVUVzUlVGQlFVRXNRMEZEVkN4SlFVRkpWU3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEWWl4SlFVRkxMRWxCUVVscVFpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1U4c1NVRkJRVUVzUTBGQlMwNHNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkRUbXRDTEVsQlFVRkJMRVZCUVc1Q1JDeE5RVUZCUVN4RFFVRlBWaXhKUVVGQlFTeERRVUZMVUN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRnJRbWxDTEUxQlFVRkJMRU5CUVU5V0xFbEJRVUZCTEVOQlFVdFFMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFTkJRM3BEYVVJc1RVRkJRVUVzUTBGQlQxWXNTVUZCUVVFc1EwRkJTMUFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRVRXNRMEZCUVVFc1EwRkhNMElzU1VGRFNXZENMRWxCUVVGQkxFTkJSRUZJTEVkQlFVRkJMRU5CUVUxcVFpeEpRVUZCUVN4RFFVRkxhVUlzUjBGQlFVRXNRMEZCUVVFc1IwRkJUMDBzVFVGQlFVRXNRMEZCVDNwQ0xFdEJRVUZCTEVOQlFVMTFRaXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWdVF5eEpRVUZMTEVsQlFVbHFRaXhEUVVGQlFTeEpRVUZMYVVJc1RVRkJRVUVzUTBGRFZpeEhRVUZKUVN4TlFVRkJRU3hEUVVGUGFrSXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRXRXNSMEZCUVVFc1EwRkJTeXhEUVVOc1FrY3NTVUZCUVVFc1EwRkJUMmhDTEVOQlFVRkJMRU5CUTFBc1MwRkJRU3hEUVVsU0xFOUJRVTluUWl4SlFVRkJRU3hEUVVGQlFTeERRVWRZU1N4aFFVRkJRU3hEUVVGelFtSXNTVUZCUVVFc1JVRkJRVUVzUTBGRGJFSkJMRWxCUVVGQkxFTkJRVXRqTEVsQlFVRkJMRU5CUVVzc1EwRkJRME1zUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUjBGQlpVUXNRMEZCUVVFc1EwRkJTVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkpha01zU1VGSVFTeEpRVUZKVml4SFFVRkJRU3hEUVVGTlRpeEpRVUZCUVN4RFFVRkxRU3hKUVVGQlFTeERRVUZMVGl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVU42UWxjc1IwRkJRVUVzUTBGQlRVd3NTVUZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRVUVzUTBGRFdHbENMRlZCUVVGQkxFTkJRV0VzUlVGQlFTeERRVU5TZUVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWxQTEVsQlFVRkJMRU5CUVV0T0xFMUJRVUZCTEVOQlFWRkVMRU5CUVVGQkxFVkJRVUZCTEVOQlF6ZENkMElzVlVGQlFVRXNRMEZCVjBNc1NVRkJRVUVzUTBGQlFVRXNRMEZCVFd4Q0xFbEJRVUZCTEVOQlFVdFFMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdFpMRWRCUVVGQkxFZEJRVkZETEVkQlFVRkJMRU5CUVUxRUxFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVGRETEU5QlFVOVpMRlZCUVVGQkxFTkJRVUZCTEVOQlIxaEZMR0ZCUVVGQkxFTkJRWEZDTEVOQlFVTkRMRWRCUVVGQkxFTkJRVXRETEV0QlFVRkJMRWRCUVVGQkxFTkJRM1pDTEVsQlFVbERMRWxCUVVGQkxFTkJRVThzUTBGQlFTeERRVU5RUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRFZrTXNUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRMVpETEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hIUVVGSlRDeEhRVUZCUVN4RFFVRkJRU3hEUVVGTFRpeEpRVUZCUVN4RFFVRkxMRU5CUVVORExFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFZEJRV1ZFTEVOQlFVRkJMRU5CUVVsRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRMjVETEVOQlFVRXNSVUZCVmtzc1MwRkJRVUVzUjBGQllVa3NTMEZCUVVFc1EwRkJVVUVzUzBGQlFVRXNRMEZCVFVNc1QwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkZMMElzU1VGQlN5eEpRVUZKYWtNc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWt5UWl4SFFVRkJRU3hEUVVGSk1VSXNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOcVF5eEpRVUZKYTBNc1QwRkJRVUVzUTBGQlZWQXNSMEZCUVVFc1EwRkJTVE5DTEVOQlFVRkJMRU5CUVVGQkxFTkJRMnhDTEVkQlFVbEJMRU5CUVVGQkxFVkJRVXRyUXl4UFFVRkJRU3hGUVVGQlFTeERRVUZYU2l4UFFVRkJRU3hEUVVGUk9VSXNRMEZCUVVFc1EwRkJRVUVzUTBGQk5VSXNRMEZOUVN4SlFVcEJLMElzVDBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUlVrc1EwRkJRU3hGUVVGV1NpeEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hIUVVGVFR5eFBRVUZCUVN4RFFVRlZiRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmJrSTRRaXhQUVVGQlFTeERRVUZST1VJc1EwRkJRVUVzUTBGQlFVRXNSVUZEV2poQ0xFOUJRVUZCTEVOQlFWRTVRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGTExFTkJRVUVzUTBGRlltdERMRTlCUVVGQkxFTkJRVlZRTEVkQlFVRkJMRU5CUkZZelFpeERRVUZCUVN4RFFVRkpaME1zUzBGQlFVRXNRMEZCVFVjc1QwRkJRVUVzUTBGQlVVUXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYkVKSUxFOUJRVUZCTEVWQlFVRkJMRU5CUlZjc1EwRkJRU3hGUVVGWVFTeFBRVUZCUVN4SFFVTkJSaXhKUVVGQlFTeEZRVUZSUlN4UFFVRkJRU3hEUVVGVkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJ6RkNMRTlCUVU5R0xFbEJRVUZCTEVOQlFVRkJMRU5CUjFoUExHTkJRVUZCTEVOQlFYVkNReXhOUVVGQlFTeEZRVUZCUVN4RFFVTnVRaXhIUVVGeFFpeFJRVUZCTEVWQlFVRXNUMEZCVmtFc1RVRkJRVUVzUTBGQmIwSXNUVUZCVHl4RlFVRkJMRU5CUlhSRExFZEJRV01zUTBGQlFTeEhRVVJrUVN4TlFVRkJRU3hEUVVGVGVrTXNTVUZCUVVFc1EwRkJTekJETEVkQlFVRkJMRU5CUVVsRExGRkJRVUZCTEVOQlFWTkdMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRMFVzUTBGQlFTeEZRVUZXUVN4TlFVRkJRU3hEUVVGaExFMUJRVThzUlVGQlFTeERRVWwyUXl4SlFVaEJMRWxCUTBsSExGRkJRVUZCTEVOQlJFRkRMRTlCUVVGQkxFTkJRVlVzUTBGQlFTeERRVVZXUXl4UFFVRkJRU3hEUVVGVkxFVkJRVUVzUTBGRFJ5eERRVUZCTEVWQlFWWk1MRTFCUVVGQkxFVkJRVUZCTEVOQlJYTkRMRU5CUVVFc1JVRkJRU3hEUVVSNlEwY3NVVUZCUVVFc1EwRkJWMGdzVFVGQlFVRXNRMEZCVTBrc1QwRkJRVUVzUlVGRFVETkRMRkZCUVVGQkxFVkJRVUZCTEVOQlFWZHhReXhQUVVGQlFTeERRVUZSTEVkQlFVRXNRMEZCUVN4RlFVbG9RMFVzVFVGQlFVRXNRMEZCVTBjc1VVRkJRVUVzUTBGRFZFVXNUMEZCUVVFc1EwRkJVV3BDTEVsQlFVRkJMRU5CUVV0blFpeFBRVUZCUVN4RFFVRkJRU3hGUVVwVVFTeFBRVUZCUVN4RlFVRkJRU3hEUVUxU0xFOUJRVTlETEU5QlFVRkJMRU5CUVVGQkxFTkJSMWhETEVkQlFVRkJMRU5CUVZsRExFOUJRVUZCTEVWQlFVRkJMRU5CUTFJc1IwRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5ReXhQUVVGQlFTeERRVUZSUml4UFFVRkJRU3hEUVVGQlFTeERRVUZWTEUxQlFVOHNSVUZCUVN4RFFVTndReXhKUVVGSlJpeFBRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkRWa3NzWVVGQlFVRXNRMEZCWjBJc1JVRkJRU3hEUVVOb1FuSkVMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5hTEVsQlFVc3NTVUZCU1RKRExFMUJRVUZCTEVsQlFWVlBMRTlCUVVGQkxFTkJRVk1zUTBGRGVFSXNSMEZCY1VJc1VVRkJRU3hGUVVGQkxFOUJRVlpRTEUxQlFVRkJMRU5CUVc5Q0xFMUJRVThzUlVGQlFTeERRVU4wUTBzc1QwRkJRVUVzUTBGQlVXcENMRWxCUVVGQkxFTkJRVXRzUXl4SlFVRkJRU3hEUVVGTE5rTXNZMEZCUVVFc1EwRkJaVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGNrTlhMRWxCUVVGQkxFTkJRMEVzU1VGQlN5eEpRVUZKUXl4TlFVRkJRU3hKUVVGVlVDeFBRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVOMlFpeEhRVUZCTEVOQlFYTkRMRU5CUVVFc1JVRkJiRU5MTEdGQlFVRkJMRU5CUVdOYUxFOUJRVUZCTEVOQlFWRmpMRTFCUVVGQkxFTkJRVUZCTEVOQlFXVXNRMEZEY2tNc1NVRkJTeXhKUVVGSmFrUXNRMEZCUVVFc1NVRkJTekJETEU5QlFVRkJMRU5CUTFZc1IwRkJRU3hEUVVFd1FpeERRVUZCTEVWQlFYUkNNVU1zUTBGQlFVRXNRMEZCUlcxRExFOUJRVUZCTEVOQlFWRmpMRTFCUVVGQkxFTkJRVUZCTEVOQlFXVXNVMEZCVTBRc1NVRkJRVUVzUTBGRk1VTkVMR0ZCUVVGQkxFTkJRV04wUWl4SlFVRkJRU3hEUVVGTGQwSXNUVUZCUVVFc1EwRkJRVUVzUTBGRGJrSjJSQ3hMUVVGQlFTeEZRVUZUZFVRc1RVRkJRVUVzUTBGSGFrSXNUMEZCVDNaRUxFdEJRVUZCTEVOQlFVRkJMRU5CUjFoM1JDeFpRVUZCUVN4RFFVRnhRbUlzVFVGQlFVRXNSVUZGYWtKQkxFMUJRVUZCTEVOQlFVRkJMRU5CUVd0RExFTkJRVUVzUlVGQlFTeERRVVJzUTBFc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkJUM1pETEZGQlFVRkJMRVZCUVVGQkxFVkJRME54UXl4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlFTeERRVUZqUlN4TlFVRkJRU3hEUVVGVFFTeE5RVUZCUVN4RFFVRlBZeXhMUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjJRc1RVRkJRVUVzUTBGQlQwWXNUMEZCUVVFc1EwRkJVU3hIUVVGQkxFTkJRVUVzUTBGQlFTeERRVWx1Um1sQ0xHRkJRVUZCTEVOQlFYTkNaaXhOUVVGQlFTeEZRVVZzUWtFc1RVRkJRVUVzUTBGQlFVRXNRMEZCYTBNc1EwRkJRU3hGUVVGQkxFTkJSR3hEUVN4TlFVRkJRU3hEUVVGVFFTeE5RVUZCUVN4RFFVRlBka01zVVVGQlFVRXNSVUZCUVVFc1JVRkRRM0ZETEU5QlFVRkJMRU5CUVZFc1IwRkJRU3hEUVVGQkxFTkJRV01zUjBGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFl5eExRVUZCUVN4RFFVRk5aQ3hOUVVGQlFTeERRVUZQUml4UFFVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVbHdSbXRDTEZWQlFVRkJMRU5CUVd0Q0xFTkJRVU5vUWl4TlFVRkJRU3hEUVVGUmFVSXNTVUZCUVVFc1EwRkJUV3BFTEVWQlFVRkJMRWRCUTNSQ2EwUXNWVUZCUVVFc1EwRkJWMnhDTEUxQlFVRkJMRU5CUVZGcFFpeEpRVUZCUVN4RFFVRkJRU3hEUVVGTmVFUXNVVUZCUVVFc1EwRkJVMDhzUlVGQlFVRXNRMEZCUVVFc1EwRkhOME5STEVkQlFVRkJMRU5CUVZreVF5eExRVUZCUVN4RlFVRkJRU3hEUVVOU0xFbEJRVWt6UXl4SFFVRkJRU3hEUVVGTk1rTXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGSmFFSXNUMEZJUVhSRkxHbENRVUZCUVN4RFFVRmhkVVVzU1VGQlFVRXNRMEZCUzBRc1MwRkJRVUVzUTBGQlR6bEVMRXRCUVVGQkxFVkJRVUZCTEVOQlEycENiVUlzUjBGQlFVRXNRMEZCVFc1Q0xFdEJRVUZCTEVkQlFVOXRRaXhIUVVGQlFTeERRVUZOYmtJc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmNFSnRRaXhIUVVGQlFTeERRVUZCUVN4RFFVZFlSQ3hIUVVGQlFTeERRVUZaTkVNc1MwRkJRVUVzUlVGQlFVRXNRMEZEVWl4SlFVRkpNME1zUjBGQlFVRXNRMEZCVFRKRExFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CU1doQ0xFOUJTRUYwUlN4cFFrRkJRVUVzUTBGQllYVkZMRWxCUVVGQkxFTkJRVXRFTEV0QlFVRkJMRU5CUVU4NVJDeExRVUZCUVN4RlFVRkJRU3hEUVVOcVFtMUNMRWRCUVVGQkxFTkJRVTF1UWl4TFFVRkJRU3hIUVVGUGJVSXNSMEZCUVVFc1EwRkJUVzVDTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhCQ2JVSXNSMEZCUVVFc1EwRkJRVUVzUTBGSFdFTXNSMEZCUVVFc1EwRkJXVEJETEV0QlFVRkJMRVZCUVVGQkxFTkJSVklzU1VGQlNURkRMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVU5XTEVsQlFVc3NTVUZCU1dRc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWwzUkN4TFFVRkJRU3hEUVVGTmRrUXNUVUZCUVVFc1EwRkJVVVFzUTBGQlFVRXNSVUZCUVVFc1EwRkJTeXhEUVVOdVF5eEhRVUZKTUVRc1MwRkJRVUVzUTBGQlRUbEVMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUweVJDeExRVUZCUVN4RFFVRk5lRVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCVFN4RFFVTTNRbU1zUjBGQlFVRXNRMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRMDRzUzBGQlFTeERRVVZLUVN4SFFVRkJRU3hGUVVGUE1FTXNTMEZCUVVFc1EwRkJUWGhFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXNzUTBGQlFTeERRVWQwUWl4UFFVRlBZeXhIUVVGQlFTeERRVUZCUVN4RFFVZFlOa01zVDBGQlFVRXNRMEZCWjBKSUxFdEJRVUZCTEVWQlFVRkJMRU5CUlZvc1NVRkJTVWNzVDBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUTJRc1NVRkJTeXhKUVVGSk0wUXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsM1JDeExRVUZCUVN4RFFVRk5ka1FzVFVGQlFVRXNRMEZCVVVRc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3l4RFFVTnVReXhIUVVGSk1FUXNTMEZCUVVFc1EwRkJUVGxFTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMHlSQ3hMUVVGQlFTeERRVUZOZUVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRTeERRVU0zUWpKRUxFOUJRVUZCTEVOQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVOV0xFdEJRVUVzUTBGRlNrRXNUMEZCUVVFc1JVRkJWMGdzUzBGQlFVRXNRMEZCVFhoRUxFTkJRVUZCTEVOQlFVRkJMRU5CUjNKQ0xFOUJRVTh5UkN4UFFVRkJRU3hEUVVGQlFTeERRVWRZUXl4SFFVRkJRU3hEUVVGWExFTkJRVUVzUjBGQlNVTXNUVUZCUVVFc1IwRkJRVUVzUTBGRFdDeEpRVUZKUXl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGVlppeFBRVlJCUkN4TlFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeERRVUZIUlN4UFFVRkJRU3hEUVVGUkxFTkJRVU55UlN4TFFVRkJRU3hEUVVGUGMwVXNVVUZCUVVFc1IwRkJRVUVzUTBGRGRFSklMRTFCUVVGQkxFTkJRVTlGTEU5QlFVRkJMRU5CUVZFc1EwRkJRMUFzUzBGQlFVRXNRMEZCVDFNc1VVRkJRVUVzUjBGQlFVRXNRMEZEYmtJc1IwRkJaMElzUTBGQlFTeEZRVUZhUVN4UlFVRkJRU3hEUVVGbExFTkJRMllzU1VGQlNTOUNMRTlCUVVGQkxFTkJRVlZYTEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRlZMRXRCUVVGQkxFTkJRVUZCTEVOQlFWTkJMRXRCUVVGQkxFTkJRVTFSTEZGQlFVRkJMRU5CUVVGQkxFTkJRVmxTTEV0QlFVRkJMRU5CUTNaRU9VUXNTMEZCUVVFc1JVRkJNa0lzUTBGQlFTeEZRVUZzUW1kRkxFdEJRVUZCTEVOQlFVMTRRaXhQUVVGQlFTeERRVUZCUVN4RFFVRnRRaXhEUVVGQkxFTkJRVWxCTEU5QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpsRE5FSXNVVUZCUVVFc1EwRkJVM0pETEVsQlFVRkJMRU5CUVVzdlFpeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVlliMFVzVVVGQlFVRXNRMEZCUVVFc1EwRkhXRWtzUjBGQlFVRXNRMEZCVnl4RFFVRkJMRWRCUVVsTUxFMUJRVUZCTEVkQlFVRkJMRU5CUTFnc1NVRkJTVU1zVVVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CVldZc1QwRlVRVVFzVFVGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRkJSMFVzVDBGQlFVRXNRMEZCVVN4RFFVRkRja1VzUzBGQlFVRXNRMEZCVDNORkxGRkJRVUZCTEVkQlFVRkJMRU5CUTNSQ1NDeE5RVUZCUVN4RFFVRlBSU3hQUVVGQlFTeERRVUZSTEVOQlFVTlFMRXRCUVVGQkxFTkJRVTlUTEZGQlFVRkJMRWRCUVVGQkxFTkJRMjVDTEVkQlFXZENMRU5CUVVFc1JVRkJXa0VzVVVGQlFVRXNRMEZCWlN4RFFVTm1MRWxCUVVrdlFpeFBRVUZCUVN4RFFVRlZWeXhMUVVGQlFTeERRVUZOUXl4UFFVRkJRU3hEUVVGUlZTeExRVUZCUVN4RFFVRkJRU3hEUVVGVFFTeExRVUZCUVN4RFFVRk5VU3hSUVVGQlFTeERRVUZCUVN4RFFVRlpVaXhMUVVGQlFTeERRVU4yUkRsRUxFdEJRVUZCTEVWQlFUSkNMRU5CUVVFc1JVRkJiRUpuUlN4TFFVRkJRU3hEUVVGTmVFSXNUMEZCUVVFc1EwRkJRVUVzUTBGQmJVSXNRMEZCUVN4RFFVRkpRU3hQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWM1UXpSQ0xGRkJRVUZCTEVOQlFWTnlReXhKUVVGQlFTeERRVUZMTDBJc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRldHOUZMRkZCUVVGQkxFTkJRVUZCTEVOQlIxaExMRWRCUVVGQkxFTkJRVmNzUTBGQlFTeEhRVUZKVGl4TlFVRkJRU3hIUVVGQlFTeERRVU5ZTEVsQlFVbERMRkZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVlZtTEU5QlZFRkVMRTFCUVVGQkxFTkJRVThzUTBGQlFTeERRVUZCTEVOQlFVZEZMRTlCUVVGQkxFTkJRVkVzUTBGQlEzSkZMRXRCUVVGQkxFTkJRVTl6UlN4UlFVRkJRU3hIUVVGQlFTeERRVU4wUWtnc1RVRkJRVUVzUTBGQlQwVXNUMEZCUVVFc1EwRkJVU3hEUVVGRFVDeExRVUZCUVN4RFFVRlBVeXhSUVVGQlFTeEhRVUZCUVN4RFFVTnVRaXhIUVVGblFpeERRVUZCTEVWQlFWcEJMRkZCUVVGQkxFTkJRV1VzUTBGRFppeEpRVUZKTDBJc1QwRkJRVUVzUTBGQlZWY3NTMEZCUVVFc1EwRkJUVU1zVDBGQlFVRXNRMEZCVVZVc1MwRkJRVUVzUTBGQlFVRXNRMEZCVTBFc1MwRkJRVUVzUTBGQlRWRXNVVUZCUVVFc1EwRkJRVUVzUTBGQldWSXNTMEZCUVVFc1EwRkRka1E1UkN4TFFVRkJRU3hGUVVFeVFpeERRVUZCTEVWQlFXeENaMFVzUzBGQlFVRXNRMEZCVFhoQ0xFOUJRVUZCTEVOQlFVRkJMRU5CUVcxQ0xFTkJRVUVzUTBGQlNVRXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhPVU0wUWl4UlFVRkJRU3hEUVVGVGNrTXNTVUZCUVVFc1EwRkJTeTlDTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlZodlJTeFJRVUZCUVN4RFFVRkJRU3hEUVVkWVRTeE5RVUZCUVN4RFFVRmpMRU5CUVVFc1IwRkJTVkFzVFVGQlFVRXNSMEZCUVVFc1EwRkRaQ3hKUVVGSlF5eFJRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRlZaaXhQUVZSQlJDeE5RVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJRU3hEUVVGSFJTeFBRVUZCUVN4RFFVRlJMRU5CUVVOeVJTeExRVUZCUVN4RFFVRlBjMFVzVVVGQlFVRXNSMEZCUVVFc1EwRkRkRUpJTEUxQlFVRkJMRU5CUVU5RkxFOUJRVUZCTEVOQlFWRXNRMEZCUTFBc1MwRkJRVUVzUTBGQlQxTXNVVUZCUVVFc1IwRkJRVUVzUTBGRGJrSXNSMEZCWjBJc1EwRkJRU3hGUVVGYVFTeFJRVUZCUVN4RFFVRmxMRU5CUTJZc1NVRkJTUzlDTEU5QlFVRkJMRU5CUVZWWExFdEJRVUZCTEVOQlFVMURMRTlCUVVGQkxFTkJRVkZWTEV0QlFVRkJMRU5CUVVGQkxFTkJRVk5CTEV0QlFVRkJMRU5CUVUxUkxGRkJRVUZCTEVOQlFVRkJMRU5CUVZsU0xFdEJRVUZCTEVOQlEzWkVPVVFzUzBGQlFVRXNSVUZCTWtJc1EwRkJRU3hGUVVGc1FtZEZMRXRCUVVGQkxFTkJRVTE0UWl4UFFVRkJRU3hEUVVGQlFTeERRVUZ0UWl4RFFVRkJMRU5CUVVsQkxFOUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJ6bERORUlzVVVGQlFVRXNRMEZCVTNKRExFbEJRVUZCTEVOQlFVc3ZRaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVZZYjBVc1VVRkJRVUVzUTBGQlFVRXNRMEZIV0hoQ0xFZEJRVUZCTEVOQlFWbHJRaXhMUVVGQlFTeEZRVU5FZEVVc2FVSkJRVUZCTEVOQlFXRjFSU3hKUVVGQlFTeERRVUZMUkN4TFFVRkJRU3hEUVVGUE9VUXNTMEZCUVVFc1IwRkROVUpCTEV0QlFVRkJMRU5CUVhkQ0xFTkJRVUVzUlVGQmFFSm5SU3hMUVVGQlFTeERRVUZOYUVVc1MwRkJRVUVzUTBGQlFVRXNRMEZCYVVJc1EwRkJRU3hEUVVGSlFTeExRVUZCUVN4RFFVTTFRa1VzU1VGQlFVRXNRMEZCU3pCRExFZEJRVUZCTEVOQlFVazFReXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVbDRRaXhQUVVGUFNDeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsImNvbnN0IE1hdGhzTGlicmFyeSA9IHJlcXVpcmUoJy4vTWF0aHNMaWJyYXJ5Jyk7XHJcbmNvbnN0IE9iamVjdHNMaWJyYXJ5ID0gcmVxdWlyZSgnLi9PYmplY3RzTGlicmFyeScpO1xyXG5jb25zdCBBcnJheUxpYnJhcnkgPSByZXF1aXJlKCcuL0FycmF5TGlicmFyeScpO1xyXG5cclxubGV0IG1hdGhMaWJyYXJ5ID0gTWF0aHNMaWJyYXJ5KCk7XHJcbmxldCBvYmplY3RMaWJyYXJ5ID0gT2JqZWN0c0xpYnJhcnkoKTtcclxubGV0IGFycmF5TGlicmFyeSA9IEFycmF5TGlicmFyeSgpO1xyXG5cclxuLy8gaW1wb3J0IHsgVHJlZSB9IGZyb20gJy4uL2NsYXNzZXMvVHJlZS5qcyc7XHJcblxyXG5mdW5jdGlvbiBDb21wcmVzc2lvbigpIHtcclxuICAgIGNvbnN0IHNlbGYgPSB7fTtcclxuXHJcbiAgICBzZWxmLmdldEZyZXF1ZW5jeSA9IChkYXRhID0gW10pID0+IHsvL2dldCB0aGUgb2NjdXJyYW5jZSBvZiBzeW1ib2xzIGluIGEgbGlzdFxyXG4gICAgICAgIGNvbnN0IGZyZXF1ZW5jeSA9IHt9O1xyXG4gICAgICAgIGZvciAobGV0IGQgaW4gZGF0YSkge1xyXG4gICAgICAgICAgICBpZiAoZnJlcXVlbmN5W2RhdGFbZF1dID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgZnJlcXVlbmN5W2RhdGFbZF1dID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGZyZXF1ZW5jeVtkYXRhW2RdXSsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZnJlcXVlbmN5O1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZ2V0UHJvYmFiaWxpdGllcyA9IChkYXRhID0gW10pID0+IHsvL2dldCB0aGUgcHJvYmFiaWxpdGllcyBvZiBhbGwgc3ltYm9scyBpbiBhIGxpc3RcclxuICAgICAgICBsZXQgcHJvYnMgPSBzZWxmLmdldEZyZXF1ZW5jeShkYXRhKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiBwcm9icykge1xyXG4gICAgICAgICAgICBwcm9ic1tpXSA9IHByb2JzW2ldIC8gZGF0YS5sZW5ndGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwcm9icztcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmVudHJvcHkgPSAoZGF0YSA9IFtdKSA9PiB7Ly90aGlzIHNob3dzIHRoZSBzaG9ydGVzdCBwb3NzaWJsZSBhdmVyYWdlIGxlbmd0aCBvZiBhIGxvc3NsZXNzIGNvbXByZXNzaW9uXHJcbiAgICAgICAgbGV0IHN1bSA9IDA7XHJcbiAgICAgICAgbGV0IGRhdGFUeXBlID0gYXJyYXlMaWJyYXJ5LmRhdGFUeXBlKGRhdGEpOy8vZ2V0IHRoZSBkYXRhdHlwZSBvZiB0aGUgbGlzdFxyXG4gICAgICAgIGxldCBwcm9iYWJpbGl0aWVzO1xyXG4gICAgICAgIGlmIChkYXRhVHlwZSA9PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICBwcm9iYWJpbGl0aWVzID0gZGF0YTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoZGF0YVR5cGUgPT0gJ3N0cmluZycpIHsvL2dldCB0aGUgc3ltYm9scyBwcm9iYWJpbGl0aWVzXHJcbiAgICAgICAgICAgIHByb2JhYmlsaXRpZXMgPSBPYmplY3QudmFsdWVzKHNlbGYuZ2V0UHJvYmFiaWxpdGllcyhkYXRhKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL1N1bSBvZiAoLXAgbG9nIGJhc2UgMiBvZiBwKVxyXG4gICAgICAgIGZvciAobGV0IHByb2Igb2YgcHJvYmFiaWxpdGllcykge1xyXG4gICAgICAgICAgICBzdW0gKz0gKC1wcm9iICogTWF0aC5sb2cyKHByb2IpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBzdW07XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5pc1VEQyA9IChkYXRhID0gW10pID0+IHsvL2NoZWNrIGlmIGEgbGlzdCBpcyB1bmlxdWVseSBkZWNvZGFibGUgY29kZVxyXG4gICAgICAgIGxldCBmbGFnID0gdHJ1ZSwgbm9QcmVmaXgsIGtlZXBSdW5uaW5nID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgbGV0IGFkZFN1cmZpeCA9IChzdHIpID0+IHtcclxuICAgICAgICAgICAgLy9jaGVjayBpZiBzdWZmaXggaXMgaW4gbGlzdCBhbHJlYWR5IHRoZW4gc3RvcCBydW5uaW5nXHJcbiAgICAgICAgICAgIGlmIChkYXRhLmluY2x1ZGVzKHN0cikpIHtcclxuICAgICAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGtlZXBSdW5uaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGRhdGEucHVzaChzdHIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGNoZWNrUHJlZml4ID0gKHBvcykgPT4gey8vY2hlY2sgZm9yIHByZWZpeFxyXG4gICAgICAgICAgICBub1ByZWZpeCA9IHRydWU7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGkgPT0gcG9zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9za2lwIHRoZSBjdXJyZW50IHBvc2l0aW9uXHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChkYXRhW2ldID09IGRhdGFbcG9zXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vZG91YmxlIGZvdW5kIGluIHRoZSBsaXN0XHJcbiAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGtlZXBSdW5uaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChkYXRhW2ldLmluZGV4T2YoZGF0YVtwb3NdKSA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9hZGQgc3VmZml4IGZvdW5kIHRvIHRoZSBsaXN0XHJcbiAgICAgICAgICAgICAgICAgICAgYWRkU3VyZml4KGRhdGFbaV0ucmVwbGFjZShkYXRhW3Bvc10sICcnKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLy9zdG9wIGNoZWNraW5nIGZvciBwcmVmaXhcclxuICAgICAgICAgICAgICAgIGlmICgha2VlcFJ1bm5pbmcpIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB3aGlsZSAoa2VlcFJ1bm5pbmcpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBjaGVja1ByZWZpeChpKTtcclxuICAgICAgICAgICAgICAgIGlmIChrZWVwUnVubmluZyA9PSBmYWxzZSkgYnJlYWs7Ly9zdG9wIHJ1bm5pbmdcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKG5vUHJlZml4ID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgIC8vaWYgbm8gcHJlZml4IGlzIGZvdW5kIHN0b3AgaXQgaXMgVURDXHJcbiAgICAgICAgICAgICAgICBrZWVwUnVubmluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZmxhZztcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLnNmQWxnb3JpdGhtID0gKGRhdGEgPSBbXSkgPT4ge1xyXG4gICAgICAgIGxldCBmcmVxdWVuY3kgPSBzZWxmLmdldEZyZXF1ZW5jeShkYXRhKTsvL2dldCB0aGUgZnJlcXVlY2llcyBvZiB0aGUgc3ltYm9sc1xyXG4gICAgICAgIGxldCBzb3J0ZWQgPSBvYmplY3RMaWJyYXJ5LnNvcnQoZnJlcXVlbmN5LCB7IHZhbHVlOiB0cnVlIH0pOy8vc29ydCB0aGUgc3ltYm9scyBiYXNlZCBvbiBmcmVxdWVjeSBvZiBvY2N1cnJhbmNlXHJcbiAgICAgICAgbGV0IGNvZGVXb3JkID0gJyc7XHJcblxyXG4gICAgICAgIGxldCB0cmVlID0geyBwYXRoOiAnJywgc2l6ZTogbWF0aExpYnJhcnkuc3VtKE9iamVjdC52YWx1ZXMoc29ydGVkKSksIHZhbHVlOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNvcnRlZCkpIH07Ly9zZXQgYSBjb3B5IG9mIHRoZSBzb3J0ZWQgZGF0YSBhcyBhIHRyZWVcclxuICAgICAgICBsZXQgdGFibGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNvcnRlZCkpOy8vc2V0IHRoZSBzb3J0ZWQgYXMgdGFibGVcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSBpbiB0YWJsZSkge1xyXG4gICAgICAgICAgICB0YWJsZVtpXSA9IHsgZnJlcXVlbmN5OiB0YWJsZVtpXSB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHRyeVN3aXRjaGluZyA9IChub2RlKSA9PiB7Ly9zd2l0Y2ggbm9kZXMgaWYgdGhlIGxlZnQgc2l6ZSBpcyBiaWdnZXIgdGhhbiB0aGUgcmlnaHQgc2lkZVxyXG4gICAgICAgICAgICBpZiAobm9kZVswXS5zaXplID4gbm9kZVsxXS5zaXplKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgdGVtcCA9IG5vZGVbMF07XHJcbiAgICAgICAgICAgICAgICBub2RlWzBdID0gbm9kZVsxXTtcclxuICAgICAgICAgICAgICAgIG5vZGVbMV0gPSB0ZW1wO1xyXG5cclxuICAgICAgICAgICAgICAgIHRlbXAgPSBub2RlWzBdLnBhdGg7XHJcbiAgICAgICAgICAgICAgICBub2RlWzBdLnBhdGggPSBub2RlWzFdLnBhdGhcclxuICAgICAgICAgICAgICAgIG5vZGVbMV0ucGF0aCA9IHRlbXA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG5vZGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgc3BsaXREYXRhID0gKGNvbWluZ05vZGUpID0+IHsvL3NwbGl0IGEgdHJlZVxyXG4gICAgICAgICAgICBsZXQgbm9kZSA9IFt7IHBhdGg6IGNvbWluZ05vZGUucGF0aCArICcwJywgc2l6ZTogMCwgdmFsdWU6IFtdIH0sIHsgcGF0aDogY29taW5nTm9kZS5wYXRoICsgJzEnLCBzaXplOiAwLCB2YWx1ZTogW10gfV07Ly9pbnRvIHR3byBhbG1vc3QgZXF1YWwgbGVuZ3RoXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgaW4gY29taW5nTm9kZS52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vZGVbMF0uc2l6ZSA8IG5vZGVbMV0uc2l6ZSkgey8vc3BsaXQgaW50byAyIGFsbW9zdCBlcXVhbCBub2Rlc1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGVbMF0udmFsdWVbaV0gPSBjb21pbmdOb2RlLnZhbHVlW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGVbMF0uc2l6ZSArPSBjb21pbmdOb2RlLnZhbHVlW2ldO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZVsxXS52YWx1ZVtpXSA9IGNvbWluZ05vZGUudmFsdWVbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZVsxXS5zaXplICs9IGNvbWluZ05vZGUudmFsdWVbaV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIG5vZGUgPSB0cnlTd2l0Y2hpbmcobm9kZSk7XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIG5vZGUpIHtcclxuICAgICAgICAgICAgICAgIGlmIChPYmplY3QudmFsdWVzKG5vZGVbaV0udmFsdWUpLmxlbmd0aCA+IDEpIHsvL2lmIGl0IGhhcyBtb3JlIHRoYW4gMSBzeW1ib2wgaXQncyBhIG5vZGUgdGhlbiBzcGxpdCBpdCBhZ2FpblxyXG4gICAgICAgICAgICAgICAgICAgIG5vZGVbaV0udmFsdWUgPSBzcGxpdERhdGEobm9kZVtpXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHsvL2l0IGlzIGEgbGVhZiwgYWRkIGl0IHRvIHRoZSB0YWJsZSBhbmQgZ2V0IHRoZSBwcm9wZXJ0aWVzXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGtleSA9IE9iamVjdC5rZXlzKG5vZGVbaV0udmFsdWUpWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlW2tleV0uY29kZSA9IG5vZGVbaV0ucGF0aDtcclxuICAgICAgICAgICAgICAgICAgICB0YWJsZVtrZXldLmxlbmd0aCA9IG5vZGVbaV0ucGF0aC5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFibGVba2V5XS5wcm9iYWJpbGl0eSA9IG5vZGVbaV0uc2l6ZSAvIGRhdGEubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlW2tleV0ubG9nID0gTWF0aC5sb2cyKDEgLyB0YWJsZVtrZXldLnByb2JhYmlsaXR5KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRyZWUgPSBzcGxpdERhdGEodHJlZSk7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGQgb2YgZGF0YSkge1xyXG4gICAgICAgICAgICBjb2RlV29yZCArPSB0YWJsZVtkXS5jb2RlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHsgY29kZVdvcmQsIHRhYmxlLCBkYXRhLCB0cmVlIH07XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5odWZmbWFuQ29kaW5nID0gKGRhdGEgPSBbXSkgPT4ge1xyXG4gICAgICAgIGxldCBmcmVxdWVuY3kgPSBzZWxmLmdldFByb2JhYmlsaXRpZXMoZGF0YSk7Ly9nZXQgdGhlIGZyZXF1ZWNpZXMgb2YgdGhlIHN5bWJvbHNcclxuICAgICAgICBsZXQgc29ydGVkID0gb2JqZWN0TGlicmFyeS5zb3J0KGZyZXF1ZW5jeSwgeyB2YWx1ZTogdHJ1ZSB9KTsvL3NvcnQgdGhlIHN5bWJvbHMgYmFzZWQgb24gZnJlcXVlY3kgb2Ygb2NjdXJyYW5jZVxyXG5cclxuICAgICAgICBsZXQgdHJlZSA9IFtdO1xyXG4gICAgICAgIGxldCB0YWJsZSA9IHt9O1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpIGluIHNvcnRlZCkgey8vaW5pdCB0aGUgdGFibGUgYW5kIHRoZSB0cmVlXHJcbiAgICAgICAgICAgIHRhYmxlW2ldID0geyBwcm9iYWJpbGl0eTogc29ydGVkW2ldLCBwYXRoOiAnJywgbGVuZ3RoOiAwLCBwcm9kOiAwIH07XHJcbiAgICAgICAgICAgIHRyZWUucHVzaCh7IHZhbHVlOiBzb3J0ZWRbaV0sIG9yaWdpbnM6IGkgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgZGlnID0gKGNvbWluZyA9IFtdKSA9PiB7Ly9ydW4gdGhlIGFsZ29yaXRobSBsb29wIHVudGlsIG9uZSBub2RlIGlzIHJlbWFpbmluZyB3aXRoIHZhbHVlIG9mICcxJ1xyXG4gICAgICAgICAgICBsZXQgbGVuZ3RoID0gY29taW5nLmxlbmd0aDsvL3NpemUgb2YgbGlzdCBcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSBbXTsvL2luaXQgbm9kZVxyXG4gICAgICAgICAgICBpZiAobGVuZ3RoID4gMSkgey8vIGxpc3QgaGFzIG1vcmUgdGhhbiBvbmUgbm9kZT9cclxuICAgICAgICAgICAgICAgIGxldCBkb3duID0gbGVuZ3RoIC0gMTsvL2luZGV4IG9mIGxhc3QgdHdvIGl0ZW1zIGluIGxpc3RcclxuICAgICAgICAgICAgICAgIGxldCB1cCA9IGxlbmd0aCAtIDI7XHJcbiAgICAgICAgICAgICAgICBsZXQgc3VtID0gY29taW5nW3VwXS52YWx1ZSArIGNvbWluZ1tkb3duXS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIGxldCBhZGRlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb21pbmcubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA9PSB1cCB8fCBpID09IGRvd24pIHsvL3N1bSBsYXN0IDIgaXRlbXMgYW5kIHNraXAgYWRkaW5nIHRoZW1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxlbmd0aCA9PSAyKSB7Ly9pZiBsYXN0IDIgc3VtIHRoZW0gYW5kIGV4aXN0IGRpZ2dpbmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuZXdMZWFmID0geyB2YWx1ZTogc3VtLCBvcmlnaW5zOiBbY29taW5nW3VwXS5vcmlnaW5zLCBjb21pbmdbZG93bl0ub3JpZ2luc10gfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucHVzaChuZXdMZWFmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChjb21pbmdbaV0udmFsdWUgPD0gc3VtICYmICFhZGRlZCkgey8vYWRkIHN1bSBpZiBpdCBoYXMgbm90IGJlZW4gYWRkZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0xlYWYgPSB7IHZhbHVlOiBzdW0sIG9yaWdpbnM6IFtjb21pbmdbdXBdLm9yaWdpbnMsIGNvbWluZ1tkb3duXS5vcmlnaW5zXSB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnB1c2gobmV3TGVhZik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUucHVzaChjb21pbmdbaV0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChsZW5ndGggPiAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGRpZyhub2RlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIG5vZGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0cmVlID0gZGlnKHRyZWUpO1xyXG5cclxuICAgICAgICAvL2dldCB0aGUgcGF0aC9jb2Rld29yZCBmb3JlYWNoIHN5bWJvbFxyXG4gICAgICAgIGxldCBuYW1lSXRlbXMgPSAob3JpZ2lucywgcGF0aCkgPT4ge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIG9yaWdpbnMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9yaWdpbnNbaV0pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZUl0ZW1zKG9yaWdpbnNbaV0sIHBhdGggKyBpKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFibGVbb3JpZ2luc1tpXV0ucGF0aCA9IHBhdGggKyBpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlW29yaWdpbnNbaV1dLmxlbmd0aCA9IHBhdGgubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlW29yaWdpbnNbaV1dLnByb2QgPSBwYXRoLmxlbmd0aCAqIHRhYmxlW29yaWdpbnNbaV1dLnByb2JhYmlsaXR5O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBuYW1lSXRlbXModHJlZVswXS5vcmlnaW5zLCAnJyk7XHJcblxyXG4gICAgICAgIC8vY2FsY3VsYXRlIHRoZSBhdmV2YWdlIGxlbmd0aCBvZiB0aGUgY29kZXNcclxuICAgICAgICBsZXQgYXZnTGVuZ3RoID0gbWF0aExpYnJhcnkuc3VtKG9iamVjdExpYnJhcnkudmFsdWVPZk9iamVjdEFycmF5KHRhYmxlLCAncHJvZCcpKTtcclxuXHJcbiAgICAgICAgZnJlcXVlbmN5ID0gc29ydGVkID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIHJldHVybiB7IHRhYmxlLCBkYXRhLCBhdmdMZW5ndGgsIHRyZWUgfTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBzZWxmLmVuY29kZUh1ZmZtYW4gPSAoZGF0YSwgZGljdGlvbmFyeSA9IFtdKSA9PiB7XHJcbiAgICAvLyAgICAgbGV0IGRpY3Rpb25hcnlMZW5ndGggPSBkaWN0aW9uYXJ5Lmxlbmd0aDtcclxuICAgIC8vICAgICBsZXQgY29kZVdvcmQgPSAnJywgbnl0Q29kZSwgY29kZTtcclxuXHJcbiAgICAvLyAgICAgLy9nZXQgdGhlIGUgYW5kIHIgcGFyYW1ldGVyc1xyXG4gICAgLy8gICAgIGxldCB7IGUsIHIgfSA9ICgoKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGxldCBvayA9IGZhbHNlO1xyXG4gICAgLy8gICAgICAgICBsZXQgZSA9IDAsIHI7XHJcbiAgICAvLyAgICAgICAgIHdoaWxlICghb2spIHtcclxuICAgIC8vICAgICAgICAgICAgIGUrKztcclxuICAgIC8vICAgICAgICAgICAgIHIgPSBkaWN0aW9uYXJ5TGVuZ3RoIC0gMiAqKiBlO1xyXG4gICAgLy8gICAgICAgICAgICAgb2sgPSByIDwgMiAqKiBlO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIHJldHVybiB7IGUsIHIgfTtcclxuICAgIC8vICAgICB9KSgpO1xyXG5cclxuICAgIC8vICAgICBsZXQgZml4ZWRDb2RlID0gKHN5bWJvbCkgPT4gey8vZ2V0IHRoZSBmaXhlZCBjb2RlXHJcbiAgICAvLyAgICAgICAgIGxldCBrID0gZGljdGlvbmFyeS5pbmRleE9mKHN5bWJvbCkgKyAxO1xyXG4gICAgLy8gICAgICAgICBsZXQgY29kZTtcclxuICAgIC8vICAgICAgICAgaWYgKGsgPD0gMiAqIHIpIHsgLy8gMSA8PSBrIDw9IDJyXHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gKGsgLSAxKS50b1N0cmluZygyKTtcclxuICAgIC8vICAgICAgICAgICAgIGNvZGUgPSBBcnJheSgoZSArIDEpIC0gY29kZS5sZW5ndGgpLmZpbGwoMCkuam9pbignJykgKyBjb2RlOyAvLyBlICsgMSByZXByZXNlbnRhdGlvbiBvZiBrIC0gMVxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIGVsc2UgaWYgKGsgPiAyICogcikgey8vayA+IDJyXHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gKGsgLSByIC0gMSkudG9TdHJpbmcoMik7XHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gQXJyYXkoKGUpIC0gY29kZS5sZW5ndGgpLmZpbGwoMCkuam9pbignJykgKyBjb2RlOy8vIGUgcmVwcmVzZW50YXRpb24gb2YgayAtIHIgLSAxXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgcmV0dXJuIGNvZGU7XHJcbiAgICAvLyAgICAgfVxyXG5cclxuICAgIC8vICAgICBsZXQgdXBkYXRlQ291bnQgPSAodCkgPT4gey8vc2V0IHRoZSBjb3VudCBvZiBhIG5vZGUgYW5kIHN3aXRjaCBpZiBsZWZ0IGlzIGdyZWF0ZXIgdGhhbiByaWdodFxyXG4gICAgLy8gICAgICAgICBsZXQgY291bnQgPSB0LmdldEF0dHJpYnV0ZSgnY291bnQnKTtcclxuICAgIC8vICAgICAgICAgY291bnQrKztcclxuICAgIC8vICAgICAgICAgdC5zZXRBdHRyaWJ1dGVzKHsgY291bnQgfSk7XHJcbiAgICAvLyAgICAgICAgIGxldCBwID0gdC5wYXJlbnRUcmVlO1xyXG4gICAgLy8gICAgICAgICBpZiAocCAhPSBudWxsKSB7XHJcbiAgICAvLyAgICAgICAgICAgICB0cnlTd2l0Y2hpbmcocCk7XHJcbiAgICAvLyAgICAgICAgICAgICB1cGRhdGVDb3VudChwKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgbGV0IHRyeVN3aXRjaGluZyA9IChub2RlKSA9PiB7Ly9zd2l0Y2ggaWYgbGVmdCBpcyBncmVhdGVyIHRoYW4gcmlnaHRcclxuICAgIC8vICAgICAgICAgaWYgKG5vZGUudmFsdWVzWzBdLmdldEF0dHJpYnV0ZSgnY291bnQnKSA+IG5vZGUudmFsdWVzWzFdLmdldEF0dHJpYnV0ZSgnY291bnQnKSkge1xyXG4gICAgLy8gICAgICAgICAgICAgbm9kZS5yZXZlcnNlKCk7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9O1xyXG5cclxuICAgIC8vICAgICBsZXQgdHJlZSA9IG5ldyBUcmVlKCk7XHJcbiAgICAvLyAgICAgdHJlZS5zZXRBdHRyaWJ1dGUoJ2NvdW50JywgMCk7XHJcbiAgICAvLyAgICAgbGV0IE5ZVCA9IHRyZWU7XHJcblxyXG4gICAgLy8gICAgIGxldCByZWFkU3ltYm9sID0gKHN5bWJvbCkgPT4ge1xyXG4gICAgLy8gICAgICAgICBsZXQgcyA9IHRyZWUuc2VhcmNoKCh2LCBpKSA9PiB7Ly9zZWFyY2ggYW5kIGdldCBzeW1ib2wgbm9kZSBpZiBhZGRlZCBhbHJlYWR5XHJcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gdi5nZXRBdHRyaWJ1dGUoJ2lkJykgPT0gc3ltYm9sO1xyXG4gICAgLy8gICAgICAgICB9LCB0cmVlLmhlaWdodCk7XHJcblxyXG4gICAgLy8gICAgICAgICBsZXQgdiA9IHMudmFsdWU7XHJcbiAgICAvLyAgICAgICAgIG55dENvZGUgPSB0cmVlLnNlYXJjaCgodiwgaSkgPT4gey8vZ2V0IHRoZSBueXQgbm9kZVxyXG4gICAgLy8gICAgICAgICAgICAgcmV0dXJuIHYuZ2V0QXR0cmlidXRlKCdpZCcpID09ICdueXQnO1xyXG4gICAgLy8gICAgICAgICB9LCB0cmVlLmhlaWdodCkucGF0aC5qb2luKCcnKTtcclxuXHJcbiAgICAvLyAgICAgICAgIGlmICh2ID09IHVuZGVmaW5lZCkgey8vaGFzIG5vdCBiZWVuIGFkZGVkXHJcbiAgICAvLyAgICAgICAgICAgICBOWVQucmVtb3ZlQXR0cmlidXRlKCdpZCcpOy8vcmVtb3ZlIHRoZSBjdXJyZW50IE5ZVCB0YWdcclxuICAgIC8vICAgICAgICAgICAgIE5ZVC5wdXNoKFtdLCBbXSk7Ly9hZGQgdGhlIDIgbm9kZXNcclxuICAgIC8vICAgICAgICAgICAgIGxldCB0ZW1wID0gTllULnZhbHVlc1swXTtcclxuICAgIC8vICAgICAgICAgICAgIHYgPSBOWVQudmFsdWVzWzFdO1xyXG5cclxuICAgIC8vICAgICAgICAgICAgIHRlbXAuc2V0QXR0cmlidXRlcyh7IGlkOiAnbnl0JywgY291bnQ6IDAgfSk7Ly9zZXQgbmV3IG55dFxyXG4gICAgLy8gICAgICAgICAgICAgdi5zZXRBdHRyaWJ1dGVzKHsgaWQ6IHN5bWJvbCwgY291bnQ6IDAgfSk7XHJcbiAgICAvLyAgICAgICAgICAgICBOWVQgPSB0ZW1wO1xyXG4gICAgLy8gICAgICAgICAgICAgY29kZSA9IG55dENvZGUgKyBmaXhlZENvZGUoc3ltYm9sKTsvL255dCArIGZpeGVkQ29kZVxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIGVsc2Uge1xyXG4gICAgLy8gICAgICAgICAgICAgY29kZSA9IHMucGF0aC5qb2luKCcnKTsvL2dldCBwYXRoXHJcbiAgICAvLyAgICAgICAgIH1cclxuXHJcbiAgICAvLyAgICAgICAgIGNvZGVXb3JkICs9IGNvZGU7Ly9jb25jYXQgdGhlIGNvZGVcclxuXHJcbiAgICAvLyAgICAgICAgIHVwZGF0ZUNvdW50KHYpOy8vdXBkYXRlIHRoZSBjb3VudCBzdGFydGluZyBmcm9tIHRoaXMgbm9kZSB0byB0aGUgcm9vdFxyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgZm9yIChsZXQgc3ltYm9sIG9mIGRhdGEpIHtcclxuICAgIC8vICAgICAgICAgcmVhZFN5bWJvbChzeW1ib2wpO1xyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgcmV0dXJuIHsgY29kZVdvcmQsIHRyZWUsIGRhdGEgfTtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBzZWxmLmRlY29kZUh1ZmZtYW4gPSAoY29kZVdvcmQsIGRpY3Rpb25hcnkgPSBbXSkgPT4ge1xyXG4gICAgLy8gICAgIGxldCBkaWN0aW9uYXJ5TGVuZ3RoID0gZGljdGlvbmFyeS5sZW5ndGg7XHJcbiAgICAvLyAgICAgbGV0IGRhdGEgPSAnJywgbnl0Q29kZSwgY29kZSwgcGF0aCA9IFtdO1xyXG4gICAgLy8gICAgIGxldCB0cmVlID0gbmV3IFRyZWUoKTtcclxuICAgIC8vICAgICB0cmVlLnNldEF0dHJpYnV0ZXMoeyBjb3VudDogMCwgaWQ6ICdueXQnIH0pO1xyXG4gICAgLy8gICAgIGxldCBOWVQgPSB0cmVlO1xyXG4gICAgLy8gICAgIGxldCBpO1xyXG4gICAgLy8gICAgIGxldCB7IGUsIHIgfSA9ICgoKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGxldCBvayA9IGZhbHNlO1xyXG4gICAgLy8gICAgICAgICBsZXQgZSA9IDAsIHI7XHJcbiAgICAvLyAgICAgICAgIHdoaWxlICghb2spIHtcclxuICAgIC8vICAgICAgICAgICAgIGUrKztcclxuICAgIC8vICAgICAgICAgICAgIHIgPSBkaWN0aW9uYXJ5TGVuZ3RoIC0gMiAqKiBlO1xyXG4gICAgLy8gICAgICAgICAgICAgb2sgPSByIDwgMiAqKiBlO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIHJldHVybiB7IGUsIHIgfTtcclxuICAgIC8vICAgICB9KSgpO1xyXG5cclxuICAgIC8vICAgICBsZXQgdHJ5U3dpdGNoaW5nID0gKG5vZGUpID0+IHsvL3N3aXRjaCBub2RlcyBpZiBsZWZ0IHNpZGUgaXMgZ3JlYXRlciB0aGFuIHJpZ2h0IHNpZGVcclxuICAgIC8vICAgICAgICAgaWYgKG5vZGUudmFsdWVzWzBdLmdldEF0dHJpYnV0ZSgnY291bnQnKSA+IG5vZGUudmFsdWVzWzFdLmdldEF0dHJpYnV0ZSgnY291bnQnKSkge1xyXG4gICAgLy8gICAgICAgICAgICAgbm9kZS5yZXZlcnNlKCk7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9O1xyXG5cclxuICAgIC8vICAgICBsZXQgdXBkYXRlQ291bnQgPSAodCkgPT4gey8vdXBkYXRlIHRoZSBzaXplIG9mIHRoZSBjdXJyZW50IG5vZGUgYW5kIGl0J3MgbmV4dCBwYXJlbnRcclxuICAgIC8vICAgICAgICAgbGV0IGNvdW50ID0gdC5nZXRBdHRyaWJ1dGUoJ2NvdW50Jyk7XHJcbiAgICAvLyAgICAgICAgIGNvdW50Kys7XHJcbiAgICAvLyAgICAgICAgIHQuc2V0QXR0cmlidXRlcyh7IGNvdW50IH0pO1xyXG4gICAgLy8gICAgICAgICBsZXQgcCA9IHQucGFyZW50VHJlZTtcclxuICAgIC8vICAgICAgICAgaWYgKHAgIT0gbnVsbCkge1xyXG4gICAgLy8gICAgICAgICAgICAgdHJ5U3dpdGNoaW5nKHApO1xyXG4gICAgLy8gICAgICAgICAgICAgdXBkYXRlQ291bnQocCk7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gICAgIGxldCByZWFkU3ltYm9sID0gKHN5bWJvbCkgPT4ge1xyXG4gICAgLy8gICAgICAgICBsZXQgcyA9IHRyZWUuc2VhcmNoKCh2KSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gdi5nZXRBdHRyaWJ1dGUoJ2lkJykgPT0gc3ltYm9sOy8vc2VhcmNoIGFuZCBnZXQgc3ltYm9sIGlmIGV4aXN0cyBhbHJlYWR5XHJcbiAgICAvLyAgICAgICAgIH0sIHRyZWUuaGVpZ2h0KTtcclxuXHJcbiAgICAvLyAgICAgICAgIGxldCB2ID0gcy52YWx1ZTtcclxuICAgIC8vICAgICAgICAgbnl0Q29kZSA9IHRyZWUuc2VhcmNoKCh2LCBpKSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gdi5nZXRBdHRyaWJ1dGUoJ2lkJykgPT0gJ255dCc7Ly9nZXQgdGhlIE5ZVCBjb2RlXHJcbiAgICAvLyAgICAgICAgIH0sIHRyZWUuaGVpZ2h0KS5wYXRoLmpvaW4oJycpO1xyXG5cclxuICAgIC8vICAgICAgICAgaWYgKHYgPT0gdW5kZWZpbmVkKSB7Ly9uZXcgc3ltYm9sPyBhZGQgaXQgdG8gdGhlIHRyZWUgd2l0aCBuZXcgTllUXHJcbiAgICAvLyAgICAgICAgICAgICBOWVQucmVtb3ZlQXR0cmlidXRlKCdpZCcpO1xyXG4gICAgLy8gICAgICAgICAgICAgTllULnB1c2goW10sIFtdKTtcclxuICAgIC8vICAgICAgICAgICAgIGxldCB0ZW1wID0gTllULnZhbHVlc1swXTtcclxuICAgIC8vICAgICAgICAgICAgIHYgPSBOWVQudmFsdWVzWzFdO1xyXG5cclxuICAgIC8vICAgICAgICAgICAgIHRlbXAuc2V0QXR0cmlidXRlcyh7IGlkOiAnbnl0JywgY291bnQ6IDAgfSk7XHJcbiAgICAvLyAgICAgICAgICAgICB2LnNldEF0dHJpYnV0ZXMoeyBpZDogc3ltYm9sLCBjb3VudDogMCB9KTtcclxuICAgIC8vICAgICAgICAgICAgIE5ZVCA9IHRlbXA7XHJcbiAgICAvLyAgICAgICAgIH1cclxuXHJcbiAgICAvLyAgICAgICAgIHVwZGF0ZUNvdW50KHYpO1xyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgbGV0IGludGVycHJldGUgPSAobm9kZSkgPT4ge1xyXG4gICAgLy8gICAgICAgICBsZXQgY29kZTtcclxuICAgIC8vICAgICAgICAgaWYgKG5vZGUgPT0gTllUKSB7Ly9pcyBub2RlIE5ZVFxyXG4gICAgLy8gICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBlOyBqKyspIHsvL3JlYWQgbmV4dCA0IGNvZGVzXHJcbiAgICAvLyAgICAgICAgICAgICAgICAgcGF0aC5wdXNoKGNvZGVXb3JkWysraV0pO1xyXG4gICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICAgICAgbGV0IHAgPSBwYXJzZUludChwYXRoLmpvaW4oJycpLCAyKTtcclxuICAgIC8vICAgICAgICAgICAgIGlmIChwIDwgcikgey8vcCBpcyBtb3JlIHRoYW4gciwgcmVhZCAxIG1vcmVcclxuICAgIC8vICAgICAgICAgICAgICAgICBwYXRoLnB1c2goY29kZVdvcmRbKytpXSk7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgcCA9IHBhcnNlSW50KHBhdGguam9pbignJyksIDIpO1xyXG4gICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgcCArPSByOy8vYWRkIHIgdG8gcFxyXG4gICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICAgICAgY29kZSA9IGRpY3Rpb25hcnlbcF07Ly9nZXQgc3ltYm9sIGZyb20gZGljdGlvbmFyeVxyXG4gICAgLy8gICAgICAgICAgICAgcmVhZFN5bWJvbChjb2RlKTsvL2FkZCB0aGlzIHN5bWJvbCB0byB0cmVlXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgZWxzZSB7XHJcbiAgICAvLyAgICAgICAgICAgICBjb2RlID0gbm9kZS5nZXRBdHRyaWJ1dGUoJ2lkJyk7Ly9nZXQgdGhlIHN5bWJvbCBmcm9tIHRoZSB0cmVlXHJcbiAgICAvLyAgICAgICAgICAgICByZWFkU3ltYm9sKGNvZGUpOy8vdXBkYXRlIHRoZSBzeW1ib2xcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICByZXR1cm4gY29kZTtcclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gICAgIGZvciAoaSA9IC0xOyBpIDwgY29kZVdvcmQubGVuZ3RoOyBpKyspIHsvL3N0YXJ0IHdpdGggZW1wdHkgTllUXHJcbiAgICAvLyAgICAgICAgIGxldCBjb2RlID0gY29kZVdvcmRbaV07XHJcbiAgICAvLyAgICAgICAgIGlmIChjb2RlICE9IHVuZGVmaW5lZCkgey8vd2hlbiBub3QgZW1wdHlcclxuICAgIC8vICAgICAgICAgICAgIHBhdGgucHVzaChjb2RlKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICBsZXQgbm9kZSA9IHRyZWUudHJhY2UocGF0aCkudmFsdWU7XHJcbiAgICAvLyAgICAgICAgIGlmIChub2RlLmdldEF0dHJpYnV0ZSgnaWQnKSAhPSB1bmRlZmluZWQpIHsvL2lzIG5vZGUgbGFiZWxsZWRcclxuICAgIC8vICAgICAgICAgICAgIHBhdGggPSBbaXRlbV07XHJcbiAgICAvLyAgICAgICAgICAgICBkYXRhICs9IGludGVycHJldGUobm9kZSk7Ly93aGF0IGlzIHRoaXMgbm9kZVxyXG4gICAgLy8gICAgICAgICAgICAgcGF0aCA9IFtdO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgfVxyXG5cclxuICAgIC8vICAgICByZXR1cm4geyBkYXRhLCB0cmVlLCBjb2RlV29yZCB9O1xyXG4gICAgLy8gfVxyXG5cclxuICAgIHNlbGYuZ29sb21iID0gKG4sIG0pID0+IHtcclxuICAgICAgICBsZXQgcSA9IE1hdGguZmxvb3IobiAvIG0pOy8vc3RlcCAxXHJcbiAgICAgICAgbGV0IHVuYXJ5ID0gQXJyYXkocSkuZmlsbCgxKS5qb2luKCcnKSArICcwJzsvL3VuYXJ5IG9mIHFcclxuXHJcbiAgICAgICAgbGV0IGsgPSBNYXRoLmNlaWwoTWF0aC5sb2cyKG0pKTtcclxuICAgICAgICBsZXQgYyA9IDIgKiogayAtIG07XHJcbiAgICAgICAgbGV0IHIgPSBuICUgbTtcclxuICAgICAgICBsZXQgckMgPSAoKCkgPT4gey8vcmBcclxuICAgICAgICAgICAgbGV0IHZhbHVlID0gci50b1N0cmluZygpO1xyXG4gICAgICAgICAgICBpZiAociA8IGMpIHtcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gci50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSBBcnJheSgoayAtIDEpIC0gdmFsdWUubGVuZ3RoKS5maWxsKDApLmpvaW4oJycpICsgdmFsdWU7Ly9rLTEgYml0cyByZXAgb2YgclxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSAociArIGMpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IEFycmF5KGsgLSB2YWx1ZS5sZW5ndGgpLmZpbGwoMCkuam9pbignJykgKyB2YWx1ZTsvL2sgYml0cyByZXAgb2YgcitjXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH0pKCk7XHJcblxyXG4gICAgICAgIGxldCBjb2RlID0gdW5hcnkgKyByQzsvL2NvbmNhdCB1bmFyeSBhbmQgcidcclxuICAgICAgICByZXR1cm4gY29kZTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmVuY29kZUFyaXRobWV0aWMgPSAoZGF0YSwgcHJvYmFiaWxpdGllcykgPT4ge1xyXG4gICAgICAgIGxldCBnZXRYID0gKG4pID0+IHsvL2YoeChuKSk9IHN1bSBvZiB4KDEpIC4uLi4geChuKVxyXG4gICAgICAgICAgICBsZXQgdmFsdWUgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIHByb2JhYmlsaXRpZXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChuID09IGkpIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSAodmFsdWUgLyAxMCArIHByb2JhYmlsaXRpZXNbaV0gLyAxMCkgKiAxMDAgLyAxMDsvL2hhbmRsZSB0aGUgSlMgZGVjaW1hbCBwcm9ibGVtXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gbCgwKSA9IDAsIHUoMCkgPSAwLCBmeCgwKSA9IDBcclxuICAgICAgICBsZXQgYm91bmRzID0gW3sgbDogMCwgdTogMSB9XTtcclxuXHJcbiAgICAgICAgbGV0IGxvd2VyTiA9IChuKSA9PiB7Ly9sb3dlciBsaW1pdCBvZiBuIGwobikgPSBsKG4tMSkgKyAodShuLTEpIC0gbChuLTEpKSAqIGYoeChuLTEpKVxyXG4gICAgICAgICAgICBsZXQgYm91bmQgPSBib3VuZHNbbl07XHJcbiAgICAgICAgICAgIGxldCBsID0gYm91bmQubCArICgoYm91bmQudSAtIGJvdW5kLmwpICogZ2V0WChkYXRhW25dIC0gMSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCB1cHBlck4gPSAobikgPT4gey8vbG93ZXIgbGltaXQgb2YgbiB1KG4pID0gbChuLTEpICsgKHUobi0xKSAtIGwobi0xKSkgKiBmKHgobikpXHJcbiAgICAgICAgICAgIGxldCBib3VuZCA9IGJvdW5kc1tuXTtcclxuICAgICAgICAgICAgbGV0IHUgPSBib3VuZC5sICsgKChib3VuZC51IC0gYm91bmQubCkgKiBnZXRYKGRhdGFbbl0pKTtcclxuICAgICAgICAgICAgcmV0dXJuIHU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgYm91bmRzLnB1c2goeyBsOiBsb3dlck4oaSksIHU6IHVwcGVyTihpKSB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBuID0gYm91bmRzLnBvcCgpO1xyXG4gICAgICAgIHJldHVybiAobi5sICsgbi51KSAvIDI7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5kZWNvZGVBcml0aG1ldGljID0gKHRhZyA9IDAsIHByb2JhYmlsaXRpZXMpID0+IHtcclxuICAgICAgICBsZXQgZGF0YSA9ICcnO1xyXG4gICAgICAgIGxldCBnZXRYID0gKG4pID0+IHsvL2YoeChuKSk9IHN1bSBvZiB4KDEpIC4uLi4geChuKVxyXG4gICAgICAgICAgICBsZXQgdmFsdWUgPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIHByb2JhYmlsaXRpZXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChuID09IGkpIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgPSAodmFsdWUgLyAxMCArIHByb2JhYmlsaXRpZXNbaV0gLyAxMCkgKiAxMDAgLyAxMDsvL2hhbmRsZSB0aGUgSlMgZGVjaW1hbCBwcm9ibGVtXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gbCgwKSA9IDAsIHUoMCkgPSAwLCBmeCgwKSA9IDBcclxuICAgICAgICBsZXQgYm91bmRzID0gW3sgbDogMCwgdTogMSB9XTtcclxuXHJcbiAgICAgICAgbGV0IGxvd2VyTiA9IChuKSA9PiB7Ly9sb3dlciBsaW1pdCBvZiBuIGwobikgPSBsKG4tMSkgKyAodShuLTEpIC0gbChuLTEpKSAqIGYoeChuLTEpKVxyXG4gICAgICAgICAgICBsZXQgYm91bmQgPSBib3VuZHNbbl07XHJcbiAgICAgICAgICAgIGxldCBsID0gYm91bmQubCArICgoYm91bmQudSAtIGJvdW5kLmwpICogZ2V0WChkYXRhW25dIC0gMSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCB1cHBlck4gPSAobikgPT4gey8vbG93ZXIgbGltaXQgb2YgbiB1KG4pID0gbChuLTEpICsgKHUobi0xKSAtIGwobi0xKSkgKiBmKHgobikpXHJcbiAgICAgICAgICAgIGxldCBib3VuZCA9IGJvdW5kc1tuXTtcclxuICAgICAgICAgICAgbGV0IHUgPSBib3VuZC5sICsgKChib3VuZC51IC0gYm91bmQubCkgKiBnZXRYKGRhdGFbbl0pKTtcclxuICAgICAgICAgICAgcmV0dXJuIHU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgY291bnQgPSAwLCBjb21wbGV0ZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICB3aGlsZSAoIWNvbXBsZXRlKSB7Ly9ydW4gdW50aWwgYWxsIHRoZSBjb2RlcyBhcmUgZm91bmRcclxuICAgICAgICAgICAgbGV0IGZvdW5kID0gZmFsc2UsIHggPSAxLCBuID0ge307XHJcblxyXG4gICAgICAgICAgICB3aGlsZSAoIWZvdW5kKSB7Ly8gZm9yIGVhY2ggbmV3IGNvZGVcclxuICAgICAgICAgICAgICAgIGxldCBsID0gbG93ZXJOKGNvdW50LCB4KTtcclxuICAgICAgICAgICAgICAgIGxldCB1ID0gdXBwZXJOKGNvdW50LCB4KTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZSA9IChsID49IHRhZyAmJiB0YWcgPD0gdSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29tcGxldGUpIGJyZWFrOy8vaWYgYWxsIGlzIGZvdW5kIHN0b3AgcnVubmluZ1xyXG5cclxuICAgICAgICAgICAgICAgIGZvdW5kID0gKGwgPCB0YWcgJiYgdGFnIDwgdSk7Ly9jaGVjayBpZiBpdCBzYWN0aXNmaWVzIHRoZSBjb25kaXRpb25zXHJcbiAgICAgICAgICAgICAgICBuID0geyBsLCB1LCB4IH07XHJcbiAgICAgICAgICAgICAgICB4Kys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNvbXBsZXRlKSBicmVhaztcclxuICAgICAgICAgICAgY291bnQrKztcclxuXHJcbiAgICAgICAgICAgIGJvdW5kcy5wdXNoKG4pOy8vYWRkIGNvZGVcclxuICAgICAgICAgICAgZGF0YSArPSBuLng7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZW5jb2RlRGlhZ3JhbSA9IChkYXRhID0gJycsIGRpY3Rpb25hcnkgPSB7fSkgPT4gey8vZGFpZ3JhbSBjb2RpbmdcclxuICAgICAgICBsZXQgaTtcclxuICAgICAgICBsZXQgY29kZVdvcmQgPSAnJztcclxuICAgICAgICBsZXQgZW5jb2RlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgZmlyc3QgPSBkYXRhW2ldOy8vdGFrZSB0d28gYXQgYSB0aW1lXHJcbiAgICAgICAgICAgIGxldCBzZWNvbmQgPSBkYXRhW2kgKyAxXTtcclxuICAgICAgICAgICAgbGV0IHN5bWJvbCA9IGZpcnN0ICsgc2Vjb25kO1xyXG5cclxuICAgICAgICAgICAgbGV0IGNvZGU7XHJcbiAgICAgICAgICAgIGlmIChkaWN0aW9uYXJ5W3N5bWJvbF0gIT0gdW5kZWZpbmVkKSB7Ly9pcyBzeW1ib2wgaW4gZGljdGlvbmFyeVxyXG4gICAgICAgICAgICAgICAgY29kZSA9IGRpY3Rpb25hcnlbc3ltYm9sXTtcclxuICAgICAgICAgICAgICAgIGkrKzsvL3NldCBjb3VudCB0byBrbm93IGl0IHJlYWQgdHdvXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb2RlID0gZGljdGlvbmFyeVtmaXJzdF07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBjb2RlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29kZVdvcmQgKz0gZW5jb2RlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY29kZVdvcmQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5lbmNvZGVMWjEgPSAoZGF0YSA9ICcnLCBwYXJhbXMgPSB7IHdpbmRvd1NpemU6IDAsIHNlYXJjaFNpemU6IDAsIGxvb2tBaGVhZFNpemU6IDAgfSkgPT4gey8vTFo3Ly9MWjEvL1NsaWRpbmcgd2luZG93XHJcbiAgICAgICAgaWYgKHBhcmFtcy53aW5kb3dTaXplID09IHVuZGVmaW5lZCkgcGFyYW1zLndpbmRvd1NpemUgPSBwYXJhbXMuc2VhcmNoU2l6ZSArIHBhcmFtcy5sb29rQWhlYWRTaXplOy8vaW5pdCB0aGUgd2luZG93LCBzZWFyY2ggYW5kIGxvb2thaGVhZCBzaXplc1xyXG4gICAgICAgIGlmIChwYXJhbXMuc2VhcmNoU2l6ZSA9PSB1bmRlZmluZWQpIHBhcmFtcy5zZWFyY2hTaXplID0gcGFyYW1zLndpbmRvd1NpemUgLSBwYXJhbXMubG9va0FoZWFkU2l6ZTtcclxuICAgICAgICBpZiAocGFyYW1zLmxvb2tBaGVhZFNpemUgPT0gdW5kZWZpbmVkKSBwYXJhbXMubG9va0FoZWFkU2l6ZSA9IHBhcmFtcy53aW5kb3dTaXplIC0gcGFyYW1zLnNlYXJjaFNpemU7XHJcblxyXG5cclxuICAgICAgICBsZXQgaSA9IDAsIGxvb2tBaGVhZFN0b3AsIHNlYXJjaFN0b3AsIGxvb2tBaGVhZEJ1ZmZlciwgc2VhcmNoQnVmZmVyOy8vaW5pdCB0aGUgYnVmZmVycyBhbmQgbG9jYXRpb25zXHJcblxyXG4gICAgICAgIGxldCBnZXRUcmlwbGV0ID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgeCA9IGxvb2tBaGVhZEJ1ZmZlclswXTtcclxuICAgICAgICAgICAgbGV0IHBpY2tlZCA9IHsgbzogMCwgbDogMCwgYzogeCB9Oy8vc2V0IHRoZSB0cmlwbGV0IDxvLCBsLCBjKG4pPlxyXG5cclxuICAgICAgICAgICAgaWYgKHNlYXJjaEJ1ZmZlci5pbmNsdWRlcyh4KSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGZvdW5kTWF0Y2hlcyA9IFtdOy8vc3RvcmFnZSBmb3IgdGhlIG1hdGNoZXNcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgaW4gc2VhcmNoQnVmZmVyKSB7Ly9maW5kIGFsbCB0aGUgbWF0Y2hlcyBpbiBzZWFyY2ggYnVmZmVyXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlYXJjaEJ1ZmZlcltpXSA9PSBwaWNrZWQuYykge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGluZGV4SW5EYXRhID0gK3NlYXJjaFN0b3AgKyAraSwvL3RoaXMgaXMgdGhlIGpvaW50IG9mIHRoZSBzZWFyY2ggYW5kIGxvb2tBaGVhZCBidWZmZXJzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleEluTG9va0FoZWFkID0gMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ID0gMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoaW5nID0gdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoZWQgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKG1hdGNoaW5nKSB7Ly9rZWVwIGdldHRpbmcgdGhlIG1hdGNoZXNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoZWQucHVzaChkYXRhW2luZGV4SW5EYXRhXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hpbmcgPSBsb29rQWhlYWRCdWZmZXJbaW5kZXhJbkxvb2tBaGVhZCArIGNvdW50XSA9PT0gZGF0YVtpbmRleEluRGF0YSArIGNvdW50XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3VuZE1hdGNoZXMucHVzaCh7IG86IHNlYXJjaEJ1ZmZlci5sZW5ndGggLSBpLCBsOiBtYXRjaGVkLmxlbmd0aCwgYzogbG9va0FoZWFkQnVmZmVyW21hdGNoZWQubGVuZ3RoXSB9KTsvL3NhdmUgbWF0Y2hlc1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBwaWNrZWQgPSBmb3VuZE1hdGNoZXNbMF07XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCB5IG9mIGZvdW5kTWF0Y2hlcykgey8vZ2V0IHRoZSBtYXRjaCB3aXRoIG1vc3Qgc2l6ZSBhbmQgY2xvc2VzdCB0byB0aGUgbG9va0FoZWFkIGJ1ZmZlclxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwaWNrZWQubCA8IHkubCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwaWNrZWQgPSB5O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChwaWNrZWQubCA9PSB5LmwgJiYgcGlja2VkLm8gPiB5Lm8pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGlja2VkID0geTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGkgKz0gcGlja2VkLmw7XHJcbiAgICAgICAgICAgIHJldHVybiBwaWNrZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgbGlzdCA9IFtdO1xyXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHNlYXJjaFN0b3AgPSBpIC0gcGFyYW1zLnNlYXJjaFNpemU7XHJcbiAgICAgICAgICAgIGlmIChzZWFyY2hTdG9wIDwgMCkgc2VhcmNoU3RvcCA9IDA7XHJcbiAgICAgICAgICAgIGxvb2tBaGVhZFN0b3AgPSBpICsgcGFyYW1zLmxvb2tBaGVhZFNpemU7XHJcbiAgICAgICAgICAgIHNlYXJjaEJ1ZmZlciA9IGRhdGEuc2xpY2Uoc2VhcmNoU3RvcCwgaSkuc3BsaXQoJycpO1xyXG4gICAgICAgICAgICBsb29rQWhlYWRCdWZmZXIgPSBkYXRhLnNsaWNlKGksIGxvb2tBaGVhZFN0b3ApLnNwbGl0KCcnKTtcclxuICAgICAgICAgICAgbGlzdC5wdXNoKGdldFRyaXBsZXQoKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmRlY29kZUxaMSA9ICh0cmlwbGV0cyA9IFt7IG86IDAsIGw6IDAsIGM6ICcnIH1dLCBwYXJhbXMgPSB7IHdpbmRvd1NpemU6IDAsIHNlYXJjaFNpemU6IDAsIGxvb2tBaGVhZFNpemU6IDAgfSkgPT4ge1xyXG4gICAgICAgIGxldCB3b3JkID0gJyc7XHJcblxyXG4gICAgICAgIGlmIChwYXJhbXMud2luZG93U2l6ZSA9PSB1bmRlZmluZWQpIHBhcmFtcy53aW5kb3dTaXplID0gcGFyYW1zLnNlYXJjaFNpemUgKyBwYXJhbXMubG9va0FoZWFkU2l6ZTsvL2luaXQgdGhlIHdpbmRvdywgc2VhcmNoIGFuZCBsb29rYWhlYWQgc2l6ZXNcclxuICAgICAgICBpZiAocGFyYW1zLnNlYXJjaFNpemUgPT0gdW5kZWZpbmVkKSBwYXJhbXMuc2VhcmNoU2l6ZSA9IHBhcmFtcy53aW5kb3dTaXplIC0gcGFyYW1zLmxvb2tBaGVhZFNpemU7XHJcbiAgICAgICAgaWYgKHBhcmFtcy5sb29rQWhlYWRTaXplID09IHVuZGVmaW5lZCkgcGFyYW1zLmxvb2tBaGVhZFNpemUgPSBwYXJhbXMud2luZG93U2l6ZSAtIHBhcmFtcy5zZWFyY2hTaXplO1xyXG5cclxuICAgICAgICBmb3IgKGxldCB0IG9mIHRyaXBsZXRzKSB7Ly9kZWNvZGUgZWFjaCB0cmlwbGV0XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdC5sOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHdvcmQgKz0gKHdvcmRbd29yZC5sZW5ndGggLSB0Lm9dKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB3b3JkICs9ICh0LmMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHdvcmQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5lbmNvZGVMWjIgPSAoZGF0YSA9ICcnKSA9PiB7Ly9MWjgvL0xaMlxyXG4gICAgICAgIGxldCBkdXBsZXRzID0gW107Ly9pbml0IGR1cGxldCBsaXN0XHJcbiAgICAgICAgbGV0IGVudHJpZXMgPSBbXTsvL2luaXQgZGljdGlvbmFyeVxyXG4gICAgICAgIGxldCBpLCBsYXN0SW5kZXg7XHJcblxyXG4gICAgICAgIGxldCBnZXRSYW5nZSA9IChyYW5nZSkgPT4gey8vZ2V0IHRoZSBzeW1ib2xzIHdpdGhpbiB0aGUgcmFuZ2VcclxuICAgICAgICAgICAgbGV0IHZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgIGZvciAobGV0IHIgb2YgcmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgIHZhbHVlICs9IGRhdGFbcl07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGVuY29kZSA9IChyYW5nZSkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgZSA9IGdldFJhbmdlKHJhbmdlKTsvL2dldCB0aGUgdmFsdWUgb2YgdGhlIHJhbmdlXHJcbiAgICAgICAgICAgIGxldCBpbmRleCA9IGVudHJpZXMuaW5kZXhPZihlKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBkID0geyBpOiBsYXN0SW5kZXgsIGM6IGVbZS5sZW5ndGggLSAxXSB9Oy8vY3JlYXRlIGR1cGxldFxyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHsvL2N1cnJlbnQgZ3JvdXAgb2Ygc3ltYm9scyBpcyBpbiBub3QgaW4gdGhlIGRpY3Rpb25hcnlcclxuICAgICAgICAgICAgICAgIGVudHJpZXMucHVzaChlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJhbmdlLnB1c2goKytpKTtcclxuICAgICAgICAgICAgICAgIGxhc3RJbmRleCA9IGluZGV4ICsgMTtcclxuICAgICAgICAgICAgICAgIGQgPSBlbmNvZGUocmFuZ2UpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxhc3RJbmRleCA9IDA7XHJcbiAgICAgICAgICAgIGR1cGxldHMucHVzaChlbmNvZGUoW2ldKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZHVwbGV0cztcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmRlY29kZUxaMiA9IChkdXBsZXRzID0gW3sgaTogMCwgYzogJycgfV0pID0+IHtcclxuICAgICAgICBsZXQgZW50cmllcyA9IFtdOy8vaW5pdCBkaWN0aW9uYXJ5XHJcbiAgICAgICAgbGV0IGM7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGQgb2YgZHVwbGV0cykgey8vZGVjb2RlIGVhY2ggZHVwbGV0XHJcbiAgICAgICAgICAgIGMgPSAnJztcclxuICAgICAgICAgICAgaWYgKGQuaSAhPSAwKSB7XHJcbiAgICAgICAgICAgICAgICBjID0gZW50cmllc1tkLmkgLSAxXTsvL2dldCB0aGUgY29kZSBmcm9tIHRoZSBkaWN0aW9uYXJ5XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYyArPSBkLmM7XHJcbiAgICAgICAgICAgIGVudHJpZXMucHVzaChjKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBlbnRyaWVzLmpvaW4oJycpO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZW5jb2RlTFpXID0gKGRhdGEgPSAnJywgaW5pdERpY3Rpb25hcnkgPSBbXSkgPT4ge1xyXG4gICAgICAgIGxldCBjb2RlV29yZCA9IFtdLCBsYXN0SW5kZXgsIGk7XHJcbiAgICAgICAgbGV0IGVudHJpZXMgPSBBcnJheS5mcm9tKGluaXREaWN0aW9uYXJ5KTtcclxuXHJcbiAgICAgICAgbGV0IGdldFJhbmdlID0gKHJhbmdlKSA9PiB7Ly8gZ2V0IHRoZSB2YWx1ZXMgd2l0aGluIHRoZSByYW5nZVxyXG4gICAgICAgICAgICBsZXQgdmFsdWUgPSAnJztcclxuICAgICAgICAgICAgZm9yIChsZXQgciBvZiByYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgdmFsdWUgKz0gZGF0YVtyXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgZW5jb2RlID0gKHJhbmdlKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlID0gZ2V0UmFuZ2UocmFuZ2UpO1xyXG4gICAgICAgICAgICBsZXQgaW5kZXggPSBlbnRyaWVzLmluZGV4T2YoZSk7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAtMSkgey8vaXMgdmFsdWUgbm90IGluIGRpY3Rpb25hcnk/XHJcbiAgICAgICAgICAgICAgICBlbnRyaWVzLnB1c2goZSk7Ly9hZGQgaXQgYW5kIHNldCB0aGUgY291bnRlciB0byB0aGUgbGFzdCByZWFkIHN5bWJvbFxyXG4gICAgICAgICAgICAgICAgaW5kZXggPSAwO1xyXG4gICAgICAgICAgICAgICAgaS0tO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaSsrOy8vc2V0IHRoZSBjb3VudGVyIHRvIHRoZSBuZXh0IHN5bWJvbCBhbmQgdHJ5IGVuY29kaW5nIHRoZSByYW5nZVxyXG4gICAgICAgICAgICAgICAgcmFuZ2UucHVzaChpKTtcclxuICAgICAgICAgICAgICAgIGxhc3RJbmRleCA9IGluZGV4ICs9IDE7Ly9zZXQgdGhlIGxhc3QgcmVhZCBpbmRleCwgdGhpcyBpcyB0aGUgY29kZVxyXG4gICAgICAgICAgICAgICAgZSA9IGVuY29kZShyYW5nZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGxhc3RJbmRleDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxhc3RJbmRleCA9IDA7XHJcbiAgICAgICAgICAgIGxldCBjb2RlID0gZW5jb2RlKFtpXSk7XHJcbiAgICAgICAgICAgIGlmIChjb2RlICE9IHVuZGVmaW5lZCkgey8vY29kZSB3YXMgY3JlYXRlZFxyXG4gICAgICAgICAgICAgICAgY29kZVdvcmQucHVzaChjb2RlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGNvZGVXb3JkO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuZGVjb2RlTFpXID0gKHNpbmdsZXRvbiA9IFtdLCBpbml0RGljdGlvbmFyeSA9IFtdKSA9PiB7XHJcbiAgICAgICAgbGV0IHdvcmQgPSAnJywgY29kZVdvcmQgPSBbXSwgc3RhdGUsIGNvdW50ID0gMCwgcmVidWlsZCA9IGZhbHNlLCBidWlsZFdpdGggPSAnJywgaSwgc3RhcnQgPSAwO1xyXG4gICAgICAgIGxldCBlbnRyaWVzID0gQXJyYXkuZnJvbShpbml0RGljdGlvbmFyeSk7XHJcblxyXG4gICAgICAgIGxldCBnZXRDb2RlID0gKHJhbmdlKSA9PiB7Ly9nZXQgdGhlIGNvZGUgd2l0aGluIHRoZSByYW5nZVxyXG4gICAgICAgICAgICBsZXQgdmFsdWUgPSAnJztcclxuICAgICAgICAgICAgY291bnQgPSAwO1xyXG4gICAgICAgICAgICBidWlsZFdpdGggPSAnJztcclxuICAgICAgICAgICAgZm9yIChsZXQgciBvZiByYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHdvcmRbcl0gPT0gdW5kZWZpbmVkKSB7Ly9pdCBpcyBub3QgY29tcGxldGVcclxuICAgICAgICAgICAgICAgICAgICBjb3VudCsrO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlYnVpbGQgPSB0cnVlOy8vc2V0IHRvIHJlYnVpbGRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1aWxkV2l0aCArPSB3b3JkW3JdOy8vc2V0IHRvIHJlYnVpbGQgd2l0aCBpbmNhc2Ugb2Ygbm90IGNvbXBsZXRlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSArPSB3b3JkW3JdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBkZWNvZGUgPSAocmFuZ2UgPSBbXSkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgZSA9IGdldENvZGUocmFuZ2UpO1xyXG4gICAgICAgICAgICBsZXQgaW5kZXggPSBlbnRyaWVzLmluZGV4T2YoZSk7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAtMSkgey8vaXMgbm90IGluIGRpY3Rpb25hcnk/XHJcbiAgICAgICAgICAgICAgICBlbnRyaWVzLnB1c2goZSk7XHJcbiAgICAgICAgICAgICAgICBpLS07Ly9zZXQgdGhlIGNvdW50ZXIgdG8gdGhlIGxhc3Qgc3ltYm9sIHJlYWRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICsraTtcclxuICAgICAgICAgICAgICAgIHJhbmdlLnB1c2goaSk7XHJcbiAgICAgICAgICAgICAgICBkZWNvZGUocmFuZ2UpOy8vYWRkIG5leHQgc3ltYm9sIGFuZCBkZWNvZGUgYWdhaW5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBidWlsZCA9IChzdGF0ZSkgPT4gey8vYnVpbGQgdXAgdGhlIGRpY3Rpb25hcnkgZnJvbSB0aGUgZGVjb2RlZCB2YWx1ZXNcclxuICAgICAgICAgICAgZm9yIChpID0gc3RhcnQ7IGkgPCB3b3JkLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZSA9IGRlY29kZShbaV0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKGVudHJpZXMubGVuZ3RoID09IHN0YXRlKSB7Ly9zdG9wIGF0IHRoZSBjdXJyZW50IGRlY29kaW5nIHBvaW50XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBpICsgMSAtIGNvdW50Oy8vc2V0IG5leHQgc3RhcnRpbmcgcG9pbnQgYXQgdGhlIGN1cnJlbnQgc3RvcFxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKGxldCBzIG9mIHNpbmdsZXRvbikge1xyXG4gICAgICAgICAgICBsZXQgZSA9IGVudHJpZXNbcyAtIDFdO1xyXG4gICAgICAgICAgICBpZiAoZSA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGJ1aWxkKHMpOy8vYnVpbGQgdGhlIGRpY3Rpb25hcnlcclxuICAgICAgICAgICAgICAgIGUgPSBlbnRyaWVzW3MgLSAxXTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29kZVdvcmQucHVzaChlKTtcclxuICAgICAgICAgICAgd29yZCA9IGNvZGVXb3JkLmpvaW4oJycpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHJlYnVpbGQpIHsvL3JlYnVpbGQgdGhlIGxhc3QgZW50cnkgaW4gdGhlIGRpY3Rpb25hcnkgXHJcbiAgICAgICAgICAgICAgICByZWJ1aWxkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHsvL2tlZXAgYWRkIGl0ZW1zIHRvIHRoZSBidWlsZHdpdGggdG8gdGhlIGJ1aWxkd2l0aCB1bnRpbCBpdCBpcyBjb21wbGV0ZVxyXG4gICAgICAgICAgICAgICAgICAgIGJ1aWxkV2l0aCArPSBidWlsZFdpdGhbaV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb2RlV29yZC5wb3AoKTsvL3NldCBsYXN0IGJ1aWx0IGFuZCBsYXN0IGRlY29kZWQgdG8gdGhlIG5ldyBidWlsZFxyXG4gICAgICAgICAgICAgICAgY29kZVdvcmQucHVzaChidWlsZFdpdGgpO1xyXG4gICAgICAgICAgICAgICAgZW50cmllcy5wb3AoKTtcclxuICAgICAgICAgICAgICAgIGVudHJpZXMucHVzaChidWlsZFdpdGgpO1xyXG4gICAgICAgICAgICAgICAgc3RhcnQgKz0gY291bnQ7Ly9zZXQgdGhlIG5leHQgYnVpbGQgc3RhcnRpbmcgcG9pbnRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHdvcmQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHNlbGY7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQ29tcHJlc3Npb247XHJcbiIsIi8qIHJlbW92ZWQ6IGNvbnN0IF8kQ29tcHJlc3Npb25fMTU9cmVxdWlyZShcIi4vZnVuY3Rpb25zL0NvbXByZXNzaW9uXCIpOyAqLztjbGFzcyBfX0VtcHR5XzE5e312YXIgXyRiYXNlXzE5PXtCYXNlOmNsYXNzIGV4dGVuZHMgXyRDb21wb25lbnRzXzZ7Y29uc3RydWN0b3IodGhlV2luZG93PV9fRW1wdHlfMTkpe3N1cGVyKHRoZVdpbmRvdyksdGhpcy5jb2xvckhhbmRsZXI9bmV3IF8kQ29sb3JQaWNrZXJfNSx0aGlzLmFycmF5PV8kQXJyYXlMaWJyYXJ5XzE0KCksdGhpcy5vYmplY3Q9XyRPYmplY3RzTGlicmFyeV8xNygpLHRoaXMubWF0aD1fJE1hdGhzTGlicmFyeV8xNigpLHRoaXMuYW5hbHl0aWNzPV8kQW5hbHlzaXNMaWJyYXJ5XzEzKCksdGhpcy5pY29ucz1fJEljb25zXzQsdGhpcy5zdHlsZXM9W1wiaHR0cHM6Ly9rYWRlLTk1LmdpdGh1Yi5pby9rZXJkeC9jc3MvdGFibGUuY3NzXCIsXCJodHRwczovL2thZGUtOTUuZ2l0aHViLmlvL2tlcmR4L2Nzcy9jZWxsLmNzc1wiLFwiaHR0cHM6Ly9rYWRlLTk1LmdpdGh1Yi5pby9rZXJkeC9jc3MvZm9ybS5jc3NcIixcImh0dHBzOi8va2FkZS05NS5naXRodWIuaW8va2VyZHgvY3NzL3BpY2tlci5jc3NcIixcImh0dHBzOi8va2FkZS05NS5naXRodWIuaW8va2VyZHgvY3NzL3NlbGVjdC5jc3NcIixcImh0dHBzOi8va2FkZS05NS5naXRodWIuaW8va2VyZHgvY3NzL2pzb24uY3NzXCIsXCJodHRwczovL2thZGUtOTUuZ2l0aHViLmlvL2tlcmR4L2Nzcy9wb3B1cC5jc3NcIl07Zm9yKGxldCBzdHlsZSBvZiB0aGlzLnN0eWxlcyl0aGlzLmxvYWRDc3Moc3R5bGUpfX0sQ29sb3JQaWNrZXI6XyRDb2xvclBpY2tlcl81LC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBQZXJpb2Q6UGVyaW9kICovTWF0cml4Ol8kTWF0cml4XzksRnVuYzpfJEZ1bmNfNyxDb21wb25lbnRzOl8kQ29tcG9uZW50c182LFRlbXBsYXRlOl8kVGVtcGxhdGVfMTIsTmV1cmFsTmV0d29yazpfJE5ldXJhbE5ldHdvcmtfMTAsLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IEljb25zOkljb25zICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IFNoYWRvdzpTaGFkb3cgKi8vKiBjb21tb24tc2hha2UgcmVtb3ZlZDogQXJyYXlMaWJyYXJ5OkFycmF5TGlicmFyeSAqL09iamVjdHNMaWJyYXJ5Ol8kT2JqZWN0c0xpYnJhcnlfMTcsLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IE1hdGhzTGlicmFyeTpNYXRoc0xpYnJhcnkgKi8vKiBjb21tb24tc2hha2UgcmVtb3ZlZDogQW5hbHlzaXNMaWJyYXJ5OkFuYWx5c2lzTGlicmFyeSAqL0NvbXByZXNzaW9uOl8kQ29tcHJlc3Npb25fMTV9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdWNExtcHpJbDBzSW01aGJXVnpJanBiSWtWdGNIUjVJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSWtKaGMyVWlMQ0pEYjIxd2IyNWxiblJ6SWl3aVcyOWlhbVZqZENCUFltcGxZM1JkSWl3aWRHaGxWMmx1Wkc5M0lpd2ljM1Z3WlhJaUxDSjBhR2x6SWl3aVkyOXNiM0pJWVc1a2JHVnlJaXdpUTI5c2IzSlFhV05yWlhJaUxDSmhjbkpoZVNJc0lrRnljbUY1VEdsaWNtRnllU0lzSW05aWFtVmpkQ0lzSWs5aWFtVmpkSE5NYVdKeVlYSjVJaXdpYldGMGFDSXNJazFoZEdoelRHbGljbUZ5ZVNJc0ltRnVZV3g1ZEdsamN5SXNJa0Z1WVd4NWMybHpUR2xpY21GeWVTSXNJbWxqYjI1eklpd2lTV052Ym5NaUxDSnpkSGxzWlhNaUxDSnpkSGxzWlNJc0lteHZZV1JEYzNNaUxDSk5ZWFJ5YVhnaUxDSkdkVzVqSWl3aVZHVnRjR3hoZEdVaUxDSk9aWFZ5WVd4T1pYUjNiM0pySWl3aVEyOXRjSEpsYzNOcGIyNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMREJGUVdWQkxFMUJRVTFCTEZWQlFVRkJMRVZCTkVKT1F5eGhRVUZQUXl4RFFVRlZMRU5CUTJKRExFbEJRVUZCTEVOQk1VSktMR05CUVcxQ1F5eGpRVUZCUVN4RFFVTm1ReXhYUVVGQlFTeERRVUZaUXl4VFFVRkJRU3hEUVVGWlRpeFZRVUZCUVN4RFFVRkJRU3hEUVVOd1FrOHNTMEZCUVVFc1EwRkJUVVFzVTBGQlFVRXNRMEZCUVVFc1EwRkRUa1VzU1VGQlFVRXNRMEZCUzBNc1dVRkJRVUVzUTBGQlpTeEpRVUZKUXl4bFFVRkJRU3hEUVVONFFrWXNTVUZCUVVFc1EwRkJTMGNzUzBGQlFVRXNRMEZCVVVNc2FVSkJRVUZCTEVWQlFVRkJMRU5CUTJKS0xFbEJRVUZCTEVOQlFVdExMRTFCUVVGQkxFTkJRVk5ETEcxQ1FVRkJRU3hGUVVGQlFTeERRVU5rVGl4SlFVRkJRU3hEUVVGTFR5eEpRVUZCUVN4RFFVRlBReXhwUWtGQlFVRXNSVUZCUVVFc1EwRkRXbElzU1VGQlFVRXNRMEZCUzFNc1UwRkJRVUVzUTBGQldVTXNiMEpCUVVGQkxFVkJRVUZCTEVOQlEycENWaXhKUVVGQlFTeERRVUZMVnl4TFFVRkJRU3hEUVVGUlF5eFRRVUZCUVN4RFFVVmlXaXhKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGVExFTkJRMVlzSzBOQlFVRXNRMEZEUVN3NFEwRkJRU3hEUVVOQkxEaERRVUZCTEVOQlEwRXNaMFJCUVVFc1EwRkRRU3huUkVGQlFTeERRVU5CTERoRFFVRkJMRU5CUTBFc0swTkJRVUVzUTBGQlFTeERRVVZLTEVsQlFVc3NTVUZCU1VNc1MwRkJRVUVzU1VGQlUyUXNTVUZCUVVFc1EwRkJTMkVzVFVGQlFVRXNRMEZEYmtKaUxFbEJRVUZCTEVOQlFVdGxMRTlCUVVGQkxFTkJRVkZFTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVDNKQ1dpeFhRVUZCUVN4RFFVRkJRU3hsUVVGQlFTd3dRMEZGUVdNc1RVRkJRVUVzUTBGQlFVRXNWVUZCUVVFc1EwRkRRVU1zU1VGQlFVRXNRMEZCUVVFc1VVRkJRVUVzUTBGRFFYSkNMRlZCUVVGQkxFTkJRVUZCTEdOQlFVRkJMRU5CUTBGelFpeFJRVUZCUVN4RFFVRkJRU3hoUVVGQlFTeERRVU5CUXl4aFFVRkJRU3hEUVVGQlFTeHJRa0ZCUVVFc2MwbEJTVUZpTEdOQlFVRkJMRU5CUVVGQkxHMUNRVUZCUVN4cFNFRkhRV01zVjBGQlFVRXNRMEZCUVVFc1owSkJRVUZCTEVOQlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsImNvbnN0e0Z1bmM6X19GdW5jXzJ9PV8kYmFzZV8xOTtsZXQgX19mdW5jXzI9bmV3IF9fRnVuY18yO3ZhciBfJEFwcExpYnJhcnlfMj1mdW5jdGlvbigpe2xldCBzZWxmPXttYWtlV2ViYXBwOihjYWxsYmFjaz0oKCk9Pnt9KSk9Pntkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e2xldCBhbmNob3I9ZXZlbnQudGFyZ2V0LHBhcmVudEFuY2hvcj1ldmVudC50YXJnZXQuZ2V0UGFyZW50cyhcImFcIiksdXJsPWFuY2hvci5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpO1wiYVwiPT1hbmNob3Iubm9kZU5hbWUudG9Mb3dlckNhc2UoKXx8X19mdW5jXzIuaXNudWxsKHBhcmVudEFuY2hvcil8fChhbmNob3I9cGFyZW50QW5jaG9yKSxfX2Z1bmNfMi5pc251bGwodXJsKSYmIV9fZnVuY18yLmlzbnVsbChwYXJlbnRBbmNob3IpJiYoYW5jaG9yPXBhcmVudEFuY2hvciksdXJsPWFuY2hvci5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpLFwiX2JsYW5rXCI9PWFuY2hvci5nZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIik/d2luZG93Lm9wZW4oX19mdW5jXzIucHJlcGFyZVVybCh1cmwpKTpfX2Z1bmNfMi5pc251bGwodXJsKXx8KGV2ZW50LnByZXZlbnREZWZhdWx0KCksX19mdW5jXzIucHJlcGFyZVVybCh1cmwpIT1sb2NhdGlvbi5ocmVmJiZ3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoXCJwYWdlXCIsXCJ0aXRsZVwiLHVybCksY2FsbGJhY2soKSl9KSx3aW5kb3cub25wb3BzdGF0ZT1jYWxsYmFja30scHJlcGFyZVVybDoodXJsPVwiXCIpPT4odXJsLmluY2x1ZGVzKGxvY2F0aW9uLm9yaWdpbik/dXJsLmluY2x1ZGVzKGxvY2F0aW9uLnByb3RvY29sKXx8KHVybD1sb2NhdGlvbi5wcm90b2NvbCtcIi8vXCIrdXJsKTpfX2Z1bmNfMi51cmxTcGxpdHRlcih1cmwpLmxvY2F0aW9uPT1sb2NhdGlvbi5vcmlnaW4mJih1cmw9bG9jYXRpb24ub3JpZ2luK1wiL1wiK3VybCksdXJsKX07cmV0dXJuIHNlbGYuYWpheD0oKHBhcmFtcz17YXN5bmM6ITAsZGF0YTp7fSx1cmw6XCJcIixtZXRob2Q6XCJcIixzZWN1cmVkOiExfSk9PntwYXJhbXMuYXN5bmM9cGFyYW1zLmFzeW5jfHwhMCxwYXJhbXMuZGF0YT1wYXJhbXMuZGF0YXx8e30scGFyYW1zLnVybD1wYXJhbXMudXJsfHxcIi4vXCIscGFyYW1zLm1ldGhvZD1wYXJhbXMubWV0aG9kfHxcIlBPU1RcIixwYXJhbXMuc2VjdXJlZD1wYXJhbXMuc2VjdXJlZHx8ITEscGFyYW1zLnNlY3VyZWQmJihwYXJhbXMudXJsPVwiaHR0cHM6Ly9jb3JzLWFueXdoZXJlLmhlcm9rdWFwcC5jb20vXCIrcGFyYW1zLnVybCk7bGV0IGRhdGE9bmV3IEZvcm1EYXRhO2lmKHBhcmFtcy5kYXRhIGluc3RhbmNlb2YgRm9ybURhdGEpZGF0YT1wYXJhbXMuZGF0YTtlbHNlIGZvcihsZXQgaSBpbiBwYXJhbXMuZGF0YSlkYXRhLmFwcGVuZChpLHBhcmFtcy5kYXRhW2ldKTtyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e3ZhciByZXF1ZXN0PW5ldyBYTUxIdHRwUmVxdWVzdDtyZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbihldmVudCl7ND09dGhpcy5yZWFkeVN0YXRlJiYyMDA9PXRoaXMuc3RhdHVzJiZyZXNvbHZlKHJlcXVlc3QucmVzcG9uc2VUZXh0KX0sX19mdW5jXzIuaXNzZXQocGFyYW1zLm9ucHJvZ3Jlc3MpJiYocmVxdWVzdC51cGxvYWQub25wcm9ncmVzcz0oZXZlbnQ9PntwYXJhbXMub25wcm9ncmVzcyhldmVudC5sb2FkZWQvZXZlbnQudG90YWwqNTApfSkscmVxdWVzdC5vbnByb2dyZXNzPShldmVudD0+e3BhcmFtcy5vbnByb2dyZXNzKGV2ZW50LmxvYWRlZC9ldmVudC50b3RhbCoxMDApfSkpLHJlcXVlc3Qub25lcnJvcj0oZXJyb3I9PntyZWplY3QoZXJyb3IpfSkscmVxdWVzdC5vcGVuKHBhcmFtcy5tZXRob2QscGFyYW1zLnVybCxwYXJhbXMuYXN5bmMpLHJlcXVlc3Quc2VuZChkYXRhKX0pfSksc2VsZn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrRndjRXhwWW5KaGNua3Vhbk1pWFN3aWJtRnRaWE1pT2xzaVJuVnVZeUlzSW5KbGNYVnBjbVVpTENKbWRXNWpJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW5ObGJHWWlMQ0p0WVd0bFYyVmlZWEJ3SWl3aVkyRnNiR0poWTJzaUxDSmtiMk4xYldWdWRDSXNJbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSWlMQ0psZG1WdWRDSXNJbUZ1WTJodmNpSXNJblJoY21kbGRDSXNJbkJoY21WdWRFRnVZMmh2Y2lJc0ltZGxkRkJoY21WdWRITWlMQ0oxY213aUxDSm5aWFJCZEhSeWFXSjFkR1VpTENKdWIyUmxUbUZ0WlNJc0luUnZURzkzWlhKRFlYTmxJaXdpYVhOdWRXeHNJaXdpZDJsdVpHOTNJaXdpYjNCbGJpSXNJbkJ5WlhCaGNtVlZjbXdpTENKd2NtVjJaVzUwUkdWbVlYVnNkQ0lzSW14dlkyRjBhVzl1SWl3aWFISmxaaUlzSW1ocGMzUnZjbmtpTENKd2RYTm9VM1JoZEdVaUxDSnZibkJ2Y0hOMFlYUmxJaXdpYVc1amJIVmtaWE1pTENKdmNtbG5hVzRpTENKd2NtOTBiMk52YkNJc0luVnliRk53YkdsMGRHVnlJaXdpWVdwaGVDSXNJbkJoY21GdGN5SXNJbUZ6ZVc1aklpd2laR0YwWVNJc0ltMWxkR2h2WkNJc0luTmxZM1Z5WldRaUxDSkdiM0p0UkdGMFlTSXNJbWtpTENKaGNIQmxibVFpTENKUWNtOXRhWE5sSWl3aWNtVnpiMngyWlNJc0luSmxhbVZqZENJc0luSmxjWFZsYzNRaUxDSllUVXhJZEhSd1VtVnhkV1Z6ZENJc0ltOXVjbVZoWkhsemRHRjBaV05vWVc1blpTSXNJblJvYVhNaUxDSnlaV0ZrZVZOMFlYUmxJaXdpYzNSaGRIVnpJaXdpY21WemNHOXVjMlZVWlhoMElpd2lhWE56WlhRaUxDSnZibkJ5YjJkeVpYTnpJaXdpZFhCc2IyRmtJaXdpYkc5aFpHVmtJaXdpZEc5MFlXd2lMQ0p2Ym1WeWNtOXlJaXdpWlhKeWIzSWlMQ0p6Wlc1a0lsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeExRVUZCTEVOQlFVMUJMRWxCUVVGQkxFTkJRVVZCTEZGQlFVRkJMRU5CUVVGQkxFTkJRVk5ETEZOQlFWRXNRMEZEZWtJc1NVRkJTVU1zVVVGQlFVRXNRMEZCVHl4SlFVRkpSaXhSUVVGQlFTeERRWEZIWmtjc2EwSkJRVTlETEVOQmJrZFFMRlZCUVVFc1EwRkRTU3hKUVVGSlF5eEpRVUZCUVN4RFFVRlBMRU5CUlZoRExGVkJRVUZCTEVOQlFXdENMRU5CUVVORExGRkJRVUZCTEVWQlFWY3NTVUZCUVN4RlFVRkJMRU5CUVVFc1IwRkJRU3hEUVVNeFFrTXNVVUZCUVVFc1EwRkJVME1zWjBKQlFVRkJMRU5CUVdsQ0xFOUJRVUVzUTBGQlUwTXNTMEZCUVVFc1JVRkJRVUVzUTBGREwwSXNTVUZCU1VNc1RVRkJRVUVzUTBGQlUwUXNTMEZCUVVFc1EwRkJUVVVzVFVGQlFVRXNRMEZEWmtNc1dVRkJRVUVzUTBGQlpVZ3NTMEZCUVVFc1EwRkJUVVVzVFVGQlFVRXNRMEZCVDBVc1ZVRkJRVUVzUTBGQlZ5eEhRVUZCTEVOQlFVRXNRMEZEZGtORExFZEJRVUZCTEVOQlFVMUtMRTFCUVVGQkxFTkJRVTlMTEZsQlFVRkJMRU5CUVdFc1RVRkJRU3hEUVVGQkxFTkJSVThzUjBGQlFTeEZRVUZxUTB3c1RVRkJRVUVzUTBGQlQwMHNVVUZCUVVFc1EwRkJVME1zVjBGQlFVRXNSVUZCUVVFc1JVRkJlVUpvUWl4UlFVRkJRU3hEUVVGTGFVSXNUVUZCUVVFc1EwRkJUMDRzV1VGQlFVRXNRMEZCUVVFc1IwRkRja1JHTEUxQlFVRkJMRU5CUVZORkxGbEJRVUZCTEVOQlFVRkJMRU5CUjFSWUxGRkJRVUZCTEVOQlFVdHBRaXhOUVVGQlFTeERRVUZQU2l4SFFVRkJRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRlRZaXhSUVVGQlFTeERRVUZMYVVJc1RVRkJRVUVzUTBGQlQwNHNXVUZCUVVFc1EwRkJRVUVzUjBGRGFrTkdMRTFCUVVGQkxFTkJRVk5GTEZsQlFVRkJMRU5CUVVGQkxFTkJSMkpGTEVkQlFVRkJMRU5CUVUxS0xFMUJRVUZCTEVOQlFVOUxMRmxCUVVGQkxFTkJRV0VzVFVGQlFTeERRVUZCTEVOQlIxb3NVVUZCUVN4RlFVWkVUQ3hOUVVGQlFTeERRVUZQU3l4WlFVRkJRU3hEUVVGaExGRkJRVUVzUTBGQlFTeERRVWMzUWtrc1RVRkJRVUVzUTBGQlQwTXNTVUZCUVVFc1EwRkJTMjVDTEZGQlFVRkJMRU5CUVV0dlFpeFZRVUZCUVN4RFFVRlhVQ3hIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWMFFtSXNVVUZCUVVFc1EwRkJTMmxDTEUxQlFVRkJMRU5CUVU5S0xFZEJRVUZCTEVOQlFVRkJMRWRCUTJ4Q1RDeExRVUZCUVN4RFFVRk5ZU3hqUVVGQlFTeEZRVUZCUVN4RFFVTkdja0lzVVVGQlFVRXNRMEZCUzI5Q0xGVkJRVUZCTEVOQlFWZFFMRWRCUVVGQkxFTkJRVUZCTEVWQlFWRlRMRkZCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRVZCUVUxTUxFMUJRVUZCTEVOQlFVOU5MRTlCUVVGQkxFTkJRVkZETEZOQlFVRkJMRU5CUVZVc1RVRkJRU3hEUVVGUkxFOUJRVUVzUTBGQlUxb3NSMEZCUVVFc1EwRkJRVUVzUTBGRGNrWlNMRkZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNWSmhMRTFCUVVGQkxFTkJRVTlSTEZWQlFVRkJMRU5CUVdGeVFpeFJRVUZCUVN4RFFVRkJRU3hEUVVkNFFtVXNWVUZCUVVFc1EwRkJhMElzUTBGQlExQXNSMEZCUVVFc1EwRkJUU3hGUVVGQkxFbEJRMmhDUVN4SFFVRkJRU3hEUVVGSll5eFJRVUZCUVN4RFFVRlRUQ3hSUVVGQlFTeERRVUZUVFN4TlFVRkJRU3hEUVVGQlFTeERRVTFxUW1Zc1IwRkJRVUVzUTBGQlNXTXNVVUZCUVVFc1EwRkJVMHdzVVVGQlFVRXNRMEZCVTA4c1VVRkJRVUVzUTBGQlFVRXNSMEZETlVKb1FpeEhRVUZCUVN4RFFVRk5VeXhSUVVGQlFTeERRVUZUVHl4UlFVRkJRU3hEUVVGWExFbEJRVUVzUTBGQlQyaENMRWRCUVVGQkxFTkJRVUZCTEVOQlRteENZaXhSUVVGQlFTeERRVUZMT0VJc1YwRkJRVUVzUTBGQldXcENMRWRCUVVGQkxFTkJRVUZCTEVOQlEyNUNVeXhSUVVGQlFTeEZRVUZaUVN4UlFVRkJRU3hEUVVGVFRTeE5RVUZCUVN4SFFVTTVRbVlzUjBGQlFVRXNRMEZCVFZNc1VVRkJRVUVzUTBGQlUwMHNUVUZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVTFtTEVkQlFVRkJMRU5CUVVGQkxFTkJUeTlDUVN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFXOUVXQ3hQUVdwRVFWWXNTVUZCUVVFc1EwRkJTelJDTEVsQlFVRkJMRVZCUVU4c1EwRkJRME1zVFVGQlFVRXNRMEZCVXl4RFFVRkZReXhMUVVGQlFTeERRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVseVFpeEhRVUZCUVN4RFFVRkxMRVZCUVVFc1EwRkJTWE5DTEUxQlFVRkJMRU5CUVZFc1JVRkJRU3hEUVVGSlF5eFBRVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeEhRVUZCTEVOQlEzcEZTaXhOUVVGQlFTeERRVUZQUXl4TFFVRkJRU3hEUVVGUlJDeE5RVUZCUVN4RFFVRlBReXhMUVVGQlFTeEZRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRMMEpFTEUxQlFVRkJMRU5CUVU5RkxFbEJRVUZCTEVOQlFVOUdMRTFCUVVGQkxFTkJRVTlGTEVsQlFVRkJMRVZCUVZFc1JVRkJRU3hEUVVNM1FrWXNUVUZCUVVFc1EwRkJUMjVDTEVkQlFVRkJMRU5CUVUxdFFpeE5RVUZCUVN4RFFVRlBia0lzUjBGQlFVRXNSVUZCVHl4SlFVRkJMRU5CUXpOQ2JVSXNUVUZCUVVFc1EwRkJUMGNzVFVGQlFVRXNRMEZCVTBnc1RVRkJRVUVzUTBGQlQwY3NUVUZCUVVFc1JVRkJWU3hOUVVGQkxFTkJRMnBEU0N4TlFVRkJRU3hEUVVGUFNTeFBRVUZCUVN4RFFVRlZTaXhOUVVGQlFTeERRVUZQU1N4UFFVRkJRU3hGUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZGTDBKS0xFMUJRVUZCTEVOQlFVOUpMRTlCUVVGQkxFZEJRMUJLTEUxQlFVRkJMRU5CUVU5dVFpeEhRVUZCUVN4RFFVRk5MSE5EUVVGQkxFTkJRWGxEYlVJc1RVRkJRVUVzUTBGQlQyNUNMRWRCUVVGQkxFTkJRVUZCTEVOQlIycEZMRWxCUVVseFFpeEpRVUZCUVN4RFFVRlBMRWxCUVVsSExGRkJRVUZCTEVOQlEyWXNSMEZCU1V3c1RVRkJRVUVzUTBGQlQwVXNTVUZCUVVFc1dVRkJaMEpITEZGQlFVRkJMRU5CUTNaQ1NDeEpRVUZCUVN4RFFVRlBSaXhOUVVGQlFTeERRVUZQUlN4SlFVRkJRU3hEUVVGQlFTeExRVWRrTEVsQlFVc3NTVUZCU1Vrc1EwRkJRVUVzU1VGQlMwNHNUVUZCUVVFc1EwRkJUMFVzU1VGQlFVRXNRMEZEYWtKQkxFbEJRVUZCTEVOQlFVdExMRTFCUVVGQkxFTkJRVTlFTEVOQlFVRkJMRU5CUVVkT0xFMUJRVUZCTEVOQlFVOUZMRWxCUVVGQkxFTkJRVXRKTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXNURMRTlCUVU4c1NVRkJTVVVzVDBGQlFVRXNRMEZCVVN4RFFVRkRReXhQUVVGQlFTeERRVUZUUXl4TlFVRkJRU3hIUVVGQlFTeERRVU42UWl4SlFVRkpReXhQUVVGQlFTeERRVUZWTEVsQlFVbERMR05CUVVGQkxFTkJSV3hDUkN4UFFVRkJRU3hEUVVGUlJTeHJRa0ZCUVVFc1EwRkJjVUlzVTBGQlZYSkRMRXRCUVVGQkxFTkJRVUZCTEVOQlExb3NRMEZCUVN4RlFVRnVRbk5ETEVsQlFVRkJMRU5CUVV0RExGVkJRVUZCTEVWQlFXdERMRWRCUVVFc1JVRkJaa1FzU1VGQlFVRXNRMEZCUzBVc1RVRkJRVUVzUlVGRE4wSlFMRTlCUVVGQkxFTkJRVkZGTEU5QlFVRkJMRU5CUVZGTkxGbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTWEJDYWtRc1VVRkJRVUVzUTBGQlMydEVMRXRCUVVGQkxFTkJRVTFzUWl4TlFVRkJRU3hEUVVGUGJVSXNWVUZCUVVFc1EwRkJRVUVzUjBGRGJFSlNMRTlCUVVGQkxFTkJRVkZUTEUxQlFVRkJMRU5CUVU5RUxGVkJRVUZCTEVWQlFXTXpReXhMUVVGQlFTeEZRVUZCUVN4RFFVTjZRbmRDTEUxQlFVRkJMRU5CUVU5dFFpeFZRVUZCUVN4RFFVRlpNME1zUzBGQlFVRXNRMEZCVFRaRExFMUJRVUZCTEVOQlFWTTNReXhMUVVGQlFTeERRVUZOT0VNc1MwRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjNKRVdDeFBRVUZCUVN4RFFVRlJVU3hWUVVGQlFTeEZRVUZqTTBNc1MwRkJRVUVzUlVGQlFVRXNRMEZEYkVKM1FpeE5RVUZCUVN4RFFVRlBiVUlzVlVGQlFVRXNRMEZCV1RORExFdEJRVUZCTEVOQlFVMDJReXhOUVVGQlFTeERRVUZUTjBNc1MwRkJRVUVzUTBGQlRUaERMRXRCUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CU1hwRVdDeFBRVUZCUVN4RFFVRlJXU3hQUVVGQlFTeEZRVUZYUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5tWkN4TlFVRkJRU3hEUVVGUFl5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFlZaXhQUVVGQlFTeERRVUZSZUVJc1NVRkJRVUVzUTBGQlMyRXNUVUZCUVVFc1EwRkJUMGNzVFVGQlFVRXNRMEZCVVVnc1RVRkJRVUVzUTBGQlQyNUNMRWRCUVVGQkxFTkJRVXR0UWl4TlFVRkJRU3hEUVVGUFF5eExRVUZCUVN4RFFVRkJRU3hEUVVNdlExVXNUMEZCUVVFc1EwRkJVV01zU1VGQlFVRXNRMEZCUzNaQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV1F2UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiY29uc3R7T2JqZWN0c0xpYnJhcnk6X19PYmplY3RzTGlicmFyeV8zfT1fJGJhc2VfMTk7bGV0IF9fb2JqZWN0TGlicmFyeV8zPV9fT2JqZWN0c0xpYnJhcnlfMygpO3ZhciBfJEluZGV4ZWRMaWJyYXJ5XzM9ZnVuY3Rpb24obmFtZSx2ZXJzaW9uKXtsZXQgc2VsZj17bmFtZTpuYW1lLHZlcnNpb246dmVyc2lvbixpbml0aWFsaXplZDohMX07cmV0dXJuIHNlbGYuaW5kZXhlZERCPXdpbmRvdy5pbmRleGVkREJ8fHdpbmRvdy5tb3pJbmRleGVkREJ8fHdpbmRvdy53ZWJraXRJbmRleGVkREJ8fHdpbmRvdy5tc0luZGV4ZWREQixzZWxmLklEQlRyYW5zYWN0aW9uPXdpbmRvdy5JREJUcmFuc2FjdGlvbnx8d2luZG93LndlYmtpdElEQlRyYW5zYWN0aW9ufHx3aW5kb3cubXNJREJUcmFuc2FjdGlvbixzZWxmLklEQktleVJhbmdlPXdpbmRvdy5JREJLZXlSYW5nZXx8d2luZG93LndlYmtpdElEQktleVJhbmdlfHx3aW5kb3cubXNJREJLZXlSYW5nZSxzZWxmLmluaXQ9ZnVuY3Rpb24oY2FsbGJhY2spe2NvbnN0IHJlcXVlc3Q9c2VsZi5pbmRleGVkREIub3BlbihzZWxmLm5hbWUpO3JlcXVlc3Qub251cGdyYWRlbmVlZGVkPShldmVudD0+e251bGwhPWNhbGxiYWNrJiZjYWxsYmFjayhldmVudC50YXJnZXQucmVzdWx0KX0pLHJlcXVlc3Qub25zdWNjZXNzPShldmVudD0+e3NlbGYudmVyc2lvbj1NYXRoLmZsb29yKHJlcXVlc3QucmVzdWx0LnZlcnNpb24pfHxNYXRoLmZsb29yKHNlbGYudmVyc2lvbiksc2VsZi5pbml0aWFsaXplZD0hMH0pLHJlcXVlc3Qub25lcnJvcj0oZXZlbnQ9Pntjb25zb2xlLmxvZyhldmVudC50YXJnZXQuZXJyb3IpfSl9LHNlbGYuZ2V0VmVyc2lvbj1mdW5jdGlvbigpe3JldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57Y29uc3QgcmVxdWVzdD1zZWxmLmluZGV4ZWREQi5vcGVuKHNlbGYubmFtZSk7cmVxdWVzdC5vbnN1Y2Nlc3M9KGV2ZW50PT57KG51bGw9PXNlbGYudmVyc2lvbnx8c2VsZi52ZXJzaW9uPHJlcXVlc3QucmVzdWx0LnZlcnNpb24pJiYoc2VsZi52ZXJzaW9uPXJlcXVlc3QucmVzdWx0LnZlcnNpb24pLHJlc29sdmUoc2VsZi52ZXJzaW9uKX0pLHJlcXVlc3Qub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pfSl9LHNlbGYub3Blbj1hc3luYyBmdW5jdGlvbihjYWxsYmFjayl7cmV0dXJuIG51bGw9PXNlbGYudmVyc2lvbiYmYXdhaXQgc2VsZi5nZXRWZXJzaW9uKCksbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e2NvbnN0IHJlcXVlc3Q9c2VsZi5pbmRleGVkREIub3BlbihzZWxmLm5hbWUsc2VsZi52ZXJzaW9uKTtyZXF1ZXN0Lm9udXBncmFkZW5lZWRlZD0oZXZlbnQ9PntzZWxmLnZlcnNpb249cmVxdWVzdC5yZXN1bHQudmVyc2lvbixudWxsIT1jYWxsYmFjayYmKGNhbGxiYWNrKGV2ZW50LnRhcmdldC5yZXN1bHQpLm9uZXJyb3I9KHdvcmtlZEV2ZW50PT57cmVqZWN0KHdvcmtlZEV2ZW50LnRhcmdldC5lcnJvcil9KSl9KSxyZXF1ZXN0Lm9uc3VjY2Vzcz0oZXZlbnQ9PntyZXNvbHZlKGV2ZW50LnRhcmdldC5yZXN1bHQpfSkscmVxdWVzdC5vbmVycm9yPShldmVudD0+e3JlamVjdChldmVudC50YXJnZXQuZXJyb3IpfSl9KX0sc2VsZi5jb2xsZWN0aW9uRXhpc3RzPWZ1bmN0aW9uKGNvbGxlY3Rpb24pe3JldHVybiBzZWxmLm9wZW4oKS50aGVuKGRiPT5kYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKGNvbGxlY3Rpb24pKX0sc2VsZi5jcmVhdGVDb2xsZWN0aW9uPWFzeW5jIGZ1bmN0aW9uKC4uLmNvbGxlY3Rpb25zKXtsZXQgdmVyc2lvbj1hd2FpdCBzZWxmLmdldFZlcnNpb24oKTtyZXR1cm4gc2VsZi52ZXJzaW9uPXZlcnNpb24rMSxzZWxmLm9wZW4oZGI9Pntmb3IobGV0IGNvbGxlY3Rpb24gb2YgY29sbGVjdGlvbnMpZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhjb2xsZWN0aW9uKXx8ZGIuY3JlYXRlT2JqZWN0U3RvcmUoY29sbGVjdGlvbix7a2V5UGF0aDpcIl9pZFwifSk7cmV0dXJuIGRifSl9LHNlbGYuZW1wdHlDb2xsZWN0aW9uPWZ1bmN0aW9uKGNvbGxlY3Rpb24pe2xldCByZW1vdmVkQ291bnQ9MCxmb3VuZENvdW50PTA7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntzZWxmLmZpbmQoe2NvbGxlY3Rpb246Y29sbGVjdGlvbixxdWVyeTp7fSxtYW55OiEwfSkudGhlbihmb3VuZD0+e3NlbGYub3BlbigpLnRoZW4oZGI9PntpZihkYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKGNvbGxlY3Rpb24pKXtsZXQgdHJhbnNhY3Rpb249ZGIudHJhbnNhY3Rpb24oY29sbGVjdGlvbixcInJlYWR3cml0ZVwiKSxzdG9yZT10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShjb2xsZWN0aW9uKTt0cmFuc2FjdGlvbi5vbmVycm9yPShldmVudD0+e3JlamVjdChldmVudC50YXJnZXQuZXJyb3IpfSksdHJhbnNhY3Rpb24ub25jb21wbGV0ZT0oZXZlbnQ9PntyZXNvbHZlKHthY3Rpb246XCJlbXB0eWNvbGxlY3Rpb25cIixyZW1vdmVkQ291bnQ6cmVtb3ZlZENvdW50LG9rOnJlbW92ZWRDb3VudD09Zm91bmRDb3VudH0pfSksZm91bmRDb3VudD1mb3VuZC5sZW5ndGg7Zm9yKGxldCBkYXRhIG9mIGZvdW5kKXtsZXQgcmVxdWVzdD1zdG9yZS5kZWxldGUoZGF0YS5faWQpO3JlcXVlc3Qub25lcnJvcj0oZXZlbnQ9Pntjb25zb2xlLmxvZyhgRXJyb3Igd2hpbGUgZGVsZXRpbmcgZG9jdW1lbnRzID0+ICR7ZXZlbnQudGFyZ2V0LmVycm9yfWApfSkscmVxdWVzdC5vbnN1Y2Nlc3M9KGV2ZW50PT57cmVtb3ZlZENvdW50Kyt9KX19ZWxzZSByZXNvbHZlKHtyZW1vdmVkQ291bnQ6cmVtb3ZlZENvdW50LG9rOnJlbW92ZWRDb3VudD09Zm91bmRDb3VudH0pfSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KS5jYXRjaChlcnJvcj0+e3JlamVjdChlcnJvcil9KX0pfSxzZWxmLmZpbmQ9ZnVuY3Rpb24ocGFyYW1zKXtyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e3NlbGYub3BlbigpLnRoZW4oZGI9PntsZXQgZG9jdW1lbnRzPVtdO2lmKGRiLm9iamVjdFN0b3JlTmFtZXMuY29udGFpbnMocGFyYW1zLmNvbGxlY3Rpb24pKXtsZXQgdHJhbnNhY3Rpb249ZGIudHJhbnNhY3Rpb24ocGFyYW1zLmNvbGxlY3Rpb24sXCJyZWFkb25seVwiKTt0cmFuc2FjdGlvbi5vbmVycm9yPShldmVudD0+e3JlamVjdChldmVudC50YXJnZXQuZXJyb3IpfSksdHJhbnNhY3Rpb24ub25jb21wbGV0ZT0oZXZlbnQ9PnsxPT1wYXJhbXMubWFueT9yZXNvbHZlKGRvY3VtZW50cyk6cmVzb2x2ZShkb2N1bWVudHNbMF0pfSk7bGV0IGN1cnNvcixyZXF1ZXN0PXRyYW5zYWN0aW9uLm9iamVjdFN0b3JlKHBhcmFtcy5jb2xsZWN0aW9uKS5vcGVuQ3Vyc29yKCk7cmVxdWVzdC5vbmVycm9yPShldmVudD0+e3JlamVjdChldmVudC50YXJnZXQuZXJyb3IpfSkscmVxdWVzdC5vbnN1Y2Nlc3M9KGV2ZW50PT57KGN1cnNvcj1ldmVudC50YXJnZXQucmVzdWx0KSYmKG51bGw9PXBhcmFtcy5xdWVyeT9kb2N1bWVudHMucHVzaChjdXJzb3IudmFsdWUpOl9fb2JqZWN0TGlicmFyeV8zLmlzU3ViT2JqZWN0KGN1cnNvci52YWx1ZSxwYXJhbXMucXVlcnkpJiZkb2N1bWVudHMucHVzaChjdXJzb3IudmFsdWUpLGN1cnNvci5jb250aW51ZSgpKX0pfWVsc2UgMT09cGFyYW1zLm1hbnk/cmVzb2x2ZShkb2N1bWVudHMpOnJlc29sdmUoZG9jdW1lbnRzWzBdKX0pLmNhdGNoKGVycm9yPT57cmVqZWN0KGVycm9yKX0pfSl9LHNlbGYuZG9jdW1lbnRFeGlzdHM9ZnVuY3Rpb24ocGFyYW1zKXtyZXR1cm4gZGVsZXRlIHBhcmFtcy5tYW55LHNlbGYuZmluZChwYXJhbXMpLnRoZW4ocmVzPT5udWxsIT1yZXMpfSxzZWxmLmdlbmVyYXRlSWQ9ZnVuY3Rpb24ocmVxdWVzdCl7cmV0dXJuIERhdGUubm93KCkudG9TdHJpbmcoMzYpK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpfSxzZWxmLmNoZWNrSWQ9ZnVuY3Rpb24ocmVxdWVzdCxxdWVyeSxjYWxsYmFjayl7bGV0IGlkPXF1ZXJ5Ll9pZHx8c2VsZi5nZW5lcmF0ZUlkKCksZ2V0PXJlcXVlc3QuZ2V0KGlkKTtnZXQub25zdWNjZXNzPShldmVudD0+e251bGwhPWV2ZW50LnRhcmdldC5yZXN1bHQ/c2VsZi5jaGVja0lkKHJlcXVlc3QscXVlcnksY2FsbGJhY2spOmNhbGxiYWNrKGlkKX0pLGdldC5vbmVycm9yPShldmVudD0+e2NvbnNvbGUubG9nKGBFcnJvciBjaGVja2luZyBJRCA9PiAke2V2ZW50LnRhcmdldC5lcnJvcn1gKX0pfSxzZWxmLmFkZD1mdW5jdGlvbihwYXJhbXMsZGIpe3JldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57bGV0IHRyYW5zYWN0aW9uPWRiLnRyYW5zYWN0aW9uKHBhcmFtcy5jb2xsZWN0aW9uLFwicmVhZHdyaXRlXCIpO3RyYW5zYWN0aW9uLm9uZXJyb3I9KGV2ZW50PT57cmVqZWN0KGV2ZW50LnRhcmdldC5lcnJvcil9KSx0cmFuc2FjdGlvbi5vbmNvbXBsZXRlPShldmVudD0+e3Jlc29sdmUoe2FjdGlvbjpcImluc2VydFwiLGRvY3VtZW50czpwYXJhbXMucXVlcnl9KX0pO2xldCByZXF1ZXN0PXRyYW5zYWN0aW9uLm9iamVjdFN0b3JlKHBhcmFtcy5jb2xsZWN0aW9uKTtpZigxPT1wYXJhbXMubWFueSYmQXJyYXkuaXNBcnJheShwYXJhbXMucXVlcnkpKWZvcihsZXQgcXVlcnkgb2YgcGFyYW1zLnF1ZXJ5KXNlbGYuY2hlY2tJZChyZXF1ZXN0LHF1ZXJ5LF9pZD0+e3F1ZXJ5Ll9pZD1faWQscmVxdWVzdC5hZGQocXVlcnkpfSk7ZWxzZSBzZWxmLmNoZWNrSWQocmVxdWVzdCxwYXJhbXMucXVlcnksX2lkPT57cGFyYW1zLnF1ZXJ5Ll9pZD1faWQscmVxdWVzdC5hZGQocGFyYW1zLnF1ZXJ5KX0pfSl9LHNlbGYuaW5zZXJ0PWFzeW5jIGZ1bmN0aW9uKHBhcmFtcyl7cmV0dXJuIGF3YWl0IHNlbGYuY29sbGVjdGlvbkV4aXN0cyhwYXJhbXMuY29sbGVjdGlvbik/c2VsZi5vcGVuKCkudGhlbihkYj0+c2VsZi5hZGQocGFyYW1zLGRiKSkuY2F0Y2goZXJyb3I9PmVycm9yKTpzZWxmLmNyZWF0ZUNvbGxlY3Rpb24ocGFyYW1zLmNvbGxlY3Rpb24pLnRoZW4oZGI9PnNlbGYuYWRkKHBhcmFtcyxkYikpLmNhdGNoKGVycm9yPT5lcnJvcil9LHNlbGYudXBkYXRlPWZ1bmN0aW9uKHBhcmFtcyl7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntzZWxmLm9wZW4oKS50aGVuKGRiPT57ZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyhwYXJhbXMuY29sbGVjdGlvbil8fHJlamVjdChcIkNvbGxlY3Rpb24gbm90IGZvdW5kXCIpO2xldCB0cmFuc2FjdGlvbj1kYi50cmFuc2FjdGlvbihwYXJhbXMuY29sbGVjdGlvbixcInJlYWR3cml0ZVwiKTt0cmFuc2FjdGlvbi5vbmVycm9yPShldmVudD0+e3JlamVjdChldmVudC50YXJnZXQuZXJyb3IpfSksdHJhbnNhY3Rpb24ub25jb21wbGV0ZT0oZXZlbnQ9PntyZXNvbHZlKHthY3Rpb246XCJ1cGRhdGVcIixkb2N1bWVudHM6ZG9jdW1lbnRzfSl9KTtsZXQgcmVxdWVzdD10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShwYXJhbXMuY29sbGVjdGlvbikub3BlbkN1cnNvcigpLGRvY3VtZW50cz17fTtyZXF1ZXN0Lm9uZXJyb3I9KGV2ZW50PT57cmVqZWN0KGV2ZW50LnRhcmdldC5lcnJvcil9KSxyZXF1ZXN0Lm9uc3VjY2Vzcz0oZXZlbnQ9PntsZXQgY3Vyc29yPWV2ZW50LnRhcmdldC5yZXN1bHQsZm91bmQ9ITE7aWYoY3Vyc29yKXtpZihfX29iamVjdExpYnJhcnlfMy5pc1N1Yk9iamVjdChjdXJzb3IudmFsdWUscGFyYW1zLmNoZWNrKSl7Zm91bmQ9ITA7Zm9yKGxldCBpIGluIHBhcmFtcy5xdWVyeSljdXJzb3IudmFsdWVbaV09cGFyYW1zLnF1ZXJ5W2ldO3RyeXtsZXQgcmVzPWN1cnNvci51cGRhdGUoY3Vyc29yLnZhbHVlKTtyZXMub25lcnJvcj0ockV2ZW50PT57ZG9jdW1lbnRzW3JFdmVudC50YXJnZXQucmVzdWx0XT17dmFsdWU6Y3Vyc29yLnZhbHVlLHN0YXR1czohMX19KSxyZXMub25zdWNjZXNzPShyRXZlbnQ9Pntkb2N1bWVudHNbckV2ZW50LnRhcmdldC5yZXN1bHRdPXt2YWx1ZTpjdXJzb3IudmFsdWUsc3RhdHVzOiEwfX0pfWNhdGNoKGVycm9yKXtyZWplY3QoZXJyb3IpfX0xIT1wYXJhbXMubWFueSYmMCE9Zm91bmR8fGN1cnNvci5jb250aW51ZSgpfX0pfSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KX0sc2VsZi5zYXZlPWZ1bmN0aW9uKHBhcmFtcz17Y29sbGVjdGlvbjpcIlwiLHF1ZXJ5Ont9LGNoZWNrOnt9fSl7cmV0dXJuIHNlbGYuZG9jdW1lbnRFeGlzdHMoe2NvbGxlY3Rpb246cGFyYW1zLmNvbGxlY3Rpb24scXVlcnk6cGFyYW1zLmNoZWNrfSkudGhlbihleGlzdHM9PjA9PWV4aXN0cz9zZWxmLmluc2VydChwYXJhbXMpOnNlbGYudXBkYXRlKHBhcmFtcykpfSxzZWxmLmRlbGV0ZT1mdW5jdGlvbihwYXJhbXMpe2xldCBmb3VuZENvdW50PTAscmVtb3ZlZENvdW50PTA7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PntzZWxmLmZpbmQocGFyYW1zKS50aGVuKGZvdW5kPT57c2VsZi5vcGVuKCkudGhlbihkYj0+e2xldCB0cmFuc2FjdGlvbj1kYi50cmFuc2FjdGlvbihwYXJhbXMuY29sbGVjdGlvbixcInJlYWR3cml0ZVwiKSxzdG9yZT10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShwYXJhbXMuY29sbGVjdGlvbik7aWYodHJhbnNhY3Rpb24ub25lcnJvcj0oZXZlbnQ9PntyZWplY3QoZXZlbnQudGFyZ2V0LmVycm9yKX0pLHRyYW5zYWN0aW9uLm9uY29tcGxldGU9KGV2ZW50PT57cmVzb2x2ZSh7YWN0aW9uOlwiZGVsZXRlXCIscmVtb3ZlZENvdW50OnJlbW92ZWRDb3VudCxvazpyZW1vdmVkQ291bnQ9PWZvdW5kQ291bnR9KX0pLEFycmF5LmlzQXJyYXkoZm91bmQpKXtmb3VuZENvdW50PWZvdW5kLmxlbmd0aDtmb3IobGV0IGRhdGEgb2YgZm91bmQpe2xldCByZXF1ZXN0PXN0b3JlLmRlbGV0ZShkYXRhLl9pZCk7cmVxdWVzdC5vbmVycm9yPShldmVudD0+e2NvbnNvbGUubG9nKGBFcnJvciB3aGlsZSBkZWxldGluZyBkb2N1bWVudHMgPT4gJHtldmVudC50YXJnZXQuZXJyb3J9YCl9KSxyZXF1ZXN0Lm9uc3VjY2Vzcz0oZXZlbnQ9PntyZW1vdmVkQ291bnQrK30pfX1lbHNle2ZvdW5kQ291bnQ9MTtsZXQgcmVxdWVzdD1zdG9yZS5kZWxldGUoZm91bmQuX2lkKTtyZXF1ZXN0Lm9uZXJyb3I9KGV2ZW50PT57Y29uc29sZS5sb2coYEVycm9yIHdoaWxlIGRlbGV0aW5nIGRvY3VtZW50cyA9PiAke2V2ZW50LnRhcmdldC5lcnJvcn1gKX0pLHJlcXVlc3Qub25zdWNjZXNzPShldmVudD0+e3JlbW92ZWRDb3VudCsrfSl9fSkuY2F0Y2goZXJyb3I9PntyZWplY3QoZXJyb3IpfSl9KS5jYXRjaChlcnJvcj0+e3JlamVjdChlcnJvcil9KX0pfSxzZWxmfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtsdVpHVjRaV1JNYVdKeVlYSjVMbXB6SWwwc0ltNWhiV1Z6SWpwYklrOWlhbVZqZEhOTWFXSnlZWEo1SWl3aWNtVnhkV2x5WlNJc0ltOWlhbVZqZEV4cFluSmhjbmtpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWJtRnRaU0lzSW5abGNuTnBiMjRpTENKelpXeG1JaXdpYVc1cGRHbGhiR2w2WldRaUxDSnBibVJsZUdWa1JFSWlMQ0ozYVc1a2IzY2lMQ0p0YjNwSmJtUmxlR1ZrUkVJaUxDSjNaV0pyYVhSSmJtUmxlR1ZrUkVJaUxDSnRjMGx1WkdWNFpXUkVRaUlzSWtsRVFsUnlZVzV6WVdOMGFXOXVJaXdpZDJWaWEybDBTVVJDVkhKaGJuTmhZM1JwYjI0aUxDSnRjMGxFUWxSeVlXNXpZV04wYVc5dUlpd2lTVVJDUzJWNVVtRnVaMlVpTENKM1pXSnJhWFJKUkVKTFpYbFNZVzVuWlNJc0ltMXpTVVJDUzJWNVVtRnVaMlVpTENKcGJtbDBJaXdpWTJGc2JHSmhZMnNpTENKeVpYRjFaWE4wSWl3aWIzQmxiaUlzSW05dWRYQm5jbUZrWlc1bFpXUmxaQ0lzSW1WMlpXNTBJaXdpZFc1a1pXWnBibVZrSWl3aWRHRnlaMlYwSWl3aWNtVnpkV3gwSWl3aWIyNXpkV05qWlhOeklpd2lUV0YwYUNJc0ltWnNiMjl5SWl3aWIyNWxjbkp2Y2lJc0ltTnZibk52YkdVaUxDSnNiMmNpTENKbGNuSnZjaUlzSW1kbGRGWmxjbk5wYjI0aUxDSlFjbTl0YVhObElpd2ljbVZ6YjJ4MlpTSXNJbkpsYW1WamRDSXNJbUZ6ZVc1aklpd2lkMjl5YTJWa1JYWmxiblFpTENKamIyeHNaV04wYVc5dVJYaHBjM1J6SWl3aVkyOXNiR1ZqZEdsdmJpSXNJblJvWlc0aUxDSmtZaUlzSW05aWFtVmpkRk4wYjNKbFRtRnRaWE1pTENKamIyNTBZV2x1Y3lJc0ltTnlaV0YwWlVOdmJHeGxZM1JwYjI0aUxDSmpiMnhzWldOMGFXOXVjeUlzSW1OeVpXRjBaVTlpYW1WamRGTjBiM0psSWl3aWEyVjVVR0YwYUNJc0ltVnRjSFI1UTI5c2JHVmpkR2x2YmlJc0luSmxiVzkyWldSRGIzVnVkQ0lzSW1admRXNWtRMjkxYm5RaUxDSm1hVzVrSWl3aWNYVmxjbmtpTENKdFlXNTVJaXdpWm05MWJtUWlMQ0owY21GdWMyRmpkR2x2YmlJc0luTjBiM0psSWl3aWIySnFaV04wVTNSdmNtVWlMQ0p2Ym1OdmJYQnNaWFJsSWl3aVlXTjBhVzl1SWl3aWIyc2lMQ0pzWlc1bmRHZ2lMQ0prWVhSaElpd2laR1ZzWlhSbElpd2lYMmxrSWl3aVkyRjBZMmdpTENKd1lYSmhiWE1pTENKa2IyTjFiV1Z1ZEhNaUxDSmpkWEp6YjNJaUxDSnZjR1Z1UTNWeWMyOXlJaXdpY0hWemFDSXNJblpoYkhWbElpd2lhWE5UZFdKUFltcGxZM1FpTENKamIyNTBhVzUxWlNJc0ltUnZZM1Z0Wlc1MFJYaHBjM1J6SWl3aWNtVnpJaXdpWjJWdVpYSmhkR1ZKWkNJc0lrUmhkR1VpTENKdWIzY2lMQ0owYjFOMGNtbHVaeUlzSW5KaGJtUnZiU0lzSW5Oc2FXTmxJaXdpWTJobFkydEpaQ0lzSW1sa0lpd2laMlYwSWl3aVlXUmtJaXdpUVhKeVlYa2lMQ0pwYzBGeWNtRjVJaXdpYVc1elpYSjBJaXdpZFhCa1lYUmxJaXdpWTJobFkyc2lMQ0pwSWl3aWNrVjJaVzUwSWl3aWMzUmhkSFZ6SWl3aWMyRjJaU0lzSW1WNGFYTjBjeUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzUzBGQlFTeERRVUZOUVN4alFVRkJRU3hEUVVGRlFTeHJRa0ZCUVVFc1EwRkJRVUVzUTBGQmJVSkRMRk5CUVZFc1EwRkRia01zU1VGQlNVTXNhVUpCUVVGQkxFTkJRV2RDUml4clFrRkJRVUVzUlVGQlFVRXNRMEZ6V1hCQ1J5eHpRa0ZCVDBNc1EwRndXVkFzVTBGQmQwSkRMRWxCUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVVGQkxFTkJRekZDTEVsQlFVbERMRWxCUVVGQkxFTkJRVThzUTBGQlJVWXNTVUZCUVVFc1EwRkJRVUVzU1VGQlFVRXNRMEZCVFVNc1QwRkJRVUVzUTBGQlFVRXNUMEZCUVVFc1EwRkJVMFVzVjBGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVGQkxFTkJRVUVzUTBGbldYcERMRTlCTDFoQlJDeEpRVUZCUVN4RFFVRkxSU3hUUVVGQlFTeERRVUZaUXl4TlFVRkJRU3hEUVVGUFJDeFRRVUZCUVN4RlFVRmhReXhOUVVGQlFTeERRVUZQUXl4WlFVRkJRU3hGUVVGblFrUXNUVUZCUVVFc1EwRkJUMFVzWlVGQlFVRXNSVUZCYlVKR0xFMUJRVUZCTEVOQlFVOUhMRmRCUVVGQkxFTkJRemRHVGl4SlFVRkJRU3hEUVVGTFR5eGpRVUZCUVN4RFFVRnBRa29zVFVGQlFVRXNRMEZCVDBrc1kwRkJRVUVzUlVGQmEwSktMRTFCUVVGQkxFTkJRVTlMTEc5Q1FVRkJRU3hGUVVGM1Frd3NUVUZCUVVFc1EwRkJUMDBzWjBKQlFVRkJMRU5CUTNKR1ZDeEpRVUZCUVN4RFFVRkxWU3hYUVVGQlFTeERRVUZqVUN4TlFVRkJRU3hEUVVGUFR5eFhRVUZCUVN4RlFVRmxVQ3hOUVVGQlFTeERRVUZQVVN4cFFrRkJRVUVzUlVGQmNVSlNMRTFCUVVGQkxFTkJRVTlUTEdGQlFVRkJMRU5CUlRWRldpeEpRVUZCUVN4RFFVRkxZU3hKUVVGQlFTeERRVUZQTEZOQlFWVkRMRkZCUVVGQkxFTkJRVUZCTEVOQlEyeENMRTFCUVUxRExFOUJRVUZCTEVOQlFWVm1MRWxCUVVGQkxFTkJRVXRGTEZOQlFVRkJMRU5CUVZWakxFbEJRVUZCTEVOQlFVdG9RaXhKUVVGQlFTeERRVUZMUml4SlFVRkJRU3hEUVVGQlFTeERRVU42UTJsQ0xFOUJRVUZCTEVOQlFWRkZMR1ZCUVVGQkxFVkJRVzFDUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5RUXl4SlFVRkJRU3hGUVVGYVRDeFJRVUZCUVN4RlFVTkRRU3hSUVVGQlFTeERRVUZUU1N4TFFVRkJRU3hEUVVGTlJTeE5RVUZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWt2UWs0c1QwRkJRVUVzUTBGQlVVOHNVMEZCUVVFc1JVRkJZVW9zUzBGQlFVRXNSVUZCUVVFc1EwRkRha0pzUWl4SlFVRkJRU3hEUVVGTFJDeFBRVUZCUVN4RFFVRlZkMElzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRWUXNUMEZCUVVFc1EwRkJVVTBzVFVGQlFVRXNRMEZCVDNSQ0xFOUJRVUZCTEVOQlFVRkJMRVZCUVZsM1FpeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZOZUVJc1NVRkJRVUVzUTBGQlMwUXNUMEZCUVVFc1EwRkJRVUVzUTBGRGNrVkRMRWxCUVVGQkxFTkJRVXRETEZkQlFVRkJMRU5CUVVGQkxFTkJRV01zUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZIZGtKakxFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVmRRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlpSTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVbFVMRXRCUVVGQkxFTkJRVTFGTEUxQlFVRkJMRU5CUVU5UkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1dwRE5VSXNTVUZCUVVFc1EwRkJTelpDTEZWQlFVRkJMRU5CUVdFc1ZVRkJRU3hEUVVOa0xFOUJRVThzU1VGQlNVTXNUMEZCUVVFc1EwRkJVU3hEUVVGRFF5eFBRVUZCUVN4RFFVRlRReXhOUVVGQlFTeEhRVUZCUVN4RFFVTjZRaXhOUVVGTmFrSXNUMEZCUVVFc1EwRkJWV1lzU1VGQlFVRXNRMEZCUzBVc1UwRkJRVUVzUTBGQlZXTXNTVUZCUVVFc1EwRkJTMmhDTEVsQlFVRkJMRU5CUVV0R0xFbEJRVUZCTEVOQlFVRkJMRU5CUTNwRGFVSXNUMEZCUVVFc1EwRkJVVThzVTBGQlFVRXNSVUZCWVVvc1MwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkRSME1zU1VGQlFVRXNSVUZCYUVKdVFpeEpRVUZCUVN4RFFVRkxSQ3hQUVVGQlFTeEZRVUYzUWtNc1NVRkJRVUVzUTBGQlMwUXNUMEZCUVVFc1EwRkJWV2RDTEU5QlFVRkJMRU5CUVZGTkxFMUJRVUZCTEVOQlFVOTBRaXhQUVVGQlFTeEpRVU16UkVNc1NVRkJRVUVzUTBGQlMwUXNUMEZCUVVFc1EwRkJWV2RDTEU5QlFVRkJMRU5CUVZGTkxFMUJRVUZCTEVOQlFVOTBRaXhQUVVGQlFTeERRVUZCUVN4RFFVVnNRMmRETEU5QlFVRkJMRU5CUVZFdlFpeEpRVUZCUVN4RFFVRkxSQ3hQUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRxUW1kQ0xFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVmRRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlpqTEUxQlFVRkJMRU5CUVU5a0xFdEJRVUZCTEVOQlFVMUZMRTFCUVVGQkxFTkJRVTlSTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzJoRE5VSXNTVUZCUVVFc1EwRkJTMmRDTEVsQlFVRkJMRU5CUVU5cFFpeGxRVUZuUW01Q0xGRkJRVUZCTEVOQlFVRkJMRU5CU1hoQ0xFOUJTRzlDU3l4SlFVRkJRU3hGUVVGb1FtNUNMRWxCUVVGQkxFTkJRVXRFTEU5QlFVRkJMRVZCUVVGQkxFMUJRME5ETEVsQlFVRkJMRU5CUVVzMlFpeFZRVUZCUVN4RlFVRkJRU3hEUVVWU0xFbEJRVWxETEU5QlFVRkJMRU5CUVZFc1EwRkJRME1zVDBGQlFVRXNRMEZCVTBNc1RVRkJRVUVzUjBGQlFVRXNRMEZEZWtJc1RVRkJUV3BDTEU5QlFVRkJMRU5CUVZWbUxFbEJRVUZCTEVOQlFVdEZMRk5CUVVGQkxFTkJRVlZqTEVsQlFVRkJMRU5CUVV0b1FpeEpRVUZCUVN4RFFVRkxSaXhKUVVGQlFTeERRVUZOUlN4SlFVRkJRU3hEUVVGTFJDeFBRVUZCUVN4RFFVRkJRU3hEUVVOd1JHZENMRTlCUVVGQkxFTkJRVkZGTEdWQlFVRkJMRVZCUVcxQ1F5eExRVUZCUVN4RlFVRkJRU3hEUVVOMlFteENMRWxCUVVGQkxFTkJRVXRFTEU5QlFVRkJMRU5CUVZWblFpeFBRVUZCUVN4RFFVRlJUU3hOUVVGQlFTeERRVUZQZEVJc1QwRkJRVUVzUTBGRlpHOUNMRWxCUVVGQkxFVkJRVnBNTEZGQlFVRkJMRWRCUTJWQkxGRkJRVUZCTEVOQlFWTkpMRXRCUVVGQkxFTkJRVTFGTEUxQlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFVRkJMRU5CUXpWQ1NTeFBRVUZCUVN4RlFVRlZVeXhYUVVGQlFTeEZRVUZCUVN4RFFVTm1SaXhOUVVGQlFTeERRVUZQUlN4WFFVRkJRU3hEUVVGWlpDeE5RVUZCUVN4RFFVRlBVU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVXQwUTJJc1QwRkJRVUVzUTBGQlVVOHNVMEZCUVVFc1JVRkJZVW9zUzBGQlFVRXNSVUZCUVVFc1EwRkRha0poTEU5QlFVRkJMRU5CUVZGaUxFdEJRVUZCTEVOQlFVMUZMRTFCUVVGQkxFTkJRVTlETEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNwQ1RpeFBRVUZCUVN4RFFVRlJWU3hQUVVGQlFTeEZRVUZYVUN4TFFVRkJRU3hGUVVGQlFTeERRVU5tWXl4TlFVRkJRU3hEUVVGUFpDeExRVUZCUVN4RFFVRk5SU3hOUVVGQlFTeERRVUZQVVN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0b1F6VkNMRWxCUVVGQkxFTkJRVXR0UXl4blFrRkJRVUVzUTBGQmJVSXNVMEZCVlVNc1ZVRkJRVUVzUTBGQlFVRXNRMEZET1VJc1QwRkJUM0JETEVsQlFVRkJMRU5CUVV0blFpeEpRVUZCUVN4RlFVRkJRU3hEUVVGUGNVSXNTVUZCUVVFc1EwRkJTME1zUlVGQlFVRXNSVUZEWWtFc1JVRkJRVUVzUTBGQlIwTXNaMEpCUVVGQkxFTkJRV2xDUXl4UlFVRkJRU3hEUVVGVFNpeFZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVazFRM0JETEVsQlFVRkJMRU5CUVV0NVF5eG5Ra0ZCUVVFc1EwRkJiVUpTTEdWQlFVRkJMRWRCUVcxQ1V5eFhRVUZCUVN4RFFVRkJRU3hEUVVOMlF5eEpRVUZKTTBNc1QwRkJRVUVzUTBGQlFVRXNUVUZCWjBKRExFbEJRVUZCTEVOQlFVczJRaXhWUVVGQlFTeEZRVUZCUVN4RFFVVjZRaXhQUVVSQk4wSXNTVUZCUVVFc1EwRkJTMFFzVDBGQlFVRXNRMEZCVlVFc1QwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlEyeENReXhKUVVGQlFTeERRVUZMWjBJc1NVRkJRVUVzUTBGQlMzTkNMRVZCUVVGQkxFVkJRVUZCTEVOQlEySXNTVUZCU3l4SlFVRkpSaXhWUVVGQlFTeEpRVUZqVFN4WFFVRkJRU3hEUVVOa1NpeEZRVUZCUVN4RFFVRkhReXhuUWtGQlFVRXNRMEZCYVVKRExGRkJRVUZCTEVOQlFWTktMRlZCUVVGQkxFTkJRVUZCTEVWQlF6bENSU3hGUVVGQlFTeERRVUZIU3l4cFFrRkJRVUVzUTBGQmEwSlFMRlZCUVVGQkxFTkJRVmtzUTBGQlJWRXNUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVUVzUTBGQlFTeERRVWR3UkN4UFFVRlBUaXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxtZEVNc1NVRkJRVUVzUTBGQlN6WkRMR1ZCUVVGQkxFTkJRV3RDTEZOQlFWVlVMRlZCUVVGQkxFTkJRVUZCTEVOQlF6ZENMRWxCUVVsVkxGbEJRVUZCTEVOQlFXVXNRMEZCUVN4RFFVRkhReXhWUVVGQlFTeERRVUZoTEVOQlFVRXNRMEZEYmtNc1QwRkJUeXhKUVVGSmFrSXNUMEZCUVVFc1EwRkJVU3hEUVVGRFF5eFBRVUZCUVN4RFFVRlRReXhOUVVGQlFTeEhRVUZCUVN4RFFVTjZRbWhETEVsQlFVRkJMRU5CUVV0blJDeEpRVUZCUVN4RFFVRkxMRU5CUVVWYUxGVkJRVUZCTEVOQlFVRkJMRlZCUVVGQkxFTkJRVmxoTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFWRmlMRWxCUVVGQkxFTkJRVXRqTEV0QlFVRkJMRVZCUVVGQkxFTkJRMnhFYmtRc1NVRkJRVUVzUTBGQlMyZENMRWxCUVVGQkxFVkJRVUZCTEVOQlFVOXhRaXhKUVVGQlFTeERRVUZMUXl4RlFVRkJRU3hGUVVGQlFTeERRVU5pTEVkQlFVbEJMRVZCUVVGQkxFTkJRVWRETEdkQ1FVRkJRU3hEUVVGcFFrTXNVVUZCUVVFc1EwRkJVMG9zVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVNeFF5eEpRVUZKWjBJc1YwRkJRVUVzUTBGQlkyUXNSVUZCUVVFc1EwRkJSMk1zVjBGQlFVRXNRMEZCV1doQ0xGVkJRVUZCTEVOQlFWa3NWMEZCUVN4RFFVRkJMRU5CUTNwRGFVSXNTMEZCUVVFc1EwRkJVVVFzVjBGQlFVRXNRMEZCV1VVc1YwRkJRVUVzUTBGQldXeENMRlZCUVVGQkxFTkJRVUZCTEVOQlJYQkRaMElzVjBGQlFVRXNRMEZCV1ROQ0xFOUJRVUZCTEVWQlFWVlFMRXRCUVVGQkxFVkJRVUZCTEVOQlEyeENZeXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVGTlJTeE5RVUZCUVN4RFFVRlBVU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQ0UW5kQ0xGZEJRVUZCTEVOQlFWbEhMRlZCUVVGQkxFVkJRV0Z5UXl4TFFVRkJRU3hGUVVGQlFTeERRVU55UW1Fc1QwRkJRVUVzUTBGQlVTeERRVUZGZVVJc1RVRkJRVUVzUTBGQlVTeHBRa0ZCUVN4RFFVRnRRbFlzV1VGQlFVRXNRMEZCUVVFc1dVRkJRVUVzUTBGQlkxY3NSVUZCUVVFc1EwRkJTVmdzV1VGQlFVRXNSVUZCWjBKRExGVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlRORlFTeFZRVUZCUVN4RFFVRmhTU3hMUVVGQlFTeERRVUZOVHl4TlFVRkJRU3hEUVVOdVFpeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFbEJRVkZTTEV0QlFVRkJMRU5CUVU4c1EwRkRjRUlzU1VGQlNYQkRMRTlCUVVGQkxFTkJRVlZ6UXl4TFFVRkJRU3hEUVVGTlR5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMUlN4SFFVRkJRU3hEUVVGQlFTeERRVU5vUXpsRExFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVlZRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlJSTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxHdERRVUZCUVN4RlFVRjVRMVFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQxRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVWaUxFOUJRVUZCTEVOQlFWRlBMRk5CUVVGQkxFVkJRVmxLTEV0QlFVRkJMRVZCUVVGQkxFTkJRMmhDTkVJc1dVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1MwRkxVbVlzVDBGQlFVRXNRMEZCVVN4RFFVRkZaU3haUVVGQlFTeERRVUZCUVN4WlFVRkJRU3hEUVVGalZ5eEZRVUZCUVN4RFFVRkpXQ3haUVVGQlFTeEZRVUZuUWtNc1ZVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGYWtSbExFdEJRVUZCTEVOQlFVMXNReXhMUVVGQlFTeEZRVUZCUVN4RFFVTk1TU3hOUVVGQlFTeERRVUZQU2l4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVmFhME1zUzBGQlFVRXNRMEZCVFd4RExFdEJRVUZCTEVWQlFVRkJMRU5CUTB4SkxFMUJRVUZCTEVOQlFVOUtMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTMjVDTlVJc1NVRkJRVUVzUTBGQlMyZEVMRWxCUVVGQkxFTkJRVThzVTBGQlZXVXNUVUZCUVVFc1EwRkJRVUVzUTBGRGJFSXNUMEZCVHl4SlFVRkpha01zVDBGQlFVRXNRMEZCVVN4RFFVRkRReXhQUVVGQlFTeERRVUZUUXl4TlFVRkJRU3hIUVVGQlFTeERRVU42UW1oRExFbEJRVUZCTEVOQlFVdG5RaXhKUVVGQlFTeEZRVUZCUVN4RFFVRlBjVUlzU1VGQlFVRXNRMEZCUzBNc1JVRkJRVUVzUlVGQlFVRXNRMEZEWWl4SlFVRkpNRUlzVTBGQlFVRXNRMEZCV1N4RlFVRkJMRU5CUldoQ0xFZEJRVWt4UWl4RlFVRkJRU3hEUVVGSFF5eG5Ra0ZCUVVFc1EwRkJhVUpETEZGQlFVRkJMRU5CUVZOMVFpeE5RVUZCUVN4RFFVRlBNMElzVlVGQlFVRXNRMEZCUVVFc1EwRkJZU3hEUVVOcVJDeEpRVUZKWjBJc1YwRkJRVUVzUTBGQlkyUXNSVUZCUVVFc1EwRkJSMk1zVjBGQlFVRXNRMEZCV1Zjc1RVRkJRVUVzUTBGQlR6TkNMRlZCUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZCTEVOQlJYQkVaMElzVjBGQlFVRXNRMEZCV1ROQ0xFOUJRVUZCTEVWQlFWVlFMRXRCUVVGQkxFVkJRVUZCTEVOQlEyeENZeXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVGTlJTeE5RVUZCUVN4RFFVRlBVU3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWQ0UW5kQ0xGZEJRVUZCTEVOQlFWbEhMRlZCUVVGQkxFVkJRV0Z5UXl4TFFVRkJRU3hGUVVGQlFTeERRVU5HTEVOQlFVRXNSVUZCWmpaRExFMUJRVUZCTEVOQlFVOWlMRWxCUVVGQkxFTkJRMUJ1UWl4UFFVRkJRU3hEUVVGUmFVTXNVMEZCUVVFc1EwRkJRVUVzUTBGSFVtcERMRTlCUVVGQkxFTkJRVkZwUXl4VFFVRkJRU3hEUVVGVkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVa3hRaXhKUVVWSlF5eE5RVUZCUVN4RFFVUkJiRVFzVDBGQlFVRXNRMEZFVVhGRExGZEJRVUZCTEVOQlFWbEZMRmRCUVVGQkxFTkJRVmxUTEUxQlFVRkJMRU5CUVU4elFpeFZRVUZCUVN4RFFVRkJRU3hEUVVOMlFqaENMRlZCUVVGQkxFVkJRVUZCTEVOQlIzQkNia1FzVDBGQlFVRXNRMEZCVVZVc1QwRkJRVUVzUlVGQlYxQXNTMEZCUVVFc1JVRkJRVUVzUTBGRFptTXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQxRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhlRUppTEU5QlFVRkJMRU5CUVZGUExGTkJRVUZCTEVWQlFXRktMRXRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUTJwQ0swTXNUVUZCUVVFc1EwRkJVeTlETEV0QlFVRkJMRU5CUVUxRkxFMUJRVUZCTEVOQlFVOURMRTFCUVVGQkxFbEJSVVZHTEVsQlFVRkJMRVZCUVdoQ05FTXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZEVUdVc1UwRkJRVUVzUTBGQlZVY3NTVUZCUVVFc1EwRkJTMFlzVFVGQlFVRXNRMEZCVDBjc1MwRkJRVUVzUTBGQlFVRXNRMEZGYWtKNlJTeHBRa0ZCUVVFc1EwRkJZekJGTEZkQlFVRkJMRU5CUVZsS0xFMUJRVUZCTEVOQlFVOUhMRXRCUVVGQkxFTkJRVTlNTEUxQlFVRkJMRU5CUVU5a0xFdEJRVUZCTEVOQlFVRkJMRVZCUTNCRVpTeFRRVUZCUVN4RFFVRlZSeXhKUVVGQlFTeERRVUZMUml4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRkJRU3hEUVVVeFFrZ3NUVUZCUVVFc1EwRkJUMHNzVVVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGTFNTeERRVUZCTEVWQlFXWlFMRTFCUVVGQkxFTkJRVTlpTEVsQlFVRkJMRU5CUTFCdVFpeFBRVUZCUVN4RFFVRlJhVU1zVTBGQlFVRXNRMEZCUVVFc1EwRkhVbXBETEU5QlFVRkJMRU5CUVZGcFF5eFRRVUZCUVN4RFFVRlZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWN6UWtZc1MwRkJRVUVzUTBGQlRXeERMRXRCUVVGQkxFVkJRVUZCTEVOQlEweEpMRTFCUVVGQkxFTkJRVTlLTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUzI1Q05VSXNTVUZCUVVFc1EwRkJTM1ZGTEdOQlFVRkJMRU5CUVdsQ0xGTkJRVlZTTEUxQlFVRkJMRU5CUVVGQkxFTkJSVFZDTEU5QlFVRXNUMEZFVDBFc1RVRkJRVUVzUTBGQlQySXNTVUZCUVVFc1EwRkRVR3hFTEVsQlFVRkJMRU5CUVV0blJDeEpRVUZCUVN4RFFVRkxaU3hOUVVGQlFTeERRVUZCUVN4RFFVRlJNVUlzU1VGQlFVRXNRMEZCUzIxRExFZEJRVUZCTEVWQlExcHlSQ3hKUVVGQlFTeEZRVUZRY1VRc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkpabmhGTEVsQlFVRkJMRU5CUVV0NVJTeFZRVUZCUVN4RFFVRmhMRk5CUVZVeFJDeFBRVUZCUVN4RFFVRkJRU3hEUVVWNFFpeFBRVVJUTWtRc1NVRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1JVRkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUTBGQlRYSkVMRWxCUVVGQkxFTkJRVXR6UkN4TlFVRkJRU3hGUVVGQlFTeERRVUZUUkN4UlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVUZKUlN4TFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZMZGtRc1NVRkJRVUVzUTBGQlMzTkVMRTFCUVVGQkxFVkJRVUZCTEVOQlFWTkVMRkZCUVVGQkxFTkJRVk1zUlVGQlFTeERRVUZCTEVOQlFVbEZMRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZKT1VjNVJTeEpRVUZCUVN4RFFVRkxLMFVzVDBGQlFVRXNRMEZCVlN4VFFVRlZhRVVzVDBGQlFVRXNRMEZCVTJ0RExFdEJRVUZCTEVOQlFVOXVReXhSUVVGQlFTeERRVUZCUVN4RFFVTnlReXhKUVVGSmEwVXNSVUZCUVVFc1EwRkJTeTlDTEV0QlFVRkJMRU5CUVUxWkxFZEJRVUZCTEVWQlFVODNSQ3hKUVVGQlFTeERRVUZMZVVVc1ZVRkJRVUVzUlVGQlFVRXNRMEZEZGtKUkxFZEJRVUZCTEVOQlFVMXNSU3hQUVVGQlFTeERRVUZSYTBVc1IwRkJRVUVzUTBGQlNVUXNSVUZCUVVFc1EwRkJRVUVzUTBGRGRFSkRMRWRCUVVGQkxFTkJRVWt6UkN4VFFVRkJRU3hGUVVGWlNpeExRVUZCUVN4RlFVRkJRU3hEUVVObFF5eEpRVUZCUVN4RlFVRjJRa1FzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkRZbkpDTEVsQlFVRkJMRU5CUVVzclJTeFBRVUZCUVN4RFFVRlJhRVVzVDBGQlFVRXNRMEZCVTJ0RExFdEJRVUZCTEVOQlFVOXVReXhSUVVGQlFTeERRVUZCUVN4RFFVYzNRa0VzVVVGQlFVRXNRMEZCVTJ0RkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNXcENReXhIUVVGQlFTeERRVUZKZUVRc1QwRkJRVUVzUlVGQlZWQXNTMEZCUVVFc1JVRkJRVUVzUTBGRFZsRXNUMEZCUVVFc1EwRkJVVU1zUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzY1VKQlFVRkJMRVZCUVRSQ1ZDeExRVUZCUVN4RFFVRk5SU3hOUVVGQlFTeERRVUZQVVN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsNlJEVkNMRWxCUVVGQkxFTkJRVXRyUml4SFFVRkJRU3hEUVVGTkxGTkJRVlZ1UWl4TlFVRkJRU3hEUVVGUmVrSXNSVUZCUVVFc1EwRkJRVUVzUTBGRGVrSXNUMEZCVHl4SlFVRkpVaXhQUVVGQlFTeERRVUZSTEVOQlFVTkRMRTlCUVVGQkxFTkJRVk5ETEUxQlFVRkJMRWRCUVVGQkxFTkJRM3BDTEVsQlFVbHZRaXhYUVVGQlFTeERRVUZqWkN4RlFVRkJRU3hEUVVGSFl5eFhRVUZCUVN4RFFVRlpWeXhOUVVGQlFTeERRVUZQTTBJc1ZVRkJRVUVzUTBGQldTeFhRVUZCTEVOQlFVRXNRMEZEY0VSblFpeFhRVUZCUVN4RFFVRlpNMElzVDBGQlFVRXNSVUZCVjFBc1MwRkJRVUVzUlVGQlFVRXNRMEZEYmtKakxFMUJRVUZCTEVOQlFVOWtMRXRCUVVGQkxFTkJRVTFGTEUxQlFVRkJMRU5CUVU5UkxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzaENkMElzVjBGQlFVRXNRMEZCV1Vjc1ZVRkJRVUVzUlVGQlkzSkRMRXRCUVVGQkxFVkJRVUZCTEVOQlEzUkNZU3hQUVVGQlFTeERRVUZSTEVOQlFVVjVRaXhOUVVGQlFTeERRVUZSTEZGQlFVRXNRMEZCVlZFc1UwRkJRVUVzUTBGQlYwUXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhiRVFzU1VGQlNXeERMRTlCUVVGQkxFTkJRVlZ4UXl4WFFVRkJRU3hEUVVGWlJTeFhRVUZCUVN4RFFVRlpVeXhOUVVGQlFTeERRVUZQTTBJc1ZVRkJRVUVzUTBGQlFVRXNRMEZGTjBNc1IwRkJiVUlzUTBGQlFTeEZRVUZtTWtJc1RVRkJRVUVzUTBGQlQySXNTVUZCUVVFc1JVRkJaMEpwUXl4TFFVRkJRU3hEUVVGTlF5eFBRVUZCUVN4RFFVRlJja0lzVFVGQlFVRXNRMEZCVDJRc1MwRkJRVUVzUTBGQlFVRXNRMEZETlVNc1NVRkJTeXhKUVVGSlFTeExRVUZCUVN4SlFVRlRZeXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVOeVFtcEVMRWxCUVVGQkxFTkJRVXNyUlN4UFFVRkJRU3hEUVVGUmFFVXNUMEZCUVVFc1EwRkJVMnRETEV0QlFVRkJMRU5CUVU5WkxFZEJRVUZCTEVWQlFVRkJMRU5CUTNwQ1dpeExRVUZCUVN4RFFVRk5XU3hIUVVGQlFTeERRVUZOUVN4SFFVRkJRU3hEUVVOYU9VTXNUMEZCUVVFc1EwRkJVVzFGTEVkQlFVRkJMRU5CUVVscVF5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVV0d1FtcEVMRWxCUVVGQkxFTkJRVXNyUlN4UFFVRkJRU3hEUVVGUmFFVXNUMEZCUVVFc1EwRkJVMmRFTEUxQlFVRkJMRU5CUVU5a0xFdEJRVUZCTEVOQlFVOVpMRWRCUVVGQkxFVkJRVUZCTEVOQlEyaERSU3hOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVGTldTeEhRVUZCUVN4RFFVRk5RU3hIUVVGQlFTeERRVU51UWpsRExFOUJRVUZCTEVOQlFWRnRSU3hIUVVGQlFTeERRVUZKYmtJc1RVRkJRVUVzUTBGQlQyUXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRk5ia05xUkN4SlFVRkJRU3hEUVVGTGNVWXNUVUZCUVVFc1EwRkJVM0JFTEdWQlFXZENPRUlzVFVGQlFVRXNRMEZCUVVFc1EwRkZNVUlzVDBGQlFTeE5RVVI1UWk5RUxFbEJRVUZCTEVOQlFVdHRReXhuUWtGQlFVRXNRMEZCYVVJMFFpeE5RVUZCUVN4RFFVRlBNMElzVlVGQlFVRXNRMEZCUVVFc1EwRkZNME53UXl4SlFVRkJRU3hEUVVGTFowSXNTVUZCUVVFc1JVRkJRVUVzUTBGRFVIRkNMRWxCUVVGQkxFTkJRVXRETEVWQlFVRkJMRVZCUTB0MFF5eEpRVUZCUVN4RFFVRkxhMFlzUjBGQlFVRXNRMEZCU1c1Q0xFMUJRVUZCTEVOQlFWRjZRaXhGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVelFuZENMRXRCUVVGQkxFTkJRVTFzUXl4TFFVRkJRU3hGUVVOSlFTeExRVUZCUVN4RFFVRkJRU3hEUVVsU05VSXNTVUZCUVVFc1EwRkJTM2xETEdkQ1FVRkJRU3hEUVVGcFFuTkNMRTFCUVVGQkxFTkJRVTh6UWl4VlFVRkJRU3hEUVVGQlFTeERRVU12UWtNc1NVRkJRVUVzUTBGQlMwTXNSVUZCUVVFc1JVRkRTM1JETEVsQlFVRkJMRU5CUVV0clJpeEhRVUZCUVN4RFFVRkpia0lzVFVGQlFVRXNRMEZCVVhwQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVE5DZDBJc1MwRkJRVUVzUTBGQlRXeERMRXRCUVVGQkxFVkJRMGxCTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlMzWkNOVUlzU1VGQlFVRXNRMEZCUzNOR0xFMUJRVUZCTEVOQlFWTXNVMEZCVlhaQ0xFMUJRVUZCTEVOQlFVRkJMRU5CUTNCQ0xFOUJRVThzU1VGQlNXcERMRTlCUVVGQkxFTkJRVkVzUTBGQlEwTXNUMEZCUVVFc1EwRkJVME1zVFVGQlFVRXNSMEZCUVVFc1EwRkRla0pvUXl4SlFVRkJRU3hEUVVGTFowSXNTVUZCUVVFc1JVRkJRVUVzUTBGQlQzRkNMRWxCUVVGQkxFTkJRVXRETEVWQlFVRkJMRVZCUVVGQkxFTkJRMUpCTEVWQlFVRkJMRU5CUVVkRExHZENRVUZCUVN4RFFVRnBRa01zVVVGQlFVRXNRMEZCVTNWQ0xFMUJRVUZCTEVOQlFVOHpRaXhWUVVGQlFTeERRVUZCUVN4RlFVTnlRMG9zVFVGQlFVRXNRMEZCVHl4elFrRkJRU3hEUVVGQkxFTkJSMWdzU1VGQlNXOUNMRmRCUVVGQkxFTkJRV05rTEVWQlFVRkJMRU5CUVVkakxGZEJRVUZCTEVOQlFWbFhMRTFCUVVGQkxFTkJRVTh6UWl4VlFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlFTeERRVVZ3UkdkQ0xGZEJRVUZCTEVOQlFWa3pRaXhQUVVGQlFTeEZRVUZWVUN4TFFVRkJRU3hGUVVGQlFTeERRVU5zUW1Nc1RVRkJRVUVzUTBGQlQyUXNTMEZCUVVFc1EwRkJUVVVzVFVGQlFVRXNRMEZCVDFFc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGVFSjNRaXhYUVVGQlFTeERRVUZaUnl4VlFVRkJRU3hGUVVGaGNrTXNTMEZCUVVFc1JVRkJRVUVzUTBGRGNrSmhMRTlCUVVGQkxFTkJRVkVzUTBGQlJYbENMRTFCUVVGQkxFTkJRVkVzVVVGQlFTeERRVUZWVVN4VFFVRkJRU3hEUVVGQlFTeFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkb1F5eEpRVU5KYWtRc1QwRkJRVUVzUTBGRVVYRkRMRmRCUVVGQkxFTkJRVmxGTEZkQlFVRkJMRU5CUVZsVExFMUJRVUZCTEVOQlFVOHpRaXhWUVVGQlFTeERRVUZCUVN4RFFVTjJRamhDTEZWQlFVRkJMRVZCUVVGQkxFTkJRMmhDUml4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGRmFFSnFSQ3hQUVVGQlFTeERRVUZSVlN4UFFVRkJRU3hGUVVGWFVDeExRVUZCUVN4RlFVRkJRU3hEUVVObVl5eE5RVUZCUVN4RFFVRlBaQ3hMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDRRbUlzVDBGQlFVRXNRMEZCVVU4c1UwRkJRVUVzUlVGQllVb3NTMEZCUVVFc1JVRkJRVUVzUTBGRGFrSXNTVUZCU1N0RExFMUJRVUZCTEVOQlFWTXZReXhMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVTjBRamhDTEV0QlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5hTEVkQlFVbGpMRTFCUVVGQkxFTkJRVkVzUTBGRFVpeEhRVUZKZEVVc2FVSkJRVUZCTEVOQlFXTXdSU3hYUVVGQlFTeERRVUZaU2l4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRlBUQ3hOUVVGQlFTeERRVUZQZDBJc1MwRkJRVUVzUTBGQlFVRXNRMEZCVVN4RFFVTjJSSEJETEV0QlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeERRVU5TTEVsQlFVc3NTVUZCU1hGRExFTkJRVUZCTEVsQlFVdDZRaXhOUVVGQlFTeERRVUZQWkN4TFFVRkJRU3hEUVVOcVFtZENMRTFCUVVGQkxFTkJRVTlITEV0QlFVRkJMRU5CUVUxdlFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTGVrSXNUVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCVFhWRExFTkJRVUZCTEVOQlFVRkJMRU5CUjI1RExFZEJRVUVzUTBGRFNTeEpRVUZKYUVJc1IwRkJRVUVzUTBGQlRWQXNUVUZCUVVFc1EwRkJUM0ZDTEUxQlFVRkJMRU5CUVU5eVFpeE5RVUZCUVN4RFFVRlBSeXhMUVVGQlFTeERRVUZCUVN4RFFVVXZRa2tzUjBGQlFVRXNRMEZCU1M5RExFOUJRVUZCTEVWQlFWZG5SU3hOUVVGQlFTeEZRVUZCUVN4RFFVTllla0lzVTBGQlFVRXNRMEZCVlhsQ0xFMUJRVUZCTEVOQlFVOXlSU3hOUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVVXJReXhMUVVGQlFTeERRVUZQU0N4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRlBjMElzVFVGQlFVRXNRMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlIzSkZiRUlzUjBGQlFVRXNRMEZCU1d4RUxGTkJRVUZCTEVWQlFXRnRSU3hOUVVGQlFTeEZRVUZCUVN4RFFVTmlla0lzVTBGQlFVRXNRMEZCVlhsQ0xFMUJRVUZCTEVOQlFVOXlSU3hOUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVVXJReXhMUVVGQlFTeERRVUZQU0N4TlFVRkJRU3hEUVVGUFJ5eExRVUZCUVN4RFFVRlBjMElzVFVGQlFVRXNRMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJYWkZMRTFCUVU4NVJDeExRVUZCUVN4RFFVRkJRU3hEUVVOTVNTeE5RVUZCUVN4RFFVRlBTaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVsSkxFTkJRVUVzUlVGQlptMURMRTFCUVVGQkxFTkJRVTlpTEVsQlFVRkJMRVZCUVhsQ0xFTkJRVUVzUlVGQlZFTXNTMEZCUVVFc1JVRkRka0pqTEUxQlFVRkJMRU5CUVU5TExGRkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYQkNVaXhMUVVGQlFTeERRVUZOYkVNc1MwRkJRVUVzUlVGQlFVRXNRMEZEVEVrc1RVRkJRVUVzUTBGQlQwb3NTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxia0kxUWl4SlFVRkJRU3hEUVVGTE1rWXNTVUZCUVVFc1EwRkJUeXhUUVVGVk5VSXNUVUZCUVVFc1EwRkJVeXhEUVVGRk0wSXNWVUZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVWxoTEV0QlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGSmMwTXNTMEZCUVVFc1EwRkJUeXhGUVVGQkxFTkJRVUVzUTBGQlFTeERRVVV2UkN4UFFVRlBka1lzU1VGQlFVRXNRMEZCUzNWRkxHTkJRVUZCTEVOQlFXVXNRMEZCUlc1RExGVkJRVUZCTEVOQlFWa3lRaXhOUVVGQlFTeERRVUZQTTBJc1ZVRkJRVUVzUTBGQldXRXNTMEZCUVVFc1EwRkJUMk1zVFVGQlFVRXNRMEZCVDNkQ0xFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVk5zUkN4SlFVRkJRU3hEUVVGTGRVUXNUVUZCUVVFc1JVRkRkRVVzUTBGQlFTeEZRVUZXUVN4TlFVRkJRU3hEUVVOUE5VWXNTVUZCUVVFc1EwRkJTM0ZHTEUxQlFVRkJMRU5CUVU5MFFpeE5RVUZCUVN4RFFVRkJRU3hEUVVkYUwwUXNTVUZCUVVFc1EwRkJTM05HTEUxQlFVRkJMRU5CUVU5MlFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVc3ZRaTlFTEVsQlFVRkJMRU5CUVVzMFJDeE5RVUZCUVN4RFFVRlRMRk5CUVZWSExFMUJRVUZCTEVOQlFVRkJMRU5CUTNCQ0xFbEJRVWxvUWl4VlFVRkJRU3hEUVVGaExFTkJRVUVzUTBGQlIwUXNXVUZCUVVFc1EwRkJaU3hEUVVGQkxFTkJRMjVETEU5QlFVOHNTVUZCU1doQ0xFOUJRVUZCTEVOQlFWRXNRMEZCUTBNc1QwRkJRVUVzUTBGQlUwTXNUVUZCUVVFc1IwRkJRVUVzUTBGRGVrSm9ReXhKUVVGQlFTeERRVUZMWjBRc1NVRkJRVUVzUTBGQlMyVXNUVUZCUVVFc1EwRkJRVUVzUTBGQlVURkNMRWxCUVVGQkxFTkJRVXRqTEV0QlFVRkJMRVZCUVVGQkxFTkJRMjVDYmtRc1NVRkJRVUVzUTBGQlMyZENMRWxCUVVGQkxFVkJRVUZCTEVOQlFVOXhRaXhKUVVGQlFTeERRVUZMUXl4RlFVRkJRU3hGUVVGQlFTeERRVU5pTEVsQlFVbGpMRmRCUVVGQkxFTkJRV05rTEVWQlFVRkJMRU5CUVVkakxGZEJRVUZCTEVOQlFWbFhMRTFCUVVGQkxFTkJRVTh6UWl4VlFVRkJRU3hEUVVGWkxGZEJRVUVzUTBGQlFTeERRVU5vUkdsQ0xFdEJRVUZCTEVOQlFWRkVMRmRCUVVGQkxFTkJRVmxGTEZkQlFVRkJMRU5CUVZsVExFMUJRVUZCTEVOQlFVOHpRaXhWUVVGQlFTeERRVUZCUVN4RFFWVXpReXhIUVZKQlowSXNWMEZCUVVFc1EwRkJXVE5DTEU5QlFVRkJMRVZCUVZWUUxFdEJRVUZCTEVWQlFVRkJMRU5CUTJ4Q1l5eE5RVUZCUVN4RFFVRlBaQ3hMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDRRbmRDTEZkQlFVRkJMRU5CUVZsSExGVkJRVUZCTEVWQlFXRnlReXhMUVVGQlFTeEZRVUZCUVN4RFFVTnlRbUVzVDBGQlFVRXNRMEZCVVN4RFFVRkZlVUlzVFVGQlFVRXNRMEZCVVN4UlFVRkJMRU5CUVZWV0xGbEJRVUZCTEVOQlFVRkJMRmxCUVVGQkxFTkJRV05YTEVWQlFVRkJMRU5CUVVsWUxGbEJRVUZCTEVWQlFXZENReXhWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVYzVSRzlETEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRnFReXhMUVVGQlFTeERRVUZCUVN4RFFVRlJMRU5CUTNSQ1NpeFZRVUZCUVN4RFFVRmhTU3hMUVVGQlFTeERRVUZOVHl4TlFVRkJRU3hEUVVOdVFpeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFbEJRVkZTTEV0QlFVRkJMRU5CUVU4c1EwRkRjRUlzU1VGQlNYQkRMRTlCUVVGQkxFTkJRVlZ6UXl4TFFVRkJRU3hEUVVGTlR5eE5RVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMUlN4SFFVRkJRU3hEUVVGQlFTeERRVU5vUXpsRExFOUJRVUZCTEVOQlFWRlZMRTlCUVVGQkxFVkJRVlZRTEV0QlFVRkJMRVZCUVVGQkxFTkJRMlJSTEU5QlFVRkJMRU5CUVZGRExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxHdERRVUZCUVN4RlFVRjVRMVFzUzBGQlFVRXNRMEZCVFVVc1RVRkJRVUVzUTBGQlQxRXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYkVWaUxFOUJRVUZCTEVOQlFWRlBMRk5CUVVGQkxFVkJRVmxLTEV0QlFVRkJMRVZCUVVGQkxFTkJRMmhDTkVJc1dVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1NVRkpVQ3hEUVVORVF5eFZRVUZCUVN4RFFVRmhMRU5CUVVFc1EwRkRZaXhKUVVGSmFFTXNUMEZCUVVFc1EwRkJWWE5ETEV0QlFVRkJMRU5CUVUxUExFMUJRVUZCTEVOQlFVOVVMRXRCUVVGQkxFTkJRVTFWTEVkQlFVRkJMRU5CUVVGQkxFTkJRMnBET1VNc1QwRkJRVUVzUTBGQlVWVXNUMEZCUVVFc1JVRkJWVkFzUzBGQlFVRXNSVUZCUVVFc1EwRkRaRkVzVDBGQlFVRXNRMEZCVVVNc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc2EwTkJRVUZCTEVWQlFYbERWQ3hMUVVGQlFTeERRVUZOUlN4TlFVRkJRU3hEUVVGUFVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRzUldJc1QwRkJRVUVzUTBGQlVVOHNVMEZCUVVFc1JVRkJXVW9zUzBGQlFVRXNSVUZCUVVFc1EwRkRhRUkwUWl4WlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkVVowSXNTMEZCUVVFc1EwRkJUV3hETEV0QlFVRkJMRVZCUVVGQkxFTkJRMHhKTEUxQlFVRkJMRU5CUVU5S0xFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVnByUXl4TFFVRkJRU3hEUVVGTmJFTXNTMEZCUVVFc1JVRkJRVUVzUTBGRFRFa3NUVUZCUVVFc1EwRkJUMG9zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMV2pWQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsImNvbnN0e0Jhc2U6QmFzZSxGdW5jOl9fRnVuY18xLE5ldXJhbE5ldHdvcms6X19OZXVyYWxOZXR3b3JrXzEsTWF0cml4Ol9fTWF0cml4XzEsVGVtcGxhdGU6X19UZW1wbGF0ZV8xLENvbXBvbmVudHM6X19Db21wb25lbnRzXzEsQ29tcHJlc3Npb246X19Db21wcmVzc2lvbl8xLENvbG9yUGlja2VyOl9fQ29sb3JQaWNrZXJfMX09XyRiYXNlXzE5O3ZhciBfJGJyb3dzZXJfMT17QmFzZTpCYXNlLC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBGdW5jOkZ1bmMgKi8vKiBjb21tb24tc2hha2UgcmVtb3ZlZDogTmV1cmFsTmV0d29yazpOZXVyYWxOZXR3b3JrICovLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IE1hdHJpeDpNYXRyaXggKi9UZW1wbGF0ZTpfX1RlbXBsYXRlXzEsLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IENvbXBvbmVudHM6Q29tcG9uZW50cyAqL0NvbXByZXNzaW9uOl9fQ29tcHJlc3Npb25fMSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogQ29sb3JQaWNrZXI6Q29sb3JQaWNrZXIgKi8vKiBjb21tb24tc2hha2UgcmVtb3ZlZDogSW5kZXhlZExpYnJhcnk6SW5kZXhlZExpYnJhcnkgKi9BcHBMaWJyYXJ5Ol8kQXBwTGlicmFyeV8yfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1KeWIzZHpaWEl1YW5NaVhTd2libUZ0WlhNaU9sc2lRbUZ6WlNJc0lrWjFibU1pTENKT1pYVnlZV3hPWlhSM2IzSnJJaXdpVFdGMGNtbDRJaXdpVkdWdGNHeGhkR1VpTENKRGIyMXdiMjVsYm5Seklpd2lRMjl0Y0hKbGMzTnBiMjRpTENKRGIyeHZjbEJwWTJ0bGNpSXNJbkpsY1hWcGNtVWlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpUVhCd1RHbGljbUZ5ZVNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1MwRkJRU3hEUVVGTlFTeEpRVUZCUVN4RFFVTkdRU3hKUVVGQlFTeERRVUZKUXl4SlFVRkJRU3hEUVVOS1FTeFJRVUZCUVN4RFFVRkpReXhoUVVGQlFTeERRVU5LUVN4cFFrRkJRVUVzUTBGQllVTXNUVUZCUVVFc1EwRkRZa0VzVlVGQlFVRXNRMEZCVFVNc1VVRkJRVUVzUTBGRFRrRXNXVUZCUVVFc1EwRkJVVU1zVlVGQlFVRXNRMEZEVWtFc1kwRkJRVUVzUTBGQlZVTXNWMEZCUVVFc1EwRkRWa0VzWlVGQlFVRXNRMEZCVjBNc1YwRkJRVUVzUTBGRFdFRXNaVUZCUVVFc1EwRkJRVUVzUTBGRFFVTXNVMEZITWtJc1EwRkZMMEpETEdWQlFVOURMRU5CUVZVc1EwRkRZbFlzU1VGQlFVRXNRMEZCUVVFc1NVRkJRVUVzYzBsQlNVRkpMRkZCUVVGQkxFTkJRVUZCTEZsQlFVRkJMR3RFUVVWQlJTeFhRVUZCUVN4RFFVRkJRU3hsUVVGQlFTdzJSMEZIUVVzc1ZVRkJRVUVzUTBGQlFVRXNZMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJleHBvcnQgZnVuY3Rpb24gU3lzdGVtKCkge1xyXG4gICAgY29uc3QgbW11ID0ge307XHJcbiAgICBtbXUuY29ubmVjdCA9IChwYXJhbXMgPSB7IGVuY29kZTogdHJ1ZSwgZGF0YToge30gfSkgPT4ge1xyXG4gICAgICAgIGlmIChwYXJhbXMuZW5jb2RlID09IHVuZGVmaW5lZCkgcGFyYW1zLmVuY29kZSA9IHRydWU7XHJcblxyXG4gICAgICAgIGlmIChwYXJhbXMuZW5jb2RlID09IHRydWUpIHtcclxuICAgICAgICAgICAgbGV0IHNlbnRlbmNlID0gSlNPTi5zdHJpbmdpZnkocGFyYW1zLmRhdGEpO1xyXG4gICAgICAgICAgICBsZXQgZGljdGlvbmFyeSA9IGtlcmR4LmFycmF5LnRvU2V0KHNlbnRlbmNlLnNwbGl0KCcnKSkuam9pbignJyk7XHJcbiAgICAgICAgICAgIGxldCBjb2RlID0gY29tcHJlc3Nvci5lbmNvZGVMWlcoc2VudGVuY2UsIGRpY3Rpb25hcnkpO1xyXG4gICAgICAgICAgICBwYXJhbXMuZGF0YSA9IHsgY29kZSwgZGljdGlvbmFyeSwgZW5jb2RlZDogdHJ1ZSB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBhcHBMaWJyYXJ5LmFqYXgocGFyYW1zKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gSlNPTi5wYXJzZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZW5jb2RlZCA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IEpTT04ucGFyc2UoY29tcHJlc3Nvci5kZWNvZGVMWlcocmVzcG9uc2UuY29kZSwgcmVzcG9uc2UuZGljdGlvbmFyeSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG1tdTtcclxufSIsImltcG9ydCB7IFN5c3RlbSB9IGZyb20gJy4uL2Z1bmN0aW9ucy9TeXN0ZW0uanMnO1xyXG5sZXQgc3lzdGVtID0gbmV3IFN5c3RlbSgpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIExvZ2dlcigpIHtcclxuICAgIGNvbnN0IHNlbGYgPSB7IGJvYXJkOiB1bmRlZmluZWQsIHByZXZpb3VzQ29tbWFuZHM6IFtdLCBpbmRleDogMCwgY29tbWFuZExpc3Q6IHt9IH07XHJcblxyXG4gICAgc2VsZi5jb21tYW5kTGlzdC5jbGVhciA9ICgpID0+IHtcclxuICAgICAgICBzZWxmLmJvYXJkLmlubmVySFRNTCA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuY29tbWFuZExpc3QubG9nID0gKGRhdGEpID0+IHtcclxuICAgICAgICBsZXQgbG9nSXRlbSA9IGtlcmR4LmNyZWF0ZUVsZW1lbnQoe1xyXG4gICAgICAgICAgICBlbGVtZW50OiAnZGl2JywgYXR0cmlidXRlczogeyBjbGFzczogJ2xvZy1pdGVtJyB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGxvZ0l0ZW0uYXBwZW5kKGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGxvZ0l0ZW0uaW5uZXJIVE1MID0gZGF0YTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGxvZ0l0ZW0uaW5uZXJIVE1MID0gJ0Vycm9yIHdyaXRpbmcgdG8gdGhlIGxvZyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgc2VsZi5ib2FyZC5hcHBlbmQobG9nSXRlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5jb21tYW5kTGlzdC5wcmludCA9IChkYXRhKSA9PiB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHNlbGYuY29tbWFuZExpc3QucmVxdWVzdCA9IChkYXRhKSA9PiB7XHJcbiAgICAgICAgbGV0IHByb3BzID0gc2VsZi5nZXRDb21tYW5kUHJvcHMoZGF0YSwgJy0nKTtcclxuICAgICAgICBpZiAocHJvcHMudXJsID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBzZWxmLmNvbW1hbmRMaXN0LmxvZygnVXJsIGlzIHJlcXVpcmVkJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChwcm9wcy5tZXRob2QgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHNlbGYuY29tbWFuZExpc3QubG9nKCdNZXRob2QgaXMgcmVxdWlyZWQnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcHJvcHMuZGF0YSA9IEpTT04ucGFyc2UocHJvcHMuZGF0YSk7XHJcbiAgICAgICAgICAgIHNlbGYuZGlzYWJsZUlucHV0KCk7XHJcbiAgICAgICAgICAgIHNlbGYud3JpdGUoYENvbm5lY3RpbmcgdG8gJHtwcm9wcy51cmx9YCk7XHJcbiAgICAgICAgICAgIHN5c3RlbS5jb25uZWN0KHByb3BzKS50aGVuKHJlc3VsdCA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLndyaXRlKCdDb25uZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgIHNlbGYud3JpdGUocmVzdWx0KTtcclxuICAgICAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgICAgICAgIH0pLmZpbmFsbHkoc2VsZi5lbmFibGVJbnB1dCgpKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBzZWxmLndyaXRlKCdEYXRhIGZvcm1hdCBub3QgdmFsaWQnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5nZXRDb21tYW5kUHJvcHMgPSAoZGF0YSwgc3RhcnQpID0+IHtcclxuICAgICAgICBsZXQgY29tbWFuZHMgPSB7fTtcclxuICAgICAgICBsZXQgYXJncyA9IGRhdGEuc3BsaXQoJyAnKTtcclxuICAgICAgICBsZXQgYXJnO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBhcmcgPSBhcmdzW2ldO1xyXG4gICAgICAgICAgICBpZiAoYXJnWzBdID09IHN0YXJ0KSB7XHJcbiAgICAgICAgICAgICAgICBjb21tYW5kc1thcmcucmVwbGFjZShzdGFydCwgJycpXSA9IGFyZ3NbaSArIDFdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY29tbWFuZHM7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5jcmVhdGVXaW5kb3cgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlV2luZG93ID0ga2VyZHguY3JlYXRlRWxlbWVudCh7XHJcbiAgICAgICAgICAgIGVsZW1lbnQ6ICdkaXYnLCBhdHRyaWJ1dGVzOiB7IGlkOiAncmVzcG9uc2Utd2luZG93JyB9LCBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6ICdzcGFuJywgYXR0cmlidXRlczogeyBpZDogJ3Jlc3BvbnNlLXdpbmRvdy1jb250cm9scycgfSwgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlbGVtZW50OiAnaW5wdXQnLCBhdHRyaWJ1dGVzOiB7IGlkOiAncmVzcG9uc2Utd2luZG93LXNlYXJjaCcgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGVsZW1lbnQ6ICdpJywgYXR0cmlidXRlczogeyBpZDogJ3Jlc3BvbnNlLXdpbmRvdy1jbGVhcicsIGNsYXNzOiAnZmFzIGZhLW1pbnVzLWNpcmNsZScgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGVsZW1lbnQ6ICdpJywgYXR0cmlidXRlczogeyBpZDogJ3Jlc3BvbnNlLXdpbmRvdy10b2dnbGUnLCBjbGFzczogJ2ZhcyBmYS1hcnJvdy11cCcgfSB9LFxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogJ3NwYW4nLCBhdHRyaWJ1dGVzOiB7IGlkOiAncmVzcG9uc2Utd2luZG93LWxvZycgfSwgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlbGVtZW50OiAnc3BhbicsIGF0dHJpYnV0ZXM6IHsgaWQ6ICdyZXNwb25zZS13aW5kb3ctYm9hcmQnIH0gfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogJ3NwYW4nLCBhdHRyaWJ1dGVzOiB7IGlkOiAncmVzcG9uc2Utd2luZG93LWNvbW1hbmQnIH0sIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBlbGVtZW50OiAnbGFiZWwnLCB0ZXh0OiAnUlVOOiAnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBlbGVtZW50OiAnaW5wdXQnLCBhdHRyaWJ1dGVzOiB7IGlkOiAncmVzcG9uc2Utd2luZG93LWlucHV0JywgYXV0b0NvbXBsZXRlOiAnb2ZmJyB9IH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNlbGYuY29tbWFuZElucHV0ID0gcmVzcG9uc2VXaW5kb3cuZmluZCgnI3Jlc3BvbnNlLXdpbmRvdy1pbnB1dCcpO1xyXG4gICAgICAgIHNlbGYuYm9hcmQgPSByZXNwb25zZVdpbmRvdy5maW5kKCcjcmVzcG9uc2Utd2luZG93LWJvYXJkJyk7XHJcbiAgICAgICAgbGV0IHdpbmRvd0xvZyA9IHJlc3BvbnNlV2luZG93LmZpbmQoJyNyZXNwb25zZS13aW5kb3ctbG9nJyk7XHJcbiAgICAgICAgcmVzcG9uc2VXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XHJcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQgPT0gd2luZG93TG9nIHx8IHdpbmRvd0xvZy5pc0FuY2VzdG9yKGV2ZW50LnRhcmdldCkpIHtcclxuICAgICAgICAgICAgICAgIHNlbGYuY29tbWFuZElucHV0LmZvY3VzKCk7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmNvbW1hbmRJbnB1dC5zZXRTZWxlY3Rpb25SYW5nZShzZWxmLmNvbW1hbmRJbnB1dC52YWx1ZS5sZW5ndGgsIHNlbGYuY29tbWFuZElucHV0LnZhbHVlLmxlbmd0aCwgXCJmb3J3YXJkXCIpO1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBzZWxmLmNvbW1hbmRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZXZlbnQgPT4ge1xyXG4gICAgICAgICAgICBsZXQgdmFsdWU7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5rZXkgPT0gJ0Fycm93VXAnIHx8IGV2ZW50LmtleSA9PSAnQXJyb3dEb3duJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50LmtleSA9PSAnQXJyb3dVcCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmluZGV4LS07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChldmVudC5rZXkgPT0gJ0Fycm93RG93bicpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmluZGV4Kys7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHNlbGYucHJldmlvdXNDb21tYW5kcy5sZW5ndGggPT0gMCkgc2VsZi5pbmRleCA9IDA7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxmLmluZGV4IDwgMCkgc2VsZi5pbmRleCA9IDA7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxmLmluZGV4ID49IHNlbGYucHJldmlvdXNDb21tYW5kcy5sZW5ndGgpIHNlbGYuaW5kZXggPSBzZWxmLnByZXZpb3VzQ29tbWFuZHMubGVuZ3RoIC0gMVxyXG5cclxuICAgICAgICAgICAgICAgIHZhbHVlID0gc2VsZi5wcmV2aW91c0NvbW1hbmRzW3NlbGYuaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgc2VsZi5jb21tYW5kSW5wdXQudmFsdWUgPSB2YWx1ZSB8fCAnJztcclxuICAgICAgICAgICAgICAgIHNlbGYuY29tbWFuZElucHV0LnNldFNlbGVjdGlvblJhbmdlKHNlbGYuY29tbWFuZElucHV0LnZhbHVlLmxlbmd0aCwgc2VsZi5jb21tYW5kSW5wdXQudmFsdWUubGVuZ3RoLCBcImZvcndhcmRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnQua2V5ID09ICdFbnRlcicpIHtcclxuICAgICAgICAgICAgICAgIGxldCBjb21tYW5kID0gc2VsZi5jb21tYW5kSW5wdXQudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmNvbW1hbmRJbnB1dC52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgc2VsZi5jb21tYW5kTGlzdC5sb2coYFJVTjogJHtjb21tYW5kfWApO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbW1hbmQgIT0gJycpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLnByZXZpb3VzQ29tbWFuZHMucHVzaChjb21tYW5kKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoa2VyZHguaXNzZXQoc2VsZi5jb21tYW5kTGlzdFtjb21tYW5kLnNwbGl0KCcgJylbMF1dKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbW1hbmRMaXN0W2NvbW1hbmQuc3BsaXQoJyAnKVswXV0oY29tbWFuZC5yZXBsYWNlKGNvbW1hbmQuc3BsaXQoJyAnKVswXSwgJycpLnRyaW0oKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLndyaXRlKGAnJHtjb21tYW5kLnNwbGl0KCcgJylbMF19JyBub3QgZm91bmRgKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYud3JpdGUoY29tbWFuZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgc2VsZi5pbmRleCA9IHNlbGYucHJldmlvdXNDb21tYW5kcy5sZW5ndGggLSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHNlbGYud2luZG93ID0gcmVzcG9uc2VXaW5kb3c7XHJcbiAgICAgICAgc2VsZi5yZXNpemUoKTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2VXaW5kb3c7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi53cml0ZSA9IChkYXRhKSA9PiB7XHJcbiAgICAgICAgbGV0IGl0ZW07XHJcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGl0ZW0gPSBkYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgZGF0YSA9PSAnb2JqZWN0Jykge1xyXG4gICAgICAgICAgICBpdGVtID0ga2VyZHguZGlzcGxheURhdGEoZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpdGVtID0ga2VyZHguY3JlYXRlRWxlbWVudCh7IGVsZW1lbnQ6ICdzcGFuJywgaHRtbDogZGF0YSB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCB0aW1lID0gYFske2tlcmR4LnRpbWUoKX1dOmA7XHJcbiAgICAgICAgbGV0IGxvZ0l0ZW0gPSBrZXJkeC5jcmVhdGVFbGVtZW50KHtcclxuICAgICAgICAgICAgZWxlbWVudDogJ2RpdicsIGF0dHJpYnV0ZXM6IHsgc3R5bGU6IHsgZGlzcGxheTogJ2dyaWQnLCBncmlkVGVtcGxhdGVDb2x1bW5zOiAnbWF4LWNvbnRlbnQgMWZyJyB9IH0sIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICB7IGVsZW1lbnQ6ICdsYWJlbCcsIHRleHQ6IHRpbWUgfSxcclxuICAgICAgICAgICAgICAgIGl0ZW1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBzZWxmLmNvbW1hbmRMaXN0LmxvZyhsb2dJdGVtKTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmNsZWFuID0gKCkgPT4ge1xyXG4gICAgICAgIHNlbGYuY29tbWFuZExpc3QuY2xlYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmRpc2FibGVJbnB1dCA9ICgpID0+IHtcclxuICAgICAgICBzZWxmLmNvbW1hbmRJbnB1dC5jc3MoeyBkaXNwbGF5OiAnbm9uZScgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZi5lbmFibGVJbnB1dCA9ICgpID0+IHtcclxuICAgICAgICBzZWxmLmNvbW1hbmRJbnB1dC5jc3NSZW1vdmUoWydkaXNwbGF5J10pO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGYucmVzaXplID0gKCkgPT4ge1xyXG4gICAgICAgIHNlbGYud2luZG93Lm9uQWRkZWQoKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgcGFyZW50ID0gc2VsZi53aW5kb3cucGFyZW50Tm9kZTtcclxuICAgICAgICAgICAgbGV0IGNhbkRyYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgbGV0IHBvc2l0aW9uID0gc2VsZi53aW5kb3cucG9zaXRpb24oKVxyXG4gICAgICAgICAgICBsZXQgaG92ZXIgPSBldmVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGlmZiA9IGV2ZW50LnkgLSBzZWxmLndpbmRvdy5wb3NpdGlvbigpLnRvcDtcclxuICAgICAgICAgICAgICAgIGlmIChkaWZmIDwgMTUgJiYgZGlmZiA+IC0xNSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYud2luZG93LmNzcyh7IGN1cnNvcjogJ25zLXJlc2l6ZScgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmICghY2FuRHJhZykge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYud2luZG93LmNzc1JlbW92ZShbJ2N1cnNvciddKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGxldCBtb3VzZWRvd24gPSBldmVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGlmZiA9IGV2ZW50LnkgLSBzZWxmLndpbmRvdy5wb3NpdGlvbigpLnRvcDtcclxuICAgICAgICAgICAgICAgIGlmIChkaWZmIDwgMTUgJiYgZGlmZiA+IC0xNSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYud2luZG93LmNzcyh7IGN1cnNvcjogJ25zLXJlc2l6ZScgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FuRHJhZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBsZXQgZHJhZyA9IGV2ZW50ID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBoZWlnaHQgPSBwb3NpdGlvbi5ib3R0b20gLSBldmVudC55O1xyXG4gICAgICAgICAgICAgICAgbGV0IG9rSGVpZ2h0ID0gaGVpZ2h0ID4gMjAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IHdpdGhpbiA9IGV2ZW50LnkgPiBwYXJlbnQucG9zaXRpb24oKS50b3A7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2FuRHJhZyAmJiB3aXRoaW4gJiYgb2tIZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLndpbmRvdy5jc3MoeyBoZWlnaHQ6IGAke2hlaWdodH1weGAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBsZXQgbW91c2V1cCA9IGV2ZW50ID0+IHtcclxuICAgICAgICAgICAgICAgIGNhbkRyYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGxldCBtb3VzZWxlYXZlID0gZXZlbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2FuRHJhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgc2VsZi53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaG92ZXIpO1xyXG4gICAgICAgICAgICBzZWxmLndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBtb3VzZWRvd24pO1xyXG4gICAgICAgICAgICBwYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZHJhZyk7XHJcbiAgICAgICAgICAgIHNlbGYud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBtb3VzZXVwKTtcclxuICAgICAgICAgICAgcGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBtb3VzZWxlYXZlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzZWxmLmNsZWFyID0gKCkgPT4ge1xyXG4gICAgICAgIHNlbGYuY29tbWFuZExpc3QuY2xlYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc2VsZjtcclxufSIsInZhciBfJG1haW5fMjIgPSB7fTtcbmNvbnN0e0Jhc2U6X19CYXNlXzIyLENvbXByZXNzaW9uOl9fQ29tcHJlc3Npb25fMjIsQXBwTGlicmFyeTpfX0FwcExpYnJhcnlfMjIsVGVtcGxhdGU6X19UZW1wbGF0ZV8yMn09XyRicm93c2VyXzE7d2luZG93LmtlcmR4PW5ldyBfX0Jhc2VfMjIod2luZG93KTtuZXcgX19UZW1wbGF0ZV8yMih3aW5kb3cpO2NvbnN0e0xvZ2dlcjpMb2dnZXJ9PV8kTG9nZ2VyXzIwLHtTeXN0ZW06U3lzdGVtfT1fJFN5c3RlbV8yMTt3aW5kb3cubW11PXt9LHdpbmRvdy5jb21wcmVzc29yPV9fQ29tcHJlc3Npb25fMjIoKSx3aW5kb3cuYXBwTGlicmFyeT1fX0FwcExpYnJhcnlfMjIoKTtsZXQgbG9nZ2VyPW5ldyBMb2dnZXIsX19zeXN0ZW1fMjI9bmV3IFN5c3RlbTttbXUuZ2VuZXJhdGVSZXF1ZXN0Q29udGVudD0oKHBhcmFtcz17bmFtZTpcIlwiLG9wdGlvbnM6W119KT0+e2xldCBsYWJlbD1rZXJkeC5jYW1lbENhc2VkVG9UZXh0KHBhcmFtcy5uYW1lKSxub2RlTmFtZT1cImlucHV0XCI7QXJyYXkuaXNBcnJheShwYXJhbXMub3B0aW9ucykmJihub2RlTmFtZT1cInNlbGVjdFwiKTtsZXQgY29udGVudD1rZXJkeC5jcmVhdGVFbGVtZW50KHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJyZXF1ZXN0LXdpbmRvdy1jb250ZW50XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImxhYmVsXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJyZXF1ZXN0LXdpbmRvdy1jb250ZW50LWxhYmVsXCIsaWQ6bmFtZX0sdGV4dDpsYWJlbH0se2VsZW1lbnQ6bm9kZU5hbWUsYXR0cmlidXRlczp7Y2xhc3M6XCJyZXF1ZXN0LXdpbmRvdy1jb250ZW50LWRhdGFcIixuYW1lOnBhcmFtcy5uYW1lfX1dfSk7aWYoQXJyYXkuaXNBcnJheShwYXJhbXMub3B0aW9ucykpe2NvbnRlbnQuZmluZChcIi5yZXF1ZXN0LXdpbmRvdy1jb250ZW50LWRhdGFcIikubWFrZUVsZW1lbnQoe2VsZW1lbnQ6XCJvcHRpb25cIixhdHRyaWJ1dGVzOntzZWxlY3RlZDohMCxkaXNhYmxlZDohMCx2YWx1ZTpudWxsfSx0ZXh0OmBTZWxlY3QgJHtsYWJlbH1gfSk7Zm9yKGxldCBvcHRpb24gb2YgcGFyYW1zLm9wdGlvbnMpY29udGVudC5maW5kKFwiLnJlcXVlc3Qtd2luZG93LWNvbnRlbnQtZGF0YVwiKS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcIm9wdGlvblwiLGF0dHJpYnV0ZXM6e3ZhbHVlOm9wdGlvbn0sdGV4dDpvcHRpb259KX1yZXR1cm4gY29udGVudH0pLG1tdS5nZW5lcmF0ZURhdGE9KCgpPT57cmV0dXJuIGtlcmR4LmNyZWF0ZUVsZW1lbnQoe2VsZW1lbnQ6XCJkaXZcIixhdHRyaWJ1dGVzOntjbGFzczpcInJlcXVlc3Qtc2luZ2xlLWRhdGFcIn0sY2hpbGRyZW46W3tlbGVtZW50OlwiaW5wdXRcIixhdHRyaWJ1dGVzOntjbGFzczpcInJlcXVlc3Qtc2luZ2xlLWRhdGEtbmFtZVwiLHBsYWNlSG9sZGVyOlwiTmFtZVwifX0se2VsZW1lbnQ6XCJsYWJlbFwiLHRleHQ6XCI9PlwifSx7ZWxlbWVudDpcImlucHV0XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJyZXF1ZXN0LXNpbmdsZS1kYXRhLXZhbHVlXCIscGxhY2VIb2xkZXI6XCJWYWx1ZVwifX0se2VsZW1lbnQ6XCJzZWxlY3RcIixhdHRyaWJ1dGVzOntjbGFzczpcInJlcXVlc3Qtc2luZ2xlLWRhdGEtdHlwZVwifSxvcHRpb25zOltcIlN0cmluZ1wiLFwiQXJyYXlcIixcIkpzb25cIl19LHtlbGVtZW50OlwiaVwiLGF0dHJpYnV0ZXM6e2NsYXNzOlwicmVxdWVzdC1zaW5nbGUtZGF0YS1yZW1vdmUgZmFzIGZhLXRyYXNoXCJ9fV19KX0pLG1tdS52YWxpZGF0ZVJlcXVlc3Q9KCgpPT57bGV0IHJlcXVlc3RDb250ZW50cz1kb2N1bWVudC5ib2R5LmZpbmQoXCIjcmVxdWVzdC1jb250ZW50c1wiKSx2YWxpZGF0ZUZvcm09a2VyZHgudmFsaWRhdGVGb3JtKHJlcXVlc3RDb250ZW50cyk7cmV0dXJuISF2YWxpZGF0ZUZvcm0uZmxhZ3x8KGxvZ2dlci53cml0ZShgJHtrZXJkeC5jYW1lbENhc2VkVG9UZXh0KHZhbGlkYXRlRm9ybS5lbGVtZW50TmFtZSl9IGlzIHJlcXVpcmVkYCksITEpfSksbW11LnNlbmRSZXF1ZXN0PSgoKT0+e2xldCByZXF1ZXN0Q29udGVudHM9ZG9jdW1lbnQuYm9keS5maW5kKFwiI3JlcXVlc3QtY29udGVudHNcIik7aWYobW11LnZhbGlkYXRlUmVxdWVzdCgpKXtsZXQgdmFsdWUsdHlwZSxwYXJhbXM9a2VyZHguanNvbkZvcm0ocmVxdWVzdENvbnRlbnRzKSxhbGxEYXRhPWRvY3VtZW50LmJvZHkuZmluZChcIiNyZXF1ZXN0LWRhdGFcIikuZmluZEFsbChcIi5yZXF1ZXN0LXNpbmdsZS1kYXRhXCIpO3BhcmFtcy5kYXRhPXt9O2ZvcihsZXQgaT0wO2k8YWxsRGF0YS5sZW5ndGg7aSsrKXZhbHVlPWFsbERhdGFbaV0uZmluZChcIi5yZXF1ZXN0LXNpbmdsZS1kYXRhLXZhbHVlXCIpLnZhbHVlLHR5cGU9YWxsRGF0YVtpXS5maW5kKFwiLnJlcXVlc3Qtc2luZ2xlLWRhdGEtdHlwZVwiKS52YWx1ZSxwYXJhbXMuZGF0YVthbGxEYXRhW2ldLmZpbmQoXCIucmVxdWVzdC1zaW5nbGUtZGF0YS1uYW1lXCIpLnZhbHVlXT1cIkpzb25cIj09dHlwZT9KU09OLnBhcnNlKHZhbHVlKTpcIkFycmF5XCI9PXR5cGU/XCJcIj09dmFsdWU/W106dmFsdWUuc3BsaXQoXCIsXCIpOnZhbHVlO2xvZ2dlci5kaXNhYmxlSW5wdXQoKSxsb2dnZXIud3JpdGUoYENvbm5lY3RpbmcgdG8gJHtwYXJhbXMudXJsfWApLF9fc3lzdGVtXzIyLmNvbm5lY3QocGFyYW1zKS50aGVuKHJlc3VsdD0+e2xvZ2dlci53cml0ZShcIkNvbm5lY3RlZFwiKSxsb2dnZXIud3JpdGUocmVzdWx0KX0pLmNhdGNoKGVycm9yPT57Y29uc29sZS5sb2coZXJyb3IpfSkuZmluYWxseShsb2dnZXIuZW5hYmxlSW5wdXQoKSl9fSksbW11LnJlbmRlcj0oKCk9Pntkb2N1bWVudC5ib2R5Lm1ha2VFbGVtZW50KHtlbGVtZW50OlwiaGVhZGVyXCIsYXR0cmlidXRlczp7aWQ6XCJoZWFkZXItd2luZG93XCJ9fSk7bGV0IG1haW49ZG9jdW1lbnQuYm9keS5tYWtlRWxlbWVudCh7ZWxlbWVudDpcIm1haW5cIixhdHRyaWJ1dGVzOntpZDpcIm1haW4td2luZG93XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcIm5hdlwiLGF0dHJpYnV0ZXM6e2lkOlwibmF2aWdhdG9yXCJ9fSx7ZWxlbWVudDpcInNlY3Rpb25cIixhdHRyaWJ1dGVzOntpZDpcInJlcXVlc3Qtd2luZG93XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2lkOlwicmVxdWVzdC1jb250ZW50c1wifSxjaGlsZHJlbjpbbW11LmdlbmVyYXRlUmVxdWVzdENvbnRlbnQoe25hbWU6XCJ1cmxcIn0pLG1tdS5nZW5lcmF0ZVJlcXVlc3RDb250ZW50KHtuYW1lOlwibWV0aG9kXCIsb3B0aW9uczpbXCJQT1NUXCIsXCJHRVRcIixcIkRFTEVURVwiXX0pLHtlbGVtZW50OlwiZGl2XCIsYXR0cmlidXRlczp7Y2xhc3M6XCJyZXF1ZXN0LXdpbmRvdy1jb250ZW50XCJ9LGNoaWxkcmVuOlt7ZWxlbWVudDpcImxhYmVsXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJyZXF1ZXN0LXdpbmRvdy1jb250ZW50LWxhYmVsXCJ9LHRleHQ6XCJSZXF1ZXN0IERhdGFcIn0se2VsZW1lbnQ6XCJpXCIsYXR0cmlidXRlczp7Y2xhc3M6XCJmYXMgZmEtcGx1c1wiLGlkOlwibmV3LWRhdGFcIn19XX1dfSx7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2lkOlwicmVxdWVzdC1kYXRhXCJ9fSx7ZWxlbWVudDpcImRpdlwiLGF0dHJpYnV0ZXM6e2lkOlwicmVxdWVzdC1jb250cm9sc1wifSxjaGlsZHJlbjpbe2VsZW1lbnQ6XCJidXR0b25cIixhdHRyaWJ1dGVzOntpZDpcInN1Ym1pdC1yZXF1ZXN0XCJ9LHRleHQ6XCJTdWJtaXQgUmVxdWVzdFwifV19XX0sbG9nZ2VyLmNyZWF0ZVdpbmRvdygpXX0pLG5ld0RhdGE9bWFpbi5maW5kKFwiI25ldy1kYXRhXCIpLHN1Ym1pdFJlcXVlc3Q9bWFpbi5maW5kKFwiI3N1Ym1pdC1yZXF1ZXN0XCIpLHJlcXVlc3REYXRhPW1haW4uZmluZChcIiNyZXF1ZXN0LWRhdGFcIikscmVzcG9uc2VXaW5kb3c9bWFpbi5maW5kKFwiI3Jlc3BvbnNlLXdpbmRvd1wiKSxyZXNwb25zZVdpbmRvd0NsZWFyPW1haW4uZmluZChcIiNyZXNwb25zZS13aW5kb3ctY2xlYXJcIikscmVzcG9uc2VXaW5kb3dUb2dnbGU9bWFpbi5maW5kKFwiI3Jlc3BvbnNlLXdpbmRvdy10b2dnbGVcIik7bmV3RGF0YS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e3JlcXVlc3REYXRhLm1ha2VFbGVtZW50KG1tdS5nZW5lcmF0ZURhdGEoKSl9KSxyZXF1ZXN0RGF0YS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e2V2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJyZXF1ZXN0LXNpbmdsZS1kYXRhLXJlbW92ZVwiKSYmZXZlbnQudGFyZ2V0LnBhcmVudE5vZGUucmVtb3ZlKCl9KSxzdWJtaXRSZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bW11LnNlbmRSZXF1ZXN0KCl9KSxyZXNwb25zZVdpbmRvd1RvZ2dsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixldmVudD0+e3Jlc3BvbnNlV2luZG93LnRvZ2dsZUNsYXNzKFwicmVzcG9uc2Utd2luZG93LWZ1bGxcIikscmVzcG9uc2VXaW5kb3dUb2dnbGUudG9nZ2xlQ2xhc3MoXCJmYS1hcnJvdy1kb3duXCIpLHJlc3BvbnNlV2luZG93VG9nZ2xlLnRvZ2dsZUNsYXNzKFwiZmEtYXJyb3ctdXBcIil9KSxyZXNwb25zZVdpbmRvd0NsZWFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGV2ZW50PT57bG9nZ2VyLmNsZWFyKCl9KX0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsZXZlbnQ9Pntkb2N1bWVudC5ib2R5LmlubmVySFRNTD1cIlwiLG1tdS5yZW5kZXIoKX0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWFuTWlYU3dpYm1GdFpYTWlPbHNpUW1GelpTSXNJa052YlhCeVpYTnphVzl1SWl3aVFYQndUR2xpY21GeWVTSXNJbFJsYlhCc1lYUmxJaXdpY21WeGRXbHlaU0lzSW5kcGJtUnZkeUlzSW10bGNtUjRJaXdpVEc5bloyVnlJaXdpVTNsemRHVnRJaXdpYlcxMUlpd2lZMjl0Y0hKbGMzTnZjaUlzSW1Gd2NFeHBZbkpoY25raUxDSnNiMmRuWlhJaUxDSnplWE4wWlcwaUxDSm5aVzVsY21GMFpWSmxjWFZsYzNSRGIyNTBaVzUwSWl3aWNHRnlZVzF6SWl3aWJtRnRaU0lzSW05d2RHbHZibk1pTENKc1lXSmxiQ0lzSW1OaGJXVnNRMkZ6WldSVWIxUmxlSFFpTENKdWIyUmxUbUZ0WlNJc0lrRnljbUY1SWl3aWFYTkJjbkpoZVNJc0ltTnZiblJsYm5RaUxDSmpjbVZoZEdWRmJHVnRaVzUwSWl3aVpXeGxiV1Z1ZENJc0ltRjBkSEpwWW5WMFpYTWlMQ0pqYkdGemN5SXNJbU5vYVd4a2NtVnVJaXdpYVdRaUxDSjBaWGgwSWl3aVptbHVaQ0lzSW0xaGEyVkZiR1Z0Wlc1MElpd2ljMlZzWldOMFpXUWlMQ0prYVhOaFlteGxaQ0lzSW5aaGJIVmxJaXdpYjNCMGFXOXVJaXdpWjJWdVpYSmhkR1ZFWVhSaElpd2ljR3hoWTJWSWIyeGtaWElpTENKMllXeHBaR0YwWlZKbGNYVmxjM1FpTENKeVpYRjFaWE4wUTI5dWRHVnVkSE1pTENKa2IyTjFiV1Z1ZENJc0ltSnZaSGtpTENKMllXeHBaR0YwWlVadmNtMGlMQ0ptYkdGbklpd2lkM0pwZEdVaUxDSmxiR1Z0Wlc1MFRtRnRaU0lzSW5ObGJtUlNaWEYxWlhOMElpd2lkSGx3WlNJc0ltcHpiMjVHYjNKdElpd2lZV3hzUkdGMFlTSXNJbVpwYm1SQmJHd2lMQ0prWVhSaElpd2lhU0lzSW14bGJtZDBhQ0lzSWtwVFQwNGlMQ0p3WVhKelpTSXNJbk53YkdsMElpd2laR2x6WVdKc1pVbHVjSFYwSWl3aWRYSnNJaXdpWTI5dWJtVmpkQ0lzSW5Sb1pXNGlMQ0p5WlhOMWJIUWlMQ0pqWVhSamFDSXNJbVZ5Y205eUlpd2lZMjl1YzI5c1pTSXNJbXh2WnlJc0ltWnBibUZzYkhraUxDSmxibUZpYkdWSmJuQjFkQ0lzSW5KbGJtUmxjaUlzSW0xaGFXNGlMQ0pqY21WaGRHVlhhVzVrYjNjaUxDSnVaWGRFWVhSaElpd2ljM1ZpYldsMFVtVnhkV1Z6ZENJc0luSmxjWFZsYzNSRVlYUmhJaXdpY21WemNHOXVjMlZYYVc1a2IzY2lMQ0p5WlhOd2IyNXpaVmRwYm1SdmQwTnNaV0Z5SWl3aWNtVnpjRzl1YzJWWGFXNWtiM2RVYjJkbmJHVWlMQ0poWkdSRmRtVnVkRXhwYzNSbGJtVnlJaXdpWlhabGJuUWlMQ0owWVhKblpYUWlMQ0pqYkdGemMweHBjM1FpTENKamIyNTBZV2x1Y3lJc0luQmhjbVZ1ZEU1dlpHVWlMQ0p5WlcxdmRtVWlMQ0owYjJkbmJHVkRiR0Z6Y3lJc0ltTnNaV0Z5SWl3aWFXNXVaWEpJVkUxTUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRXNTMEZCUVN4RFFVRk5RU3hKUVVGQlFTeERRVUZEUVN4VFFVRkJRU3hEUVVGSlF5eFhRVUZCUVN4RFFVRkZRU3huUWtGQlFVRXNRMEZCVjBNc1ZVRkJRVUVzUTBGQlJVRXNaVUZCUVVFc1EwRkJWVU1zVVVGQlFVRXNRMEZCUlVFc1lVRkJRVUVzUTBGQlFVRXNRMEZCWVVNc1YwRkJVU3hEUVVNelJFTXNUVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCVVN4SlFVRkpUaXhUUVVGQlFTeERRVUZMU3l4TlFVRkJRU3hEUVVGQlFTeERRVU5rTEVsQlFVbEdMR0ZCUVVGQkxFTkJRVk5GTEUxQlFVRkJMRU5CUVVGQkxFTkJRWFpDTEV0QlFVRXNRMEZGVFVVc1RVRkJRVUVzUTBGQlJVRXNUVUZCUVVFc1EwRkJRVUVzUTBGQlYwZ3NWMEZCVVN4RFFVRkJMRU5CUTNKQ1NTeE5RVUZCUVN4RFFVRkZRU3hOUVVGQlFTeERRVUZCUVN4RFFVRlhTaXhYUVVGUkxFTkJSVE5DUXl4TlFVRkJRU3hEUVVGUFNTeEhRVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkRZa29zVFVGQlFVRXNRMEZCVDBzc1ZVRkJRVUVzUTBGQllWUXNaMEpCUVVGQkxFVkJRVUZCTEVOQlEzQkNTU3hOUVVGQlFTeERRVUZQVFN4VlFVRkJRU3hEUVVGaFZDeGxRVUZCUVN4RlFVRkJRU3hEUVVOd1FpeEpRVUZKVlN4TlFVRkJRU3hEUVVGVExFbEJRVWxNTEUxQlFVRkJMRU5CUTJKTkxGZEJRVUZCTEVOQlFWTXNTVUZCU1V3c1RVRkJRVUVzUTBGRmFrSkRMRWRCUVVGQkxFTkJRVWxMTEhOQ1FVRkJRU3hGUVVGNVFpeERRVUZEUXl4TlFVRkJRU3hEUVVGVExFTkJRVVZETEVsQlFVRkJMRU5CUVUwc1JVRkJRU3hEUVVGSlF5eFBRVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJRU3hIUVVGQkxFTkJRM2hFTEVsQlFVbERMRXRCUVVGQkxFTkJRVkZhTEV0QlFVRkJMRU5CUVUxaExHZENRVUZCUVN4RFFVRnBRa29zVFVGQlFVRXNRMEZCVDBNc1NVRkJRVUVzUTBGQlFVRXNRMEZEZEVOSkxGRkJRVUZCTEVOQlFWY3NUMEZCUVN4RFFVVllReXhMUVVGQlFTeERRVUZOUXl4UFFVRkJRU3hEUVVGUlVDeE5RVUZCUVN4RFFVRlBSU3hQUVVGQlFTeERRVUZCUVN4SFFVTnlRa2NzVVVGQlFVRXNRMEZCVnl4UlFVRkJMRU5CUVVFc1EwRkhaaXhKUVVGSlJ5eFBRVUZCUVN4RFFVRlZha0lzUzBGQlFVRXNRMEZCVFd0Q0xHRkJRVUZCTEVOQlFXTXNRMEZET1VKRExFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzZDBKQlFVRXNRMEZCUVN4RFFVRTBRa01zVVVGQlFVRXNRMEZCVlN4RFFVTjJSU3hEUVVGRlNDeFBRVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTERoQ1FVRkJMRU5CUVdkRFJTeEZRVUZCUVN4RFFVRkpZaXhKUVVGQlFTeERRVUZCUVN4RFFVRlJZeXhKUVVGQlFTeERRVUZOV2l4TFFVRkJRU3hEUVVGQlFTeERRVU16Uml4RFFVRkZUeXhQUVVGQlFTeERRVUZUVEN4UlFVRkJRU3hEUVVGVlRTeFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNOa0pCUVVFc1EwRkJLMEpZTEVsQlFVRkJMRU5CUVUxRUxFMUJRVUZCTEVOQlFVOURMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1RsR0xFZEJRVWxMTEV0QlFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRlFMRTFCUVVGQkxFTkJRVTlGTEU5QlFVRkJMRU5CUVVGQkxFTkJRVlVzUTBGREwwSk5MRTlCUVVGQkxFTkJRVkZSTEVsQlFVRkJMRU5CUVVzc09FSkJRVUVzUTBGQlFTeERRVUZuUTBNc1YwRkJRVUVzUTBGQldTeERRVU55UkZBc1QwRkJRVUVzUTBGQlV5eFJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJRVmtzUTBGQlJVOHNVVUZCUVVFc1EwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVMURMRkZCUVVGQkxFTkJRVUZCTEVOQlFWVXNRMEZCUVN4RFFVRk5ReXhMUVVGQlFTeERRVUZQTEVsQlFVRXNRMEZCUVN4RFFVRlJUQ3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hQUVVGQlFTeEZRVUZuUWxvc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY0Vjc1NVRkJTeXhKUVVGSmEwSXNUVUZCUVVFc1NVRkJWWEpDTEUxQlFVRkJMRU5CUVU5RkxFOUJRVUZCTEVOQlEzUkNUU3hQUVVGQlFTeERRVUZSVVN4SlFVRkJRU3hEUVVGTExEaENRVUZCTEVOQlFVRXNRMEZCWjBORExGZEJRVUZCTEVOQlFWa3NRMEZEY2tSUUxFOUJRVUZCTEVOQlFWTXNVVUZCUVN4RFFVRlZReXhWUVVGQlFTeERRVUZaTEVOQlFVVlRMRXRCUVVGQkxFTkJRVTlETEUxQlFVRkJMRU5CUVVGQkxFTkJRVlZPTEVsQlFVRkJMRU5CUVUxTkxFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTM0JGTEU5QlFVOWlMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjFoa0xFZEJRVUZCTEVOQlFVazBRaXhaUVVGQlFTeEZRVUZsTEVsQlFVRXNRMEZYWml4UFFWWlhMMElzUzBGQlFVRXNRMEZCVFd0Q0xHRkJRVUZCTEVOQlFXTXNRMEZETTBKRExFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVkRMRXRCUVVGQkxFTkJRVThzY1VKQlFVRXNRMEZCUVN4RFFVRjVRa01zVVVGQlFVRXNRMEZCVlN4RFFVTndSU3hEUVVGRlNDeFBRVUZCUVN4RFFVRlRMRTlCUVVFc1EwRkJVME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZReXhMUVVGQlFTeERRVUZQTERCQ1FVRkJMRU5CUVRSQ1Z5eFhRVUZCUVN4RFFVRmhMRTFCUVVFc1EwRkJRU3hEUVVGQkxFTkJRMnhHTEVOQlFVVmlMRTlCUVVGQkxFTkJRVk1zVDBGQlFTeERRVUZUU3l4SlFVRkJRU3hEUVVGTkxFbEJRVUVzUTBGQlFTeERRVU14UWl4RFFVRkZUQ3hQUVVGQlFTeERRVUZUTEU5QlFVRXNRMEZCVTBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExESkNRVUZCTEVOQlFUWkNWeXhYUVVGQlFTeERRVUZoTEU5QlFVRXNRMEZCUVN4RFFVRkJMRU5CUTI1R0xFTkJRVVZpTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWRExFdEJRVUZCTEVOQlFVOHNNRUpCUVVFc1EwRkJRU3hEUVVFNFFsWXNUMEZCUVVFc1EwRkJVeXhEUVVGRExGRkJRVUVzUTBGQlZTeFBRVUZCTEVOQlFWTXNUVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkRja2NzUTBGQlJWRXNUMEZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVXRETEZWQlFVRkJMRU5CUVZrc1EwRkJSVU1zUzBGQlFVRXNRMEZCVHl4NVEwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CVDJwRWJFSXNSMEZCUVVFc1EwRkJTVGhDTEdWQlFVRkJMRVZCUVd0Q0xFbEJRVUVzUTBGRGJFSXNTVUZCU1VNc1pVRkJRVUVzUTBGQmEwSkRMRkZCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRU5CUVV0WUxFbEJRVUZCTEVOQlFVc3NiVUpCUVVFc1EwRkJRU3hEUVVOeVExa3NXVUZCUVVFc1EwRkJaWEpETEV0QlFVRkJMRU5CUVUxeFF5eFpRVUZCUVN4RFFVRmhTQ3hsUVVGQlFTeERRVUZCUVN4RFFVTjBReXhOUVVGQkxFTkJRVUVzUTBGQlMwY3NXVUZCUVVFc1EwRkJZVU1zU1VGQlFVRXNSMEZEWkdoRExFMUJRVUZCTEVOQlFVOXBReXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hGUVVGVGRrTXNTMEZCUVVFc1EwRkJUV0VzWjBKQlFVRkJMRU5CUVdsQ2QwSXNXVUZCUVVFc1EwRkJZVWNzVjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzV1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZETjBNc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVTFtY2tNc1IwRkJRVUVzUTBGQlNYTkRMRmRCUVVGQkxFVkJRV01zU1VGQlFTeERRVU5rTEVsQlFVbFFMR1ZCUVVGQkxFTkJRV3RDUXl4UlFVRkJRU3hEUVVGVFF5eEpRVUZCUVN4RFFVRkxXQ3hKUVVGQlFTeERRVUZMTEcxQ1FVRkJMRU5CUVVFc1EwRkZla01zUjBGQlNYUkNMRWRCUVVGQkxFTkJRVWs0UWl4bFFVRkJRU3hGUVVGQlFTeERRVUZ0UWl4RFFVTjJRaXhKUVVsSlNpeExRVUZCUVN4RFFVRlBZU3hKUVVGQlFTeERRVXBRYWtNc1RVRkJRVUVzUTBGQlUxUXNTMEZCUVVFc1EwRkJUVEpETEZGQlFVRkJMRU5CUVZOVUxHVkJRVUZCTEVOQlFVRkJMRU5CUlhoQ1ZTeFBRVUZCUVN4RFFVUmpWQ3hSUVVGQlFTeERRVUZUUXl4SlFVRkJRU3hEUVVGTFdDeEpRVUZCUVN4RFFVRkxMR1ZCUVVFc1EwRkJRU3hEUVVOWWIwSXNUMEZCUVVFc1EwRkJVU3h6UWtGQlFTeERRVUZCTEVOQlEyeERjRU1zVFVGQlFVRXNRMEZCVDNGRExFbEJRVUZCTEVOQlFVOHNSVUZCUVN4RFFVVmtMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbElMRTlCUVVGQkxFTkJRVkZKTEUxQlFVRkJMRU5CUVZGRUxFTkJRVUZCTEVWQlFVRkJMRU5CUTJoRGJFSXNTMEZCUVVFc1EwRkJVV1VzVDBGQlFVRXNRMEZCVVVjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjNSQ0xFbEJRVUZCTEVOQlFVc3NORUpCUVVFc1EwRkJRU3hEUVVFNFFra3NTMEZCUVVFc1EwRkRkRVJoTEVsQlFVRkJMRU5CUVU5RkxFOUJRVUZCTEVOQlFWRkhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZDBRaXhKUVVGQlFTeERRVUZMTERKQ1FVRkJMRU5CUVVFc1EwRkJOa0pKTEV0QlFVRkJMRU5CUldoRWNFSXNUVUZCUVVFc1EwRkJUM0ZETEVsQlFVRkJMRU5CUVV0R0xFOUJRVUZCTEVOQlFWRkhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZDBRaXhKUVVGQlFTeERRVUZMTERKQ1FVRkJMRU5CUVVFc1EwRkJOa0pKTEV0QlFVRkJMRU5CUVVGQkxFTkJSR3BFTEUxQlFVRXNSVUZCVW1Fc1NVRkJRVUVzUTBGRGEwVlBMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxeVFpeExRVUZCUVN4RFFVRkJRU3hEUVVWb1JTeFBRVUZCTEVWQlFWSmhMRWxCUVVGQkxFTkJRM05GTEVWQlFVRXNSVUZCVkdJc1MwRkJRVUVzUTBGQll5eEZRVUZCTEVOQlFVdEJMRXRCUVVGQkxFTkJRVTF6UWl4TFFVRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlFTeERRVWN2UW5SQ0xFdEJRVUZCTEVOQlJ6RkZka0lzVFVGQlFVRXNRMEZCVHpoRExGbEJRVUZCTEVWQlFVRkJMRU5CUTFBNVF5eE5RVUZCUVN4RFFVRlBhVU1zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzWTBGQlFVRXNSVUZCZFVJNVFpeE5RVUZCUVN4RFFVRlBORU1zUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZEY2tNNVF5eFhRVUZCUVN4RFFVRlBLME1zVDBGQlFVRXNRMEZCVVRkRExFMUJRVUZCTEVOQlFVRkJMRU5CUVZFNFF5eEpRVUZCUVN4RFFVRkxReXhOUVVGQlFTeEZRVUZCUVN4RFFVTjRRbXhFTEUxQlFVRkJMRU5CUVU5cFF5eExRVUZCUVN4RFFVRk5MRmRCUVVFc1EwRkJRU3hEUVVOaWFrTXNUVUZCUVVFc1EwRkJUMmxETEV0QlFVRkJMRU5CUVUxcFFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTmtReXhMUVVGQlFTeERRVUZOUXl4TFFVRkJRU3hGUVVGQlFTeERRVU5NUXl4UFFVRkJRU3hEUVVGUlF5eEhRVUZCUVN4RFFVRkpSaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU5pUnl4UFFVRkJRU3hEUVVGUmRrUXNUVUZCUVVFc1EwRkJUM2RFTEZkQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNURkNNMFFzUjBGQlFVRXNRMEZCU1RSRUxFMUJRVUZCTEVWQlFWTXNTVUZCUVN4RFFVTkpOVUlzVVVGQlFVRXNRMEZCVTBNc1NVRkJRVUVzUTBGQlMxWXNWMEZCUVVFc1EwRkJXU3hEUVVOdVExQXNUMEZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUlVGQlFVRXNRMEZCU1N4bFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSSHBETEVsQlNVbDVReXhKUVVGQlFTeERRVUZQTjBJc1VVRkJRVUVzUTBGQlUwTXNTVUZCUVVFc1EwRkJTMVlzVjBGQlFVRXNRMEZCV1N4RFFVTnFRMUFzVDBGQlFVRXNRMEZCVXl4TlFVRkJMRU5CUVZGRExGVkJRVUZCTEVOQlFWa3NRMEZCUlVjc1JVRkJRVUVzUTBGQlNTeGhRVUZCTEVOQlFVRXNRMEZCYVVKRUxGRkJRVUZCTEVOQlFWVXNRMEZETVVRc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVjc1JVRkJRVUVzUTBGQlNTeFhRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTndReXhEUVVOSlNpeFBRVUZCUVN4RFFVRlRMRk5CUVVFc1EwRkJWME1zVlVGQlFVRXNRMEZCV1N4RFFVRkZSeXhGUVVGQlFTeERRVUZKTEdkQ1FVRkJMRU5CUVVFc1EwRkJiMEpFTEZGQlFVRkJMRU5CUVZVc1EwRkRhRVVzUTBGRFNVZ3NUMEZCUVVFc1EwRkJVeXhMUVVGQkxFTkJRVTlETEZWQlFVRkJMRU5CUVZrc1EwRkJSVWNzUlVGQlFVRXNRMEZCU1N4clFrRkJRU3hEUVVGQkxFTkJRWE5DUkN4UlFVRkJRU3hEUVVGVkxFTkJRemxFYmtJc1IwRkJRVUVzUTBGQlNVc3NjMEpCUVVGQkxFTkJRWFZDTEVOQlFVVkZMRWxCUVVGQkxFTkJRVTBzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEYmtOUUxFZEJRVUZCTEVOQlFVbExMSE5DUVVGQlFTeERRVUYxUWl4RFFVRkZSU3hKUVVGQlFTeERRVUZOTEZGQlFVRXNRMEZCVlVNc1QwRkJRVUVzUTBGQlV5eERRVUZETEUxQlFVRXNRMEZCVVN4TFFVRkJMRU5CUVU4c1VVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4wUlN4RFFVTkpVU3hQUVVGQlFTeERRVUZUTEV0QlFVRXNRMEZCVDBNc1ZVRkJRVUVzUTBGQldTeERRVUZGUXl4TFFVRkJRU3hEUVVGUExIZENRVUZCTEVOQlFVRXNRMEZCTkVKRExGRkJRVUZCTEVOQlFWVXNRMEZEZGtVc1EwRkJSVWdzVDBGQlFVRXNRMEZCVXl4UFFVRkJMRU5CUVZORExGVkJRVUZCTEVOQlFWa3NRMEZCUlVNc1MwRkJRVUVzUTBGQlR5dzRRa0ZCUVN4RFFVRkJMRU5CUVd0RFJ5eEpRVUZCUVN4RFFVRk5MR05CUVVFc1EwRkJRU3hEUVVOcVJpeERRVUZGVEN4UFFVRkJRU3hEUVVGVExFZEJRVUVzUTBGQlMwTXNWVUZCUVVFc1EwRkJXU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBMR0ZCUVVFc1EwRkJaVVVzUlVGQlFVRXNRMEZCU1N4VlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlMzaEZMRU5CUVVWS0xFOUJRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRlBReXhWUVVGQlFTeERRVUZaTEVOQlFVVkhMRVZCUVVGQkxFTkJRVWtzWTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEY0VNc1EwRkRTVW9zVDBGQlFVRXNRMEZCVXl4TFFVRkJMRU5CUVU5RExGVkJRVUZCTEVOQlFWa3NRMEZCUlVjc1JVRkJRVUVzUTBGQlNTeHJRa0ZCUVN4RFFVRkJMRU5CUVhOQ1JDeFJRVUZCUVN4RFFVRlZMRU5CUXpsRUxFTkJRVVZJTEU5QlFVRkJMRU5CUVZNc1VVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFVRlpMRU5CUVVWSExFVkJRVUZCTEVOQlFVa3NaMEpCUVVFc1EwRkJRU3hEUVVGdlFrTXNTVUZCUVVFc1EwRkJUU3huUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkxha1pzUWl4TlFVRkJRU3hEUVVGUE1rUXNXVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSldFTXNUMEZCUVVFc1EwRkJWVVlzU1VGQlFVRXNRMEZCUzNaRExFbEJRVUZCTEVOQlFVc3NWMEZCUVN4RFFVRkJMRU5CUTNCQ01FTXNZVUZCUVVFc1EwRkJaMEpJTEVsQlFVRkJMRU5CUVV0MlF5eEpRVUZCUVN4RFFVRkxMR2xDUVVGQkxFTkJRVUVzUTBGRE1VSXlReXhYUVVGQlFTeERRVUZqU2l4SlFVRkJRU3hEUVVGTGRrTXNTVUZCUVVFc1EwRkJTeXhsUVVGQkxFTkJRVUVzUTBGRGVFSTBReXhqUVVGQlFTeERRVUZwUWt3c1NVRkJRVUVzUTBGQlMzWkRMRWxCUVVGQkxFTkJRVXNzYTBKQlFVRXNRMEZCUVN4RFFVTXpRalpETEcxQ1FVRkJRU3hEUVVGelFrNHNTVUZCUVVFc1EwRkJTM1pETEVsQlFVRkJMRU5CUVVzc2QwSkJRVUVzUTBGQlFTeERRVU5vUXpoRExHOUNRVUZCUVN4RFFVRjFRbEFzU1VGQlFVRXNRMEZCUzNaRExFbEJRVUZCTEVOQlFVc3NlVUpCUVVFc1EwRkJRU3hEUVVWeVEzbERMRTlCUVVGQkxFTkJRVkZOTEdkQ1FVRkJRU3hEUVVGcFFpeFBRVUZCTEVOQlFWTkRMRXRCUVVGQkxFVkJRVUZCTEVOQlF6bENUQ3hYUVVGQlFTeERRVUZaTVVNc1YwRkJRVUVzUTBGQldYWkNMRWRCUVVGQkxFTkJRVWswUWl4WlFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRvUTNGRExGZEJRVUZCTEVOQlFWbEpMR2RDUVVGQlFTeERRVUZwUWl4UFFVRkJMRU5CUVZORExFdEJRVUZCTEVWQlFVRkJMRU5CUXpsQ1FTeExRVUZCUVN4RFFVRk5ReXhOUVVGQlFTeERRVUZQUXl4VFFVRkJRU3hEUVVGVlF5eFJRVUZCUVN4RFFVRlRMRFJDUVVGQkxFTkJRVUVzUlVGRGFFTklMRXRCUVVGQkxFTkJRVTFETEUxQlFVRkJMRU5CUVU5SExGVkJRVUZCTEVOQlFWZERMRTFCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTV2hEV0N4aFFVRkJRU3hEUVVGalN5eG5Ra0ZCUVVFc1EwRkJhVUlzVDBGQlFTeERRVUZUUXl4TFFVRkJRU3hGUVVGQlFTeERRVU53UTNSRkxFZEJRVUZCTEVOQlFVbHpReXhYUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRTT0VJc2IwSkJRVUZCTEVOQlFYRkNReXhuUWtGQlFVRXNRMEZCYVVJc1QwRkJRU3hEUVVGVFF5eExRVUZCUVN4RlFVRkJRU3hEUVVNelEwb3NZMEZCUVVFc1EwRkJaVlVzVjBGQlFVRXNRMEZCV1N4elFrRkJRU3hEUVVGQkxFTkJRek5DVWl4dlFrRkJRVUVzUTBGQmNVSlJMRmRCUVVGQkxFTkJRVmtzWlVGQlFTeERRVUZCTEVOQlEycERVaXh2UWtGQlFVRXNRMEZCY1VKUkxGZEJRVUZCTEVOQlFWa3NZVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVkeVExUXNiVUpCUVVGQkxFTkJRVzlDUlN4blFrRkJRVUVzUTBGQmFVSXNUMEZCUVN4RFFVRlRReXhMUVVGQlFTeEZRVUZCUVN4RFFVTXhRMjVGTEUxQlFVRkJMRU5CUVU4d1JTeExRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxtTjBNc1VVRkJRVUVzUTBGQlUzRkRMR2RDUVVGQlFTeERRVUZwUWl4clFrRkJRU3hEUVVGdlFrTXNTMEZCUVVFc1JVRkJRVUVzUTBGRE1VTjBReXhSUVVGQlFTeERRVUZUUXl4SlFVRkJRU3hEUVVGTE5rTXNVMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRekZDT1VVc1IwRkJRVUVzUTBGQlNUUkVMRTFCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9Il19